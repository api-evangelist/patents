---
title: Automating document reviews in a project management system
abstract: An embodiment of the present invention is a technique to automate document review in a project management tool. The review information on a document review is stored in a repository. The document review is associated to a project in a project management system. The document review is processed using the review information. A notification of the document review is sent.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07302674&OS=07302674&RS=07302674
owner: Unisys Corporation
number: 07302674
owner_city: Blue Bell
owner_country: US
publication_date: 20030806
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY OF THE INVENTION","DESCRIPTION"],"p":["This application is a continuation-in-part application of the following patent applications: \u201cCreating Customized Objects For Processes In Project Management\u201d, Ser. No. 10\/306,604, filed on Nov. 26, 2002 now U.S. Pat. No. 7,155,700; \u201cAutomated Process Execution For Project Management\u201d, Ser. No. 10\/306,601, filed on Nov. 26, 2002 now U.S. Pat. No. 7,159,206; \u201cCollaborating Activities Using Customized Objects For Project Management\u201d, Ser. No. 10\/306,602, filed on Nov. 26, 2002 now U.S. Pat. No. 7,174,348. This application claims the benefit of the provisional application entitled \u201cProject Management Using Customized Objects\u201d, Ser. No. 60\/456,376 filed on Mar. 20, 2003, and is related to the following patent applications: Ser. No. 10\/636,924 entitled \u201cGeneration Of Java Language Application Programming Interface For An Object-Oriented Data Store\u201d; Ser. No. 10\/636,959 entitled \u201cCapturing Traceability Information Between Artifacts Produced By A Project Management Software\u201d; Ser. No. 10\/636,955 entitled \u201cInstantiating A Project In A Project Management System\u201d; Ser. No. 10\/636,961 entitled \u201cImplementing Web-Based Wizards In Distributed Web Applications\u201d; Ser. No. 10\/636,962 entitled \u201cImplementing Complex Client-Side Graphical User Interface Controls In Distributed Web Applications\u201d; Ser. No. 10\/636,951 entitled \u201cSynchronizing Data Between A Data Store And A Project Management Client Tool\u201d; Ser. No. 10\/636,852 entitled \u201cTracking Status Of Task In A Project Management Tool\u201d; Ser. No. 10\/636,953 entitled \u201cCustomizing And Automating Checklists In Project Management\u201d; Ser. No. 10\/636,952 entitled \u201cControlling Access To Projects In A Project Management System\u201d; Ser. No. 10\/636,945 entitled \u201cCustomizing And Automating Entry And Exit Criteria In A Project Management System\u201d; Ser. No. 10\/636,946 entitled \u201cSending Notifications To Project Members In A Project Management System\u201d, all filed on the same date and assigned to the same assignee as the present application, the contents of each of which are herein incorporated by reference.","1. Field of the Invention","Embodiments of the invention relate to the field of management software, and more specifically, to project management.","2. Description of Related Art","Project management is becoming more and more complex. In enterprise applications, the sizes of projects are typically quite large, including complex databases and involving a large number of participants. The complex interactions among the various team members, process flows, tools, and databases have created difficulties to project managers. The project manager has to keep track of the progress of the project, communicate with stake holders, during the initiation, planning, executing, controlling, and closing phases of a project. Team members have to use the tools of the trade, exchange ideas, generate and review project documentations and\/or reports, update information, communicate with the project manager regarding progress of their work, etc.","Existing techniques for project management have a number of drawbacks. First, most traditional techniques are not convenient to users or team members because of lack of support and\/or interface to Web-based information sharing. Second, the project information may not be well structured or organized. Users do not have a common format or platform to organize data or information and trace sources of data and information. Third, workflow\/process automation is non-existent.","In an enterprise project development, project members are usually required to follow a documented process. One of the processes common to many organizations is the review or inspection of design artifacts created during the project development. Existing techniques rely on a manual process for recording which participants review, approve, or disapprove documents. One such manual process is to fill out forms by participants and filing these forms in a project log book. These techniques are inefficient, slow, tedious, and time-consuming. Project members sometimes do not know if a review has been done or when a review should start.","An embodiment of the present invention is a technique to automate document review in a project management tool. The review information on a document review is stored in a repository. The document review is associated to a project in a project management system. The document review is processed using the review information. A notification of the document review is sent.","An embodiment of the present invention is a technique to automate document review in a project management tool. The review information on a document review is stored in a repository. The document review is associated to a project in a project management system. The document review is processed using the review information. A notification of the document review is sent.","In the following description, numerous specific details are set forth. However, it is understood that embodiments of the invention may be practiced without these specific details. In other instances, well-known circuits, structures, and techniques have not been shown in order not to obscure the understanding of this description.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1A","b":["10","10","20","20","30","40"],"sub":["1 ","K"]},"The project members may include a project manager , a technical leader , a programmer , a scientist , and a consultant . A person may have one or more roles. Each member may be assigned one or more tasks in one or more phases of a project. Each member has access to a project management application to , respectively. The project management application may be located in the computer used by the member.","The network  may be any suitable network that links the project members , to . The network  may be an Internet, intranet, extranet, wireless fidelity (Wi-Fi), local area network (LAN), wide area network (WAN), etc. The network  allows project members to communicate with each other and to access the project management application. The server  is connected to the network  and contains a project management system  that provides the tools for users to construct, create, or instantiate a project.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1B","b":["100","100","110","120","130","140","150","155","170","180","180","100"],"sub":["1 ","K"]},"The processor  represents a central processing unit of any type of architecture, such as embedded processors, mobile processors, micro-controllers, digital signal processors, superscalar computers, vector processors, single instruction multiple data (SIMD) computers, complex instruction set computers (CISC), reduced instruction set computers (RISC), very long instruction word (VLIW), or hybrid architecture.","The processor bus  provides interface signals to allow the processor  to communicate with other processors or devices, e.g., the MCH . The host bus  may support a uni-processor or multiprocessor configuration. The host bus  may be parallel, sequential, pipelined, asynchronous, synchronous, or any combination thereof.","The MCH  provides control and configuration of memory and input\/output devices such as the system memory  and the ICH . The MCH  may be integrated into a chipset that integrates multiple functionalities such as the isolated execution mode, host-to-peripheral bus interface, memory control. The MCH  interfaces to the peripheral bus . For clarity, not all the peripheral buses are shown. It is contemplated that the system  may also include peripheral buses such as Peripheral Component Interconnect (PCI), accelerated graphics port (AGP), Industry Standard Architecture (ISA) bus, and Universal Serial Bus (USB), etc.","The system memory  stores system code and data. The system memory  is typically implemented with dynamic random access memory (DRAM) or static random access memory (SRAM). The system memory may include program code or code segments implementing one embodiment of the invention. The system memory includes a project management system  or application . Any one of the elements of the project management system  or application  may be implemented by hardware, software, firmware, microcode, or any combination thereof. The system memory  may also include other programs or data which are not shown, such as an operating system. The project management system  or application  may implement all or part of the project management functions. The project management system  or application  may also simulate the project management functions. The project management system  or application  contains instructions that, when executed by the processor , causes the processor to perform the tasks or operations as described in the following.","The ICH  has a number of functionalities that are designed to support I\/O functions. The ICH  may also be integrated into a chipset together or separate from the MCH  to perform I\/O functions. The ICH  may include a number of interface and I\/O functions such as PCI bus interface to interface to the peripheral bus , processor interface, interrupt controller, direct memory access (DMA) controller, power management logic, timer, system management bus (SMBus), universal serial bus (USB) interface, mass storage interface, low pin count (LPC) interface, etc.","The mass storage device  stores archive information such as code, programs, files, data, databases, applications, and operating systems. The mass storage device  may include compact disk (CD) ROM , a digital video\/versatile disc (DVD) , floppy drive , and hard drive , and any other magnetic or optic storage devices such as tape drive, tape library, redundant arrays of inexpensive disks (RAIDs), etc. The mass storage device  provides a mechanism to read machine-accessible media. The machine-accessible media may contain computer readable program code to perform tasks as described in the following.","The I\/O devices to may include any I\/O devices to perform I\/O functions. Examples of I\/O devices to include controller for input devices (e.g., keyboard, mouse, trackball, pointing device), media card (e.g., audio, video, graphics), network card such as Institute of Electrical and Electronics Engineers (IEEE) 802.3, IEEE-1394, IEEE-802.11x, Bluetooth, and any other peripheral controllers.","Elements of one embodiment of the invention may be implemented by hardware, firmware, software or any combination thereof. The term hardware generally refers to an element having a physical structure such as electronic, electromagnetic, optical, electro-optical, mechanical, electromechanical parts, etc. The term software generally refers to a logical structure, a method, a procedure, a program, a routine, a process, an algorithm, a formula, a function, an expression, etc. The term firmware generally refers to a logical structure, a method, a procedure, a program, a routine, a process, an algorithm, a formula, a function, an expression, etc that is implemented or embodied in a hardware structure (e.g., flash memory, ROM, EROM). Examples of firmware may include microcode, writable control store, micro-programmed structure. When implemented in software or firmware, the elements of an embodiment of the present invention are essentially the code segments to perform the necessary tasks. The software\/firmware may include the actual code to carry out the operations described in one embodiment of the invention, or code that emulates or simulates the operations. The program or code segments can be stored in a processor or machine accessible medium or transmitted by a computer data signal embodied in a carrier wave, or a signal modulated by a carrier, over a transmission medium. The \u201cprocessor readable or accessible medium\u201d or \u201cmachine readable or accessible medium\u201d may include any medium that can store, transmit, or transfer information. Examples of the processor readable or machine accessible medium include an electronic circuit, a semiconductor memory device, a read only memory (ROM), a flash memory, an erasable ROM (EROM), a floppy diskette, a compact disk (CD) ROM, an optical disk, a hard disk, a fiber optic medium, a radio frequency (RF) link, etc. The computer data signal may include any signal that can propagate over a transmission medium such as electronic network channels, optical fibers, air, electromagnetic, RF links, etc. The code segments may be downloaded via computer networks such as the Internet, Intranet, etc. The machine accessible medium may be embodied in an article of manufacture. The machine accessible medium may include data that, when accessed by a machine, cause the machine to perform the operations described in the following. The machine accessible medium may also include program code embedded therein. The program code may include machine readable code to perform the operations described in the following. The term \u201cdata\u201d here refers to any type of information that is encoded for machine-readable purposes. Therefore, it may include program, code, data, file, etc.","All or part of an embodiment of the invention may be implemented by hardware, software, or firmware, or any combination thereof. The hardware, software, or firmware element may have several modules coupled to one another. A hardware module is coupled to another module by mechanical, electrical, optical, electromagnetic or any physical connections. A software module is coupled to another module by a function, procedure, method, subprogram, or subroutine call, a jump, a link, a parameter, variable, and argument passing, a function return, etc. A software module is coupled to another module to receive variables, parameters, arguments, pointers, etc. and\/or to generate or pass results, updated variables, pointers, etc. A firmware module is coupled to another module by any combination of hardware and software coupling methods above. A hardware, software, or firmware module may be coupled to any one of another hardware, software, or firmware module. A module may also be a software driver or interface to interact with the operating system running on the platform. A module may also be a hardware driver to configure, set up, initialize, send and receive data to and from a hardware device. An apparatus may include any combination of hardware, software, and firmware modules.","One embodiment of the invention may be described as a process which is usually depicted as a flowchart, a flow diagram, a structure diagram, or a block diagram. Although a flowchart may describe the operations as a sequential process, many of the operations can be performed in parallel or concurrently. In addition, the order of the operations may be re-arranged. A process is terminated when its operations are completed. A process may correspond to a method, a program, a procedure, a method of manufacturing or fabrication, etc.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 2","b":["25","45","25","45","210","230","260"]},"The client  includes an application accessible to the user or the project team member. The application is typically installed or located at the user's computer system. The client  includes a browser  and a project module . The browser  is a Web-based browser that allows the user to navigate the project management system to carry out tasks for project management. The project module  is a software or an application designed to provide basic tools for management of projects or workflow. The project module  may have any of the following features: creating reports, charts, schedules, calendars; sending and receiving information on project task status and assignment; viewing, editing, and grouping resources; integrating spreadsheets, databases; tracking project progress; etc. In one embodiment, the project module  is the Microsoft Project Central, Project 2000 software package.","The middle tier  may be implemented at the client  or the server  and includes a web-based portal  and an application server . The web-based portal  provides tools to manage links for navigation in a Web-based environment. The web-based portal  includes a portal management widget  and a community sidebar page . The portal management widget  is in essence a Hyper-Text Markup Language (HTML) file that contains HTML code. It is a set of related links that can appear on a user's portal page and provides links to other components, such as project frame set page when used for portal maintenance, and new project web wizard for initial project configuration. The community sidebar page  provides links to the project module database, and to the project frame set page when used for on-going project management. The application server  is an enterprise software that provides application infrastructure for the overall project management system such as CBDD. It serves as an interface layer between the user interface and the system databases and\/or other server components. In one embodiment, the application server  is the WebLogic server which provides basic application server functions and services such as transaction management, security, messaging, database connectivity, resource pooling, etc. Typically, the application server  is fully compliant with the industry standard, such as Java 2 Enterprise Edition (J2EE) version 1.3, and is portable across various hardware and operating systems including UNIX, Linux, Windows, etc. The application server  supports programming standards to build an application infrastructure, including eXtensible Markup Language (XML), Simple Object Access Protocol (SOAP), Web Services Definition Language (WSDL), etc. The CBDD web application  uses the services of the application server  to provide a user interface and application logic for the present invention.","The server  provides functions at the server side. The server  includes a web-based portal taxonomy , a process description file , a template importer , a universal repository (UREP) , a UREP database , a project file , a central project module , and a project database . The web-based portal taxonomy  provides tools to create or publish documents to any topic of the newly generated taxonomy. The taxonomy generation may include generation of elements for various phases in a project such as requirement phase, feasibility phase, design phase, development phase, integration and qualification phase, and support phase. The process description file  includes files that are created by user to describe elements of the project. The template importer  is a utility to import a process template into the UREP  and create the corresponding objects and references needed to represent that process in the UREP . The template importer  is also used to import global data which are not project-related. Examples of global data include module level notifications and global access control functions. In one embodiment, the process template data is expressed as a XML file. The UREP  is a metadata database, a data store, or repository information model that defines the information that can be stored in the repository database . It may also identify the services, tool, and technology models supported by the system. The UREP database  is a metadata database that stores the repository information. Note that the term repository refers to any type of data store, storage, database, etc.","The project file  is a directory that saves generated project files. The project file is used to manage tasks, assignments, and schedules inside the project module . The central project  is a project management software module that is located at the server. The project central database  stores files, information, and data used by the central project . In one embodiment, the central project  is the Microsoft Project Central.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 3","b":["300","300","310","320","330","340","350","360","370","380","390","320","322","324","390","392","394"]},"The supertype Object  allows common features, such as name, to be defined once for its subtypes.","The type Process-Project  is a supertype of the Process  and the Project . It allows common features of these types to be defined once. The Process  represents a complete or entire process used to run a project. Usually, a process is defined once and is used for many projects. The Project  models a real-world project that the team is working on. Person  represents a person, a team member, a user, a project member, or an entity who is assigned to carry out a project task. The Role  models similar jobs or roles performed by various project members. Examples of roles are programmer, technician, project manager, draftsman, etc. The Node  represents a phase, a category, or an activity of a project. The Task  represents the actual work items that project members carry out. Examples of tasks are installation of test routines, verification of algorithm correctness, optimization of codes, etc. Tasks typically belong to a particular phase represented by the Node . CheckList  provides for lists of items that are checked off as a project is completed. The CriteriaList  provides for lists of entry and exit criteria that are accomplished before a project transitions from one phase to another phase. The Item  provides a supertype for the CheckList Item  and the CriteriaList Item . It allows common features of these types to be defined once. The CheckList Item  represents the individual checklist items contained in a checklist. The CriteriaList Item  represents the individual criteria contained in a criteria list. The criteria may include entry and exit criteria.","The CBD&D Document Review Utility is made up of five components: (1) A set of notifications that are sent out to document review participants at various times in the review lifecycle. The notifications are all sent out by the CBD&D Notification Service at specified times during the lifetime of the review; (2) The portion of the CBD&D repository model used to store document review information in UREP; (3) The document review task of the CBDD Daemon utility program; (4) The DocumentReview.jsp web-wizard for starting and modifying a document review; and (5) The ReviewSignoff.jsp web-wizard that allows approvers and reviewers to sign-off on the document review.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 4","b":["400","400","410","420","430","440","450","460","470"]},"The channel\/topic  and the document window  are located in the web-based portal . The channel\/topic  refers to any channel or topic selected by the user. From this, the user can be re-directed to the document window . The document window  is an ASP page used to view a document that has been published on the web-based portal portal. It also allows users to view and update the document profile, download the document, and participate in on-line discussions about the document.","The review information  includes information on upcoming, on-going, and completed document reviews. It is stored in database or repository. The document review processing  processes the document review using the review information.","The document review task  is located in the CBDD Daemon . The CBDD Daemon  utility program is a utility program always running on the portal. Its purpose is to send timed notifications to various portal users on behalf of several CBD&D functional areas. The CBDD Daemon  is a command line utility program. It contains a \u201ctimed\u201d task for each of the functional areas that it serves. When the utility is fired up, runs each of the \u201ctimed\u201d tasks once, and sets a separate system timer for each of the tasks that must be \u201ctimed\u201d. When each timer fires, the corresponding task is executed again and the timer is reset to the same interval. Each task can be timed to run at different intervals and completely independently of each other. For document review, the corresponding task is the document review task . The document review task  of the CBDD Daemon  performs many operations. First, it calls the repository and retrieves all instances of the document review type. Second, it iterates over all of the instances of the document review type. For each instance, it determined whether or not the document review has started yet, and if so, whether or not the document review has been completed yet. For each document review that is currently ongoing, it determines if any of the notifications for this document review have NOT yet been sent. For each such notification or set of notifications, it determines if that notification or set of notifications is due to be sent today. For each notification or set of notifications that is due to be sent, it (1) gathers all information needed to complete the notification text, such as project name, document title, author's name and e-mail address, etc., (2) determines the recipient list for each notification to be sent and gathers their e-mail addresses, (3) logs each notification that is sent and the list of recipients, and (4) calls the notification component , passing it all necessary information so that it can send the correct notification to the correct list of recipients.","The notification component  receives the notification requests from the document review task  and\/or the document review processing , formats into mail messages, and then sends to the mail server. The mail server  is a server to process mail requests and distributes or sends the mails to recipients.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 5","b":["500","500","510","520","530","540","550","560"]},"There are four main associations: (1) project\u2014published document: this association is between the project  and the published document; (2) published document-person: this association is between the published document  and the person that authored the document ; (3) published document\u2014document review: this association is between the published document  and the document review ; and (4) document review\u2014reviewers: this association is between the document review  and the reviewer .","These associations are actually instances of the traceability link association specified in the project traceability portion of the CBD&D model. By making these associations instances of the traceability link, users will be able to use the CBD&D traceability functionality to navigate from projects (1) to the documents published for those projects, (2) to the authors of those documents, (3) to the document reviews held for each document, and (4) to the designated reviewers in each document review. In addition, users will be able to display pertinent information about those published documents, authors, document reviews and reviewers.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 6","b":"600"},"Upon START, the process  stores the review information on the document review in a repository (Block ). The document review is associated with a project in a project management system. The review information includes a document review type , a person type , a project type , a published document type , and a reviewer type . The document review type  has a number of attributes (shown in ) on the type of the document review. The person type  represents the people, staff personnel, team members, or project members who are involved in the project. It is noted that a person may work on several projects. The project type  contains information about the project. The published document type  stores information about the various versions of the documents that are published to the portal. The reviewer type  specifies who the reviewers of a document review are. Each instance of the reviewer type  can associate one and only one of the two following items to the instance of the document review type to which it belongs: (1) the project staff member or portal user that acts as an individual reviewer, and (2) the email address of an individual reviewer that is not associated with either the project or the portal. The reviewer type  has a number of attributes: an approval status , an e-mail address , a sign-off date , a sign-off date null , and a type (approver, required, and optional) . The approval status  indicates whether an approver has approved the document. This attribute is not used for optional or required reviewers. The e-mail address  identifies the SMTP e-mail address of an individual reviewer that is neither a project staff member nor a portal user. The sign-off date  indicates the date on which the reviewer signed off on the document. The sign-off date null  indicates whether or not the sign-off date attribute contains a meaningful value. If set to true, also indicates that this reviewer has not yet signed off on the document review. The type  indicates the type of the reviewer as one of an approver, a required reviewer, and an optional reviewer.","Then, the process  processes the document review (Block ). This includes allowing the user to select reviewers, review dates, and to sign off the review document. Next, the process  sends notifications to various recipients (Block ). The notifications are sent based on a run-time utility that periodically checks the various review dates with the current time and date. The process  is then terminated.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 7","b":["620","620","710","712","714","716","718","720","722","724","726","728","730","732","734","736","738","740","742"]},"The approver deadline  indicates the last date on which designated reviewers of type Approver may change their Approved\/Not Approved sign-offs. The user that creates the document review may set this to any desired date as long as it comes after the start date. The approver deadline null  indicates whether or not the approver deadline  attribute is valid for this document review. The end modify date  is the date on which the author is scheduled to complete review of all reviewer comments and complete the updates to the document. The end modify date notifications sent  is a status information. When TRUE, the Document Review Task of the CBDD Daemon  () has already sent out the \u201cEnd of Responses\/Modification Period\u201d notifications for this document review. Otherwise, these notifications have not yet been sent. The end review date  is the date on which the review portion of the document review is scheduled to end. The end review date notifications sent  is a status information. When TRUE, the Document Review Task of the CBDD Daemon has already sent out the \u201cEnd of Review\u201d (including the separate versions for Approvers, Required Reviewers, Optional Reviewers and Author versions) notifications for this document review. Otherwise, these notifications have not yet been sent. The end review time  is the time at which the review portion of the document review is scheduled to end. This time is relative to the end review date value. The first reviewer reminder date  is the date on which the first reviewer reminder notification is to be sent to all reviewers. The first reviewer reminder notifications sent  is a status information. When TRUE, the Document Review Task of the CBDD Daemon has already sent out the \u201cFirst Reviewer Reminder\u201d notifications for this document review. Otherwise, these notifications have not yet been sent. The first reviewer reminder date null  indicates whether or not the first reviewer reminder date attribute is valid for this document review. The second reviewer reminder date  is the date on which the second reviewer reminder notification is to be sent to all reviewers. The second reviewer reminder notifications sent  is status information. When TRUE, the document review task of the CBDD Daemon has already sent out the \u201cSecond Reviewer Reminder\u201d notifications for this document review. Otherwise, these notifications have not yet been sent. The second reviewer reminder date null  indicates whether or not the second reviewer reminder date attribute is valid for this document review. The name  includes document name, a delimiter (e.g., \u201c_\u201d), and a review number. The document name is the name of the published document instance to which this document review belongs, and the review number is the value of the review number attribute. The review number  is a unique integer value that uniquely identifies the separate document reviews of a single published document instance. The start date  is the date on which the document review is scheduled to begin. The start date notifications sent  is status information. When TRUE, the document review task of the CBDD Daemon has already sent out the \u201cReview Started\u201d and \u201cStart Review\u201d notifications for this document review. Otherwise, these notifications have not yet been sent.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 8","b":"670"},"Upon START, the process  selects a project from a list of all projects currently running on the portal (Block ). Then the process  identifies the reviewers (Block ). In this operation, the process  selects an item type (Block ), specifies an attribute (Block ), selects a reviewer type (Block ), and selects a reviewer (Block ). In Block , an item type indicates a project role , an actual person , or the SMTP e-mail address  of a person. When the project role  is selected as a reviewer type, all of the members of that role will be asked to review the document. Or, the user can select specific people attached to the project or other portal users as reviewers. Finally, by stipulating the SMTP e-mail address , the author can request a person not associated with either the project or the portal to review the document. Note that if the persons identified by e-mail address do not have access to the portal, the user has to supply a separate copy of the document for that person to review and that person will not be able participate in any discussion of the document that occurs on the portal. And, an e-mail address reviewer will need to have access to the portal in order to use the automated document review sign-off functionality. In block , the attribute may be one of a reviewer name , a reviewer role , and a reviewer e-mail address . In Block , there are three reviewer types: an approver , a required reviewer , and an optional reviewer . The approver  is a reviewer who approves a document before further work based on the document can go forward. The required reviewer  is a reviewer who is required to review the document before further work based on the document can go forward. Required reviewers are not required to approve the document (and thereby given the ability to veto further work). However, they are required to formally sign-off that they have completed the review of the document. The optional reviewer  is the default value for all new reviewers added to the document review. The optional reviewer  is one that is asked to review the document either as a courtesy or because the author values that reviewers advice and expertise. Optional reviewers are not required to sign-off on the document in any way. In Block , the process  selects a reviewer from a project role , a list of project members , or a list of portal members .","Then, the process  specifies a review date (Block ). There dates include a review start date , a first reviewer reminder date , a second reviewer reminder date , a reviewer comments due date , an author's response due date , and an approval due date . The review start date  is the date on which the document review should begin. This value may default to the current date. The user may change it manually or may select from a calendar. This date contains a valid date greater than or equal to the date on which document being reviewed was published to the portal. The first reviewer reminder date  is the date on which the first of two possible reviewer reminder notifications are to be sent out to all reviewers. This value may default to the date one week after the review start date default. The user may change it manually or may select from a calendar. The user can set this date to an empty value specifying that the first reviewer reminder notifications will not be sent out. If a date is entered into this date, it is greater than the review start date . Note that if the user elects to send this notification, it will only be sent to reviewers that have not signed-off on the review on the specified date. The second reviewer reminder date  is the date on which the second of two possible reviewer reminder notifications is to be sent out to all reviewers. This value may default to the date three days prior to the default for the review comments due date . However, if the user changes the first reviewer reminder date  to an empty value, the default for this control will also be changed to an empty value this control will become read-only, and the calendar icon associated with this control will also become unavailable. If the date is mutable, the user may change it manually or may select from a calendar. This is also an optional date. Therefore, the user can set this date to an empty value specifying that the second reviewer reminder notifications will not be sent out. If a date is entered into this control, it is greater than the first reviewer reminder date . Note that if the user elects to send this notification, it will only be sent to reviewers that have not signed-off on the review on the specified date. The reviewer comments due date  has three significant meanings: (1) It is the date on which the actual document review ends; (2) It is the date on which the Author's Response Period begins; and (3) It is the last date on which reviewers may signoff on completion of the document review. This date may default to the date two weeks after the review start date default. The user may change it manually or may select from a calendar. This date contains a valid date greater than the review start date . If s first reviewer reminder date  is specified, then this date is also greater than that date. Likewise, if a second reviewer reminder date  is specified, then this date is greater than that date also. The author's response due date  is the date on which the author's responses to the document review comments are due. This may or may not also be the date on which the author republishes the new version of the document incorporating any changes brought about by reviewer comment. This date may default to the date three weeks after the review start date default. The user may change it manually or may select from a calendar. This date contains a valid date greater than the review comments due date . The approval due date  is the date by which designated reviewers of type Approver signs-off that they either approve or do not approve the document. After this date, approvers will no longer be allowed to modify their sign-offs of the document review. The user that starts the document review may set this date to any desirable date as long as it occurs after the start date  of the document review. When this date does appear on the page, it may contain a default value equal to the author's responses due date . The user may change this date manually or select from a calendar. This item appears on the page if at least one of the designated reviewers of the document review has been specified to be an approver of the document.","Next, the process  reviews the review data (Block ). The review data may contain values to indicate whether an item is blank or no change was made, added, deleted, or changed. Then, the process  confirms the review data (Block ). Any errors may be displayed. Next, the process  signs off the document review (Block ). The document reviewers signs off on completion of their review. All other interested users may also review the current status of their completions. Designated approvers of the document may (1) indicate whether or not he approves the document he has reviewed. Doing this automatically records the completion of the review for that user; (2) change a previous Approval to Not Approved and vice versa, (3) retract the completion of the review (e.g., set the Approval status and the date completed to \u201cnot specified\u201d. Designated required reviewers may indicate completion of the review of the document as required. Designated optional reviewers may indicate completion of the review of the document even though not required to do so. Required and optional reviewers may also retract the completion of the review. In addition, all users may review the current settings for all reviewers of the document.","Then, the process  reviews the status of the completion (Block ) and is then terminated.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 9","b":"680"},"Upon START, the process  prepares a notification (Block ). The notification may be a start review notification , a review started notification , a review status change notification , an optional first reviewer reminder notification , an optional second reviewer reminder notification , an end of review to optional reviewer notification , an end of review to required reviewer notification , an end of review to approver notification , an end of review to author notification , and an end of response and modification period notification . The start review notification  is sent to each designated reviewer of the document at the beginning of the document review. The review started notification  is sent to the author of the document at the start of the document review. There are three purposes for this notification: (1) it acts as a confirmation to the author that the review document utility has signaled the start of the review cycle; (2) the author may run the utility to start the document review at some date previous to the actual start date. Therefore, the notification signals to the author that the start date has been reached; and (3) the document review may have been created and started by the project manager instead of the author. Thus, the author is informed of the start of the document review. The review status change notification  is sent to designated reviewers when the author changes the reviewer's reviewer type. The optional first reviewer reminder notification  is sent to each designated reviewer at some point during the review period. Its purpose is to serve as a reminder to the reviewers that the review period is passing and that attention should be paid to this task. The person starting the review process specifies if and when the notification is actually sent. However, it will normally default to approximately halfway through the review period. If the person starting the review elects to send this notification, it will only be sent to reviewers that have not signed-off on the review at the time the notification is triggered. The optional second reviewer reminder notification  is sent to each designated reviewer at some point during the review period. Its purpose is to serve as a second reminder to the reviewers that the review period is passing and that attention should be paid to this task. The person starting the review process specifies if and when the notification is actually sent. However, it will normally default to approximately three days before the end of the review period. If the person starting the review elects to send this notification, it will only be sent to reviewers that have not signed-off on the review at the time the notification is triggered. The optional reviewer notification  is sent to optional reviewers at the end of the review period. If the author has not designated specific approvers or required approvers, then all reviewers are optional reviewers. Its purpose is to inform the optional reviewers that the review period has passed and to thank them for their efforts to review the document. The end of review to required reviewer notification  is sent to required reviewers at the end of the review period. Its purpose is to inform the required reviewers that the review period has passed, to thank them for their efforts to review the document, and to remind them to submit their required reviewer signoff. The end of review to approver notification  is sent to approvers at the end of the review period. Its purpose is to inform the approvers that the review period has passed, to thank them for their efforts to review the document, and to remind them to submit their approver signoff. The end of review to author notification  is sent to the author at the end of the review period. Its purpose is to remind the author that the review period has passed and that it is now time to respond to all online comments from the various reviewers. It is also now time for the author to make any needed modifications to the document. Note, that it is not the intent of this design to preclude the author from carrying out these functions as the comments are submitted to the online discussion. However, for those authors who want to work that way, this message will act as a reminder that it is time for that process to begin. Further, even for some authors who respond to online comments as they are submitted and modify the document at the same time, might need the reminder that it is now time to finish that process and republish the modified document. The end of response and modification period notification  is sent to the author at the end of the period in which she responds to reviewer comments and makes necessary modifications to the document. Its purpose is to remind the author that the response period has passed and that it is now time to republish the modified document on the portal. If no modifications were needed to the document, that latter action will not be necessary.","Then, the process  determines if a notification is due to be sent (Block ). This is performed by a CBDD daemon utility program that runs at all times on the portal. The operation goes through the list of all types of notifications as above. For each notification, compare the due date with the current time\/date. If a notification is not due, the process  is terminated. Otherwise, if any of the notifications is due, the process  obtains the notification information (Block ). Then, the process  logs the notification and the list of the recipients (Block ). Next, the process  calls the notification service to process sending out the notification (Block ) and is then terminated.","While the invention has been described in terms of several embodiments, those of ordinary skill in the art will recognize that the invention is not limited to the embodiments described, but can be practiced with modification and alteration within the spirit and scope of the appended claims. The description is thus to be regarded as illustrative instead of limiting."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The invention may best be understood by referring to the following description and accompanying drawings that are used to illustrate embodiments of the invention. In the drawings:",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
