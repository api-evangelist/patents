---
title: Packet based network exchange with rate synchronization
abstract: A signal processing system which discriminates between voice signals and data signals modulated by a voiceband carrier. The signal processing system includes a voice exchange, a data exchange and a call discriminator. The voice exchange is capable of exchanging voice signals between a circuit switched network and a packet based network. The signal processing system also includes a data exchange capable of exchanging data signals modulated by a voiceband carrier on the circuit switched network with unmodulated data signal packets on the packet based network. The data exchange is performed by demodulating data signals from the circuit switched network for transmission on the packet based network, and re-modulating data signal packets from the packet based network for transmission on the circuit switched network. The call discriminator is used to selectively enable the voice exchange and data exchange.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06882711&OS=06882711&RS=06882711
owner: Broadcom Corporation
number: 06882711
owner_city: Irvine
owner_country: US
publication_date: 19991209
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The present application claims priority under 35 U.S.C. \u00a7 119(e) to the following provisional applications: Ser. No. 60\/164,689, filed on Nov. 10, 1999; Ser. No. 60\/157,470, filed on Oct. 1, 1999; Ser. No. 60\/156,266, filed on Sep. 27, 1999; and Ser. No. 60\/154,903, filed on Sep. 20, 1999. All these applications are expressly incorporated by reference herein as though set forth in full. The present application also claims priority under 35 U.S.C. \u00a7119(e) to the following provisional applications: application Ser. No. 60\/160,124, filed Oct. 18, 1999; application Ser. No. 60\/161,152, filed Oct. 22, 1999; application Ser. No. 60\/162,315, filed Oct. 28, 1999; application Ser. No. 60\/163,169, filed Nov. 2, 1999; application Ser. No. 60\/163,170, filed Nov. 2, 1999; application Ser. No. 60\/163,600 filed Nov. 4, 1999; application Ser. No. 60\/164,379, filed Nov. 9, 1999; application Ser. No. 60\/164,690; filed Nov. 10, 1999; application Ser. No. 60\/166,289, filed Nov. 18, 1999.","This application contains subject matter that is related to co-pending patent application Ser. No. 09\/639,527, filed Aug. 16, 2000; co-pending patent application Ser. No. 09\/493,458, filed Jan. 28, 2000; co-pending patent application Ser. No. 09\/643,920, filed Aug. 23, 2000; co-pending patent application Ser. No. 09\/692,554, filed Oct. 19, 2000; co-pending patent application Ser. No. 09\/644,586, filed Aug. 23, 2000; co-pending patent application Ser. No. 09\/643,921, filed Aug. 23, 2000; co-pending patent application Ser. No. 09\/653,261, filed Aug. 31, 2000; co-pending patent application Ser. No. 09\/533,022, filed Mar. 22, 2000; co-pending patent application Ser. No. 09\/697,777, filed Oct. 26, 2000; co-pending patent application Ser. No. 09\/651,006, filed Aug. 29, 2000; and co-pending patent application Ser. No. 09\/522,184, filed Mar. 9, 2000.","The present invention relates generally to telecommunications systems, and more particularly, to a system for interfacing telephony devices with packet based networks.","Telephony devices, such as telephones, analog fax machines, and data modems, have traditionally utilized circuit switched networks to communicate. With the current state of technology, it is desirable for telephony devices to communicate over the Internet, or other packet based networks. Heretofore, an integrated system for interfacing various telephony devices over packet based networks has been difficult due to the different modulation schemes of the telephony devices. Accordingly, it would be advantageous to have an efficient and robust integrated system for the exchange of voice, fax data and modem data between telephony devices and packet based networks.","In one aspect of the present invention, a communications system includes a rate negotiator configured to negotiate a data rate with a first telephony device over a network line, and renegotiate the negotiated data rate with a remote system over a packet based network, the remote system comprising a second telephony device, and wherein the data exchange is configured to exchange data signals between the first telephony device and the remote system at the renegotiated data rate.","In another aspect of the present invention, a method of communications includes negotiating a data rate with a first telephony device over a network line, renegotiating the negotiated data rate with a remote system over a packet based network, the remote system comprising a second telephony device, and exchanging data signals between the first telephony device and the remote system at the renegotiated data rate.","In yet another aspect of the present invention, computer-readable media embodying a program of instructions executable by a computer performs a method of communications, the method including negotiating a data rate with a first telephony device over a network line, renegotiating the negotiated data rate with a remote system over a packet based network, the remote system comprising a second telephony device, and exchanging data signals between the first telephony device and the remote system at the renegotiated data rate.","It is understood that other embodiments of the present invention will become readily apparent to those skilled in the art from the following detailed description, wherein it is shown and described only embodiments of the invention by way of illustration of the best modes contemplated for carrying out the invention. As will be realized, the invention is capable of other and different embodiments and its several details are capable of modification in various other respects, all without departing from the spirit and scope of the present invention. Although the the rate negotiator is described in the context of a data exchange, those skilled in the art will appreciate that the rate negotiator is likewise suitable for various other telephony and telecommunications applications. Accordingly, the drawings and detailed description are to be regarded as illustrative in nature and not as restrictive.","An Embodiment of a Signal Processing System","In a preferred embodiment of the present invention, a signal processing system is employed to interface telephony devices with packet based networks. Telephony devices include, by way of example, analog and digital phones, ethernet phones, Internet Protocol phones, fax machines, data modems, cable modems, interactive voice response systems, PBXs, key systems, and any other conventional telephony devices known in the art. The described preferred embodiment of the signal processing system can be implemented with a variety of technologies including, by way of example, embedded communications software that enables transmission of voice, fax and modem over packet based networks. The embedded communications software is preferably run on programmable digital signal processors (DSPs) and is used in gateways, cable modems, remote access servers, PBXs, and other packet based network appliances.","An exemplary topology is shown in  with a packet based network  providing a communication medium between various telephony devices. Each network gateway , , includes a signal processing system which provides an interface between the packet based network  and a number of telephony devices. In the described exemplary embodiment, each network gateway , , supports a fax machine , , , a telephone , , , and a modem , , . Two of the network gateways , provide a direct interface between their respective telephony devices and the packet based network . The other network gateway is connected to its respective telephony device through a public switched telephone network (PSTN) . The network gateways , , permit voice, fax and modem data to be carried over packet based networks such as internet protocol (IP), frame relay (FR), asynchronous transfer mode (ATM), or any other packet based system.","The signal processing system can be implemented with a programmable DSP software architecture as shown in FIG. . This architecture has a DSP  with memory  at the core, a number of network channel interfaces  and telephony interfaces , and a host  that may reside in the DSP itself or on a separate microcontroller. The network channel interfaces  provide multi-channel access to the packet based network. The telephony interfaces  can be connected to a circuit switched network, such as a PSTN line, or directly to any telephony device.","The embedded communications software binds all core DSP algorithms together, interfaces the hardware to the host , and provides low level services such as resource arbitration and task management. An exemplary software architecture operating on a DSP platform is shown in  user application layer  provides overall executive control and system management, and directly interfaces a DSP server  to the host  (see to FIG. ). The DSP server  provides DSP resource management and telecommunications signal processing. The DSP server  communicates with external telephony devices (not shown) and the underlying DSP  (see ) via physical devices (PXD) , , and a hardware abstraction layer (HAL) .","The DSP server  includes a resource manager  which receives commands from, forwards events to, and exchanges data with the user application layer . The user application layer  can either be resident on the DSP  or alternatively on the host  (see FIG. ), such as a microcontroller. An application programming interface  (API) provides a software interface between the user application layer  and the resource manager . The resource manager  manages the internal\/external program and data memory of the DSP . In addition the resource manager dynamically allocates DSP resources, performs command routing as well as other general purpose functions.","The DSP server  also includes virtual device drivers (VHDs) , , . The VHDs are a collection of software algorithms that control the operation of and provide the facility for real time signal processing. Each VHD , , includes an inbound and outbound media queue (not shown) and a library of signal processing services specific to that VHD , , . In the described exemplary embodiment, each VHD , , is a complete self-contained software module for processing a single channel of voice, fax and modem. Multiple channel capability can be achieved by adding VHDs to the DSP server . The resource manager  dynamically controls the creation and deletion of VHDs and services.","A switchboard  in the DSP server  dynamically inter-connects the PXDs , , with the VHDs , , providing multi-channel operation. Each PXD , , is a collection of software algorithms which provide signal conditioning for one external telephony device. For example, a PXD may provide volume and gain control for telephony signals from its respective telephony device prior to communication with the switchboard . Voice, fax and modem functionalities can be supported on a single channel by connecting three PXDs, one for each telephony device, to a single VHD via the switchboard . Connections within the switchboard  are managed by the user application layer  via a set of API commands to the resource manager . The number of PXDs and VHDs is expandable, and limited only by the memory size and the MIPS (millions instructions per second) of the underlying hardware.","A hardware abstraction layer (HAL)  exchanges telephony signals with the external telephony devices, and interfaces directly with the underlying DSP  hardware (see FIG. ). The HAL  includes basic hardware interface routines, including DSP initialization, target hardware control, codec sampling, and hardware control interface routines. The DSP initialization routine is invoked by the user application layer  to initiate the initialization of the signal processing system. The DSP initialization sets up the internal registers of the signal processing system for memory organization, interrupt handling, timer initialization, and DSP configuration. Target hardware initialization involves the initialization of all hardware devices and circuits external to the signal processing system. The HAL  is a physical firmware layer that isolates the communications software from the underlying hardware. This methodology allows the communications software to be ported to various hardware platforms by porting only the affected portions of the HAL  to the target hardware.","In operation, the user application layer  creates, opens, issues commands to, and processes events from the VHDs , , via API commands to the resource manager . In response, each VHD , , may invoke certain services which perform signal processing algorithms on telephony signals via the PXDs , , . For example, when a call comes in, a VHD will be automatically opened by the resource manager  to handle the call. The VHD will then communicate to the user application layer  that a call is coming in. The user application layer  will respond to this information by opening a new VHD , invoking the appropriate services, and commanding the switchboard  to route the incoming call between the appropriate PXD and the VHD . An executive  schedules the execution of the VHDs , , and their associated services according to assigned priorities, and controls the multi-tasking function of the services for each VHD , , . The executive  also communicates in real time the instruction cycle consumption of each VHD , , and services to resource manager . The resource manager  may reallocate DSP resources as a result.","The exemplary software architecture described above can be integrated into numerous telecommunications products. In a presently preferred embodiment, the software architecture is designed to support telephony signals between the traditional circuit switched network and the packet based infrastructure. A network VHD is used to support each channel of this operation. Turning to , an exemplary network VHD includes three operational modes, namely voice mode , fax relay mode , and modem relay mode .  shows the various services that are running in each operational mode. In the voice mode , call discrimination , packet voice exchange , and packet tone exchange  are running. In the fax relay mode , packet fax data exchange  is running. And in the modem relay mode , packet data modem exchange  is running. The network VHD controls each of the services including instantiation and removal.","In the described exemplary embodiment, the network VHD is open and initialized to the voice mode  of operation by the user application layer  (see ) via API commands to the resource manager  (see FIG. ). The call discriminator  is responsible for differentiating between a voice and machine call by detecting the presence of a 2100 Hz. tone (as in the case when the telephony device is a fax or a modem), a 1100 Hz. tone or V.21 channel two modulated high level data link control (HDLC) flags (as in the case when the telephony device is a fax). If a 1100 Hz. tone, or V.21 modulated HDLC flags are detected, a calling fax machine is recognized. The network VHD then terminates the voice mode  and invokes the packet fax data exchange service  to process the call. If however, 2100 Hz tone is detected, the network VHD terminates voice mode  and invokes the packet data modem exchange service .","The packet data modem exchange service  further differentiates between a fax and modem by analyzing the incoming signal to determine whether V.21 modulated HDLC flags are present indicating that a fax connection is in progress. If HDLC flags are detected, the network VHD terminates packet data modem exchange service  and initiates packet fax data exchange service . Otherwise, the packet data modem exchange service  remains operative. In the absence of an 1100 or 2100 Hz. tone, or V.21 modulated HDLC flags the voice mode  remains operative.","A. The Voice Mode","Voice mode provides signal processing of voice signals. As shown in the exemplary embodiment depicted in , voice mode enables the transmission of voice over a packet based system such as Voice over IP (VoIP, H.323), Voice over Frame Relay (VoFR, FRF-), Voice Telephony over ATM (VTOA), or any other proprietary network. The voice mode should also permit voice to be carried over traditional media such as time division multiplex (TDM) networks and voice storage and playback systems. Network gateway supports the exchange of voice between a traditional circuit switched  and a packet based network . In addition, network gateways , , , support the exchange of voice between the packet based network  and a number of telephones , , , , . Although the described exemplary embodiment is shown for telephone communications across the packet based network, it will be appreciated by those skilled in the art that other telephony devices could be used in place of one or more of the telephones.","The PXDs for the voice mode provide echo cancellation, gain, and automatic gain control. The network VHD invokes numerous services in the voice mode including call discrimination, packet voice exchange, and packet tone exchange. These network VHD services operate together to provide: (1) an encoder system with DTMF detection, voice activity detection, voice compression, and comfort noise estimation, and (2) a decoder system with delay compensation, voice decoding, DTMF generation, comfort noise generation and lost frame recovery.","The services invoked by the network VHD in the voice mode and the associated PXD is shown schematically in FIG. . In the described exemplary embodiment, the PXD  provides two way communication with a telephone or a circuit switched network, such as a PSTN line carrying a 64 kb\/s pulse code modulated (PCM) signal, i.e., digital voice samples.","The incoming PCM signal is initially processed by the PXD  to remove far end echos. As the name implies, echos in telephone systems is the return of the talker's voice resulting from the operation of the hybrid with its two-four wire conversion. If there is low end-to-end delay, echo from the far end is equivalent to side-tone (echo from the near-end), and therefore, not a problem. Side-tone gives users feedback as to how loud they are talking, and indeed, without side-tone, users tend to talk too loud. However, far end echo delays of more than about 10 to 30 msec significantly degrade the voice quality and is a major annoyance to the user.","An echo canceller  is used to remove echos from far end speech present on the incoming PCM signal before routing the incoming PCM signal back to the far end user. The echo canceller  samples an outgoing PCM signal from the far end user, filters it, and combines it with the incoming PCM signal . Preferably, the echo canceller  is followed by a non-linear processor (NLP)  which may mute the digital voice samples when far end speech is detected in the absence of near end speech. The echo canceller  may also inject comfort noise which may be roughly at the same level as the true background noise or at a fixed level.","After echo cancellation, the power level of the digital voice samples is normalized by an automatic gain control (AGC)  to ensure that the conversation is of an acceptable loudness. Alternatively, the AGC can be performed before the echo canceller , however, this approach would entail a more complex design because the gain would also have to be applied to the sampled outgoing PCM signal . In the described exemplary embodiment, the AGC  is designed to adapt slowly, although it should adapt fairly quickly if overflow or clipping is detected. The AGC adaptation should be held fixed if the NLP  is activated.","After AGC , the digital voice samples are placed in the media queue  in the network VHD  via the switchboard \u2032. In the voice mode, the network VHD  invokes three services, namely call discrimination, packet voice exchange, and packet tone exchange. The call discriminator  analyzes the digital voice samples from the media queue to determine whether a 2100, a 1100 Hz tone or V.21 modulated HDLC flags are present. As described above with reference to , if either tone or HDLC flags are detected, the voice mode services are terminated and the appropriate service for fax or modem operation is initiated. In the absence of a 2100, a 1100 Hz. tone, or HDLC flags, the digital voice samples are coupled to the encoder system which includes a voice encoder , a voice activity detector (VAD) , a comfort noise estimator , a DTMF detector ; and a packetization engine .","Typical telephone conversations have as much as sixty percent silence or inactive content. Therefore, high bandwidth gains can be realized if digital voice samples are suppressed during these periods. A VAD , operating under the packet voice exchange service, is used to accomplish this function. The VAD  attempts to detect digital voice samples that do not contain active speech. If the comfort noise estimator  can accurately regenerate parameters for the digital voice samples without speech, silence identifier (SID) packets will be coupled to a packetization engine . The SID packets contain voice parameters that allow the reconstruction of the background noise at the far end.","From a system point of view, the VAD  may be sensitive to the change in the NLP . For example, when the NLP  is activated, the VAD  may immediately declare that voice is inactive. In that instance, the VAD  may have problems tracking the true background noise level. If the echo canceller  generates comfort noise, it may have a different spectral characteristic from the true background noise. The VAD  may detect a change in noise character when the NLP  is activated (or deactivated) and declare the comfort noise as active speech. For these reasons, the VAD  should be disabled when the NLP  is activated. This is accomplished by a \u201cNLP on\u201d message passed from the NLP  to the VAD .","The voice encoder , operating under the packet voice exchange service, can be a straight 16 bit PCM encoder or any voice encoder which support one or more of the standards promulgated by ITU. The encoded digital voice samples are formatted into a voice packet (or packets) by the packetization engine . These voice packets are formatted according to an applications protocol and outputted to the host (not shown). The voice encoder  is invoked only when digital voice samples with speech are detected by the VAD . Since the packetization interval may be a multiple of an encoding interval, both the VAD  and the packetization engine  should cooperate to decide whether or not the voice encoder  is invoked. For example, if the packetization interval is 10 msec and the encoder interval is 5 rnsec (a frame of digital voice samples is 5 ms), then a frame containing active speech will cause the subsequent frame to be placed in the 10 ms packet regardless of the VAD state during that subsequent frame. This interaction can be accomplished by the VAD  passing an \u201cactive\u201d flag to the packetization engine , and the packetization engine  controlling whether or not the voice encoder  is invoked.","In the described exemplary embodiment, the VAD  is applied after the AGC . This approach provides optimal flexibility because. both the VAD  and the voice encoder  are integrated into some speech compression schemes such as those promulgated in ITU Recommendations G.729 with Annex B VAD (March 1996)-Coding of Speech at 8 kbits\/s Using Conjugate-Structure Algebraic-Code-Exited Linear Prediction (CS-ACELP), and G.723.1 with Annex A VAD (March 1996)-Dual Rate Coder for Multimedia Communications Transmitting at 5.3 and 6.3 kbit\/s, the contents of which is hereby incorporated by reference as through set forth in full herein.","Operating under the packet tone exchange service, a DTMF detector  determines whether or not there is a DTMF signal present at the near end. The DTMF detector  also provides a pre-detection flag which indicates whether or not it is likely that the digital voice sample might be a portion of a DTMF signal. If so, the pre-detection flag is relayed to the packetization engine  instructing it to begin holding voice packets. If the DTMF detector  ultimately detects a DTMF signal, the voice packets are discarded, and the DTMF signal is coupled to the packetization engine . Otherwise the voice packets are ultimately released from the packetization engine  to the host (not shown). The benefit of this method is that there is only a temporary impact on voice packet delay when a DTMF signal is pre-detected in error, and not a constant buffering delay. Whether voice packets are held while the pre-detection flag is active could be adaptively controlled by the user application layer.","The decoding system of the network VHD  essentially performs the inverse operation of the encoding system. The decoding system of the network VHD  comprises a depacketizing engine , a voice queue , a DTMF queue , a voice synchronizer , a DTMF synchronizer , a voice decoder , a VAD , a comfort noise estimator , a comfort noise generator , a lost packet recovery engine , and a tone generator .","The depacketizing engine  identifies the type of packets received from the host (i.e., voice packet, DTMF packet, SID packet), transforms them into frames which is protocol independent, transfers the voice frames (or voice parameters in the case of SID packets) into the voice queue , and transfers the DTMF frames into the DTMF queue . In this manner, the remaining tasks are, by and large, protocol independent.","A jitter buffer  is utilized to compensate for network impairments such as delay jitter caused by packets not arriving at the same time or in the same order in which they were transmitted. In addition, the jitter buffer  compensates for lost packets that occur on occasion when the network is heavily congested. In the described exemplary embodiment, the jitter buffer  includes a voice synchronizer  that operates in conjunction with a voice queue  to provide an isochronous stream of voice frames to the voice decoder .","Sequence numbers embedded into the voice packets at the far end can be used to detect lost packets, packets arriving out of order, and short silence periods. The voice synchronizer  can analyze the sequence numbers, enabling the comfort noise generator  during short silence periods and performing voice frame repeats via the lost packet recovery engine  when voice packets are lost. SID packets can also be used as an indicator of silent periods causing the voice synchronizer  to enable the comfort noise generator . Otherwise, during far end active speech, the voice synchronizer  couples voice frames from the voice queue  in an isochronous stream to the voice decoder . The voice decoder  decodes the voice frames into digital voice samples suitable for transmission on a circuit switched network, such as a 64 kb\/s PCM signal for a PSTN line. The output of the voice decoder  (or the comfort noise generator  or lost packet recovery engine  if enabled) is written into a media queue  for transmission to the PXD .","The comfort noise generator  provides background noise to the near end user during silent periods. The background noise is reconstructed by the comfort noise generator  from the voice parameters in the SID packets from the voice queue . However, the comfort noise generator  should not be dependent upon SID packets from the far end for proper operation. In the absence of SID packets, the voice parameters of the background noise at the far end can be determined by running the VAD  at the voice decoder  in series with a comfort noise estimator .","If the protocol supports SID packets, (and these are supported for VTOA, FRF-, and VoIP), the comfort noise estimator  should transmit SID packets. However, for some protocols, namely, FRF-, the SID packets are optional, and other far end users may not support SID packets at all. In these systems, the voice synchronizer  must continue to operate properly. The voice synchronizer  can invoke a number of mechanisms to compensate for delay jitter in these systems if sequence numbers are not embedded in the voice packet. For example, the voice synchronizer  can assume that the voice queue  is in an underflow condition due to excess jitter and perform packet repeats by enabling the lost frame recovery engine . Alternatively, the VAD  at the voice decoder  can be used to estimate whether or not the underflow of the voice queue  was due to the onset of a silence period or due to packet loss. In this instance, the spectrum and\/or the energy of the digital voice signals can be estimated and the result fed back to the voice synchronizer . The voice synchronizer  can then invoke the lost packet recovery engine  during voice packet losses and the comfort noise generator  during silent periods.","When DTMF packets arrive, they are depacketized by the depacketizing engine . DTMF frames at the output of the depacketizing engine  are written into the DTMF queue. The DTMF synchronizer  couples the DTMF frames from the DTMF queue  to the tone generator . Much like the voice synchronizer, the DTMF synchronizer  is employed to provide an isochronous stream of DTMF frames to the tone generator . Generally speaking, when DTMF packets are being transferred, voice frames should be suppressed. To some extent, this is protocol dependent. However, the capability to flush the voice queue  to ensure that the voice frames do not interfere with DTMF generation is desirable. Essentially, old voice frames which may be queued are discarded when DTMF packets arrive. This will ensure that there is a significant inter-digit gap before DTMF tones are generated. This is achieved by a \u201ctone present\u201d message passed between the DTMF queue and the voice synchronizer .","The tone generator  converts the DTMF signals into a DTMF tone suitable for a standard digital or analog telephone. The tone generator  overwrites the media queue  to prevent leakage through the voice path and to ensure that the DTMF tones are not too noisy.","There is also a possibility that DTMF tone may be fed back as an echo into the DTMF detector . To prevent false detection, the DTMF detector  can be disabled entirely (or disabled only for the digit being generated) during DTMF tone generation. This is achieved by a \u201ctone on\u201d message passed between the tone generator  and the DTMF detector . Alternatively, the NLP  can be activated while generating DTMF tones.","The outgoing PCM signal in the media queue  is coupled to the PXD  via the switchboard \u2032. The outgoing PCM signal is coupled to an amplifier  before being outputted on the PCM output line ","1. Echo Canceller with NLP","In an exemplary embodiment, the echo canceller can be an adaptive filter which tries to model the transfer characteristics of the hybrid and the tail circuit of the telephone circuit. The tail length supported should be at least 16 msec. The adaptive filter can be a linear transversal filter or any other suitable filter. With the linear transversal filter, the echo canceller may be unable to cancel all of the resulting echo due to the non-linearities in the hybrid and tail circuit. Thus, the NLP is used to suppress the remaining echo during periods of far end active speech with no near end speech. The NLP can be implemented with a suppressor that suppresses down to the background noise level, or suppresses completely and inserts comfort noise with the spectrum which models the true background noise. Preferably, the echo canceller is compatible with one or more of the following ITU Recommendations G.164 (1988)\u2014Echo Suppressors, G.165 (March 1993)\u2014Echo Cancellers, and G.168 (April 1997)\u2014Digital Network Echo Cancellers, the contents of which are incorporated herein by reference as though set forth in full.","2. Automatic Gain Control","In an exemplary embodiment, the AGC can be either fully adaptive or have a fixed gain. Preferably, the AGC supports a filly adaptive operating mode with a range of about \u221230 dB to 30 dB. A default gain value can be independently established, and is typically 0 dB. If adaptive gain control is used, the initial gain value is specified by this default gain.","3. Voice Activity Detector","In an exemplary embodiment, the VAD, in either the encoder system or the decoder system, can be configured to operate in multiple modes so as to provide system tradeoffs between voice quality and bandwidth requirements. In a first mode, the VAD is always disabled and declares all digital voice samples as active speech. This mode is applicable if the signal processing system is used over a TDM network, a network which is not congested with traffic, or when used with PCM (ITU Recommendation G.711 (1988)\u2014Pulse Code Modulation (PCM) of Voice Frequencies, the contents of which is incorporated herein by reference as if set forth in full) in a PCM bypass mode.","In a second \u201ctransparent\u201d mode, the voice quality is indistinguishable from the first mode. In transparent mode, the VAD identifies digital voice samples with an energy below the threshold of hearing as inactive speech. The threshold may be adjustable between \u221290 and \u221240 dBm with a default value of \u221260 dBm default value. For loud background noise which is rich in character such as music on hold, background music, or loud background talkers (so-called cocktail noise), the threshold can be adjustable between \u221290 and \u221220 dBm with a default value of \u221220 dBM. The transparent mode may be used if voice quality is much more important than bandwidth. This may be the case, for example, if a G.711 voice encoder (or decoder) is used.","In a third \u201cconservative\u201d mode, the VAD identifies low level (but audible) digital voice samples as inactive, but will be fairly conservative about discarding the digital voice samples. A low percentage of active speech will be clipped at the expense of slightly higher transmit bandwidth. In the conservative mode, a skilled listener may be able to determine that voice activity detection and comfort noise generation is being employed.","In a fourth \u201caggressive\u201d mode, bandwidth is at a premium. The VAD is aggressive about discarding digital voice samples which are declared inactive. This approach will result in speech being occasionally clipped, but system bandwidth will be vastly improved.","The transparent mode is typically the default mode when the system is operating with 16 bit PCM, companded PCM (G.711) or adaptive differential PCM (ITU Recommendations G.726 (Dec. 1990)-40, 32, 24, 16 kbit\/s Using Low-Delay Code Exited Linear Prediction, and G.727 (December 1990)-5-, 4-, 3-, and 2-Sample Embedded Adaptive Differential Pulse Code Modulation). In these instances, the user is most likely concerned with high quality voice since a high bit-rate voice encoder (or decoder) has been selected. As such, a high quality VAD should be employed. The transparent mode should also be used for the VAD operating in the decoder system since bandwidth is not a concern (the VAD in the decoder system is used only to update the comfort noise parameters). The conservative mode could be used with ITU Recommendation G.728 (sept. 1992)\u2014Coding of Speech at 16 kbit\/s Using Low-Delay Code Excited Linear Prediction, G.729, and G.723.1. For systems demanding high bandwidth efficiency, the aggressive mode can be employed as the default mode.","The mechanism in which the VAD detects digital voice samples that do not contain active speech can be implemented in a variety of ways. One such mechanism entails monitoring the energy level of the digital voice samples over short periods (where a period length is typically in the range of about 10 to 30 msec). If the energy level exceeds a fixed threshold, the digital voice samples are declared active, otherwise they are declared inactive. The transparent mode can be obtained when the threshold is set to the threshold level of hearing.","Alternatively, the threshold level of the VAD can be adaptive and the background noise energy can be tracked. If the energy in the current period is sufficiently larger than the background noise estimate by the comfort noise estimator, the digital voice samples are declared active, otherwise they are declared inactive. The VAD may also freeze the comfort noise estimator or extend the range of active periods (hangover). This type of VAD is used in GSM (European Digital Cellular Telecommunications System; Half rate Speech Part 6: Voice Activity Detector (VAD) for Half Rate Speech Traffic Channels (GSM 6.42), the contents of which is incorporated herein by reference as if set forth in full) and QCELP (W. Gardner, P. Jacobs, and C. Lee, \u201cQCELP: A Variable Rate Speech Coder for CDMA Digital Cellular,\u201d in , B.S. atal, V. Cuperman, and A. Gersho (eds)., the contents of which is incorporated herein by reference as if set forth in full).","In a VAD utilizing an adaptive threshold level, speech parameters such as the zero crossing rate, spectral tilt, energy and spectral dynamics are measured and compare stored values for noise. If the parameters differ significantly from the stored values, it is an indication that active speech is present even if the energy level of the digital voice samples is low.","When the VAD operates in the conservative or transparent mode, measuring the energy of the digital voice samples can be sufficient for detecting inactive speech. However, the spectral dynamics of the digital voice samples may be useful in discriminating between long voice segments with audio spectra and long term background noise. In an exemplary embodiment of a VAD employing spectral analysis, the VAD performs auto-correlations using Itakura or Itakura-Saito distortion to compare long term estimates based on background noise to short term estimates based on a period of digital voice samples. In addition, if supported by the voice encoder, line spectrum pairs (LSPs) can be used to compare long term LSP estimates based on background noise to short terms estimates based on a period of digital voice samples. Alternatively, FFT methods can be are used when the spectrum is available from another software module.","Preferably, hangover should be applied to the end of active periods of the digital voice samples with active speech. Hangover bridges short inactive segments to ensure that quiet trailing, unvoiced sounds (such as \/s\/), are classified as active. The amount of hangover can be adjusted according to the mode of operation of the VAD. If a period following a long active period is clearly inactive (i.e., very low energy with a spectrum similar to the measured background noise) the length of the hangover period can be reduced. Generally, a range of about 40 to 300 msec of inactive speech following an active speech burst will be declared active speech due to hangover.","4. Comfort Noise Generator","A comfort noise generator plays noise. In an exemplary embodiment, a comfort noise generator in accordance with ITU standards G.729 Annex B or G.723.1 Annex can be used. These standards specify background noise levels and spectral content.","Alternatively, SID packets are not used or the contents of the SID packet are unspecified (see FRF-11) or the SID packets only contains an energy estimate, then estimating the parameters of the noise in the decoding system may be necessary. With this methodology, voice frames are decoded by the voice decoder and coupled to the VAD . The VAD  does not need to be invoked when comfort noise is being generated. Comfort noise parameters should not be estimated or updated by the comfort noise estimator during frame repeats or during periods in which comfort noise is being is being generated by the comfort noise generator.","The far end voice encoder should ensure that a relatively long hangover period is used in order to ensure that there are noise-only digital voice samples which the VAD decoder can identify as inactive speech. During the identified inactive periods, the digital voice samples from the voice decoder are used to update the comfort noise parameters of the comfort noise estimator. A mixed mode may also be employed whereby the energy is conveyed in a SID packet and the spectrum is estimated in the decoder system. Alternatively, if it is unknown whether or not the far end voice encoder supports (sending) SID packets, the decoder system can start with the assumption that SID packets are not being sent, and then only use the comfort noise parameters contained in the SID packets if and when a SID packet arrives.","Alternatively, the comfort noise estimate could be updated with the two or three digital voice frames which arrived immediately prior to the SID packet. The far end voice encoder should then ensure that at least two or three frames of inactive speech are transmitted before the SID packet is transmitted. This can be realized by extending the hangover period.","The comfort noise parameters at the near end are measured by the comfort noise estimator in the encoding system and transferred to the far end decoder in SID packets. The VAD determines whether the digital voice samples in the media queue  contain active speech. If the VAD determines that the digital voice samples do not contain active speech, then the energy and spectrum of a digital voice sample period is used to update a long running background noise energy and spectral estimate. These estimates are periodically quantized and transmitted in a SID packet by the comfort noise estimator (usually at the end of a talk spurt and periodically during the ensuing silent segment, or when the background noise parameters change appreciably). The comfort noise estimator should update the long running averages, when necessary, decide when to transmit a SID packet, and quantize and pass the quantized parameters to the packetization engine. SID packets should not be sent while on-hook, unless they are required to keep the permanent virtual connection between the telephony devices alive. There may be multiple quantization methods depending on the protocol chosen.","5. Voice Encoder\/Voice Decoder","In an exemplary embodiment, the voice encoder and the voice decoder support one or more voice compression algorithms, including but not limited to, 16 bit PCM (non-standard, and only used for diagnostic purposes); ITU-T standard G.711 at 64 kb\/s; G.723.1 at 5.3 kb\/s (ACELP) and 6.3 kb\/s (MP-MLQ); ITU-T standard G.726 (ADPCM) at 16, 24, 32, and 40 kb\/s; ITU-T standard G.727 (Embedded ADPCM) at 16, 24, 32, and 40 kb\/s; ITU-T standard G.728 (LD-CELP) at 16 kb\/s; and ITU-T standard G.729 Annex A (CS-ACELP) at 8 kb\/s.","The packetization interval for 16 bit PCM, G.711, G.726, G.727 and G.728 should be a multiple of 5 msec. The packetization interval is the time duration of the digital voice samples that are encapsulated into a single voice packet. The voice encoder (decoder) interval is the time duration in which the voice encoder (decoder) is enabled. The packetization interval should be an integer multiple of the voice encoder (decoder) interval. By way of example; G.729 encodes frames containing 80 digital voice samples at 8 kHz which is equivalent to a voice encoder (decoder) interval of 10 msec. If two subsequent encoded frames of digital voice sample are collected and transmitted in a single packet, the packetization interval in this case would be 20 msec.","G.711, G.726, and G.727 encodes digital voice samples on a sample by sample basis. Hence, the minimum voice encoder (decoder) interval is 0.125 msec. This is somewhat of a short voice encoder (decoder) interval, especially if the packetization interval is a multiple of 5 msec. Therefore, a single voice packet will contain 40 frames of digital voice samples.","G.728 encodes frames containing 5 digital voice samples (or 0.625 msec). A packetization interval of 5 msec (40 samples) can be supported by 8 frames of digital voice samples.","G.723.1 compresses frames containing 240 digital voice samples. The voice encoder (decoder) interval is 30 msec, and the packetization interval should be a multiple of 30 msec.","Packetization intervals which are not multiples of the voice encoder (or decoder) interval can be supported by a change to the packetization engine or the depacketization engine. This may be acceptable for a voice encoder (or decoder) such as G.711 or 16 bit PCM, but the packetization interval should be a multiple of the voice encoder or decoder frame size.","The G.728 standard may be desirable for some applications. G.728 is used fairly extensively in proprietary voice conferencing situations and it is a good trade-off between bandwidth and quality at a rate of 16 kb\/s. Its quality is superior to that of G.729 under many conditions, and it has a much lower rate than G.726, or G.727. However, G.728 is MIPS intensive.","Differentiation of various voice encoders (or decoders) may come at a reduced complexity. By way of example, both G.723.1 and G.729 could be modified to reduce complexity, enhance performance, or reduce possible IPR conflicts. Performance may be enhanced by using the voice encoder (or decoder) as an embedded coder. For example, the \u201ccore\u201d voice encoder (or decoder) could be G.723.1 operating at 5.3 kb\/s with \u201cenhancement\u201d information added to improve the voice quality. The enhancement information may be discarded at the source or at any point in the network, with the quality reverting to that of the \u201ccore\u201d voice encoder (or decoder). Embedded coders can be implemented since they are based on a given core. Embedded coders are rate scalable, and are well suited for packet based networks. If a higher quality 16 kb\/s voice encoder (or decoder) is required, one could use G.723.1 or G.729 Annex A at the core, with an-extension to scale the rate up to 16 kb\/s (or whatever rate was desired).","The configurable parameters for each voice encoder or decoder include the rate at which it operates (if applicable), which companding scheme to use, the packetization interval, and the core rate if the voice encoder (or decoder) is an embedded coder. For G.727, the configuration is in terms of bits\/sample. For example EADPCM(5,2) (Embedded ADPCM, G.727) has a bit rate of 40 kb\/s (5 bits\/sample) with the core information having a rate of 16 kb\/s (2 bits\/sample).","6. Packetization Engine","In an exemplary embodiment, the packetization engine groups voice frames from the voice encoder, and with information from the VAD , creates voice packets in a format appropriate for the packet based network. The two primary voice packet formats are generic voice packets and SID packets. The format of each voice packet is a function of the voice encoder used, the selected packetization interval, and the protocol.","Those skilled in the art will readily recognize that the packetization engine could be implemented in the host. However, this may unnecessarily burden the host with configuration and protocol details, and therefore, if a complete self contained signal processing system is desired, then the packetization engine should be operated in the network VHD. Furthermore, there is significant interaction between the voice encoder, the VAD, and the packetization engine, which further promotes the desirability of operating the packetization engine in the network VHD.","The packetization engine may generate the entire voice packet or just the voice portion of the voice packet. In particular, a fully packetized system with all the protocol headers may be implemented, or alternatively, only the voice portion of the packet will be delivered to the host. By way of example, for VoIP, it is reasonable to create the RTP encapsulated packet with the packetization engine, but have the remaining TCP\/IP stack residing in the host. In the described exemplary embodiment, the voice packetization functions reside in the packetization engine. The voice packet should be formatted according to the particular standard, although not all headers or all components of the header need to be constructed.","7. Voice Depacketizing Engine\/Voice Queue","In an exemplary embodiment, voice de-packetization and queuing is a real time task which queues the voice packets with a time stamp indicating the arrival time. The voice queue should accurately identify packet arrival time within one msec resolution. Resolution should preferably not be less than the encoding interval of the far end voice encoder. The depacketizing engine should have the capability to process voice packets that arrive out of order, and to dynamically switch between voice encoding methods (i.e. between, for example, G.723.1 and G.711). Voice packets should be queued such that it is easy to identify the voice frame to be released, and easy to determine when voice packets have been lost or discarded en route.","The voice queue may require significant memory to queue the voice packets. By way of example, if G.711 is used, and the worst case delay variation is 250 msec, the voice queue should be capable of storing up to 500 msec of voice frames. At a data rate of 64 kb\/s this translates into 4000 bytes or, or 2K (16 bit) words of storage. Similarly, for 16 bit PCM, 500 msec of voice frames require 4K words. Limiting the amount of memory required may limit the worst case delay variation of 16 bit PCM and possibly G.711 This, however, depends on how the voice frames are queued, and whether dynamic memory allocation is used to allocate the memory for the voice frames. Thus, it is preferable to optimize the memory allocation of the voice queue.","The voice queue transforms the voice packets into frames of digital voice samples. If the voice packets are at the fundamental encoding interval of the voice frames, then the delay jitter problem is simplified. In an exemplary embodiment, a double voice queue is used. The double voice queue includes a secondary queue which time stamps and temporarily holds the voice packets, and a primary queue which holds the voice packets, time stamps, and sequence numbers. The voice packets in the secondary queue are disassembled before transmission to the primary queue. The secondary queue stores packets in a format specific to the particular protocol, whereas the primary queue stores the packets in a format which is largely independent of the particular protocol.","In practice, it is often the case that sequence numbers are included with the voice packets, but not the SID packets, or a sequence number on a SID packet is identical to the sequence number of a previously received voice packet. Similarly, SID packets may or may not contain useful information. For these reasons, it may be useful to have a separate queue may be provided for received SID packets.","The depacketizing engine is preferably configured to support VoIP, VTOA, VoFR and other proprietary protocols. The voice queue should be memory efficient, while providing the ability to dynamically switch between voice encoders (at the far end), allow efficient reordering of voice packets (used for VoIP) and properly identify lost packets.","8. Voice Synchronization","In an exemplary embodiment, the voice synchronizer analyzes the contents of the voice queue and determines when to release voice frames to the voice decoder, when to play comfort noise, when to perform frame repeats (to cope with lost voice packets or to extend the depth of the voice queue), and when to perform frame deletes (in order to decrease the size of the voice queue). The voice synchronizer manages the asynchronous arrival of voice packets. For those embodiments which are not memory limited, a voice queue with sufficient fixed memory to store the largest possible delay variation is used to process voice packets which arrive asynchronously. Such an embodiment includes sequence numbers to identify the relative timings of the voice packets. The voice synchronizer should ensure that the voice frames from the voice queue can be reconstructed into high quality voice, while minimizing the end-to-end delay. These are competing objectives so the voice synchronizer should be configured to provide system trade-off between voice quality and delay.","Preferably, the voice synchronizer is adaptive rather than fixed based upon the worst case delay variation. This is especially true in cases such as VoIP where the worst case delay variation can be on the order of a few seconds. By way of example, consider a VoIP system with a fixed voice synchronizer based on a worst case delay variation of 300 msec. If the actual delay variation is 280 msec, the signal processing system operates as expected. However, if the actual delay variation is 20 msec, then the end-to-end delay is at least 280 msec greater than required. In this case the voice quality should be acceptable, but the delay would be undesirable. On the other hand, if the delay variation is 330 msec then an underflow condition could exist degrading the voice quality of the signal processing system.","The voice synchronizer performs four primary tasks. First, the voice synchronizer determines when to release the first voice frame of a talk spurt from the far end. Subsequent to the release of the first voice frame, the remaining voice frames are released in an isochronous manner. In an exemplary embodiment, the first voice frame is held for a period of time that is equal or less than the estimated worst case jitter.","Second, the voice synchronizer estimates how long the first voice frame of the talk spurt should be held. If the voice synchronizer underestimates the required \u201ctarget holding time,\u201d jitter buffer underflow will likely result. However, jitter buffer underflow could also occur at the end of a talk spurt, or during a short silence interval. Therefore, SID packets and sequence numbers could be used to identify what caused the jitter buffer underflow, and whether the target holding time should be increased. If the voice synchronizer overestimates the required \u201ctarget holding time,\u201d all voice frames will be held too long causing jitter buffer overflow. In response to jitter buffer overflow, the target holding time should be decreased. In the described exemplary embodiment, the voice synchronizer increases the target holding time rapidly for jitter buffer underflow due to excessive jitter, but decreases the target holding time slowly when holding times are excessive. This approach allows rapid adjustments for voice quality problems while being more forgiving for excess delays of voice packets.","Thirdly, the voice synchronizer provides a methodology by which frame repeats and frame deletes are performed within the voice decoder. Estimated jitter is only utilized to determine when to release the first frame of a talk spurt. Therefore, changes in the delay variation during the transmission of a long talk spurt must be independently monitored. On buffer underflow (an indication that delay variation is increasing), the voice synchronizer instructs the lost frame recovery engine to issue voice frames repeats. In particular, the frame repeat command instructs the lost frame recover engine to utilize the parameters from the previous voice frame to estimate the parameters of the current voice frame. Thus, if frames 1, 2 and 3 are normally transmitted and frame 3 arrives late, frame repeat is issued after frame number 2, and if frame number 3 arrives during this period, it is then transmitted. The sequence would be frames 1,2, a frame repeat and then frame 3. Performing frame repeats causes the delay to increase, which increasing the size of the jitter buffer so as to cope with increasing delay characteristics during long talk spurts. Frame repeats are also issued to replace voice frames that are lost en route.","Conversely, if the holding time is too large due to decreasing delay variation, the speed at which voice frames are released should be increased. Typically, the target holding time can be adjusted, which automatically compresses the following silent interval. However, during a long talk spurt, it may be necessary to decrease the holding time more rapidly to minimize the excessive end to end delay. This can be accomplished by passing two voice-frames to the voice decoder in one decoding interval but only one of the voice frames is transferred to the media queue.","The voice synchronizer must also function under conditions of severe buffer overflow, where the physical memory of the signal processing system is insufficient due to excessive delay variation. When subjected to severe buffer overflow, the voice synchronizer could simply discard voice frames.","The voice synchronizer should operate with or without sequence numbers, time stamps, SID packets, voice packets arriving out of order and lost voice packets. In addition, the voice synchronizer preferably provides a variety of configuration parameters which can be specified by the host for optimum performance, including minimum and maximum target holding time. With these two parameters, it is possible to use a fully adaptive jitter buffer by setting the minimum target holding time to zero msec and the maximum target holding time to 500 msec (or the limit imposed due to memory constraints). Although the preferred voice synchronizer is fully adaptive and able to adapt to varying network conditions, those skilled in the art will appreciate that the voice synchronizer can also be maintained at a fixed holding time by setting the minimum and maximum holding times to be equal.","9. Lost Packet Recovery\/Frame Deletion","The lost packet recovery engine can be configured to provide frame insertion, and frame deletion capability for all voice decoders under consideration. For G.729 Annex A and G.723.1, the lost frame recovery mechanism can be part of the voice decoder. The same mechanism may be used for frame insertion. Frame deletion can be realized by simply passing two consecutive voice frames to the voice decoder in the same decoding interval, and discarding one of the voice frames. In this manner, the end to end delay will be decreased in time by one decoding interval.","The frame deletion mechanism can likewise be fully integrated into both G.723.1 and G.729 Annex A. This reduces the complexity of the frame deletion mechanism and allows voice frames to be discarded over a longer interval to improve the overall quality. However, since the frame deletion is a low probability event, the short term impact on voice quality should be minor. Alternatively, a non-integrated frame deletion mechanism can also be used.","For voice decoders other than G.723.1 and G729 Annex A, it is desirable to have a method to handle lost voice packets and to implement a frame insertion scheme. However, the likelihood of requiring a frame insertion is typically low and the position of the frame insertion can be selected based on decoded voice energy. This allows the frame insertion mechanism to be realized through the use of the lost frame recovery mechanism, whereby the frames from a lost voice packet are simply inserted between consecutive voice frames. In other words, between frame n and n+1, a frame loss is inserted. This effectively increases the end to end delay by one decoding interval.","Similarly, voice packet loss for voice telephony over ATM and voice over FR should also be a low probability event. However, for voice over IP frame losses can be excessive. In fact, in TCP\/IP congestion can be mitigated by having routers discard voice packets. When end points detect the voice discarded packets, they typically will reduce their transmission rate. If the network begins to get congested, voice packet losses (which can get quite high) will occur. Thus, an efficient frame loss recovery mechanism is desired to maintain reasonably high quality during voice packet losses.","Lost voice frames can be estimated by first estimating the pitch period based on digital voice samples contained in the previous frames, and then repeating the previous excitation to an LPC filter delayed by one (or possible more) pitch periods. An exemplary embodiment for estimating the pitch period and excitation during previous good voice frames is shown in FIG. . Normally, when a voice frame is available from the voice decoder (or comfort noise generator ), the LPC is estimated based on a frame of current plus past digital voice samples (over a window length in the range of about 20 to 30 msec). The digital voice samples over the decoding interval is then passed through a LPC inverse filter  to obtain the LPC residual. The residual (both current and past) or perhaps a combination of the residual and past digital voice samples is used to obtain a pitch estimate using, for example, a pitch estimator  or correlation measurement. In fact, a pitch estimator similar to that used in G.729 Annex A may be used. In this instance, pitch doubling is not a serious problem since this lost frame recovery system is only used in an attempt to recover a lost voice packet. Typically, past residuals should be stored in a buffer  of about at least 120 to 160 digital voice samples, and a pitch period range of between (about)  and  digital voice samples should be analyzed.","During a voice packet loss condition, the residual used to excite the LPC synthesis filter  is estimated by selecting a scaled residual from one (or more) pitch periods in the past (Z) . The pitch period is that which was estimated in the previous good voice frame. Referring to , a gain adjuster  slowly increases the gain to reduce the output energy during multiple frame loss conditions. If the voice packet loss condition extends for more than 40 or 50 msec, the resulting digital voice samples should be significantly muted, and the signal processing system should switch from issuing frame losses to generating comfort noise. (This control should be placed in the voice synchronizer which controls when the voice decoder, comfort noise generator, and lost packet recovery engine are invoked). During a voice packet loss condition the estimated residual is saved in the past residual buffer  to ensure that for multiple frame losses from one or more voice packets a past residual is still available. If a strong pitch component is not identified, rather than repeating past excitation delayed by the estimated (best) pitch period a random (gaussian, for example) excitation can be used to excite the LPC synthesis filter . The random excitation should be scaled such that the power is slightly less than that in the last good voice frame.","The capability of the voice decoder should be considered when selecting the lost packet recovery engine . For voice decoder's which are less MIPS intensive, such as G.726, G.727 and G.711, the added complexity of the lost packet recovery engine would not increase the complexity to that of say G.729 Annex A or G.723.1. The lost frame recovery engine should preferably be on the order of 1 MIP, or less. For more complex voice decoders such as G.728, the parameters used for lost voice packet recovery (LPC filter and pitch period) are known at the voice decoder. The lost frame recovery mechanism could be integrated directly into G.728. This is a lower complexity solution, and is preferred for G.728.","10. DTMF","There are two functions performed by DTMF. The first function performs call routing and the second function performs DTMF relay.","DTMF (dual-tone, multi-frequency) tones are signaling tones carried within the audio band. DTMF is used for dialing, interactive voice response systems (IVR), and for PBX to PBX or PBX to central office signaling.","There are numerous problems involved with the transmission of DTMF in band over a packet based network. For example, lossy voice decoding may distort a valid DTMF tone or sequence into an invalid sequence. Also voice packet losses of digital voice samples may corrupt DTMF sequences and delay variation (jitter) may corrupt the DTMF timing information and lead to lost digits. The severity of the various problems depends on the particular voice decoder, the voice decoder rate, the voice packet loss rate, the delay variation, and the particular implementation of the signal processing system. For applications such as VoIP with potentially significant delay variation, high voice packet loss rates, and low digital voice sample rate (if G.723.1 is used), packet tone exchange is desirable. Packet tone exchange is also desirable for VoFR (FRF-11, class 2).","DTMF events are preferably reported to the host. This allows the host, for example, to convert the DTMF sequence of keys to a destination address. It will, therefore, allow the host to support call routing via DTMF.","Depending on the protocol, the packet tone exchange service might support muting of the received digital voice samples, or discarding voice frames when DTMF is detected. Note that the voice packets may be queued (but not released) in the encoder system when DTMF is pre-detected. If the detection was false (invalid), the voice packets are ultimately released, otherwise they are discarded. This will manifest itself as occasional jitter when DTMF is falsely detected.","Software to route calls via DTMF can be resident on the host or within the signal processing system. Essentially, the packet tone exchange traps DTMF tones and reports them to the host or a higher layer. In an exemplary embodiment, the packet tone exchange will generate dial tone when an off-hook condition is detected. Once a DTMF digit is detected, the dial tone is terminated. The packet tone exchange may also have to play ringing tone back to the near end user (when the far end phone is being rung), and a busy tone if the far end phone is unavailable. Other tones may also need to be supported to indicate all circuits are busy, or an invalid sequence of DTMF digits were entered.","B. The Fax Relay Mode","Fax relay mode provides signal processing of fax signals. As shown in , fax relay mode enables the transmission of fax signals over a packet based system such as VoIP, VoFR, FRF-11, VTOA, or any other proprietary network. The fax relay mode should also permit data signals to be carried over traditional media such as TDM. Network gateways , , , the operating platform for the signal processing system in the described exemplary embodiment, support the exchange of fax signals between a packet based network  and various fax machines , , . For the purposes of explanation, the first fax machine is a sending fax . The sending fax is connected to the sending network gateway through a PSTN line . The sending network gateway is connected to a packet based network . Additional fax machines , are at the other end of the packet based network  and include receiving fax machines , and receiving network gateways , . The receiving network gateways , provide a direct interface between their respective fax machines , and the packet based network .","The transfer of fax data signals over packet based networks can be accomplished by three alternative methods. In the first method, fax data signals are exchanged in real time. Typically, the sending and receiving fax machines are spoofed to allow transmission delays plus jitter of up to about 1.2 seconds. The second, store and forward mode, is a non real time method of transferring fax data signals. Typically, the fax communication is transacted locally, stored into memory and transmitted to the destination fax machine at a subsequent time. The third mode is a combination of store and forward mode with minimal spoofing to provide an approximate emulation of a typical fax connection.","In the fax relay mode, the network VHD invokes the packet fax data exchange service in the fax relay mode. The packet fax data exchange service provides demodulation and re-modulation of fax data signals. This approach results in considerable bandwidth savings since only the underlying unmodulated data signals are transmitted across the packet based network. The packet fax data exchange service also provides compensation for network jitter with a jitter buffer similar to that invoked in the packet voice exchange service. Additionally, the packet fax data exchange service compensates for lost data packets with error correction processing. Spoofing may also be provided during various stages of the procedure between the fax machines to keep the connection alive.","The packet fax data exchange service is divided into two basic functional units, a demodulation system and a re-modulation system. In the demodulation system, the network VHD exchanges fax data signals from a circuit switched network, or a fax machine, to the packet based network. In the re-modulation system, the network VHD exchanges fax data signals from the packet network to the switched circuit network to a circuit switched network, or a fax machine directly.","During real time relay of fax data signals over a packet based network, the sending and receiving fax machines are spoofed to accommodate network delays plus jitter. Typically, the packet fax data exchange service can accommodate a total delay of up to about 1.2 seconds. Preferably, the packet fax data exchange service supports error correction mode (ECM) relay functionality, although a full ECM implementation is typically not required. In addition, the packet fax data exchange service should preferably preserve the typical call duration required for a fax session over a GSTN\/ISDN when exchanging fax data signals over a network","The packet fax data exchange service for the real time exchange of fax data signals between a circuit switched network and a packet based network is shown schematically in FIG. . In this exemplary embodiment, a connecting PXD (not shown) connecting the fax machine to the switch board \u2032 is transparent, although those skilled in the art will appreciate that various signal conditioning algorithms could be programmed into PXD such as echo cancellation and gain.","After the PXD (not shown), the incoming fax data signal is coupled to the demodulation system of the packet fax data exchange service operating in the network VHD via the switchboard \u2032. The incoming fax data signal is received and buffered in an ingress media queue . A V.21 data pump  demodulates incoming T.30 message so that T.30 relay logic  can decode the received T.30 messages . Local T.30 indications are packetized by a packetization engine  and if required, translated into T.38 packets via a T.38 shim  for transmission to a remote fax device (not shown) across the packet based network. The V.21 data pump  is selectively enabled\/disabled by the T.30 relay logic  in accordance with the reception\/transmission of the T.30 messages or fax data signals. The V.21 data pump  is common to the demodulation and re-modulation system, and the packet fax data exchange service includes the ability to transmit called station tone (CED) and calling station tone (CNG) to support fax setup.","The demodulation system further includes a receive fax data pump  which demodulates the fax data signals during the data transfer phase. The receive fax data pump  supports the V.27ter standard for fax data signal transfer at 2400\/4800 bps, the V.29 standard for fax data signal transfer at 7200\/9600 bps, as well as the V.17 standard for fax data signal transfer at 7200\/9600\/12000\/14400 bps. The V.34 fax standard, once approved, may also be supported. The T.30 relay logic  enables\/disables the receive fax data pump  in accordance with the reception of the fax data signals or the T.30 messages.","If error correction mode (ECM) is required, receive ECM relay logic  performs high level data link control(HDLC )de-framing, including bit de-stuffing and preamble removal on ECM frames contained in the data packets. The resulting fax data signals are then packetized by the packetization engine  and communicated across the packet based network. The T.30 relay logic  selectively enable\/disables the receive ECM relay logic  in accordance with the error correction mode of operation.","In the re-modulation system, if required, incoming data packets are first translated from a T.38 packet format to a protocol independent format by the T.38 packet shim . The data packets are then de-packetized by a depacketizing engine . The data packets may contain T.30 messages or fax data signals. The T.30 relay logic  reformats the remote T.30 indications and forwards the resulting T.30 indications to the local fax machine (not shown) via the V.21 data pump . The modulated output of the V.21 data pump  is forwarded to an egress media queue  for transmission in either analog format or after suitable conversion, as 64 kbps PCM samples to the local fax device over a circuit switched network, such as for example a PSTN line.","De-packetized fax data signals are transferred from the depacketizing engine  to a jitter buffer . If error correction mode (ECM) is required, transmitting ECM relay logic  performs HDLC de-framing, including bit stuffing and preamble addition on ECM frames. The transmitting ECM relay logic  forwards the fax data signals, (in the appropriate format) to a transmit fax data pump  which modulates the fax data signals and outputs 8 KHz digital samples to the egress media queue . The T.30 relay logic selectively enables\/disables () the transmit ECM relay logic  in accordance with the error correction mode of operation.","The transmit fax data pump  supports the V.27ter standard for fax data signal transfer at 2400\/4800 bps, the V.29 standard for fax data signal transfer at 7200\/9600 bps, as well as the V.17 standard for fax data signal transfer at 7200\/9600\/12000\/14400 bps. The T.30 relay logic selectively enables\/disables () the transmit fax data pump  in accordance with the transmission of the fax data signals or the T.30 message samples.","If the jitter buffer  underflows, a buffer low indication is coupled to spoofing logic . Upon receipt of a buffer low indication during the fax data signal transmission, the spoofing logic  inserts \u201cspoofed data\u201d at the appropriate place in the fax data signals via the transmit fax data pump  until the jitter buffer  is filled to a pre-determined level, at which time the fax data signals are transferred out of the jitter buffer . Similarly, during the transmission of the T.30 message indications, the spoofing logic  can insert \u201cspoofed data\u201d at the appropriate place in the T.30 message samples via the V.21 data pump .","1. Data Rate Management","An exemplary embodiment of the packet fax data exchange service complies with the T.38 recommendations for real-time Group 3 facsimile communication over IP networks. In accordance with the T.38 standard, the preferred system should therefore, provide packet fax data exchange service support at both the T.30 level (see ITU Recommendation T.30\u2014\u201cProcedures for Document Facsimile Transmission in the General Switched Telephone Network\u201d, 1988) and the T4 level (see ITU Recommendation T.4\u2014\u201cStandardization of Group 3 Facsimile Apparatus For Document Transmission\u201d, 1998), the contents of each of these ITU recommendations being incorporated herein by reference as if set forth in full. One function of the packet fax data exchange service is to relay the set up (capabilities) parameters in a timely fashion. Spoofing may be needed at either or both the T.30 and T.4 levels to maintain the fax session while set up parameters are negotiated at each of the network gateways and relayed in the presence of network delays and jitters.","In accordance with the industry T.38 recommendations for real time Group  communication over Internet Protocol (IP) networks, the described exemplary embodiment relays all information including; T.30 preamble indications (flags), T.30 message data, as well as T.30 image data between the network gateways. The T.30 relay logic  in the sending and receiving network gateways then negotiate parameters as if connected via a PSTN line. The T.30 relay logic  interfaces with the V.21 data pump  and the transmit and receive data pumps  and  as well as the packetization engine  and the depacketizing enginel to ensure that the sending and the receiving fax machines  and  successfully and reliably communicate. The T.30 relay logic  provides local spoofing, using command repeats (CRP), and internal automatic repeat request (ARQ) mechanisms to handle delays associated with the packet based network. In addition, the T.30 relay logic  intercepts control messages to ensure compatibility of the rate negotiation between the near end and far end machines including HDLC processing, as well as lost packet recovery according to the T.30 ECM standard.",{"@attributes":{"id":"p-0143","num":"0142"},"figref":["FIG. 11","FIG. 9","FIG. 9","FIG. 9"],"b":["134","134","132","132","9","230","148","232"],"i":["a ","b ","a ","b "]},"The receiving network gateway now transmits T.30 preamble (HDLC flags)  followed by called subscriber identification (CSI)  and digital identification signals (DSI) . The emitting network gateway, receives a command  to begin transmitting CED. Upon receipt of CSI and DSI, the emitting network gateway begins sending subscriber identification (TSI) , digital command signal (DCS)  followed by training check (TCF) . The TCF  can be managed by one of two methods. The first method, referred to as the data rate management method one in T.38, generates TCF locally by the receiving gateway. CFR is returned to the sending fax machine , when the emitting network gateway receives a confirmation to receive (CFR)  from the receiving fax machine via the receiving network gateway, and the TCF training  from the sending: fax machine is received successfully. In the event that the receiving fax machine receives a CFR and the TCF training  from the sending fax machine subsequently fails, then DCS  from the sending fax machine is again relayed to the receiving fax machine. The TCF training  is repeated until an appropriate rate is established which provides successful TCF training  at both ends of the network.","In a second method to synchronize the data rate, referred to as the data rate management method 2 in the T.38 standard, the TCF data sequence received by the emitting network gateway are forwarded from the sending fax machine to the receiving fax machine via the receiving network gateway. The sending and receiving fax machines and then perform speed selection as if connected via a regular PSTN.","Upon receipt of confirmation to receive (CFR) , the sending fax machine, transmits image data  along with its training preamble . The emitting network gateway receives the image data and forwards the image data  to the receiving network gateway. The receiving network gateway then sends its own training preamble  followed by the image data  to the receiving fax machine.","After each image page end of page (EOP), an EOP  and message confirmation (MCF)  messages are relayed between the sending and receiving fax machines. At the end of the final page, the receiving fax machine sends a message confirmation (MCF) , which prompts the sending fax machine to transmit a disconnect (DCN) signal . The call is then terminated at both ends of the network.","ECM fax relay message flow is similar to that described above. All preambles, messages and phase C HDLC data are relayed through the packet based network. Phase C HDLC data is de-stuffed and, along with the preamble and frame checking sequences (FCS), removed before being relayed so that only fax image data itself is relayed over the packet based network. The receiving network gateway performs bit stuffing and reinserts the preamble and FCS.","2. Spoofing Techniques","In the described exemplary embodiment, spoofing techniques are utilized at the T.30 and T.4 levels to manage extended network delays and jitter. Turning back to , the spoofing logic  includes built in timeouts for automatic requests for retransmission (ARQ). Automatic timeouts ensure that the connection is maintained in a system impaired by delay. T.30 spoofing is used to reset the T4 timer, defined in accordance with the ITU T.30 recommendations, to prevent a command or response retransmission. The T.30 relay logic  waits for a response to any transmitted message or command before continuing to the next state or phase. The T.30 relay logic  packages each message or command into a HDLC frame which includes preamble flags.","The sending and receiving network gateways , (See ) spoof their respective fax machines , by locally transmitting preamble flags if a response from the packet based network is not received prior to T4 time out (3\u00b10.15 sec). Preferably, the waiting period is less than about 2.7 sec, which has been empirically demonstrated to eliminate activation of the T4 timer for most fax machines. In addition, the maximum length of the preamble is limited to about 4.5 seconds. If a response from the packet based network arrives before the spoofing time out, each network gateway should preferably transmit a response message to its respective fax machine following the preamble flags. Each network gateway repeats the spoofing technique until a successful handshake is completed or its respective fax machine disconnects.","T.4 spoofing handles delay impairments during phase C signal reception. The composition of the phase C signal depends on whether ECM is being used, so that an appropriate spoofing method must be implemented for each mode. For those systems that do not utilize ECM, phase C signals consist of a series of coded image data followed by fill bits and end-of-line (EOL) sequences. Typically, fill bits are zeros inserted between the fax data signals and the EOL sequences. Fill bits ensure that a fax machine has time to perform the various mechanical overhead functions associated with any line it receives. Fill bits can also be utilized to spoof the jitter buffer in accordance with a spoofing method known as EOL spoofing. The number of the bits of coded image contained in the data signals associated with the scan line and transmission speed limit the number of fill bits that can be added to the data signals. Preferably, the maximum transmission of any coded scan line is limited to less than about 5 sec. Thus, if the coded image for a given scan line contains 1000 bits and the transmission rate is 2400 bps, then the maximum duration of fill time is (5\u2212(1000+12)\/2400)=4.57 sec.","Generally, the packet fax data exchange service utilizes spoofing if the network jitter delay exceeds the delay capability of the jitter buffer . In accordance with the EOL spoofing method, fill bits can only be inserted immediately before an EOL sequence, so that by necessity, the jitter buffer  must store at least one EOL sequence. Thus the jitter buffer  must be sized to hold at least one entire scan line of data to ensure the presence of at least one EOL sequence within the jitter buffer . Thus, depending upon transmission rate, the size of the jitter buffer  can become prohibitively large. The table below summarizes the required jitter buffer data space to perform EOL spoofing for various scan line lengths. The table assumes that each pixel is represented by a single bit. The values represent an approximate upper limit on the required data space, but not the absolute upper limit, because in theory at least, the longest scan line can consist of alternating black and white pixels which would require an average of 4.5 bits to represent each pixel rather than the one to one ratio summarized in the table.",{"@attributes":{"id":"p-0154","num":"0153"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"42pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}},{"entry":["Scan","Number","sec to",{},{},{}]},{"entry":["Line","of","print out","sec to print","sec to print","sec to print"]},{"entry":["Length","words","at 2400","out at 4800","out at 9600","out at 14400"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"char","char":"."}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"char","char":"."}},{"@attributes":{"colname":"5","colwidth":"42pt","align":"char","char":"."}},{"@attributes":{"colname":"6","colwidth":"42pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1728","108","0.72","0.36","0.18","0.12"]},{"entry":["2048","128","0.853","0.427","0.213","0.14"]},{"entry":["2432","152","1.01","0.507","0.253","0.17"]},{"entry":["3456","216","1.44","0.72","0.36","0.24"]},{"entry":["4096","256","2","0.853","0.43","0.28"]},{"entry":["4864","304","2.375","1.013","0.51","0.34"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]}}]}}},"To ensure the jitter buffer  stores an EOL sequence the spoofing logic  is activated when the number of data packets stored in the jitter buffer  drops to a threshold level. Typically, a threshold value of about 200 msec is used to support the most commonly used fax setting, namely a fax speed of 9600 bps and scan line length of . An alternate spoofing method should be used if an EOL sequence is not contained within the jitter buffer , otherwise the call will have to be terminated. An alternate spoofing method uses zero run length code words. This method requires real time image data decoding so that the word boundary is known. Advantageously, this alternate method reduces the required size of the jitter buffer .","In error correction mode, phase C signals consist of HDLC frames so that HDLC spoofing can be used. The jitter buffer  must be sized to store at least one HDLC frame so that a frame boundary may be located. The length of the largest T.4 ECM HDLC frame is  octets or  16-bit words. Again, spoofing is activated when the number of packets stored in the jitter buffer  drops to a predetermined threshold level. When spoofing is required, the spoofing logic  adds HDLC flags at the frame boundary as a complete frame is being reassembled and forwarded to the transmit fax data pump . This continues until the number of data packets in the jitter buffer  exceeds the threshold level.","Simply increasing the storage capacity of the jitter buffer  can minimize the need for spoofing. However, overall network delay increases when the size of jitter buffer  is increased. This delay may complicate the T.30 negotiation at the end of page or end of document, because of susceptibility to time out. Such a situation arises when the sending fax machine completes the transmission of high speed data, and switches to an HDLC phase and sends the first V.21 packet in phase D. The sending fax machine must be kept alive until the response to the V.21 data packet is received. The receiving fax device requires more time to flush a large jitter buffer  and then respond, hence complicating the T.30 negotiation.","In addition, the length of time a fax machine can be spoofed is limited, so that the jitter buffer  can not be arbitrarily large. A pipelined store and forward relay is a combination of store and forward and spoofing techniques to approximate the performance of a typical-Group 3 fax connection when the network delay is large (on the order of seconds or more). One approach is to store and forward a single page at a time. However, this approach requires a significant amount of memory (10 Kwords or more). One approach to reduce the amount of memory required entails discarding scan lines on the sending network gateway and performing line repetition on the receiving network gateway so as to maintain image aspect ratio and quality.","Alternatively, a partial page can be stored and forwarded thereby reducing the required amount of memory.","The sending and receiving fax machines will have some minimal differences in clock frequency. ITU standards recommends a data pump data rate of +100 ppm, so that the clock frequencies between the receiving and sending fax machines could differ by up to 200 ppm.","Therefore, the data rate at the receiving network gateway (jitter buffer ) can build up or deplete at a rate of 1 word for every 5000 words received. Typically a fax page is less than 1000 words so that end to end clock synchronization is not a problem.","C. Data Relay Mode","Data relay mode provides signal processing of data signals. As shown in , data relay mode enables the transmission of data signals over a packet based system such as VoIP, VoFR, FRF-, VTOA, or any other proprietary network. The data relay mode should also permit data signals to be carried over traditional media such as TDM. Network gateways , , , the operating platform for the signal processing system in the described exemplary embodiment, support the exchange of data signals between a packet based network  and various data modems , , . For the purposes of explanation, the first modem is a calling modem . The calling modem is connected to the calling network gateway through a PSTN line. The calling network gateway is connected to a packet based network . Additional modems , are at the other end of the packet based network  and include answer modems , and answer network gateways , . The answer network gateways , provide a direct interface between their respective modem , and the packet based network .","In data relay mode, a local modem connection is established on each end of the packet based network . That is, the calling modem and the calling network gateway establish a local modem connection, as does the destination answer modem and its respective answer network gateway . Next, data signals are relayed across the packet based network . The calling network gateway demodulates the modem data signal and generates a formatted signal appropriate for the packet based network . The answer network gateway compensates for network impairments and re-modulates the encoded data in a format suitable for the destination answer modem . This approach results in considerable bandwidth savings since only the underlying unmodulated data signals are transmitted across the packet based network.","In the data relay mode, the packet data modem exchange service provides demodulation and modulation of data signals. The packet data modem exchange also provides compensation for network jitter with a jitter buffer similar to that invoked in the packet voice exchange service. Additionally, the packet data modem exchange service compensates for system clock jitter between the near end and far end modems with a dynamic phase adjustment and resampling mechanism. Spoofing may also be provided during various stages of the call negotiation procedure between the modems to keep the connection alive.","The packet data modem exchange service invoked by the network VHD in the data relay mode is shown schematically in FIG. . In the described exemplary embodiment, a connecting PXD (not shown) connecting the modem to the switch board \u2032 is transparent, although those skilled in the artwill appreciate that various signal conditioning algorithms could be programmed into PXD such as filtering, echo cancellation and gain.","After the PXD, the data signals are coupled to the network VHD via the switchboard \u2032. The packet data modem exchange provides two way communication between a circuit switched network and packet based network with two basic functional units, a demodulation system and a re-modulation system. In the demodulation system, the network VHD exchanges data signals from a circuit switched network, or a telephony device directly, to a packet based network. In the re-modulation system, the network VHD exchanges data signals from the packet based network to the PSTN linc, or the telephony device.","In the demodulation system, the data signals are received and buffered in an ingress media queue . A call negotiator  determines the type of modem connected locally via a circuit switched network, such as a PSTN line carrying data signals modulated by a voiceband carrier (e.g., 8 KHz.), as well as the type of modem connected remotely via a packet based network. The call negotiator  utilizes V.25 automatic answering procedures and V.8 auto-baud software to automatically detect modem capability. The call negotiator  receives the data signals (ANSam and V.8 menus) from the ingress media queue , as well as AA, AC and other message indications from the local modem via a data pump state machine , to determine the type of modem in use locally. The call negotiator also receives ANSam, AA, AC and other indications from a remote modem (not shown) located on the opposite end of the packet based network via a depacketizing engine . The call negotiator  relays ANSam answer tones and other indications to a local modem (not shown) via an egress media queue  of the modulation system. The call negotiator  relays ANSam answer tones and other indications to the remote modem via a packetization engine .","A data pump receiver  demodulates the data signals from the ingress media queue . The data pump receiver  supports the V.22bis standard for the demodulation of data signals at 1200\/2400 bps; the V.32bis standard for the demodulation of data signals at 4800\/7200\/9600\/12000\/14400 bps, as well as the V.34 standard for the demodulation of data signals up to 33600 bps. Moreover, the V.90 standard may also be supported. The demodulated data signals are then packetized by the packetization engine  and transmitted across the packet based network.","In the re-modulation system, packets of data signals from the packet based network are first de-packetized by the depacketizing engine  and stored in a jitter buffer . A data pump transmitter  modulates the buffered data signals with a voiceband carrier. The modulated samples are in turn stored in the egress media queue  before being output to the PXD (not shown) via the switchboard \u2032. The data pump transmitter  supports the V.22bis standard for the transfer of data signals at 1200\/2400 bps; the V.32bis standard for the transfer of data signals at 4800\/7200\/9600\/12000\/14400 bps, as well as the V.34 standard for the transfer of data signal up to 33600 bps. Moreover, the V.90 standard may also be supported.","During jitter buffer underflow, the jitter buffer  sends a buffer low indication ato spoofing logic . When the spoofing logic  receives the buffer low signal indicating that the jitter buffer  is operating below a pre-determined threshold level, it inserts spoofed data at the appropriate place in the data signal via the data pump transmitter . Spoofing continues until the jitter buffer  is filled to the pre-determined threshold level, at which time data signals are again transferred from the jitter buffer  to the data pump transmitter .","An end to end clock synchronizer  also monitors the state of the jitter buffer . The clock synchronizer  controls the data transmission rate of the data pump transmitter  in correspondence to the state of the jitter buffer . When the jitter buffer  is below a pre determined threshold level, the clock synchronizer  reduces the transmission rate of the data pump transmitter . Likewise, when the jitter buffer  is above a pre-determined threshold level, the clock synchronizer  increases the transmission rate of the data pump transmitter .","A rate negotiator  synchronizes the connection rates at the network gateways , , (see FIG. ). The rate negotiator receives rate control codes from the local modem via the data pump state machine  and rate control codes from the remote modem via the depacketizing engine . The rate negotiator  forwards the remote rate control codes received from the remote modem to the local modem via commands sent to the data pump state machine . The rate negotiator  forwards the local rate control codes received from the local modem to the remote modem via the packetization engine . Based on the exchanged rate codes the rate negotiator  establishes a common data rate between the calling and answering modems. During the data rate exchange procedure, the jitter buffer  should be disabled by the rate negotiator  to prevent data transmission between the call and answer modems until the data rates are successfully negotiated.","An error control synchronizer  performs a similar function by ensuring that the network gateways utilize a common error protocol. The error control synchronizer  processes local error control messages from the data pump receiver  in addition to remote V.14\/V.42 indications from the depacketizing engine . The error control synchronizer  forwards V. 14\/V.42 negotiation messages to the local modem via the data pump transmitter . The error control synchronizer  forwards V.14\/V.42 indications from the local modem to the remote modem via the packetization engine .","The packet data modem exchange service preferably utilizes indication packets as a means for communicating answer tones, AA, AC and other indication signals across the packet based network . However, the packet data modem exchange service supports data pumps such as V.22bis and V.32bis which do not include a well defined error recovery mechanism, so that the modem connection may be terminated whenever indication packets are lost. Therefore, either the packet data modem exchange or upper application layer should ensure proper delivery of indication packets when operating in a network environment that does not guarantee packet delivery.","The packet data modem exchange service can ensure delivery of the indication packets by periodically re-transmitting the indication packet until some expected packets are received. For example, in V.32bis relay the call negotiator operating under the packet data modem exchange on the answer network gateway periodically re-transmits ANSam answer tones from the answer modem to the calling modem, until the calling modem connects to the line and transmits carrier state AA.","Alternatively, the packetization engine can embed the indication information directly into the packet header. In this approach the indication information is included in all packets transmitted across the packet based network, so that the system does not rely on the successful transmission of individual indication packets. Rather, if a given packet is lost, the next arriving packet contains the indication information in the packet header. Both methods increase the traffic across the network. However, it is preferable to periodically re-transmit the indication packets because it has less of a detrimental impact on network traffic.","1. End to End Clock Synchronization","Slight differences in the clock frequency of the calling modem and the answer modem are expected, since the baud rate tolerance for a typical modem data pump is \u00b1100 ppm. This tolerance corresponds to a relatively low depletion or build up rate of 1 in 5000 words. However, the length of a modem session can be very long, so that uncorrected difference in clock frequency can result in jitter buffer underflow or overflow.","In an exemplary embodiment, the packet data modem exchange synchronizes the transmit clock of each network gateway to the average rate at which data packets arrive at their respective jitter buffer. The data pump transmitter  examines the egress media queue  at the beginning of each frame. In accordance with the remaining buffer space, data pump transmitter  modulates that number of digital data samples required to produce a total of slightly more or slightly less than 80 samples per frame, assuming that the data pump transmitter  is invoked once every 10 msec. The data pump transmitter  gradually adjusts the number of samples per frame to allow the receiving modem to adjust to the timing change. Typically, the data pump transmitter  uses an adjustment rate of about one ppm. In addition, the maximum adjustment rate should be less than about 200 ppm.","In the described exemplary embodiment, end to end clock synchronizer  monitors the space available within the jitter buffer  and utilizes water marks to determine whether the data rate of the data pump transmitter  should be adjusted. Network jitter may cause timing adjustments to be made. However, this should-not adversely affect the data pump receiver of the answering modem as these timing adjustments are made very gradually.","2. Rate Synchronization.","Rate synchronization refers to the process by which two telephony devices are connected at the same data rate prior to data transmission. In the context of a modem connection in accordance with an exemplary embodiment of the present invention, each modem is coupled to a signal processing system, which for the purposes of explanation is operating in a network gateway, either directly or through a PSTN line. In operation, each modem establishes a modem connection with its respective network gateway, at which point, the modems begin relaying data signals across a packet based network. The problem that arises is that each modem may negotiate a different data rate with its respective network gateway, depending on the line conditions and user settings. In this instance, the data signals transmitted from one of the modems will enter the packet based network faster than it can be extracted at the other end by the other modem. The resulting overflow of data signals may result in a lost connection between the two modems. To prevent data signal overflow, it is, therefore, desirable to ensure that both modems negotiate to the same data rate. A rate negotiator can be used for this purpose. Although the the rate negotiator is described in the context of a signal processing system with the packet data modem exchange service invoked, those skilled in the art will appreciate that the rate negotiator is likewise suitable for various other telephony and telecommunications application. Accordingly, the described exemplary embodiment of the rate negotiator in a signal processing system is by way of example only and not by way of limitation.","In an exemplary embodiment, data rate synchronization is achieved through a data rate negotiation procedure, wherein a calling modem independently negotiates a data rate with a calling network gateway, and a answer modem independently negotiates a data rate with a answer data relay. The calling and answer network gateways, each having a signal processing system running a packet exchange service, then exchange data packets containing information on the independently negotiated data rates. If the independently negotiated data rates are the same, then each rate negotiator will enable its respective network gateway and data transmission between the call and answer modems will commence. Conversely, if the independently negotiated data rates are different, the rate negotiator will renegotiate the data rate by adopting the lowest of the two data rates. The call and answer modems will then undergo retraining or rate re-negotiation procedures by their respective network gateways to establish a new connection at the renegotiated data rate. The advantage of this approach is that the data rate negotiation procedure takes advantage of existing modem functionality, namely, the retraining mechanism, and puts it to alternative usage. Moreover, by retraining both the call and answer modem (one modem will already be set to the renegotiated rate) the modem connection should not be lost due to timeout.","In an alternate method for rate synchronization, the calling and answer modems can directly negotiate the data rate. This method is not preferred for modems with time constrained handshaking sequences such as, for example, modems operating in accordance with the V.22bis or the V.32bis standards. The round trip delay accommodated by these standards could cause the modem connection to be lost due to timeout. Instead, retrain or rate renegotiation should be used for data signals transferred in accordance with the V.22bis and V.32bis standards, whereas direct negotiation of the data rate by the local and remote modems can be used for data exchange in accordance with the V.34 and V.90 (a digital modem and analog modem pair for use on PSTN lines at data rates up to 56,000 bps downstream and 33,600 upstream) standards.","A single industry standard for the transmission of modem data over a packet based network does not exists. However, numerous common standards exists for transmission of modem data at various data rates over the public switched telephone network. For example, V.22 is a common standard used to define operation of 1200 bps modems. Data rates as high as 2400 bps can be implemented with the V.22bis standard (the suffix \u201cbis\u201d indicates that the standard is an adaptation of an existing standard). The V.22bis standard groups data into four bit words which are transmitted at 600 baud. The V.32 standard supports full duplex, data rates of up to 9600 bps over the general switched telephone network. A V.32 modem groups data into four bit words and transmits at 2400 baud. The V.32bis standard supports duplex modems operating at data rates up to 14,400 bps on the general switched telephone network. In addition, the V.34 standard supports data rates up to 33,600 bps on the general switched telephone network.","V.42 is a standard error correction technique using advanced cyclical redundancy checks and the principle of automatic repeat requests (ARQ). In accordance with the V.42 standard, transmitted data is grouped into blocks and cyclical redundancy calculations add error checking words to the transmitted data stream. The receiving modem calculates new error check information for the data block and compares the calculated information to the received error check information. If the codes match, the received data is valid and another transfer takes place. If the codes do not match, an transmission error has occurred and the receiving modem requests a repeat of the last data block. This repeat cycle continues until valid data has been received.","Various voiceband data modem standards exist for error correction and data compression. V.42bis and MNP5 are examples of data compression standards. The handshaking sequence for every modem standard is different so that the packet data modem exchange service should support numerous data transmission standards as well as numerous error correction and data compression techniques.","a. V.22 Rate Synchronization","The call negotiator, operating under the packet data modem exchange on the answer network gateway, differentiates between modem types and relays the ANSam answer tone. The answer modem transmits unscrambled binary ones signal (USB ) indications to the answer mode gateway. The answer network gateway forwards USB  signal indications to the calling network gateway. The call negotiator operating under the packet data modem exchange service on the calling network gateway assumes operation in accordance with the V.22bis standard and terminates the call negotiator. The packet data modem exchange service, operating on the answer network gateway, invokes operation in accordance with the V.22bis standard after an answer tone timeout period and terminates the call negotiator .","V.22bis handshaking does not utilize rate messages or signaling to indicate the selected bit rate as with most high data rate pumps. Rather, the inclusion of a fixed duration signal (S) indicates that 2400 bps operation is to be used. In addition, the absence of such a tone indicates that 1200 bps should be selected. The duration of the signal is typically about 100 msec, making it likely that the calling modem will perform rate determination (assuming that it selects 2400 bps) before rate indication from the answer modem arrives. Therefore, the rate negotiator within the packet data modem exchange operating in the calling network gateway should select 2400 bps operation and proceed with the handshaking procedure. If the answer modem is limited to a 1200 bps connection, rate re-negotiation is typically used to change the operational data rate of the calling modem to 1200 bps. In this case, if the calling modem selects 1200 bps, rate re negotiation would not be required.","b. V.32bis Rate Synchronization","V34bis handshaking utilizes rate signals (messages) to specify the bit rate. A typical relay sequence in accordance with the V.32bis standard is shown in FIG.  and begins with the call negotiator operating under the packet data modem exchange in the answer network gateway relaying ANSam  answer tone from the answer modem to the calling modem. After receiving the answer tone for a period of at least one second, the calling modem connects to the line and repetitively transmits carrier state A . When the calling network gateway detects AA, the calling network gateway relays this information to the answer network gateway. The packet data modem exchange operating on the answer network gateway invokes operation in accordance with the V.32bis standard upon receipt of AA indication. The answer modem then transmits alternating carrier states A and C. If answer network gateway receives AC from the answer modem, the answer network gateway relays it to the calling network gateway; thereby establishing operation in accordance with the V.32bis standard, allowing call negotiator operating under the packet data modem exchange in the calling network gateway to be terminated. Next, data rate alignment is achieved by either of two methods.","In the first method for data rate alignment of a V.32bis relay connection, the calling modem and the answer modem independently negotiate a data rate at each end of the network  and . Each network gateway forwards a connection data rate indication  and  to the other network gateway. Each network gateway compares the far end data rate to its own data rate. The preferred rate is the minimum of the two rates. Rate re-negotiation  and  is invoked if the connection rate of either network gateway differs from the preferred rate.","In the second method, rate signals R, R and R, are relayed to achieve data rate synchronization.  shows a relay sequence in accordance with the V.32bis standard for this alternate method of rate synchronization. The call negotiator relays the answer tone (ANSam)  from the answer modem to the calling modem. When the calling modem detects answer tone it repetitively transmits carrier state A , the calling network gateway relays this information (AA)  to the answer network gateway. The answer network gateway sends AA  to the answer modem which initiates normal range tone exchange with the answer modem. The answer network gateway forwards AC  to calling network gateway which in turn relays this information  to the calling modem to initiate normal range tone exchange with the calling modem.","The answer modem sends its first training sequence  followed by R to the rate negotiator operating in the answer network gateway. When the answer network gateway receives R, it forwards R to the calling network gateway via the packetization engine operating in the answer network gateway. The answer network gateway repetitively sends training sequences to the answer modem, until receiving an R indication  from the calling modem, and the training result of the calling network gateway (formatted as a rate signal). The calling network gateway forwards the R indication  of the answer modem to the calling modem. The calling modem sends training sequences to calling network gateway . The calling network gateway determines the data rate capability of the calling modem, and forwards this training result to the answer network gateway in a data rate signal format. The calling modem sends R to the calling network gateway which forwards it to the answer network gateway. The calling network gateway sends training sequences to the calling modem until receiving an R signal  from the answer modem via the answer network gateway.","The answer network gateway performs a logical AND operation on the R signal from the answer modem, the R signal from the calling modem and the training sequences of the calling network gateway to create a second rate signal R, which is forwarded to the answer modem. The answer modem sends its second training sequence followed by R. The answer network gateway relays R to the calling network gateway which forwards it to the calling modem and begins operating at the R specified bit rate. However, this method of rate synchronization is not preferred for V.32bis due to time constrained handshaking.","c. V.34 Rate Synchronization","Data transmission in accordance with the V.34 standard utilizes a modulation parameter (MP) sequence to exchange information pertaining to data rate capability. The MP sequences can be exchanged end to end to achieve data rate synchronization. Initially, the call negotiator operating under the packet data modem exchange in the answer network gateway relays the answer tone (ANSam) from the answer modem to the calling modem. When the calling modem receives answer tone, it generates a CM indication. When the calling network gateway receives a CM indication, it forwards it to the answer network gateway which then communicates the CM indication with the answer modem. The answer modem then responds with JM, which is relayed to the calling modem via the calling network gateway. If the calling network gateway then receives CJ, the call negotiator operating under the packet data modem exchange, on the calling network gateway, initiates operation in accordance with the V.34 standard, and forwards a CJ indication to the answer network gateway. If the JM menu calls for V.34, the call negotiator operating under the packet data modem exchange on the answer network gateway initiates operation in accordance with the V.34 standard and the call negotiator is terminated. If a standard other than V.34 is called for, the appropriate procedure is invoked, such as those described previously for V.22 or V.32bis.","After a V.34 relay connection is established, the calling modem and the answer modem freely negotiate a data rate at each end of the network with the packet data modem exchange service operating on their respective network gateways. Each network gateway forwards a connection rate indication to the other gateway. Each gateway compares the far end bit rate to the rate transmitted by each gateway. The preferred rate is the minimum of the two rates. Rate re-negotiation is invoked if the connection rate at the calling or receiving end differs from the preferred rate, to force the connection to the desired rate.","In an alternate method for V.34 rate synchronization MP sequences are utilized to achieve rate synchronization without rate re-negotiation. The calling modem and the answer modem independently negotiate with the calling network gateway and the answer network gateway respectively. The calling network gateway and the answer network gateway exchange training results in the form of MP sequences when Phase IV of the independent negotiations is reached. However, the calling network gateway and the answer network gateway are prevented from relaying MP sequences to the calling modem and the answer modem respectively until the training results for both network gateways and the MP sequences for both modems are available. If symmetric rate is enforced, the maximum answer data rate and the maximum call data rate of the four MP sequences are compared. The lower data rate of the two maximum rates is the preferred data rate. Each network gateway sends the-MP sequence with the preferred rate to it's respective modem so that the calling and answer modems operate at the preferred data rate.","If asymmetric rates are supported, then the preferred call-answer data rate is the lesser of the two highest call-answer rates of the four MP sequences. Similarly, the preferred answer-call data rate is the lesser of the two highest answer-call rates of the four MP sequences. Data rate capabilities may also need to be modified when the MP sequence are formed so as to be sent to the calling and answer modems. The MP sequence sent to the calling and answer modems, is the logical AND of the data rate capabilities from the four MP sequences.","d. V.90 Rate Synchronization","The V.90 standard utilizes a digital and analog modem pair to transmit modem data over the PSTN line. The V.90 standard utilizes MP sequences to convey training results from a digital to an analog modem, and a similar sequence, using constellation parameters (CP) to convey training results from an analog to a digital modem. Under the V.90 standard, the timeout period is 15 seconds compared to a timeout period of 30 seconds under the V.34 standard. In addition, the analog modems control the handshake timing during training. In an exemplary embodiment, the calling modem and the answer modem are the V.90 analog modems. As such the calling modem and the answer modem are beyond the control of the network gateways during training. The digital modems control the timing during transmission of TRN1d. The digital modem uses TRN1d to train its echo canceller.","When operating in accordance with the V.90 standard, the call negotiator utilizes the V.8 recommendations for initial negotiation. Thus, the invocation of the V.90 relay session is the same as that described for the V.34 standard. There are two configurations where V.90 relay may be used. The first configuration is data relay between two V.90 analog modems, i.e. the two network gateways are both configured as V.90 digital modems. The upstream rate according to the V.90 standard is limited to 33,600 bps. Thus, the maximum data rate for an analog to analog relay is 33,600 bps. The minimum data rate for a V.90 digital gateway will support is 28,800 bps. Therefore, the connection must be terminated if the maximum data rate for one or both of the upstream directions is less than 28,800 bps, and one or both the downstream direction is in V.90 digital mode. Therefore, the V.34 relay is preferred over V.90 analog to analog data relay.","A second configuration is a connection between a V.90 analog modem and a V.90. digital modem. A typical example of such a configuration is when a user within a packet based PABX system dials out into a remote access server (RAS) or an Internet service provider (ISP) that uses a central site modem for physical access that is V.90 capable. The connection from PABX to the central site modem may be either through PSTN or directly through an ISDN, T1 or E1 interface. Thus the V.90 embodiment should support an analog modem interfacing directly to ISDN, T1 or E1.","For analog to digital modem connection, the connections at both ends of the packet based network should be either digital or analog to achieve proper rate synchronization. The analog modem decides whether to select digital mode as specified in INFO1a, so that INFO1a should be relayed from end to end before operation mode can be synchronized. The relay sequence for achieving mode alignment is as follows. The calling network gateway receives an INFO1a signal from the calling modem. The calling network gateway sends a mode indication to the answer network gateway indicating whether digital or analog will be used. Operation then begins in the mode specified in INFO1a. The answer modem sends a signal to the answer network gateway. The answer network gateway performs line probe processing on this signal to determine whether digital mode can be used. Upon receipt of the mode indication signal from the calling network gateway, the answer network gateway sends an INFO1a sequence to the answer modem. If analog mode is indicated, the answer network gateway proceeds with analog mode operation. If digital mode is indicated and digital mode can be supported by the answer modem, the answer network gateway sends an INFO1a sequence to the answer modem indicating that digital mode is desired and proceeds with digital mode operation.","Alternatively, if digital mode is indicated and digital mode can not be supported by the answer modem, the calling modem must be forced into analog mode by one of three alternate methods. First, some commercially available V.90 analog modems may revert to analog mode after several retrains. Thus, one solution is to force retrains until the calling modem selects analog mode operation. In an alternate method, the call network gateway modifies its line probe so as to force calling modem  to select analog mode. In a third method, the calling modem and the answer modem operate in different modes. Under this method if the answer modem can not support a 28,800 bps data rate the connection is terminated.","2. Data Mode Spoofing","The jitter buffer  may underflow during long packet delivery delay. The jitter buffer  underflow can cause the data pump transmitter  to run out of data, so that the jitter buffer  must be spoofed with bit sequences. Preferably the bit sequences are benign in most applications. While transmitting start-stop characters in accordance with V.14 recommendations, the spoofing logic  checks for character format and boundary (number of data bits, start bits and stop bits) within the jitter buffer . The spoofing logic  must account for stop bits omitted due to asynchronous-to-synchronous conversion. Once the spoofing logic  locates character boundary, ones can be added to spoof the remote modem and keep it in the mark state. The length of time a modem can be spoofed with ones depends only upon the application program driving the user modem.","While in error correction mode the spoofing logic  checks for HDLC flag (HDLC frame boundary) within the jitter buffer . The jitter buffer  should be sufficiently large to guarantee that at least one complete HDLC frame is contained within the jitter buffer . The default length of an HDLC information frame is  octets. The V.42 recommendations for error correction of data circuit terminating equipment (DCE) using asynchronous-to-synchronous conversion does not specify a maximum length for an HDLC information frame. However, because the length of the information frame affects the overall memory required to implement the protocol, a information frame length larger than 260 octets is unlikely.","The spoofing logic  stores a threshold water mark (with a value set to be approximately equal to the maximum length of an HDLC information frame). The spoofing logic  searches for HDLC flags (0111110 bit sequence) within the jitter buffer  when the amount of data signal stored within the jitter buffer  falls below the threshold level. When the HDLC is about to be sent, the spoofing logic  begins to insert HDLC flags into the jitter buffer , and continues until the amount of data signal within the jitter buffer  is greater than the threshold level.","3. Retrain and Rate Renegotiation","When a retrain occurs, an indication should be forwarded to the network gateway at the end of the packet based network. The network gateway receiving a retrain indication should initiate retrain with the connected modem to keep data flow in synchronism between the two connections. Rate synchronization procedures as previously described should be used to maintain data rate alignment after retrains.","Similarly, rate renegotiation causes both the calling and answer network gateways and to perform rate renegotiation. However, rate signals or MP (CP) sequences should be exchanged per method two of the data rate alignment as previously discussed for a V.32bis or V.34 rate synchronization whichever is appropriate.","4. Error Correcting Mode Synchronization","Error control (V.42) and data compression (V.42bis) modes should be synchronized at each end of the packet based network by one of two alternate methods. In the first method, the calling modem and the answer modem independently negotiate modes on their own, transparent to the modem network gateways. This method is preferred for connections wherein the network delay plus jitter is relatively small, as characterized by an overall round trip delay of less than 700 msec.","In an alternate method, the error control synchronizers  operating with the network gateways force the user modems out of LAPM mode into a non-error correcting protocol (V.14). Preferably, the error correction synchronizer  operating under the packet data modem exchange  in the calling network gateway waits a period of time (about 650 msec.) for an error correction mode indication from the opposite end of the network. If an indication arrives, then the first method is used. If not, the error correction synchronizer  operating under the packet data modem exchange in the calling network gateway responds with an ADP followed by HDLC flags. The HDLC flags spoof the calling modem until the an error correction mode indication arrives. If mode indication is received before timeout, which indicates error control mode, then unnumbered acknowledgment (UA) response is sent to the calling modem and the calling network gateway proceeds with an error control connection.","The V.42 recommendation does not specify the length of time HDLC flags will be accepted before the calling modem timeouts. Therefore, empirical tests should be performed to determine how long the calling modem within a particular implementation can be spoofed in this manner.","Alternatively, if the calling network gateway receives mode indication indicating V.14 or a timeout has occurred, the calling network gateway issues a disconnect mode (DM) response to indicate exit from V.42. The calling modem should then revert to non-error control mode.","Data compression mode is negotiated within V.42 so that the appropriate mode indication can be relayed when the calling and answer modems have entered into V.42 mode.","A third mode is to allow modems at both ends to freely negotiate the error control mode with their respective network gateways. The network gateways must filly support all error correction modes when using this method. Also, because of flow control issues, this method cannot support the scenario where one modem selects V.14 while the other modem selects a mode other than V.14. For the case where V.14 is negotiated at both sides of the packet based network, the 8-bit no parity format is assumed and the raw demodulated data bits are transported between the network gateways. With all other cases, each gateway shall extract the de-framed (error corrected) data bits and forwards them to its counterpart at the opposite end of the network. Flow control procedures within the error control protocol can be used to handle network delay. The advantage of this method over the first method is its ability to handle large network delays and also the scenario where the local connection rates at the network gateways are different. However, packets transported over the network in accordance with this method must be guaranteed to be error free.","Although a preferred embodiment of the present invention has been described, it should not be construed to limit the scope of the appended claims. For example, the present invention can be implemented by both a software embodiment or a hardware embodiment. Those skilled in the art will understand that various modifications may be made to the described embodiment. Moreover, to those skilled in the various arts, the invention itself herein will suggest solutions to other tasks and adaptations for other applications. It is therefore desired that the present embodiments be considered in all respects as illustrative and not restrictive, reference being made to the appended claims rather than the foregoing description to indicate the scope of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":["These and other features, aspects, and advantages of the present invention will become better understood with regard to the following description, appended claims, and accompanying drawings where:",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 15"}]},"DETDESC":[{},{}]}
