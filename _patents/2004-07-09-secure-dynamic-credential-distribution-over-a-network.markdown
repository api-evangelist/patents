---
title: Secure dynamic credential distribution over a network
abstract: Systems and methods for enabling secure dynamic credential distribution to a machine over a network are provided. In various embodiments, a computer, into which logging or access is sought, distributes logon credentials automatically to a requestor over the network before logon. Based on pre-existing trust, the computer self-generates and self-distributes logon credentials to the requestor, whereby the logon credentials are not stored on the requestor device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07546373&OS=07546373&RS=07546373
owner: Microsoft Corporation
number: 07546373
owner_city: Redmond
owner_country: US
publication_date: 20040709
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATION","COPYRIGHT NOTICE AND PERMISSION","FIELD OF THE INVENTION","BACKGROUND","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This patent application claims benefit of U.S. Provisional Application No. 60\/520,209, filed Nov. 14, 2003, entitled \u201cSecure Dynamic Credential Distribution Over a Network.\u201d","A portion of the disclosure of this patent document may contain material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent files or records, but otherwise reserves all copyright rights whatsoever. The following notice shall apply to this document: Copyright \u00a9 2003, Microsoft Corp.","This invention relates to the secure and dynamic distribution of credential(s) from a first computing device to a second computing device over a network in a computing system. More particularly, the invention relates to ways of dynamically and securely distributing login credentials from a first device to a second device, e.g., for automatic login by the second device, without exposing or storing the credentials at the second device.","There are many reasons why it may be desirable for a first computing device to receive credential(s), such as a user identification and password, from a second computing device (or vice versa), in order to identify the second device and\/or determine access levels and permissions for the second device.","For instance, a host computer may have content to which a client device may wish to request access: This is a fairly common scenario and as illustrated in , the world of computing devices and types of content that may be requested from various other computing devices is quite diverse, both in terms of media devices and media types. For exemplary purposes only,  illustrates that there are many kinds of media, such as music (MP3s, WMVs, etc.), streaming audio\/video, photos (JPEGS, GIFs, etc.), movie files (MOVs, MPEG, etc.), advertisements, broadcast media (Radio, TV, Cable, etc.), graphics data, etc.  also illustrates that there are a variety of devices that render media in some fashion, for some purpose including, but not limited to, televisions, radios, tuners, DVD players, VCRs, digital data storage and\/or rendering devices, MP3 players, Smart Display devices, laptops, gaming machines, remote control devices, cell phones, PDAs, digital picture frames, etc. Establishing trust among any two devices in such a system is thus an important problem\u2014to enable secure sharing, among a variety of computing devices, of content or resources of the content hosting device in what becomes a networked trust enclave of devices.","Thus, in order to give access to resource(s) of the first computing device to the second computing device, it is frequently desirable to have the first computing device \u201ctrust\u201d something about the second computing device, e.g., for security and\/or privacy reasons. One common way to give access is to receive credentials from the requesting device, which when received by the hosting device, act as keys to the lock in the door, thereby establishing trust. It can be appreciated that such credential(s) may be exchanged between two computing devices in any computing environment, e.g., network architectures that include peer-to-peer clients, distributed computing systems, thin-client architectures where application processing occurs mainly on a central server, but can be distributed as well, and as described in more detail below, other networked environments as well.",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1B"},"Today, for such a scenario, if an external object to a computer S attempts to log into the computer S over network NC, the external object presents credentials for authentication using a standard mechanism known to the client C and server S. A credentials login component delivers the credentials to the server S from client C, and an authentication component on server S allows access to its resources according to the permissions represented by the client C's credentials. Generally, it is a physical user that wants to login, and the credentials are usually remembered by the user herself. The user manually inputs the credentials to the computing device C via an external mechanism, e.g., by entering the credentials at login via an input device such as a keyboard. In other prior art systems, the user may type in the credentials one time and, from that time forth, the credentials may be cached or otherwise stored on client C (e.g., \u201ccreds\u201d in ). Regardless, the initial transfer of the credentials to client C happens \u201cout-of-band\u201d of the network NC.","However, if the external object is a machine (i.e., not a physical user) that wishes to login in an automated way, the machine must currently obtain credentials from somewhere and this too is usually transferred \u201cout-of-band\u201d of the network via an out of band mechanism for inputting credentials to client C. As mentioned, the main reason for this is to establish trust between the devices. If client C knows a secret from some external out-of-band source that server S and only server S recognizes, then client C can be assumed to be a trusted user of the network NC for communications exchanges between the devices.","However, where trust is already established between two devices, there are at least two reasons for questioning the security of the above-identified prior art login system: (1) vulnerability to dictionary attack and (2) threat of discovery of credentials stored on the client machine.","With respect to the threat of a dictionary attack, a malicious external object could repeatedly with brute force try every input combination and permutation possible for entering credentials and eventually, over time and due to the law of strong numbers, randomly guess the credentials. To fend off a dictionary attack, credentials can be rotated, i.e., changed, frequently. If the credentials are rotated too frequently, however, the user will have difficulty remembering the credentials. And on the other hand, if the credentials are not rotated frequently enough, the threat of the dictionary attack is not mitigated.","A second concern is that the credentials tend to be stored, or cached for some period of time, on client C in such systems, exposing resources of server S to danger. Should a malicious hacker determine how to expose their existence on client C, the resources of server S become exposed. The problem compounds if the hacker shares the credentials with other users and devices. This risk remains whether the credentials are rotated or not, and whether it is a physical user or machine that is responsible for inputting the credentials for login. From the standpoint of server S, this is a problem because the security risks to its resources are no longer localized to the four corners of its storage.","Where trust is already established between the devices, however, there should be a way to hand out credentials to the client dynamically just before login for automatic login in a way that enables frequent rotation of the credentials and does not store the credentials on the client machine.","Thus, it would be desirable to have a way for logon credentials to be handed out over the network automatically, by the computer into which logging or access is sought, just before the login actually occurs. It would be desirable to have a way for an authentication exchange to ensue between two computing devices based on those credentials in a way that is not subject to the threat of a dictionary attack, or subject to local snooping of the client C's storage to extract credentials. It is further desirable to have a generic and simple mechanism or framework for a first device to securely declare or distribute a credential to a second device, over the same network over which the subsequent login exchange occurs.","In consideration of the above-identified shortcomings of the art, the present invention provides systems and methods for providing secure dynamic credential distribution over a network. In various embodiments, the invention provides systems and methods for distributing logon credentials to a requester over the network automatically, by the computer into which logging or access is sought before the login occurs. In exemplary embodiments, based on pre-existing trust, the computer self-generates and self-distributes logon credentials to the requestor, whereby the logon credentials are not stored by the requestor.","Other advantages and features of the invention are described below.","Overview","The request for digital content by a second computing device is an example of a time when the second computing device may wish to automatically receive a securely distributed credential that is dynamically generated from the first computing device. Such requests for digital content will continue to proliferate with the advent of web services and mobile web services. Already, a broad ecosystem of networked devices has been introduced to the world that deliver entertainment experiences (such as TV, music, videos, photographs, DVD's, etc) throughout the home on a variety of devices (such as electronic home remote media devices, Smart Displays, xBoxes, pocket PCs, portable DVD devices, and the like). Before such content can be delivered to a requesting computing device, however, a credential exchange occurs between the requesting device and the device with the content, inter alia, to validate the requesting device. As discussed above, there are certain risks associated with prior art login techniques. The present invention recognizes that these risks can be avoided where trust is already established between the devices. Accordingly, the invention provides a generic framework for automatically distributing credential(s) to a requesting device over the network in a simple manner just before login by the requesting device occurs over the network.","Exemplary Networked Environments","One of ordinary skill in the art can appreciate that the invention can be implemented in connection with any computer or other client or server device, which can be deployed as part of a computer network, or in a distributed computing environment. In this regard, the present invention pertains to any computer system or environment having any number of memory or storage units, and any number of applications and processes occurring across any number of storage units or volumes, which may be used in connection with secure dynamic distribution of credentials in accordance with the present invention. The present invention may apply to an environment with server computers and client computers deployed in a network environment or distributed computing environment, having remote or local storage. The present invention may also be applied to standalone computing devices, having programming language functionality, interpretation and execution capabilities for generating, receiving and transmitting information in connection with remote or local services. With network sources for digital media proliferating more than ever, the invention is particularly relevant to those computing devices operating in a network or distributed computing environment, and thus the techniques for securely and dynamically distributing credentials in accordance with the present invention can be applied with great efficacy in those environments.","Distributed computing provides sharing of computer resources and services by exchange between computing devices and systems. These resources and services include the exchange of information, cache storage and disk storage for files. Distributed computing takes advantage of network connectivity, allowing clients to leverage their collective power and storage to benefit the entire enterprise. In this regard, a variety of devices may have applications, objects or resources that may implicate dynamic request for and delivery of credentials just before login, as may be achieved in accordance with the invention.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 2A","FIG. 2A"],"b":["10","10","110","110","110","14","10","10","110","110","110"],"i":["a","b","a","b","c","a","b","a","b","c"]},"It can also be appreciated that an object, such as , may be hosted on another computing device , , etc. or , , etc. Thus, although the physical environment depicted may show the connected devices as computers, such illustration is merely exemplary and the physical environment may alternatively be depicted or described comprising various digital devices such as PDAs, televisions, MP3 players, etc., software objects such as interfaces, COM objects, or any device that may be utilized in connection with a media experience.","There are a variety of systems, components, and network configurations that support distributed computing environments. For example, computing systems may be connected together by wired or wireless systems, by local networks or widely distributed networks. Currently, many of the networks are coupled to the Internet, which provides an infrastructure for widely distributed computing and encompasses many different networks. Any of the infrastructures may be used for exemplary communications made incident to the secure dynamic distribution of credential(s) according to the present invention.","In home networking environments, there are at least four disparate network transport media that may each support a unique protocol, such as Power line, data (both wireless and wired), voice (e.g., telephone) and entertainment media. Most home control devices such as light switches and appliances may use power lines for connectivity. Data Services may enter the home as broadband (e.g., either DSL or Cable modem) and are accessible within the home using either wireless (e.g., HomeRF or 802.11B) or wired (e.g., Home PNA, Cat 5, Ethernet, even power line) connectivity. Voice traffic may enter the home either as wired (e.g., Cat 3) or wireless (e.g., cell phones) and may be distributed within the home using Cat 3 wiring. Entertainment media, or other graphical data, may enter the home either through satellite or cable and is typically distributed in the home using coaxial cable. IEEE 1394 and DVI are also digital interconnects for clusters of media devices. All of these network environments and others that may emerge as protocol standards may be interconnected to form a network, such as an intranet, that may be connected to the outside world by way of the Internet. In short, a variety of disparate sources exist for the storage and transmission of data, and consequently, moving forward, computing devices will require ways of sharing data, such as data accessed or utilized incident to program objects, which request or make use of the processes for securely and dynamically distributing credentials in accordance with the present invention.","The Internet commonly refers to the collection of networks and gateways that utilize the TCP\/IP suite of protocols, which are well-known in the art of computer networking. TCP\/IP is an acronym for \u201cTransmission Control Protocol\/Internet Protocol.\u201d The Internet can be described as a system of geographically distributed remote computer networks interconnected by computers executing networking protocols that allow users to interact and share information over the network(s). Because of such wide-spread information sharing, remote networks such as the Internet have thus far generally evolved into an open system for which developers can design software applications for performing specialized operations or services, essentially without restriction.","Thus, the network infrastructure enables a host of network topologies such as client\/server, peer-to-peer, or hybrid architectures. The \u201cclient\u201d is a member of a class or group that uses the services of another class or group to which it is not related. Thus, in computing, a client is a process, i.e., roughly a set of instructions or tasks, that requests a service provided by another program. The client process utilizes the requested service without having to \u201cknow\u201d any working details about the other program or the service itself. In a client\/server architecture, particularly a networked system, a client is usually a computer that accesses shared network resources provided by another computer, e.g., a server. In the example of , computers , , etc. can be thought of as clients and computers , , etc. can be thought of as the server where server , , etc. maintains the data that is then replicated in the client computers , , etc., although any computer can be considered a client, a server, or both, depending on the circumstances. For instance, computer may be a Media Center Edition (MCE) host PC, and computing devices , , etc. may be remote media consumption devices. Any of these computing devices may be processing data or requesting services or tasks that may implicate techniques for securely and dynamically distributing credentials in accordance with the invention.","A server is typically a remote computer system accessible over a remote or local network, such as the Internet. The client process may be active in a first computer system, and the server process may be active in a second computer system, communicating with one another over a communications medium, thus providing distributed functionality and allowing multiple clients to take advantage of the information-gathering capabilities of the server. Any software objects utilized pursuant to the techniques of the invention may be distributed across multiple computing devices or objects.","Client(s) and server(s) communicate with one another utilizing the functionality provided by protocol layer(s). For example, HyperText Transfer Protocol (HTTP) is a common protocol that is used in conjunction with the World Wide Web (WWW), or \u201cthe Web.\u201d For instance, Remote Desktop Protocol (RDP) is a common protocol utilized for remote computing. Typically, a computer network address such as an Internet Protocol (IP) address or other reference such as a Universal Resource Locator (URL) can be used to identify the server or client computers to each other. The network address can be referred to as a URL address. Communication can be provided over a communications medium, e.g., client(s) and server(s) may be coupled to one another via TCP\/IP connection(s) for high-capacity communication.","Thus,  illustrates an exemplary networked or distributed environment, with a server in communication with client computers via a network\/bus, in which the present invention may be employed. In more detail, a number of servers , , etc., are interconnected via a communications network\/bus , which may be a LAN, WAN, intranet, the Internet, etc., with a number of client or remote computing devices , , , , , etc., such as a portable computer, handheld computer, thin client, networked appliance, or other device, such as a VCR, TV, oven, light, heater and the like in accordance with the present invention. It is thus contemplated that the present invention may apply to any computing device with unique media abilities when it comes to storage, user interface, rendering, etc.","In a network environment in which the communications network\/bus  is the Internet, for example, the servers , , etc. can be Web servers with which the clients , , , , , etc. communicate via any of a number of known protocols such as HTTP. Servers , , etc. may also serve as clients , , , , , etc., as may be characteristic of a distributed computing environment.","Communications may be wired or wireless, where appropriate. Client devices , , , , , etc. may or may not communicate via communications network\/bus , and may have independent communications associated therewith. For example, in the case of a TV or VCR, there may or may not be a networked aspect to the control thereof. Each client computer , , , , , etc. and server computer , , etc. may be equipped with various application program modules or objects  and with connections or access to various types of storage elements or objects, across which files or data streams may be stored or to which portion(s) of files or data streams may be downloaded, transmitted or migrated. Any one or more of computers , , , , etc. may be responsible for the maintenance and updating of a database  or other storage element, such as a database or memory  for storing data processed according to the invention. Thus, the present invention can be utilized in a computer network environment having client computers , , etc. that can access and interact with a computer network\/bus  and server computers , , etc. that may interact with client computers , , etc. and other like devices, and databases .","Exemplary Computing Device",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 2B"},"Although not required, the invention can be implemented via an operating system, for use by a developer of services for a device or object, and\/or included within application software that operates in connection with the delivery or receipt of a credential in accordance with the invention. Software may be described in the general context of computer-executable instructions, such as program modules, being executed by one or more computers, such as client workstations, servers or other devices. Generally, program modules include routines, programs, objects, components, data structures and the like that perform particular tasks or implement particular abstract data types. Typically, the functionality of the program modules may be combined or distributed as desired in various embodiments. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations and protocols. Other well known computing systems, environments, and\/or configurations that may be suitable for use with the invention include, but are not limited to, personal computers (PCs), automated teller machines, server computers, hand-held or laptop devices, multi-processor systems, microprocessor-based systems, programmable consumer electronics, network PCs, appliances, lights, environmental control elements, minicomputers, mainframe computers and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network\/bus or other data transmission medium. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices, and client nodes may in turn behave as server nodes.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 2B","b":["100","100","100","100"]},"With reference to , another exemplary system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer  may include, but are not limited to, a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus (also known as Mezzanine bus).","Computer  typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer  and includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CDROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.","The system memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs , other program modules , and program data .","The computer  may also include other removable\/non-removable, volatile\/nonvolatile computer storage media. By way of example only,  illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk , such as a CD-ROM or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM and the like. The hard disk drive  is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media discussed above and illustrated in  provide storage of computer readable instructions, data structures, program modules and other data for the computer . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules  and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules  and program data . Operating system , application programs , other program modules  and program data  are given different numbers here to illustrate that, at a minimum, they are different copies. A user may enter commands and information into the computer  through input devices such as a keyboard  and pointing device , commonly referred to as a mouse, trackball or touch pad. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus , but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB). A graphics interface , such as Northbridge, may also be connected to the system bus . Northbridge is a chipset that communicates with the CPU, or host processing unit , and assumes responsibility for accelerated graphics port (AGP) communications. One or more graphics processing units (GPUs)  may communicate with graphics interface . In this regard, GPUs  generally include on-chip memory storage, such as register storage and GPUs  communicate with a video memory , wherein the application variables of the invention may have impact. GPUs , however, are but one example of a coprocessor and thus a variety of coprocessing devices may be included in computer , and may include a variety of procedural shaders, such as pixel and vertex shaders. A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface , which may in turn communicate with video memory . In addition to monitor , computers may also include other peripheral output devices such as speakers  and printer , which may be connected through an output peripheral interface .","The computer  may operate in a networked or distributed environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks\/buses. Such networking environments are commonplace in homes, offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","Exemplary Device",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 2C"},"Although not required, the invention can partly be implemented via an operating system, for use by a developer of services for a device or object, and\/or included within application software that operates in connection with the component(s) of the invention. Software may be described in the general context of computer-executable instructions, such as program modules, being executed by one or more computers, such as client workstations, servers or other devices. Those skilled in the art will appreciate that the invention may be practiced with other computer system configurations and protocols.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 2C","b":["100","100","100","100","100","100","100"],"i":["a ","a ","a ","a. "]},"With reference to , a second exemplary device for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer may include, but are not limited to, a processing unit , a system memory , and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures.","Computer typically includes a variety of computer readable media. As discussed above, computer readable media can be any available media that can be accessed by computer . The system memory may include computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM) and\/or random access memory (RAM). A basic input\/output system (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, may be stored in memory . Memory typically also contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation, memory may also include an operating system, application programs, other program modules, and program data.","The computer may also include other removable\/non-removable, volatile\/nonvolatile computer storage media, which may be connected to the system bus through a non-removable memory interface such as an interface, and a magnetic disk drive or optical disk drive is typically connected to the system bus by a removable memory interface, such as an interface.","A user may enter commands and information into the computer through a variety of input devices. A graphics subsystem may also be connected to the system bus . A monitor or other type of display device is also connected to the system bus via an interface, such as output interface , which may in turn communicate with video memory. In addition to a monitor, computers may also include other peripheral output devices such as speakers and a printer, which may be connected through output interface ","The computer may operate in a networked or distributed environment using logical connections to one or more other remote computers, such as remote computer , which may in turn have media capabilities different from device . The remote computer may be a personal computer, a server, a router, a network PC, a peer device or other common network node, or any other remote media consumption or transmission device, and may include any or all of the elements described above relative to the computer . The logical connections depicted in  include a network , such local area network (LAN) or a wide area network (WAN), but may also include other networks\/buses. Such networking environments are commonplace in homes, offices, enterprise-wide computer networks, intranets and the Internet.","Accordingly, the above-described general purpose computers are but examples, and the present invention may be implemented with any client having network\/bus interoperability and interaction. Thus, the present invention may be implemented in an environment of networked hosted services in which very little or minimal client resources are implicated, e.g., a networked environment in which the client device serves merely as an interface to the network\/bus, such as an object placed in an appliance. In essence, anywhere that data may be stored or from which data may be retrieved or transmitted to another computer is a desirable, or suitable, environment for operation of the techniques in accordance with the invention.","Exemplary Distributed Computing Frameworks or Architectures","Various distributed computing frameworks have been and are being developed in light of the convergence of personal computing and the Internet. Individuals and business users alike are provided with a seamlessly interoperable and Web-enabled interface for applications and computing devices, making computing activities increasingly Web browser or network-oriented.","For example, MICROSOFT\u00ae's managed code platform, i.e., .NET, includes servers, building-block services, such as Web-based data storage and downloadable device software. Generally speaking, the NET platform provides (1) the ability to make the entire range of computing devices work together and to have user information automatically updated and synchronized on all of them, (2) increased interactive capability for Web pages, enabled by greater use of XML rather than HTML, (3) online services that feature customized access and delivery of products and services to the user from a central starting point for the management of various applications, such as e-mail, for example, or software, such as Office .NET, (4) centralized data storage, which increases efficiency and ease of access to information, as well as synchronization of information among users and devices, (5) the ability to integrate various communications media, such as e-mail, faxes, and telephones, (6) for developers, the ability to create reusable modules, thereby increasing productivity and reducing the number of programming errors and (7) many other cross-platform and language integration features as well.","While some exemplary embodiments herein are described in connection with software residing on a computing device, one or more portions of the invention may also be implemented via an operating system, application programming interface (API) or a \u201cmiddle man\u201d object, a control object, hardware, firmware, intermediate language instructions or objects, etc., such that the methods of the invention may be included in, supported in or accessed via all of the languages and services enabled by managed code, such as NET code, and in other distributed computing frameworks as well.","Dynamic and Secure Distribution of Credentials Prior to Automatic Logon","As mentioned, the invention provides systems and methods for distributing logon credentials to a requester device over a network automatically, by the host computer into which logging or access is sought before the login occurs to access content, a resource and\/or a service of the host computer, e.g., begin a session between the requestor device and the host computer.","The invention thus allows for host machines to have control over client credentials in a secure way. Advantageously, hosts can rotate credentials on a frequent basis to improve security without requiring the client to participate in the rotation. Moreover, with the invention, clients need not hold credentials for any significant period of time, nor include security and storage mechanisms associated with doing so.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 3A","b":["1","2","1","2","1","1","2","2","1"]},"Sometime after the first device C and the second device C have established trust, at step B, second device C makes a request for a resource of the first device C which implicates an authentication exchange. In accordance with the invention, since the first device C has a public key from the second device C that is trusted, as illustrated at step C, first device C automatically generates logon credentials and encrypts these credentials using that public key for secure distribution of the credentials on the network at Step D.","Having received the credentials, the second device C decrypts the credentials with the corresponding private key at step E, and, without storing the credentials, also at step E, a logon object automatically generates a logon request to the first device C wrapping the credentials, and re-encrypting as appropriate (e.g., via the shared public key) in accordance with the associated authentication protocol for logon requests. The logon request is transmitted to first device C from second device C at step F, without having been stored on second device C. In one embodiment, for additional protection, the logon object takes advantage of protected memory space in connection with its operation. At step G, log on is successful, and private communications in accordance with the request at step B may begin between the first device C and second device C in accordance with established access levels and permissions.","It should be noted that in accordance with the invention, the encrypted credentials (along with any other information sent in connection with logon credentials) from the first device C may be stored unprotected on the first device C, or freely distributed on the network since only second device C can decrypt them. Accordingly, thereafter, each time the second device C wants to logon to first device C, second device C sends a network message indicating the desire to logon, the first device C then replies with the encrypted credentials. The second device C decrypts the credentials using its private key and then, immediately, uses those credentials to log back onto the first device C. Advantageously, the credentials can be regenerated later by the first device C at any time and then re-encrypted with the public key from the second device C. Thus, the next time the second device C attempts to login, the second device C dynamically obtains the new credentials and uses them for login.",{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 3B","b":["1","2","300","1","2","2","310","2","310","2","320","330","2","2","340","350","370","380","380","390","385"]},{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIGS. 4A and 4B"},"For brief definition, a session is the environment created in the operating system when a user account is logged into a machine using the credentials associated with that account. When a user logs in, a session is created; when the user logs out, the session is ended. Once logged in, a session exists for the user account until they are logged off either manually or forced by the OS. In one embodiment, for a scenario where a first device, trusted by a second device, wishes to logon to the second device with a set of credentials, the invention provides systems and methods for dynamically generating and securely distributing to the first device a set of credentials for use in beginning such a session, wherein the credentials are not stored or otherwise exposed on the requestor device.","Portions of  are recognizable as non-limiting implementations of the block diagram of  by way of the dashed ovals and corresponding similar numbering (e.g., reference to step B of  becomes reference BB in , reference to step D of  becomes DD in , and so on). Thus, the request of step B corresponds to area BB where RDPInitRQ is called by the client () to start a session with the host (). In , step C corresponds to area CC showing communications and processes relating to the dynamic generation of logon credentials by the host device, and the corresponding use of the client's public key for encryption. Step D is generally shown in area DD where the logon request is transmitted from the host to the client () in a secure fashion due to the encryption of the client's public key, and received by the client (area DD of ). Just after receiving and decrypting the credentials as shown in area EE of , in connection with establishing a session with the host device, the client automatically logs on to the host with the decrypted credentials via processes associated with area FF, and an active session begins when automatic logon with the credentials is successful, as shown generally by the processes of area GG.","However, it should be clear that  merely illustrate one implementation of the exemplary communications that may occur between devices from a processing, interface and protocol standpoint, and it should be emphasized that the invention may be implemented with a variety of other processes, protocols, interfaces and the like. For instance, one can appreciate that many algorithms can assume an infinite number of mathematical shapes and forms, and that the key consideration from a software standpoint is whether the algorithms perform the desired function, in any explicit or implicit form. Moreover, data structures may also assume many forms, and thus, for instance, types, names, classes, etc. can be defined in a variety of ways. Table I below, for instance, illustrates some exemplary implementation choices for variables referred to in , but consistent with the present description, such implementation details are not intended to be limiting on the invention.",{"@attributes":{"id":"p-0073","num":"0072"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE I"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Exemplary Variables for use with Logon Credentials"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["DvcPubKey","256 byte","NULL","Public key of the device"]},{"entry":[{},"int"]},{"entry":["LogonKey","128-bit","NULL","Symmetric \u201csession\u201d key encrypted"]},{"entry":[{},"symmetric",{},"with the DvcPubKey; used to encrypt"]},{"entry":[{},"key",{},"the LogonCreds"]},{"entry":["LogonCreds","Var length","NULL","NT user account credentials"]},{"entry":[{},"bit field",{},"encrypted with LogonKey for the"]},{"entry":[{},{},{},"DvcUsrAcct"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"Thus, it should be clear that  illustrate an exemplary, non-limiting, implementation of the invention, and that the invention should be defined with reference to the appended claims.","There are multiple ways of implementing the present invention, e.g., an appropriate API, tool kit, driver code, operating system, control, standalone or downloadable software object, etc. which enables applications and services to use the dynamic secure distribution of credentials according to the invention. The invention contemplates the use of the invention from the standpoint of an API (or other software object), as well as from a software or hardware object that generates, processes, receives or transmits credentials via the mechanism of the invention. Thus, various implementations of the invention described herein may have aspects that are wholly in hardware, partly in hardware and partly in software, as well as in software.","As mentioned above, while exemplary embodiments of the present invention have been described in connection with various computing devices and network architectures, the underlying concepts may be applied to any computing device or system in which it is desirable to automatically and securely distribute credentials just previous to login. For instance, the algorithm(s) and hardware implementations of the invention may be applied to the operating system of a computing device, provided as a separate object on the device, as part of another object, as a reusable control, as a downloadable object from a server, as a \u201cmiddle man\u201d between a device or object and the network, as a distributed object, as hardware, in memory, a combination of any of the foregoing, etc. While exemplary programming languages, names and examples may be chosen herein as representative of various choices, these languages, names and examples are not intended to be limiting. One of ordinary skill in the art will appreciate that there are numerous ways of providing object code and nomenclature that achieves the same, similar or equivalent functionality achieved by the various embodiments of the invention.","As mentioned, the various techniques described herein may be implemented in connection with hardware or software or, where appropriate, with a combination of both. Thus, the methods and apparatus of the present invention, or certain aspects or portions thereof, may take the form of program code (i.e., instructions) embodied in tangible media, such as floppy diskettes, CD-ROMs, hard drives, or any other machine-readable storage medium, wherein, when the program code is loaded into and executed by a machine, such as a computer, the machine becomes an apparatus for practicing the invention. In the case of program code execution on programmable computers, the computing device generally includes a processor, a storage medium readable by the processor (including volatile and non-volatile memory and\/or storage elements), at least one input device, and at least one output device. One or more programs that may implement or utilize credential distribution mechanism(s) of the present invention, e.g., through the use of a data processing API, reusable controls, or the like, are preferably implemented in a high level procedural or object oriented programming language to communicate with a computer system. However, the program(s) can be implemented in assembly or machine language, if desired. In any case, the language may be a compiled or interpreted language, and combined with hardware implementations.","The methods and apparatus of the present invention may also be practiced via communications embodied in the form of program code that is transmitted over some transmission medium, such as over electrical wiring or cabling, through fiber optics, or via any other form of transmission, wherein, when the program code is received and loaded into and executed by a machine, such as an EPROM, a gate array, a programmable logic device (PLD), a client computer, etc., the machine becomes an apparatus for practicing the invention. When implemented on a general-purpose processor, the program code combines with the processor to provide a unique apparatus that operates to invoke the functionality of the present invention. Additionally, any storage techniques used in connection with the present invention may invariably be a combination of hardware and software.","While the present invention has been described in connection with the preferred embodiments of the various figures, it is to be understood that other similar embodiments may be used or modifications and additions may be made to the described embodiment for performing the same function of the present invention without deviating therefrom. For example, while exemplary network environments of the invention are described in the context of a networked environment, such as a peer to peer or distributed networked environment, one skilled in the art will recognize that the present invention is not limited thereto, and that the methods, as described in the present application may apply to any computing device or environment, such as a gaming console, handheld computer, portable computer, etc., whether wired or wireless, and may be applied to any number of such computing devices connected via a communications network, and interacting across the network. Furthermore, it should be emphasized that a variety of computer platforms, including handheld device operating systems and other application specific operating systems are contemplated, especially as the number of wireless networked devices continues to proliferate.","While exemplary embodiments refer to utilizing the present invention in the context of particular protocols and communications, the invention is not so limited, but rather any protocol may be implemented to provide dynamic secure distribution of credentials in accordance with the invention. Still further, the present invention may be implemented in or across a plurality of processing chips or devices, and storage may similarly be effected across a plurality of devices. Therefore, the present invention should not be limited to any single embodiment, but rather should be construed in breadth and scope in accordance with the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The systems and methods for providing secure dynamic credential distribution in accordance with the present invention are further described with reference to the accompanying drawings in which:",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2C"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIGS. 3A and 3B"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIGS. 4A and 4B"}]},"DETDESC":[{},{}]}
