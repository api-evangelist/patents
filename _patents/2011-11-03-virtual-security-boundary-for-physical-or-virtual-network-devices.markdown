---
title: Virtual security boundary for physical or virtual network devices
abstract: A method and apparatus is disclosed herein for using a virtual security boundary. In one embodiment, the method comprises receiving information from a virtual machine after the virtual machine has been moved from a first physical location in a network to a second physical location in the network, where the information identifies the virtual machine as one previously assigned to a security boundary; determining that access to the virtual machine at the first physical location was permitted by the security gateway; assigning the virtual machine at the second physical location to the security boundary, and applying a security policy associated with the security boundary to communications between the network and the virtual machine at the second physical location.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08813169&OS=08813169&RS=08813169
owner: Varmour Networks, Inc.
number: 08813169
owner_city: Santa Clara
owner_country: US
publication_date: 20111103
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PRESENT INVENTION"],"p":["Embodiments of the present invention relate to the field of network security; more particularly, embodiments of the present invention relate to using a security boundary for physical or virtual network devices when such devices move to different locations.","A security boundary, sometimes referred to as a security zone, is defined so that network devices share the same security policies within the same security boundary. The network devices cannot communicate with the network devices in different security boundary without explicit permission. Conventional network security devices are designed to protect a static, fixed security boundary, primary using interface or IP address to define the security boundary. In a data center where virtual machines are deployed, network administrators could add or move the virtual machines to any physical servers, which may connect to the security gateways from different interfaces with different IP addresses and subnets. Thus, conventional security devices cannot create effective security boundary for the virtual machines since interface or IP address is not enough to classify virtual machines to different security boundaries.","As many companies deploy virtual machines in their IT environment, the fixed security boundary cannot support the dynamic nature of virtual machines. Many virtual machines may acquire IP address from DHCP server, and the virtual machines may be moved from one host to another host with different IP address at run time. In such a case, the security gateway interfacing the virtual machines to the network would not recognize the virtual machine because the virtual machine was attempting to use a different IP address for communication.","A method and apparatus is disclosed herein for using a virtual security boundary. In one embodiment, the method comprises receiving information from a virtual machine after the virtual machine has been moved from a first physical location in a network to a second physical location in the network, where the information identifies the virtual machine as one previously assigned to a security boundary; determining that access to the virtual machine at the first physical location was permitted by the security gateway; assigning the virtual machine at the second physical location to the security boundary, and applying a security policy associated with the security boundary to communications between the network and the virtual machine at the second physical location.","Embodiments of the present invention create virtual security boundaries for network devices. Using the techniques described herein, any network devices, whether they are virtual machines or physical servers, regardless of their IP address and physical location, can be assigned to the same security boundary and protected by the same security policies. In other words, a security policy can be assigned to a security boundary and all network devices assigned to that security boundary are protected by the security policy.","Advantages of embodiments of the present invention include, without limitation, that the protected network devices are portable independently from the network layer. Even if a virtual machine is moved to another host, or physical location with a different IP address, as long as the agent registers with the same identity, the virtual machine will be in the same security boundary. The security boundary may include both physical and virtual devices, on premises and\/or in the cloud.","In this way, embodiments of the present invention virtualize the security layer to support emerging virtualization in the IT industry. While the IT industry is moving toward server virtualization to save cost, the design of network security remains the same without supporting the key characteristics of virtualization. Embodiments of the present invention are able to create a virtual security layer in the virtualization environment, which provides network security for virtual machines.","In the following description, numerous details are set forth to provide a more thorough explanation of the present invention. It will be apparent, however, to one skilled in the art, that the present invention may be practiced without these specific details. In other instances, well-known structures and devices are shown in block diagram form, rather than in detail, in order to avoid obscuring the present invention.","Some portions of the detailed descriptions which follow are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here, and generally, conceived to be a self-consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated. It has proven convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers, or the like.","It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion, it is appreciated that throughout the description, discussions utilizing terms such as \u201cprocessing\u201d or \u201ccomputing\u201d or \u201ccalculating\u201d or \u201cdetermining\u201d or \u201cdisplaying\u201d or the like, refer to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system's registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage, transmission or display devices.","The present invention also relates to apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes, or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, and magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, or any type of media suitable for storing electronic instructions, and each coupled to a computer system bus.","The algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein, or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear from the description below. In addition, the present invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein.","A machine-readable medium includes any mechanism for storing or transmitting information in a form readable by a machine (e.g., a computer). For example, a machine-readable medium includes read only memory (\u201cROM\u201d); random access memory (\u201cRAM\u201d); magnetic disk storage media; optical storage media; flash memory devices; etc.","An Example of a Network",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1","b":["100","101","111","112","103","111","114","103","150","100","100"]},"In one embodiment, client , security gateway , and hosts - are implemented with a computer system include a modem, network interface or some other method can be used to provide connectivity to network . Client system  is able to access information on hosts - using, for example, a web browser or other client software (not shown). Such a client allows client system  to access data hosted by hosts - or one of storage devices in the network. While  depicts the use of a network such as the Internet for exchanging data between a client, the security gateway and servers, the techniques described herein are not limited to the use of the Internet or any particular network-based environment.","Hosts - are physical machines and each may include one or more virtual machines (VMs). In one embodiment, these virtual machines are created dynamically in a manner well-known in the art. Each of the virtual machines acquires an IP address dynamically from DHCP servers in network  during boot up in a manner well-known in the art. In one embodiment, the virtual machines may share the same physical host with other virtual machines yet belong to different security boundaries. The virtual machines may be moved to different physical hosts to accommodate various computing requirements.","Security gateway  includes memory A that includes information (e.g., a set of security policies) and code to perform access control using security policies, as well as communicate with virtual machines and perform operations associated with those situations when the virtual machines are moved to different physical hosts as described herein.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 2","b":["150","111","111","112","112","114","114","114","114"]},"In one embodiment, the software agent of the virtual device forwards information to security gateway  as part of its communication with security gateway . In one embodiment, this information includes the identity and information of the network device, such as, for example, the IP address, its identity, current login user, and security patch level. This information is sent after the virtual network device boots up. Security gateway  uses the information, combined with the configuration, to create an integrated security policy to form the virtual security boundary for security gateway  and the network devices.","In another embodiment, software gateway  could use an information repository to query the information without running software agent on each virtual device. For example, this could be done for those virtual devices running are managed by VMware management consoles. Software gateway  could use the published API of the management console to access the individual virtual devices.","Once security gateway  has the information of each virtual device, it integrates the information with the security policy, and applies the corresponding security policy for traffic to each of the virtual devices. The application of the security policy is independent of what the IP addresses or the location of the virtual devices.","In one embodiment, the agent is in the guess OS of the virtual machines. In another embodiment, the agent is in the kernel of virtual machines. In yet another embodiment, the agent is in a separate module calling the Application Programming Interface (API) provided by the vendor of the virtual machines. In all these cases, the security gateway uses the information passed from the agent to identify the virtual machines to create the security boundary.","In one embodiment, the agent runs on each of the virtual machines of a host. In another embodiment, the agent runs on a physical server. The virtual machines, the host, or the physical server may be in the premises of the company's IT department, or it could be located off-campus, at Internet, or in the cloud managed by other companies. As long as there are connectivity between security gateway  and the logical network devices, security gateway  can collect the information passed from the agent to establish the security boundary.","In one embodiment, security gateway  sets up the security boundary for the virtual machines by blocking access from other security boundary, except where it's configuration allows such access. If confidentiality is required, in one embodiment, security gateway  encrypts all traffic within the security boundary. This would provide stronger security by preventing one from other security boundary sniffing or analyze the network traffic.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 3"},"Referring to , the process begins by processing logic storing a data structure that specifies one or more security boundaries and an associated security policy for each of the one or more security boundaries and a virtual machine associated with at least one of the one or more security boundaries (processing block ). In one embodiment, the data structure comprises a table.","Next, processing logic receives information from a virtual machine running on a device after the virtual machine has been moved from a first physical location in a network to a second physical location in the network (processing block ). The information identifies the virtual machine as one previously assigned to a security boundary. In one embodiment, the information comprises an IP address. In one embodiment, the information comprises a security patch level. In one embodiment, the second physical location has a different Internet Protocol (IP) address than the first physical location.","Using this information, processing logic determines that access to the virtual machine at the first physical location was permitted by the security gateway (processing block ), assigns the virtual machine at the second physical location to the security boundary (processing block ), and applies a security policy associated with the security boundary to communications between the network and the virtual machine at the second physical location (processing block ).","Table 1 illustrates a policy table that illustrates an example.",{"@attributes":{"id":"p-0037","num":"0036"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"35pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}},{"entry":["From",{},{},{},{},{}]},{"entry":["SRC-IP","SRC-PORT","To DST-IP","DST-PORT","Protocol","Action"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["VM-A","Any","Web-server","80","TCP","Block"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]}}}}},"In the case of the policy table above, regardless of where VM-A is moved in the network, the same policy still applies to VM-A, regardless of its IP address or how it connects to the security gateway.","One Embodiment of a Security Gateway","In one embodiment, the security gateway comprises a memory, a network interface, a second interface and a processor. The network interface receives network traffic from the one or more virtual machines. The processor receives information (e.g., packets) from a virtual machine after the virtual machine has been moved from a first physical location in a network to a second physical location in the network. The information identifies the virtual machine as one previously assigned to a security boundary. In one embodiment, the information is sent by an agent on the network device that is running the virtual machine. The agent may be a software agent running on the virtual machine itself. Using this information, the processor determines that access to the virtual machine at the first physical location was permitted by the security gateway, assigns the virtual machine at the second physical location to the security boundary, and applies a security policy associated with the security boundary to communication between the network and the virtual machine at the second physical location.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 4","FIG. 1","FIG. 4"],"b":["150","410","412","410","414","417","418","424","426","428","430","432","433","434","437","438","435","490","435","439","440","446","412","428","447","412","430","448","412"]},"Bus  allows data communication between central processor  and system memory . System memory  (e.g., RAM) may be generally the main memory into which the operating system and application programs are loaded. The ROM or flash memory can contain, among other code, the Basic Input-Output system (BIOS) which controls basic hardware operation such as the interaction with peripheral components. Applications resident with computer system  are generally stored on and accessed via a computer readable medium, such as a hard disk drive (e.g., fixed disk ), an optical drive (e.g., optical drive ), a floppy disk unit , or other storage medium.","Storage interface , as with the other storage interfaces of computer system , can connect to a standard computer readable medium for storage and\/or retrieval of information, such as a fixed disk drive . Fixed disk drive  may be a part of computer system  or may be separate and accessed through other interface systems.","Modem  may provide a direct connection to a remote server via a telephone link or to the Internet via an internet service provider (ISP) (e.g., servers , - of ). Network interface  may provide a direct connection to a remote server such as, for example, servers - of . Network interface  may provide a direct connection to a remote server (e.g., server  of ) via a direct network link to the Internet via a POP (point of presence). Network interface  may provide such connection using wireless techniques, including digital cellular telephone connection, a packet connection, digital satellite data connection or the like.","Many other devices or subsystems (not shown) may be connected in a similar manner (e.g., document scanners, digital cameras and so on). Conversely, all of the devices shown in  need not be present to practice the techniques described herein. The devices and subsystems can be interconnected in different ways from that shown in . The operation of a computer system such as that shown in  is readily known in the art and is not discussed in detail in this application.","Code to implement the security gateway operations described herein can be stored in computer-readable storage media such as one or more of system memory , fixed disk , optical disk , or floppy disk . The operating system provided on computer system  may be MS-DOS\u00ae, MS-WINDOWS\u00ae, OS\/2\u00ae, UNIX\u00ae, Linux\u00ae, or another known operating system.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 5","FIG. 4"]},"Memory  stores a data structure  (e.g., a table) that specifies one or more security boundaries and an associated security policy for each of the one or more security boundaries and a virtual machine associated with at least one of the one or more security boundaries. Memory  also stores information receiving module , which when executed by a processor, causes the processor to receive information from a virtual machine running on a device after the virtual machine has been moved from a first physical location in a network to a second physical location in the network. Memory  also stores permission module , which, when executed by a processor, causes the processor to use the information received from the virtual machine to determine that access to the virtual machine at the first physical location was permitted by the security gateway.","Memory  also stores assignment module , which when executed by a processor, causes the processor to assign the virtual machine at the second physical location to the security boundary. Memory  also stores policy application module , which when executed by a processor, causes the processor to apply a security policy associated with the security boundary to communications between the network and the virtual machine at the second physical location.","As described above, the servers in , such as servers - or server , may be implemented using a computer system. In one embodiment, one or more of the servers - is implemented using a system such as depicted in  as well, except using different code to implement the techniques and operations performed by such servers and their VMs. The code is stored in computer-readable storage medium such as system memory , fixed disk , optical disk  or floppy disk . This code includes code to implement an agent (e.g., a software agent) as described above and code to send identification information to the security gateway.","Whereas many alterations and modifications of the present invention will no doubt become apparent to a person of ordinary skill in the art after having read the foregoing description, it is to be understood that any particular embodiment shown and described by way of illustration is in no way intended to be considered limiting. Therefore, references to details of various embodiments are not intended to limit the scope of the claims which in themselves recite only those features regarded as essential to the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention will be understood more fully from the detailed description given below and from the accompanying drawings of various embodiments of the invention, which, however, should not be taken to limit the invention to the specific embodiments, but are for explanation and understanding only.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 4","FIG. 1"],"b":"150"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 5","FIG. 4"]}]},"DETDESC":[{},{}]}
