---
title: Systems and methods of accelerating delivery of remote content
abstract: Systems and methods of accelerating delivery of remote content are disclosed. An example method includes monitoring usage of a client for content at a remote source over time to predict client access to content. The method also includes prefetching related content from the remote source based on the usage by the client. The method also includes delivering the prefetched related content to the client if the client requests access to corresponding content at the remote source.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09384297&OS=09384297&RS=09384297
owner: HEWLETT PACKARD ENTERPRISE DEVELOPMENT LP
number: 09384297
owner_city: Houston
owner_country: US
publication_date: 20110728
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["The client\/server computing environment continues to expand into web services, often referred to as Web 2.0, with the latest iteration of Internet supported programmatic access to services and data provided by many providers. Traditionally web applications have been fairly static in nature. But as the various web browsers have both grown in capability and functionality and have become increasingly compliant with standards based computing, developers are moving to a viable application development environment that is highly adaptive, readily prototyped, and readily scaled through hosted web services. Much of the recent efforts are focused on optimizing these applications.","Hosting software within the web browser is beneficial for stabilizing cross platform compatibility, but is deficient in the area of performance benefits offered by traditional compiled language runtimes and specialized executable binaries. Efforts to increase responsiveness traditionally associated with rich client-based or so called \u201cboxed\u201d software solutions have focused on optimizing the rendering engine, the data model, or the script engine.","One such solution focuses on offloading security computations to a hardware component on the local device to enable hardware assisted SSL or similar secure protocols. This solution is designed to alleviate the computation burden from the systems processor. Other solutions utilize network topologies that support prioritization of packets for preferred protocols or endpoints. This solution allows some network services or applications to use a larger portion of the available network bandwidth at the expense of other network traffic. Still other solutions utilize network devices that support compression of payload, allowing more data to be transmitted via fewer packet requests.","A stronger solution is still needed as more applications are modeled to rely on services hosted within the internet.","As more computer applications are modeled to utilize (and in some cases to rely on) services hosted on large networks such as the Internet, the realized performance of those applications can be limited by the available bandwidth, the number of network round trips, and the latency in network round trips to serve application data and functionality. The systems and methods disclosed herein are directed generally to improving these remote (or web-based) services and classes of applications. In an example, the systems and methods disclosed herein prefetch remote content that is determined to be relevant to the application or the end user based on a description of a web service and access patterns or other usage characteristics by the end user and\/or the application.","In an example, an accelerated delivery system for remote content includes an analyzer to identify access patterns or other usage of content at a remote source. In an example, the analyzer monitors call functions by the client.","In another example, the analyzer monitors client requests for content from the remote source at a parameterized data level. The analyzer may also use heuristic approaches or predefined responses from the end user, such as a user profile. The system also includes a cache to store prefetched related content from the remote source based on the identified usage, the prefetched related content available locally if requests are made to access corresponding content at the remote source. In an example, the cache stores prefetched content including subsets of the prefetched content, the subsets based on predictive access to content at the remote source. In another example, the cache stores prefetched content including adjacent content based on predictive access to content at the remote source.","Accordingly, the systems and methods disclosed herein offer networked computing performance improvements based on a semantic understanding of the data and processes used to manipulate the data. Several examples provided herein are based on examination of the HTTP protocol stack and the interaction of various web client applications and their hosting models. Each of these client to server APIs are built on top of the common HTTP semantics. Therefore, it is possible to create a framework for predictive caching that is aware of specific APIs requirements.","Before continuing, it is noted that as used herein, the terms \u201cincludes\u201d and \u201cincluding\u201d mean, but is not limited to, \u201cincludes\u201d or \u201cincluding\u201d and \u201cincludes at least\u201d or \u201cincluding at least.\u201d The term \u201cbased on\u201d means \u201cbased on\u201d and \u201cbased at least in part on.\u201d",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1","b":"100"},"In an example, the system  may include a host  providing a service  accessed by a user  via a client device . For purposes of illustration, the service  may be an online data processing service executing on a host  configured as a server computer with computer-readable storage . Example services may include general purpose computing services (e.g., access to government and other sources of data sets hosted on the Internet or as dynamic data endpoints for any number of client applications). Services also include interfaces to application programming interfaces (APIs) and related support infrastructure which were previously the exclusive domain of desktop and local area network computing systems, such as application engines (e.g., word processing and graphics applications), and hosted business services (e.g., package delivery and tracking, online payment systems, and online retailers).","The client  may be any suitable computer or computing device -capable of accessing the host . Host  and client  are not limited to any particular type of devices. Although, it is noted that the operations described herein may be executed by program code  residing on the client (e.g., personal computer ), but in some instances (e.g., where the client is a tablet or mobile device ) may be better performed on a separate computer system having more processing capability, such as a server computer or plurality of server computers on a local area network for the client .","The system  may also include a communication network , such as a local area network (LAN) and\/or wide area network (WAN). In one example, the network  includes the Internet or other mobile communications network (e.g., a 3G or 4G mobile device network). Network  may also provide greater accessibility to the service  for use in distributed environments, for example, where more than one user may have input and\/or receive output from the service .","The host  and client  may be provided on the network  via a communication connection, such as via an Internet service provider (ISP). In this regard, the client  is able to access host  directly via the network , or via an agent, such as another network.","In an example, the program code  has access to both the client  and the service  in the networked computer system . For example, the service  may be a cloud-based service, wherein the program code is executed on at least one computing device local to the client , but having access to the service  in the cloud computing system.","Before continuing, it is noted that the computing devices are not limited in function. The computing devices may also provide other services in the system . For example, host  may also provide transaction processing services and email services for the client .","In addition, the service  may include at least one remote source  of content, and\/or the service  may be operable to communicate with at least one remote source  of content. That is, the source may be part of the service , and\/or the source may be physically distributed in the network and operatively associated with the service . In any implementation, the source may include any content. For example, the source  may include databases for providing information, applications for providing application data, storage resources for providing online storage facilities. There is no limit to the type or amount of content that may be provided by the source. In addition, the content may include unprocessed or \u201craw\u201d data, or the content may undergo at least some level of processing.","As mentioned above, the program code  may be executed by any suitable computing device to identify access patterns or other usage by the client  for content at a remote source. In addition, the program code may serve one or more than one client . During execution, content may be prefetched from the remote source based on the identified usage. For example, if the client  is currently accessing a news website on the Internet, all of the top news stories for the current day may be prefetched and stored locally for the client . Accordingly, the client  is able to have faster access to the day's top news stories from the local cache.","In another example, a number of clients  for an organization may access stock quotes during certain hours of the day (e.g., at the opening bell in the morning and again at the closing bell in the afternoon). Based on usage, content including stock quotes may be prefetched in advance of these high access times, and stored on a local cache for the clients . This example may be implemented by providing the analyzer function and cache outside any particular client system. As such, when the clients  request content that has already been prefetched, the client(s)  are provided with the corresponding content which has already been prefetched, making the content available to the clients  much faster than if the clients  had to request that same content from the remote site.","The program code  can be better understood with reference to  and the following discussion of various example functions. However, the operations described herein are not limited to any specific implementation with any particular type of program code.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 2","FIG. 1","FIG. 2"],"b":["200","150"]},"The program code executes the function of the architecture of machine readable instructions as self-contained modules. These modules can be integrated within a self-standing tool, or may be implemented as agents that run on top of an existing program code. In an example, the architecture of machine readable instructions may include an analyzer  and an prefetch module .","The analyzer  may be associated with one or more monitor  and\/or one or more database . The analyzer  analyzes real-time data (e.g., from the monitor ), historical data (e.g., from the database ), or a combination of real-time and historical data to identify patterns or trends or other usage parameters for the client accessing at one or more remote source. The analyzer may also analyze the type of content being accessed, the duration of access, the time of access, and other parameters. Analyzer  may be operatively associated with the prefetch module  to indicate which content should be prefetched and stored locally for the client, e.g., in a cache .","Data analyzed by the analyzer  may include information related to call functions by the client. For example, call functions may be used to analyze web service protocols being used so that content can be prefetched and cached from the network service in an effort to reduce application latency. Data may also include usage at a parameterized data level. For example, prioritizing schemes for data packets may be inspected at a high level to determine whether the data packets are voice over IP (VoIP) packets and therefore should be assigned a higher priority than general Internet browsing data packets. But the systems and methods disclosed herein may analyze data access at a lower level, known as the parameterized data level, such that trend and analysis algorithms may be implemented to carry out an analysis and the associated caching described herein.","It is noted that any suitable analysis may be applied by the analyzer . For example, the analysis may be based on statistical models, predictive models, heuristic techniques, and others, and combinations of these techniques. In addition, the analysis may be implemented using any suitable function(s) f(x) or combination of functions, for linear, non-linear, and\/or spatial analysis. Furthermore, the functions may be single variable or multivariate in nature.","There are several predicates in caching and analytical prefetch that may be useful to understand. For example, proxy servers and internet gateways may provide caching services for web-based content. This is usually limited to preserving web page content and associated MIME content for a period of time in case another computer system inside the network controlled by the proxy or gateway server requested the same content.","It is possible to extend such caching to the context of prefetching by analysis of the web page and building inferences to information to be requested based on the statically available content of the page. For example, a method and apparatus for a server that includes a file processor that interprets each requested data file (e.g., a web page) requested by the client may be used in a process analogous to that of a browser application, or other requesting application. The file processor initiates the loading of each referenced data item within the requested document in anticipation that the client will make the same requests upon receiving the requested data file.","Web 2.0, cloud-computing, and web services, which are all forms of client\/server computing systems, rely heavily on web protocols such as XML over HTTP or HTTPS. These web services protocols can be inspected by a computing system. It is also possible that such an intermediary computing system may be used to prefetch application data by specifying a range of requests to the web service or services based on either cumulative analysis of parametric data and\/or priori knowledge of the parametric data and its relationship within the web services application.","Based on this analysis, a computational apparatus and storage system may be utilized which sits between the network path of the client and the hosted web service. This apparatus may be used to analyze web traffic searching for requests of data from web services by the client. Through analysis, or prebuilt instruction, the apparatus then makes requests to the web service on behalf of the client. These API calls may contain input parameter data provided by the apparatus, which is designed to prefetch web service data under the assumption that the client eventually makes the same request.","Consider the example of a web hosted application to view geographical map data. The API supports viewing map data from a particular location or point (e.g., address, geophysical point, or other geographical tag). The API also supports panning and zooming from that point into a more detailed view of the mapped environment. Because the semantics of the API are known, the system prefetches the panned and zoomed views of data around the starting location by knowing the semantics of the API in use, and the initial user\/customer intent to view map data from this API service.","Because the system makes predictions at future user\/customer needs by relying on a hosted service, the time between network round trips with the service can be reduced by performing these queries ahead of actual user demand. This occurs all while leveraging the elastic web infrastructure afforded by hosted services models.","It is noted that various implementations are contemplated. In an example, prefetching and caching content may be a desktop implementation, wherein at least the cache is physically at a client computing device. In another example, the cache may be on a local area network for the client (e.g., at a server device, router, or other network device). In other examples, the cache may be anywhere between the source and the client. The specific network distance will depend at least to some extent on design considerations, such as but not limited to, the value added or realized latency reduction, the cache capacity and bandwidth of the client (e.g., a desktop computer system may have higher cache capacity and bandwidth than a mobile device such as a smart phone), desired quality of service or service level, to name only a few examples.","The system and method for accelerating delivery of remote content may be further understood with reference to the following examples.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 3","b":["300","310"]},"In this example, the news source may have already provided the client with the business news headlines. Based on the analysis, the system may prefetch subsets of the news articles -related to the business headlines. The analysis and prefetching may be characterized as Y content (i.e., the business news headlines) including subset {Y+1} content and subset {Y\u22121} content. In an example, subset {Y+1} content represents the next business news headline, and subset {Y\u22121} content represents the previous business news headline.","Accordingly, the user is able to quickly access business news headlines, which are retrieved from cache instead of the user having to wait for the online news source to send the content to the user. Further efficiencies are realized, for example, by not caching all of the headlines from the news source, but only those relevant to the user (e.g., the business news headlines) based on the analysis.","Still further efficiencies may be realized by recognizing deeper usage characteristics over time. For example, if the user typically only views business stories related to the stock market, then only those headlines may be prefetched for the user. Such analysis may be dynamic and change over time. For example, the user may follow a particular story in the Entertainment section for a short duration, and accordingly headlines related to that particular story can be prefetched until it is determined by the analysis that the user is no longer interested in that storyline.","Of course other examples are also contemplated. For example, the subsets may represent subsets of data for a mapping application (e.g., business locations in the area where the user is currently viewing on the map). In another example, the subsets may represent subsets of results, such as the results of Internet searches, stock indices, calculations, formatting, or other determinations based on user selections.","Still other examples may include the client desiring data in some other format than its hierarchy, such as news from the \u201cmost downloaded\u201d content. The user desires may be based on prior usage (e.g., preferred formats), and used to prefetch data in the user's desired format. In another example, the user may have a usage profile that identifies a certain type of content the user prefers, such as \u201cSports Stories.\u201d The usage profile may be generated over time automatically and may also include input by the user. The usage profile may then be used for prefetching content based at least in part on the usage profile. Still other examples are also contemplated.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 4","b":["400","410","420"],"i":["a","d. "]},"The mapping application may have already provided the client with graphical map data representing Area A on the map . Based on the analysis, the system may prefetch adjacent content (either directional in the X, Y coordinate space, in the zoom level in the Z direction, or in another dimension such as content or metadata associated with a position). In this example, adjacent content may include areas that are north and south of area A and\/or areas that are east and west of area A. Accordingly, the user is able to quickly scroll through adjacent graphical map data which has already been prefetched and stored in a local cache, thereby reducing latencies from having to request the map data from the remote source when the user scrolls.","In another example, the mapping application may also include directional data indicating the direction of travel of the user. If the user is travelling north, forth example, then the adjacent content may be prefetched and cached, and other adjacent content -may not be prefetched. Deeper the analysis such as this may result in further efficiencies, e.g., by not prefetching and caching all of the adjacent content, but instead only prefetching and caching adjacent content which is most likely to be utilized by the client.","Of course other examples are also contemplated. For example, the adjacent content may represent prior and subsequent pages for a website (e.g., pages in an article the user is reading at an online news source). In another example, the adjacent data may represent results, such as the results of Internet searches, stock indices, calculations, formatting, or other determinations based on user selections.","It is noted that prefetching content may be when the client has already accessed particular content. Prefetching content may also be predictive, before the client has accessed particular content.","Still other examples are also contemplated. The systems and methods described herein are not limited to content, and can also be implemented with online applications, such as online word processing, graphic design, and other applications.","In addition, the systems and methods may be implemented with multiple clients, and the amount and type of content cached may be based on user demand. For example, the system may prefetch 10% of an online video if 1 or 2 users are viewing the video, but prefetch more video data and\/or add more connections to the remote site to pull data faster or enable more sessions if the network quality of service drops when more users are added.","Before continuing, it should be noted that the examples described above are provided for purposes of illustration, and are not intended to be limiting. Other devices and\/or device configurations may be utilized to carry out the operations described herein.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 5","b":"500"},"Operation  includes monitoring usage of a client for content at a remote source monitoring usage of a client for content at a remote source over time to predict client access to content. Operation  includes prefetching related content from the remote source based on the usage by the client. Operation  includes delivering the prefetched related content to the client if the client requests access to corresponding content at the remote source.","The operations shown and described herein are provided to illustrate various implementations. It is noted that the operations are not limited to the ordering shown. Still other operations may also be implemented.","For example, monitoring usage may include identifying a call function by the client. In another example, monitoring the usage may be at a parameterized data level.","Further operations may include prefetching content including subset content, and delivering at least one of the subsets to the client on demand. The subsets may represent subsets of a page. The subsets represent subsets of results.","Further operations may include prefetching adjacent content. Prefetching adjacent content may be when the client is at a predetermined position. Prefetching adjacent content may also be predictive, that is, content is retrieved proactively before the client is at a predetermined position. The adjacent content may represent adjacent pages. The adjacent content may represent adjacent results.","It is noted that in an example, the operations may be implemented at least in part using an end-user interface (e.g., web-based interface). The end-user is able to make predetermined selections, and the operations described above are implemented on a back-end device to present results to a user. The user can then make further selections. It is also noted that various of the operations described herein may be automated or partially automated.","The example embodiments shown and described are provided for purposes of illustration and are not intended to be limiting. Still other embodiments are also contemplated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
