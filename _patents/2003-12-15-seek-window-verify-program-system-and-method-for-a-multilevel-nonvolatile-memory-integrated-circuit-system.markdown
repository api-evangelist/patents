---
title: Seek window verify program system and method for a multilevel non-volatile memory integrated circuit system
abstract: A memory comprises a plurality of digital multilevel memory cells. A window of valid data voltages for accessing the said plurality of digital multilevel memory cells is detected. The window may be detected by incrementing a first programming voltage to program data in the plurality of memory cells and verifying whether the data in at least one of said plurality of memory cells is properly programmed. The incrementing and verifying may be repeated until data is verified to be properly programmed in one of said plurality of memory cells. The data in each memory cell of said plurality of memory cells is verified. The verification may be by incrementing a second programming voltage, and verifying whether data in each memory cell is properly programmed within a margin. The incrementing and verifying is repeated for each memory cell outside of the margin.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07149110&OS=07149110&RS=07149110
owner: Silicon Storage Technology, Inc.
number: 07149110
owner_city: Sunnyvale
owner_country: US
publication_date: 20031215
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF THE SPECIFIC EMBODIMENTS"],"p":["This is a continuation-in-part of application Ser. No. 10\/317,455, filed Dec. 11, 2002 now U.S. Pat. No. 6,959,779, which is a continuation-in-part of application Ser. No. 10\/211,886, filed Aug. 1, 2002 now U.S. Pat. No. 6,865,099, which is a continuation-in-part of application Ser. No. 09\/929,542, filed Aug. 13, 2001 now U.S. Pat. No. 6,751,118, which is a division of application Ser. No. 09\/231,928 filed Jan. 14, 1999, issued as U.S. Pat. No. 6,282,145, the subject matter of each of these applications is incorporated herein by reference.","This invention relates in general to semiconductor memories, and, in particular, to the design and operation of multilevel nonvolatile semiconductor memories.","As the information technology progresses, the demand for high density giga bit and tera bit memory integrated circuits is insatiable in emerging applications such as data storage for photo quality digital film in multi-mega pixel digital camera, CD quality audio storage in audio silicon recorder, portable data storage for instrumentation and portable personal computers, and voice, data, and video storage for wireless and wired phones and other personal communicating assistants.","The nonvolatile memory technology such as ROM (Read Only Memory), EEPROM (Electrical Erasable Programmable Read Only Memory), or FLASH is often a technology of choice for these application due to its nonvolatile nature, meaning it still retains the data even if the power supplied to it is removed. This is in contrast with the volatile memory technology, such as DRAM (Dynamic Random Access Memory), which loses data if the power supplied to it is removed. This nonvolatile feature is very useful in saving the power from portable supplies, such as batteries. Until battery technology advances drastically to ensure typical electronic systems to function for a typical operating lifetime, e.g., 10 years, the nonvolatile technology will fill the needs for most portable applications.","The FLASH technology, due to its smallest cell size, is the highest density nonvolatile memory system currently available. The advance of the memory density is made possible by rapidly advancing the process technology into the realm of nano meter scale and possibly into the atomic scale and electron scale into the next century. At the present sub-micro meter scale, the other method that makes the super high-density memory system possible is through the exploitation of the analog nature of a storage element.","The analog nature of a flash or nonvolatile storage element provides, by theory, an enormous capability to store information. For example, if one electron could represent one bit of information then, for one typical conventional digital memory cell, the amount of information is equal to the number of electrons stored, or approximately a few hundred thousands. Advances in device physics exploring the quantum mechanical nature of the electronic structure will multiply the analog information manifested in the quantum information of a single electron even further.","The storage information in a storage element is hereby defined as a discrete number of storage levels for binary digital signal processing with the number of storage levels equal to 2with N equal to the number of digital binary bits. The optimum practical number of discrete levels stored in a nonvolatile storage element depends on the innovative circuit design method and apparatus, the intrinsic and extrinsic behavior of the storage element, all within constraints of a definite performance target, such as product speed and operating lifetime, with a certain cost penalty.","At the current state of the art, all the multilevel systems are only suitable for medium density, i.e. less than a few tens of mega bits, and only suitable for a small number of storage levels per cell, i.e., less than four levels or two digital bits.","As can be seen, memories having high storage capacity and fast operating speed are highly desirable.","The signal path from the data cells to a sense amplifier may have mismatch with the signal path from the reference memory cells to the sense amplifier. The mismatch generates a current ratio error and may be caused by mismatches of the threshold voltage, the width, length, mobility, and oxide thickness of the circuit elements, such as transistors, in the signal paths. The mismatch also may be caused by mismatch in signal paths due to parasitics, such as width and length of interconnects.","Process, temperature, cycling and other variations may alter the usable voltage or current range of memory cells. Programming of data cells should be done in the range, but the range may change over time.","A method determines valid voltages for accessing the plurality of digital multilevel memory cells. A window of valid data ranges is detected for the plurality of digital multilevel memory cells.","In one aspect, a first programming voltage is incremented to program data in the plurality of memory cells. The method verifies whether the data in at least one of the memory cells is properly programmed and the incrementing and verifying is repeated until data is verified to be properly programmed in one of the plurality of memory cells. In another aspect, a second programming voltage is incremented and data in each memory cell is verified as to whether the memory cell is properly programmed within a margin. The incrementing of the second programming voltage and the verifying of each memory cell outside of a margin is repeated.","Described are the design method and apparatus for a super high density nonvolatile memory system capable of giga to tera bits as applied to the array architecture, reference system, and decoding schemes to realize the optimum possible number of storage levels within specified performance constraints. Method and apparatus for multilevel program and sensing algorithm and system applied to flash memory is also described.","Array architectures and operating methods are described that are suitable for a super high density, in the giga to tera bits, for multilevel nonvolatile \u201cgreen\u201d memory integrated circuit system. \u201cGreen\u201d refers to a system working in an efficient and low power consumption manner. The system and method solves the issues associated with super high density multilevel memory system, such as, precision voltage control in the array, severe capacitive loading from MOS transistor gates and parasitics, high leakage current due to memory cells and from cells to cells, excessive power consumption due to large number of gates and parasitics, and excessive memory cell disturbances due to large memory density.","An Inhibit and Select Segmentation Scheme uses a truly-floating-bitline scheme to greatly reduce the capacitance from junctions and parasitic interconnects to a small value.","A Multilevel Memory Decoding scheme is capable of greater than 10-bit multilevel operation. The Multilevel Memory Decoding Scheme includes the Power Supply Decoded Decoding Scheme, the Feedthrough-to-Memory Decoding Scheme, and the Feedthrough-to-Driver Decoding Scheme. The Multilevel Memory Decoding scheme also includes a \u201cwinner-take-all\u201d Kelvin Decoding Scheme, which provides precise bias levels for the memory at a minimum cost. A constant-total-current-program scheme is described. Fast-slow and 2-step ramp rate control programming are described. A reference system method and apparatus includes the Positional Linear Reference System, Positional Geometric Reference System, and the Geometric Compensation Reference System. An apparatus and method may provide multilevel programming, reading, and margining.","A sense amplifier system includes local sense amplifiers coupled to memory subarrays and global sense amplifiers coupled to groups of local sense amplifiers.","Method and apparatus described herein are applicable to digital multilevel as well as analog multilevel system.","Memory Cell Technology","To facilitate the understanding of the invention, a brief description of a memory cell technology is described below. In an embodiment the invention applies to Source Side Injection (SSI) flash memory cell technology, which will be referred to as SSI flash memory cell technology. The invention is equally applicable to other technologies such as drain-side channel hot electron (CHE) programming (ETOX), P-channel hot electron programming, NROM (nitride programmable read only memory), SONOS (silicon-oxide-nitride-oxide-silicon), MONOS (metal-oxide-nitride-oxide-silicon), 2-D or 3-D flash, bi-directional memory cell (e.g., two storage nodes, one near drain and one near source of a memory cell; two floating gates of same one memory cell), phase change memory, molecular memory, polymer memory, spin memory, single electron memory, nano particle memory, other hot electron programming schemes, Fowler-Nordheim (FN) tunneling, ferro-electric memory, and other types of memory technology.","A cell structure of one typical SSI flash cell is symbolically shown in . Its corresponding transistor symbol is shown in . The cell is made of two polysilicon gates (abbreviated as poly), a floating gate poly FG F and a control gate poly CG C. The control gate CG C also acts as a select gate that individually select each memory cell. This has the advantage of avoiding the over erase problem which is typical of stacked gate CHE flash cell. The floating gate has a poly tip structure that points to the CG C, this is to enhance the electric field from the FG F to the CG C which allows a much lower voltage in FN erase without using a thin interpoly oxide.","The thicker interpoly oxide leads to a higher reliability memory cell. The cell is also fabricated such that a major portion of the FG F overlaps the source junction S. This is to make a very high coupling ratio from the source S to FG F, which allows a lower erase voltage and is advantageous to the SSI programming, which will be described shortly. A structural gap between the FG F and at CG C is also advantageous for the efficient SSI programming.","The SSI flash memory cell enables low voltage and low power performance due to its intrinsic device physics resulting from its device structure. The SSI flash cell uses efficient FN tunneling for erase and efficient SSI for programming. The SSI flash cell programming requires a small current in hundreds of nano amps and a moderate voltage range of \u02dc8 to 11 volts. This is in contrast to that of a typical drain-side channel hot electron memory cell programming which requires current in hundreds of microamp to milliamp range and a voltage in the range of 11 to 13 volts.","The SSI flash memory cell erases by utilizing Fowler-Nordheim tunneling from the floating gate poly to the control gate poly by applying a high erase voltage on the control gate CG C, e.g., 8\u201313 volts, and a low voltage on the source S, e.g., 0\u20130.5 volts. The high erase voltage together with high coupling from the source to the floating gate creates a localized high electric field from the FG F tip to the CG C and causes electrons to tunnel from the FG F to the CG C near the tip region. The resulting effect causes a net positive charge on the FG F.","The SSI flash memory cell programs by applying a high voltage on the source S (herein also known as common line CL), e.g., 4\u201313 V, a low voltage on the CG C, e.g., 0.7\u20132.5 V, and a low voltage on the drain D (herein also known as the bitline BL), e.g., 0\u20131 V. The high voltage on the source S strongly couples to the FG to strongly turn on the channel under the FG (it will be equivalently referred to as the FG channel). This in turn couples the high voltage on the source S toward the gap region. The voltage on the CG C turns on the channel directly under the CG C (it will be equivalently referred to as the CG channel). This in turn couples the voltage on the drain D toward the gap region. Hence, the electrons flow from the drain junction D through the CG channel, through the gap channel, through the FG channel, and finally arrive at the source junction.","Due to the gap structure between the CG C and the FG F, in the channel under the gap, there exists a strong lateral electric field (EGAPLAT) G. As the EGAPLAT G reaches a critical field, electrons flowing across the gap channel become hot electrons. A portion of these hot electrons gains enough energy to cross the interface between the silicon and silicon dioxide into the silicon dioxide. And as the vertical field Ev is very favorable for electrons to move from the channel to the FG F, many of these hot electrons are swept toward the FG F, thus, reducing the voltage on the FG F. The reduced voltage on the FG F reduces electrons flowing into the FG F as programming proceeds.","Due to the coincidence of favorable Ev and high EGAPLAT G in the gap region, the SSI memory cell programming is more efficient over that of the drain-side CHE programming, which only favors one field over the other. Programming efficiency is measured by how many electrons flow into the floating gate as a portion of the current flowing in the channel. High programming efficiency allows reduced power consumption and parallel programming of multiple cells in a page mode operation.","Multilevel Memory Integrated Circuit System:","The challenges associated with putting together a billion transistors on a single chip without sacrificing performance or cost are tremendous. The challenges associated with designing consistent and reliable multilevel performance for a billion transistors on a single chip without sacrificing performance or cost are significantly more difficult. The approach taken here is based on the modularization concept. Basically everything begins with a manageable optimized basic unitary block. Putting appropriate optimized unitary blocks together makes the next bigger optimized block.","A super high density nonvolatile multilevel memory integrated circuit system herein described is used to achieve the performance targets of read speed, write speed, and an operating lifetime with low cost. Read speed refers to how fast data could be extracted from a multilevel memory integrated circuit system and made available for external use such as for the system microcontroller  shown in  which is described later. Write speed refers to how fast external data could be written into a multilevel memory integrated circuit system. Operating lifetime refers to how long a multilevel memory integrated circuit system could be used in the field reliably without losing data.","Speed is modularized based on the following concept, T=CV\/I, where switching time T is proportional to capacitance C multiplied by the voltage swing V divided by the operating current I. Methods and apparatuses are provided by the invention to optimize C, V, and I to achieve the required specifications of speed, power, and optimal cost to produce a high performance high-density multilevel memory integrated circuit system. The invention described herein makes the capacitance independent of memory integrated circuit density, to the first order, and uses the necessary operating voltages and currents in an optimal manner.","A nonvolatile multilevel memory system is shown in . A super high density nonvolatile multilevel memory integrated circuit (IC) system  is a digital multilevel nonvolatile flash memory integrated circuit capable of storing 2storage levels per one memory cell, with N=number of digital bits. A system microcontroller  is a typical system controller used to control various system operations. Control signals (CONTROL SIGNALS) L, input\/output bus (IO BUS) L, and ready busy signal (R\/BB) RB are for communication between the system microcontroller  and the super high density nonvolatile multilevel memory integrated circuit system .","An electronic camera system (SILICONCAM)  utilizing super high density nonvolatile multilevel memory IC system  is shown in . The system (SILICONCAM)  includes an integrated circuit system (ECAM)  and an optical lens block (LENS) . The integrated circuit system (ECAM)  includes an image sensor (IMAGE SENSOR) , an analog to digital converter block (A\/D CONVERTER) , a system microcontroller , and the multilevel memory IC system . The optical lens block (LENS)  is used to focus light into the IMAGE SENSOR , which converts light into an analog electrical signal. The IMAGE SENSOR  is a charge coupled device (CCD) or a CMOS sensor. The block (A\/D CONVERTER)  is used to digitize the analog electrical signal into digital data. The microcontroller  is used to control various general functions such as system power up and down, exposure time and auto focus. The microcontroller  is also used to process image algorithms such as noise reduction, white balance, image sharpening, and image compression. The digital data is stored in the multilevel memory IC system . The digital data can be down loaded to another storage media through wired or wireless means. Future advances in process and device technology can allow the optical block (LENS)  to be integrated in a single chip with the ECAM .","An electronic audio system (SILICONCORDER)  utilizing super high density nonvolatile multilevel memory IC system  is shown in . The SILICONCORDER  includes an integrated circuit system (SILICONAUDIO) , a MICROPHONE , and a SPEAKER . The system (SILICONAUDIO)  includes an anti-alias FILTER , an A\/D CONVERTER , a smoothing FILTER , a D\/A CONVERTER , a system microcontroller , and the multilevel memory IC system . The FILTER  and the FILTER  can be combined into one filter block if the signals are multiplexed appropriately. The microcontroller  is used to control various functions such as system power up and down, play, record, message management, audio data compression, and voice recognition. In recording a sound wave, the MICROPHONE  converts the sound wave into an analog electrical signal, which is filtered by the FILTER  to reduce non-audio signals. The filtered analog signal is then digitized by the A\/D CONVERTER  into digital data. The digital data is then stored in compressed or uncompressed form in the multilevel memory IC system . In playing back the stored audio signal, the microcontroller  first uncompresses the digital data if the data is in compressed form. The D\/A CONVERTER  then converts the digital data into an analog signal which is filtered by a smoothing filter (FILTER) . The filtered output analog signal then goes to the SPEAKER  to be converted into a sound wave. The signal filtering can be done by digital filtering by the microcontroller . External digital data can be loaded into the multilevel memory IC system  through wired or wireless means. Future advances in process and device technology can allow the MICROPHONE  and the SPEAKER  to be integrated in a single chip with the SILICONAUDIO .","A circuit block diagram of the super high density nonvolatile multilevel memory integrated circuit system  based on the concepts described above and also on ideas described below, is shown in . For the purpose of discussion, a giga bit nonvolatile multilevel memory chip is described.","A circuit block  includes a regular memory array.","It includes a total of for example, 256 million nonvolatile memory cells for a 4-bit digital multilevel memory cell technology or 128 million cells for a 8-bit digital multilevel memory cell technology. An N-bit digital multilevel cell is defined as a memory cell capable of storing 2levels. A reference array (MFLASHREF)  is used for the reference system. A redundancy array (MFLASHRED)  is used to increase production yield by replacing bad portions of the regular memory array of the circuit block . An optional spare array (MFLASHSPARE)  can be used for extra data overhead storage such as for error correction.","A y-driver block (YDRV)  including a plurality of single y-drivers (YDRVS) S is used for controlling the bitlines during write, read, and erase operation. Block YDRVS S will be described in detail below in the description of the multilevel algorithm. Multiples of y-driver block (YDRV)  are used for parallel multilevel page writing and reading to speed up the data rate during write to and read from the multilevel memory IC system . A reference y-driver block (REFYDRV)  including a plurality of single reference y-drivers (REFYDRVS) S is used for the reference array block (MFLASHREF) . A redundant y-driver block (RYDRV)  including a plurality of single redundant y-drivers (RYDRVS) S is used for the redundant array (MFLASHRED) . The function of block (RYDRVS) S is similar to that of block (YDRVS) S. A spare y-driver block (SYDRV)  including a plurality of single spare y-drivers (SYDRVS) S is used for the spare array (MFLASHSPARE) . The function of block (SYDRVS) S is similar to that of block (YDRVS) S. A page select block (PSEL)  is used to select one bitline out of multiple bitlines for each single y-driver (YDRVS) S inside the block (YDRV) . Corresponding select circuit blocks for reference array, redundant array, and spare array are a reference page select block (PRSEL) , a redundant page select block , and a spare page select block . A byte select block (BYTESEL)  is used to enable one byte data in or one byte data out of the blocks (YDRV)  at a time. Corresponding blocks for reference array, redundant array, and spare array are a reference byte select block , a redundant byte select block , and a spare byte select block . The control signals for circuit blocks , , , , , , , , and  are in general different from the control signals for circuit blocks , , and  of the regular memory array of the circuit block . The control signals are not shown in the figures.","A multilevel memory precision decoder block (MLMDEC)  is used for address selection and to provide precise multilevel bias levels over temperature, process corners, and power supply as required for consistent multilevel memory operation for the regular memory array of the circuit block  and for the redundant array . A multilevel memory precision decoder block (MLMSDEC)  is used for address selection and to provide precise multilevel bias levels over temperature, process corners, and power supply as required for consistent multilevel memory operation for the spare array .","An address pre-decoding circuit block (XPREDEC)  is used to provide decoding of addresses A<16:AN>. The term AN denotes the most significant bit of addresses depending on the size of the memory array. The outputs of block (XPREDEC)  couple to blocks (MLMDEC)  and block (MLMSDEC) . An address pre-decoding block (XCGCLPRED)  is used to provide decoding of addresses A<11:15>. The outputs of block  also couple to blocks (MLMDEC)  and block (MLMSDEC) .","A page address decoding block (PGDEC)  is used to provide decoding of addresses A<9:10>. The outputs of block (PGDEC)  couple to blocks (PSEL) . A byte address decoding block (BYTEDEC)  is used to provide decoding of addresses A<0:8>. The outputs of block (BYTEDEC)  couple to blocks (BYTESEL) . An address counter block (ADDRCTR)  provides addresses A<11:AN>, A<9:10>, and A<0:8> for row, page, and byte addresses, respectively. The outputs of the block (ADDRCTR)  couple to blocks (XPREDEC) , (XCGCLPRED) , (PGDEC) , and (BYTEDEC) . The inputs of the block (ADDRCTR)  are coupled from the outputs of an input interface logic block (INPUTLOGIC) .","The input interface logic block (INPUTLOGIC)  is used to provide external interface to systems off-chip such as the microcontroller . Typical external interface for memory operation are read, write, erase, status read, identification (ID) read, ready busy status, reset, and other general purpose tasks. Serial interface can be used for the input interface to reduce pin counts for high-density chip due to a large number of addresses. Control signals L are used to couple the INPUTLOGIC  to the system microcontroller . The INPUTLOGIC  includes a status register that is indicative of the status of the memory chip operation such as pass or fail in program or erase, ready or busy, write protected or unprotected, cell margin good or bad, restore or no restore, etc. The margin and restore concepts are described more in detail in the multilevel algorithm description.","An algorithm controller block (ALGOCNTRL)  is used to handshake the input commands from the block (INPUTLOGIC)  and to execute the multilevel erase, programming and sensing algorithms as needed for multilevel nonvolatile operation. The ALGOCNTRL  is also used to algorithmically control the precise bias and timing conditions as required for multilevel precision programming.","A test logic block (TESTLOGIC)  is used to test various electrical features of the digital circuits, analog circuits, memory circuits, high voltage circuits, and memory array. The inputs of the block (TESTLOGIC)  are coupled from the outputs of the INPUTLOGIC . The block (TESTLOGIC)  also provides timing speed-up in production testing such as faster write\/read and mass modes. The TESTLOGIC  is also used to provide screening tests associated with memory technology such as various disturb and reliability tests. The TESTLOGIC  also allows an off-chip memory tester to directly take over the control of various on-chip logic and circuit bias blocks to provide various external voltages and currents and external timing. This feature permits, for example, screening with external voltage and external timing or permits accelerated production testing with fast external timing.","A fuse circuit block (FUSECKT)  is a set of nonvolatile memory cells configured at the external system level, at the tester, at the user, or on chip on-the-fly to achieve various settings. These settings can include precision bias levels, precision on-chip oscillator, programmable logic features such as write-lockout feature for portions of an array, redundancy fuses, multilevel erase, program and read algorithm parameters, or chip performance parameters such as write or read speed and accuracy.","A reference control circuit block (REFCNTRL)  is used to provide precision reference levels for precision voltage levels as required for multilevel programming and sensing.","A redundancy controller block (REDCNTRL)  is for redundancy control logic.","A voltage algorithm controller block (VALGGEN)  provides various specifically shaped voltage signals of amplitude and duration as required for multilevel nonvolatile operation and to provide precise voltage levels with tight tolerance, as required for precision multilevel programming, erasing, and sensing.","A circuit block (BGAP)  is a bandgap voltage generator based on the bandgap circuit principle to provide a precise voltage level over process, temperature, and supply as required for multilevel programming and sensing.","A voltage and current bias generator block (V&IREF)  is an on-chip programmable bias generator. The bias levels are programmable by the settings of the control signals from the FUSECKT  and also by various metal options. A precision oscillator block (PRECISIONOSC)  provides accurate timing as required for multilevel programming and sensing.","Input buffer blocks  are typical input buffer circuits, for example, TTL input buffers or CMOS input buffers. Input\/output (io) buffer blocks  includes typical input buffers and typical output buffers. A typical output buffer is, for example, an output buffer with slew rate control, or an output buffer with level feedback control. A circuit block R is an open drained output buffer and is used for ready busy handshake signal (R\/BB) RB.","A voltage multiplier (also known as charge pump) block (VMULCKT)  provides voltage levels above the external power supply required for erase, program, read, and production tests. A voltage multiplying regulator block (VMULREG)  provides regulation for the block (VMULCKT)  for power efficiency and for transistor reliability such as to avoid various breakdown mechanisms.","A flash power management block (FPMU)  is used to efficiently manage power on-chip such as powering up only the circuit blocks in use. The FPMU  also provides isolation between sensitive circuit blocks from the less sensitive circuit blocks by using different regulators for digital power (VDDD) \/(VSSD) , analog power (VDDA) \/(VSSA) , and IO buffer power (VDDIO) \/(VSSIO) . The FPMU  also provides better process reliability by stepping down power supply VDD to lower levels required by transistor oxide thickness. The FPMU  allows the regulation to be optimized for each circuit type. For example, an open loop regulation could be used for digital power since highly accurate regulation is not required; and a closed loop regulation could be used for analog power since analog precision is normally required. The flash power management also enables creation of a \u201cgreen\u201d memory system since power is efficiently managed.","Block diagram of the FPMU  is shown in . A VDD  and a VSS  are externally applied power supply and ground lines, respectively. A block (ANALOG POWER REGULATOR) A is an analog power supply regulator, which uses closed loop regulation. The closed loop regulation is provided by negative feedback action of an operational amplifier (op amp)  configured in a voltage buffer mode with a reference voltage (VREF)  on the positive input of the op amp . A filter capacitor (CFILL)  is used for smoothing transient response of the analog power (VDDA) . A ground line (VSSA)  is for analog power supply. A block (DIGITAL POWER REGULATOR) B is a digital power supply regulator, which uses open loop regulation. The open loop regulation is provided by source follower action of a transistor  with a reference voltage (VREF)  on its gate. A pair of filter capacitor (CFIL)  and (CFIL)  are used for smoothing transient response of digital power (VDDD) . A loading element (LOAD)  is for the transistor . A ground line (VSSD)  is for digital power supply. A block (IO POWER REGULATOR) C is an IO power supply regulator, which uses open loop regulation similar to that of the digital power supply B. The open loop regulation is provided by a transistor  with a reference voltage (VREF)  on its gate. A loading element (LOAD)  is for transistor . A pair of capacitors (CFIL)  and (CFIL)  are used for smoothing transient response of IO power (VDDIO) . A ground line (VSSIO)  is for IO power supply. A block D includes various circuits that require unregulated power supply such as transmission switches, high voltage circuits, ESD structures, and the like.","A block (PORK)  is a power on reset circuit which provides a logic signal (PON)  indicating that the power supply being applied to the chip is higher than a certain voltage. The signal (PON)  is typically used to initialize logic circuits before chip operation begins.","A block (VDDDET)  is a power supply detection circuit, which provides a logic signal (VDDON)  indicating that the operating power supply is higher than a certain voltage. The block (VDDDET)  is normally used to detect whether the power supply is stable to allow the chip to take certain actions such as stopping the programming if the power supply is too low.","A block (FPMUCNTRL)  is a power supply logic controller, that receives control signals from blocks (PORK) , (VDDDET) , (INPUTLOGIC) , (ALGOCNTRL) , and other logic control blocks to power up and power down appropriately power supplies and circuit blocks. The FPMUCNTRL  is also used to reduce the power drive ability of appropriate circuit blocks to save power. A line (PDDEEP)  is used to power down all regulators. Lines (PDAPOW) , (PDDPOW) , and (PDIOPOW)  are used to power down blocks A, B, and C, respectively. Lines (PDDEEP) , (PDAPOW) , (PDDPOW) , and (PDIOPOW)  come from block (FPMUCNTRL) .","It is possible that either closed or open loop regulation could be used for any type of power supply regulation. It is also possible that any power supply could couple directly to the applied power supply (VDD)  without any regulation with appropriate consideration. For example, VDDA  or VDDIO  could couple directly to VDD  if high voltage transistors with thick enough oxide are used for analog circuits or IO buffer circuits, respectively.","A typical memory system operation is as follows: a host such as the microcontroller  sends an instruction, also referred to as a command, such as a program instruction via the CONTROL SIGNALS L and the IO BUS L to the multilevel memory chip  (see ). The INPUTLOGIC  interprets the incoming command as a valid command and initiates the program operation internally. The ALGOCNTRL  receives the instruction from the INPUTLOGIC  to initiate the multilevel programming algorithmic action by outputting various control signals for the chip. A handshake signal such as the ready busy signal R\/BB RB then signals to the microcontroller  that the multilevel memory chip  is internally operating. The microcontroller  is now free to do other tasks until the handshake signal R\/BB RB signals again that the multilevel memory chip  is ready to receive the next command. A timeout could also be specified to allow the microcontroller  to send the commands in appropriate times.","Read Operation:","A read command including a read operational code and addresses is sent by the microcontroller  via the CONTROL SIGNALS L and  BUS L. The INPUTLOGIC  decodes and validates the read command. If it is valid, then incoming addresses are latched in the ADDRCTR . The ready busy signal (R\/BB) RB now goes low to indicate that the multilevel memory device  has begun read operation internally. The outputs of ADDRCTR  couple to blocks (XPREDEC) , (XCGCLPRED) , (PGDEC) , (BYTEDEC) , and (REDCNTRL) . The outputs of blocks , , , , and  couple to blocks (MLMDEC) , (MLSMDEC) , and block  to enable appropriate memory cells. Then the ALGOCNTRL  executes a read algorithm. The read algorithm will be described in detail later in the multilevel algorithm description. The read algorithm enables blocks (BGAP) , (V&IREF) , (PRECISIONOSC) , (VALGGEN) , and (REFCNTRL)  to output various precision shaped voltage and current bias levels and algorithmic read timing for read operation, which will be described in detail later in the description of the multilevel array architecture. The precision bias levels are coupled to the memory cells through blocks (MLMDEC) , (MLMSDEC) , and block .","In an embodiment, the read algorithm operates upon one selected page of memory cells at a time to speed up the read data rate. A page includes a plurality of memory cells, e.g., 1024 cells. The number of memory cells within a page can be made programmable by fuses, e.g., 512 or 1024 to optimize power consumption and data rate. Blocks (PGDEC) , (MLMDEC) , (MLMSDEC) , , and (PSEL)  select a page. All memory cells in the selected page are put in read operating bias condition through blocks (MLMDEC) , (MLMSDEC) , , (PSEL) , and (XCGCLPRED) . After the readout voltage levels are stable, a read transfer cycle is initiated by the block (ALGOCNTRL) . All the readout voltages from the memory cells in the selected page are then available at the y-drivers (YDRVS) S, (RYDRVS) S, and (SYDRVS) S inside block (YDRV) , (RYDRV) , and (SYDRV) , respectively.","Next, in the read transfer cycle the ALGOCNTR  executes a multilevel read algorithm to extract the binary data out of the multilevel cells and latches them inside the YDRVS S, RYDRVS S, and SYDRVS S. This finishes the read transfer cycle. A restore flag is now set or reset in the status register inside the INPUTLOGIC . The restore flag indicates whether the voltage levels of the multilevel memory cells being read have been changed and whether they need to be restored to the original voltage levels. The restore concept will be described more in detail in the multilevel algorithm description. Now the ready busy signal (R\/BB) RB goes high to indicate that the internal read operation is completed and the multilevel memory device  is ready to transfer out the data or chip status. The microcontroller  now can execute a status read command to monitor the restore flag or execute a data out sequence. The data out sequence begins with an external read data clock provided by the microcontroller  via the CONTROL SIGNAL L coupled to an input buffer  to transfer the data out. The external read data clock couples to the blocks (BYTEDEC)  and (BYTESEL) , , and  to enable the outputs of the latches inside blocks (YDRV)  or (RYDRV)  or (SYDRV)  to output one byte of data at a time into the bus IO<0:7> . The external read data clock keeps clocking until all the desired bytes of the selected page are outputted. The data on bus IO<0:7>  is coupled to the microcontroller  via IO BUS L through IO buffers .","Program Operation:","A program command including a program operational code, addresses, and data is sent by the microcontroller  via CONTROL SIGNALS L and IO BUS L. The INPUTLOGIC  decodes and validates the command. If it is valid, then incoming addresses are latched in the ADDRCTR . The data is latched in the latches inside YDRV , RYDRV , and SYDRV  via blocks (BYTEDEC) , (BYTESEL) , , and , respectively. The ready busy signal (R\/BB) RB now goes low to indicate that the memory device has begun program operation internally. The outputs of ADDRCTR  couple to blocks (XPREDEC) , (XCGCLPRED) , (PGDEC) , (BYTEDEC) , and (REDCNTRL) . The outputs of blocks , , , , and  couple to blocks (MLMDEC) , (MLSMDEC) , and  to enable appropriate memory cells. Then the (ALGOCNTRL)  executes a program algorithm, which will be described in detail later in the multilevel algorithm description. The (ALGOCNTRL)  enables blocks (BGAP) , (V&IREF) , (PRECISIONOSC) , (VALGGEN) , and (REFCNTRL)  to output various precision shaped voltage and current bias levels and algorithmic program timing for the program operation, which will be described in detail later in the description of the multilevel array architecture. The precision bias levels are coupled to the memory cells through blocks (MLMDEC) , (MLMSDEC) , and block .","In an embodiment, the program algorithm operates upon one selected page of memory cells at a time to speed up the program data rate. Blocks (PGDEC) , (MLMDEC) , (MLMSDEC) , , and (PSEL)  select a page. All memory cells in the selected page are put in appropriate program operating bias condition through blocks (MLMDEC) , (MLMSDEC) , , (PSEL) , and (XCGCLPRED) . Once the program algorithm finishes, program flags are set in the status register inside the block (INPUTLOGIC)  to indicate whether the program has been successful. That is, all the cells in the selected page have been programmed correctly without failure and with enough voltage margins. The program flags are described more in detail in the multilevel algorithm description. Now the ready busy signal (R\/BB) RB goes high to indicate that the internal program operation is completed and the memory device is ready to receive the next command.","Erase Operation:","An erase command including an erase operational code and addresses is sent by the microcontroller  via CONTROL SIGNALS L and IO BUS L. The INPUTLOGIC  decodes and validates the command. If it is valid, then incoming addresses are latched in the ADDRCTR . The ready busy signal (R\/BB) RB now goes low to indicate that the memory device has begun erase operation internally. The outputs of ADDRCTR  couple to blocks (XPREDEC) , (XCGCLPRED) , (PGDEC) , (BYTEDEC) , and (REDCNTRL) . The outputs of blocks , , , , and  couple to blocks (MLMDEC) , (MLSMDEC) , and  to enable appropriate memory cells. Then the ALGOCNTRL  executes an erase algorithm. The ALGOCNTRL  enables blocks (BGAP) , (V&IREF) , (PRECISIONOSC) , (VALGGEN) , and (REFCNTRL)  to output various precision shaped voltage and current bias levels and algorithmic erase timing for erase operation. The shaped voltage for erase is to minimize electric field coupled to memory cells, which minimizes the damage to memory cells during erasing. The precision bias levels are coupled to the memory cells through blocks (MLMDEC) , (MLMSDEC) , and block .","In an embodiment, the erase algorithm operates upon one selected erase block of memory cells at a time to speed up the erase time. An erase block includes a plurality of pages of memory cells, e.g., 32 pages. The number of pages within an erase block can be made programmable by fuses to suit different user requirements and applications. Blocks (PGDEC) , (MLMDEC) , (MLMSDEC) , , and (PSEL)  select a block. All memory cells in the selected block are put in erase operating bias condition through blocks (MLMDEC) , (MLMSDEC) , , (PSEL) , and (XCGCLPRED) . Once the erase algorithm finishes, the erase flags are set in the status register inside the block (INPUTLOGIC)  to indicate whether the erase has been successful. That is, all the cells in the selected page have been erased correctly to desired voltage levels without failure and with enough voltage margins. Now the ready busy signal (R\/BB) RB goes high to indicate that the internal erase operation is completed and the multilevel memory device  is ready to receive the next command.","Multilevel Array Architecture:","The demanding requirements associated with putting together a billion transistors on a single chip with the ability to store multiple precision levels per cell and operating at a very high speed are contradictory. These requirements need innovative approaches and careful tradeoffs to achieve the objective. Examples of tradeoffs and problems with prior art implementation are discussed below. In conventional prior art architectures, a voltage drop along a metal line of a few tens of millivolts could be easily tolerated. Here, in a super high density nonvolatile multilevel memory integrated circuit system such a voltage drop can cause unacceptable performance degradation in precision levels due to the high number of levels stored per memory cell. In conventional array architectures, a bit line capacitance in the order of 10 pico farads would be a non-issue. Here it may be unworkable due to the high data rate required. In prior art array architectures a bias level variation from one memory cell to another in the order of +\/\u221230 percent would be a typical situation. Here such a bias variation would be a serious performance problem. In prior art array architectures, the total resistance of a memory source line in the order of a few hundreds of ohms would be a typical situation, here a few tens of ohms is a serious problem. The huge number of memory cells of the giga to tera bit high-density memory system compounds the matter even further by making the memory source line longer. Another challenge facing the multilevel system is maintaining high speed sensing and programming with low power, again requiring tradeoffs. Another challenge facing the multilevel system is high speed sensing and programming with very high precision voltages due to a high number of levels stored per digital multilevel memory cell, again a conflicting demand. Another challenge facing the multilevel system is high speed sensing and programming consistently every time over many years, process corners, temperature, and power supply variation.","To get an appreciation of the order of magnitude of the difficulty involved in the super high density multilevel nonvolatile memory system, numerical examples will be given corresponding to a one giga bit array architecture system suitable for 256 levels, i.e., 8 bits. The array is then organized as 8192 bitlines or columns and 16384 rows or wordlines for a total of 134,217,730 physical cells.","One sensing level, V1level,=multilevel sensing range\/2, N=number of digital bits stored per memory cell. Multilevel sensing range is the readout voltage range from sensing a multilevel memory cell. Assuming the multilevel sensing range from the multilevel memory cell available is 2048 millivolts, then V1level=2048\/256=8 millivolts.","A very high data rate is required for applications such as image or high density data storage. For example, write and read rates of a mega byte per second are required. To achieve this high data rate, parallel writing and sensing is required for the super high density nonvolatile multilevel memory integrated circuit system. In the present embodiment, a total of 1024 y-drivers (YDRVS) S inside blocks (YDRV)  are used. This allows 1024 memory cells to be written and sensed at the same time in a page mode manner, effectively increasing the speed by a factor of 1024 over single cell operation. The number of bitlines multiplexed into one single y-driver (YDRVS) S is=8192\/1024=8 bitlines.","A program algorithm described in more detail elsewhere in this specification is able to achieve desired multilevel resolution. The read or program multilevel resolution is the smallest voltage range in read or program, respectively, needed to operate the multilevel memory cells correctly. An erase algorithm first erases the memory cells to make the cell readout voltage reaching a certain desired voltage level. Then the iterative program algorithm is applied to the memory cells. The program algorithm includes a plurality of verify-program cycles. A verify-program cycle includes a verify cycle followed by a program cycle. A verify cycle is done first to inhibit the cell from the first programming pulse if the cell is verified, therefore preventing possible over-programming. Over-programming means that after a programming pulse the cell sensing level passes a desired voltage level by more than a desired voltage amount. A verify cycle is used to determine whether the desired readout sensing level has been reached. If the desired readout sensing level is reached, the cell is inhibited from further programming. Otherwise, the cell is enabled for the next program cycle. A program cycle is used to change incrementally the charge stored in the cell and the corresponding cell sensing readout voltage. Instead of a verify-program cycle, a program-verify cycle can be used. A program-verify cycle begins with a program cycle followed by a verify cycle. In this case, care should be taken to ensure that the first programming pulse does not cause over-programming.","In an embodiment the program cycle includes applying a voltage on the source line, (interchangeably referred to as common line [CL]) (VCL), with a predetermined program pulsewidth (TPPWD) and a predetermined program bias cell current (Ipcell). The verify cycle makes use of the voltage mode sensing as shown in , which applies a reference voltage (VCLRD) on the source line (CL), another reference voltage (VCGRD) on the control gate, and a predetermined read bias current (Ircell) on the bitline and through the memory cell. The current (Ircell) is applied to the bitline and the memory cell through select transistors which are not shown. The resulting voltage on the bitline is the sensing readout voltage (VR), which has a unique relationship to the charge on the floating gate. The voltage mode sensing is also used during read. In another embodiment of voltage mode sensing, the source line (CL) and the bitline are interchanged, and thus a reference voltage is applied on the bitline and a predetermined read bias current (Ircell) is applied on the source line through the memory cell. The resulting voltage on the source line is the sensing readout voltage (VR). In this case, the array architecture uses only one source line in read at a given time, for example, by multiplexing through decoder circuitry or over time. This is to be known as Inverse Voltage Mode sensing. In another embodiment of the voltage mode sensing, there is no predetermined read current (Ircell), or the predetermined read current equals to zero. This mode is to be known as No Current (Digital) Multilevel Mode Sensing. In another embodiment of the voltage mode sensing, the predetermined read bias current is replaced by a resistor or an equivalent resistance (like a MOS operated as a resistor). To change incrementally the readout sensing voltage to the next value (VR+dVR), with dVR equals to the incremental readout sensing voltage change, the next program cycle is repeated with the common line voltage increased incrementally to (VCL+dVCLP), with dVCLP equals to the incremental programming voltage change.","The number of verify-program cycles (NC) is dependent on the number of voltage levels and various margins of the memory system. For example, for an equivalent 8-bit digital multilevel cell, there are 2=2=256 levels, with N=8. The minimum possible number of verify-program cycles (NC) required would be 256. To cover variations due to cell-to-cell variation, temperature, process corners, an algorithm may require, for example, approximately 1.4\u00d7256=360 verify-program cycles. To cover various margins needed such as for data retention and programming distribution, the number of verify-program cycles required is actually higher. Assuming a factor of 2 due to various margin coverage, the number of verify-program cycles is approximately equal to 720. The exact number of verify-program cycles is typically varied depending on various memory technologies and particular desired performance targets.","For write data rate of 1 mega byte per second and for 8-bit digital multilevel operation with 1024 bytes per page, the write timing per page is, TWRT=# of bytes written in parallel\/data rate=1024 bytes per page\/1 mega bytes\/second=1024 \u03bcs=1.024 ms per page.","Hence the time to execute each program-verify cycle (TPV) must be less than TWRT\/NC=1.024 ms\/720=1.42 \u03bcs. This fast timing coupled with parallel operation of 1024 cells has important implication on memory cell program speed, capacitance loading, power consumption and other effects as will be described below.","Typical process parameters of a sub-micron memory cell are as follows. A typical diffused source line resistance per cell is 100 ohms. A typical bitline resistance per cell is 80 milliohms. A typical silicided row line resistance per cell is 20 ohms. A typical source line capacitance per cell is 2 fF. A typical bitline capacitance per cell is 1.5 fF. And a typical row line capacitance per cell is 3 fF.","Hence for the 8192\u00d716384 array, the total bitline capacitance is CBL=\u02dc16384\u00d71.5 fF=25 pF, where \u201c=\u02dc\u201d is defined as approximately equal to. The total metal bitline resistance RBL=\u02dc16384\u00d70.08=1330 ohms. The total diffused source line resistance is RSL=8192\u00d7100=819 K ohms. The total row line resistance is RWL=8192\u00d720=164 K ohms. For a typical memory system, the diffused source line is strapped by metal along the source line, with approximately 80 milliohms per cell, in this case RSL=8192\u00d70.08=655 ohms.","In conventional stacked gate drain-side CHE programming (abbreviated as CHE flash program), the single cell current is typically 1 ma, which causes a voltage drop along a single metal bitline of =\u02dc1 ma\u00d7RBL=\u02dc1 ma\u00d71330 ohms=1330 millivolts, which is unacceptable since it is much greater than 1 level=8 millivolts. In SSI flash programming (abbreviated as SSI flash program), the typical cell current can be lowered to 1 \u03bca, which causes a voltage drop along a single metal bitline of =\u02dc1 \u03bca\u00d71330 ohms=1.33 millivolts, which is acceptable.","For 1024 cells drawing the cell current (Icell) continuously, the voltage drop (DVCL) along the source line from the driver to the other end follows the geometric equation:\n\n0.5*(1)*8cell*cell,tm\u2003\u2003(1)\n\nwhere R8cell=the metal source line resistance for 8 cells in series=0.08 ohms\u00d78=0.64 ohms, and P=1024.\n","Along the source line, for 1024 cells programming simultaneously, the total current is 1024\u00d71 ma=1.024 A for the CHE flash program and=1024\u00d71 \u03bca=1.024 ma for the SSI flash program. The power needed for the drain side CHE flash programming for parallel page mode operation is unsustainable due to very high current. Additionally, the voltage drop along the metal source line by equation (1) is=\u02dc0.5\u00d71024*1025*0.64*1 ma=336 Volts for CHE. This is unworkable for CHE flash technology. Similarly, the source line voltage drop for the SSI flash=\u02dc336 millivolts. This is also unworkable in the multilevel program for the following reasons.","For a multilevel nonvolatile system, in one program cycle, the cell sensing voltage can only shift (dVR) a maximum of <(Q*V1level) for reliable sensing, where Q was 0.5 in the prior example. However Q could vary from \u2153 to \u215b for long term reliability. This is needed, for example, to allow for sensing margin, verify margin, program disturb, data retention, and endurance. The number of cells programming simultaneously within a selected page can vary between as many as 1024 to as few as only one from one program cycle to the next. Thus the total program current flowing through the common line CL could change by a factor of 1024 from one program cycle to the next. The resulting worst case voltage change in the source line VCL from one program cycle to the next is dVCL=\u02dc336 millivolts for SSI flash. This voltage jump in VCL causes the only remaining programming cell to over program, which causes the cell sensing voltage to shift much greater than the (Q*V1level). Hence, the challenge is to bring the voltage drop dVCL to an acceptable level during programming.","For verifying after programming multilevel memory cells, conventional methods would shut off the read cell currents for cells that have already reached their desired verifying levels, this would cause the voltage shift dVCL in verify as much as in programming as described above. This voltage jump dVCL would couple to the memory cells and cause a large jump in cell sensing voltage. This undesired large jump in cell sensing voltage causes an error in sensing, herein called a sense error VRerr. This sense error should be much less than (Q*V1level). Hence this large jump is unacceptable. The invention solves the problem by enabling the total current all the time whether the cells have been verified or not. This mitigates the change in the source line voltage. However a new problem surfaces as compared to that in programming. As temperature changes from \u221245 C to +85 C the resistance of the source line metal line changes by about 40%, hence the source line voltage drop changes by about 40%, which causes an additional sense error VRerr in read. This sense error should be much less than (Q*V1level) to prevent overall read margin degradation. Therefore, an array architecture is needed to achieve this, as will be described in detail below.","With 1024 cells operating simultaneously, assuming sense current Ircell=10 \u03bca, the total sense current is=1024\u00d710 \u03bca=10.24 ma flowing into the source line. This presents several problems. With power specification for a typical memory chip ICC=20\u201330 ma. This 10.24 ma is a big percentage of the power specification. To deliver 10.24 ma while maintaining a precise voltage level VCLRD, VCLRD is defined as the voltage in read on CL line, requires a challenging decoding and driver scheme, which will be addressed in the description of the multilevel decoding scheme. Large current flowing across the source line also causes the voltage drop as described above.","High data rate, meaning high sense speed and write speed, is required for data intensive application. The speed is proportional to capacitance and voltage swing and inversely proportional to the current,\n\n\u2003\u2003(2).\n","For typical bitline capacitance as calculated above, CBL=25 pF and assuming voltage swing V=1 V, and assuming available current I=10 \u03bca, the time it takes to charge or discharge a bitline as needed in verify or program cycle is, TBL=25 pF*1 V\/10 \u03bca=2.5 \u03bcs. This is greater than the TPV=1.42 \u03bcs as calculated above. At least a 2\u00d7 or better timing is required for TBL to allow for various settling time, sensing time, and programming time. Increasing the current would cause higher power consumption, large decoding driver, and voltage problems as described above.","Further, in programming 1024 cells in parallel, the programming current is supplied from an on-chip voltage multiplier, also known as a charge pump. The on-chip voltage multiplier multiplies the low voltage power supply, e.g., 2.5 V to the required higher voltages. Allowing a reasonable area penalty from the on-chip voltage multiplier, a total current of 100 \u03bca is allowed for programming. The programming current per cell is 100 \u03bca\/1024=0.1 \u03bca. This causes a TBL=25 pF*1 V\/0.1 \u03bca=250 \u03bcs, which is even more severe of a timing problem. Here an improvement of more than 2 order of magnitude or better in speed is needed. The invention describes array architectures with suitable operating methods to achieve this improvement and will be described below.",{"@attributes":{"id":"p-0185","num":"0184"},"figref":["FIG. 3A","FIG. 2A","FIG. 3A","FIG. 2A"],"b":["100","132","101"]},"A block (PSEL)  includes a plurality of circuit blocks (PSELS) S.  shows details of a page select circuit (PSELS) S that selects a pair of bitlines at a time. Transistors A\u2013D are select transistors. Transistors E\u2013H are inhibit transistors. Lines (PP) K, (PP) M, (PP) O, and (PP) Q are complementary signals of lines (PPB) L, (PPB) N, (PPB) P, and (PPB) R, respectively. Line (BLYDRV) Y goes to one y-driver (YDRVS) S inside the block (YDRV) . Block (YDRVS) S will be described in detail later in the description of the multilevel algorithm. Lines (BLTP) P, (BLTP) P, (BLTP) P, and (BLTP) P couple to the bitlines in block  and couple to a set of lines (BLP) , (BLP) , (BLP) , and (BLP)  of the circuit block  in .",{"@attributes":{"id":"p-0187","num":"0186"},"figref":"FIG. 3C","b":["101","101","0","290","0","290","290"]},{"@attributes":{"id":"p-0188","num":"0187"},"figref":["FIG. 4A","FIG. 4A"],"b":["0","290","1","300","130","0","290","0","290","290","220","221","222","223","224","225","226","227","0","240","1","240","2","241","3","241","4","242","5","242","6","243","7","243","0","240","1","242","2","242","3","243","101","0","290","230","231","232","233","234","235","236","237","0","240","1","240","2","241","3","241","4","242","5","242","6","243","7","243","0","274","0","264","3","269","0","262","1","263","2","265","3","266","12","267","13","268","14","270","15","271","0","272","1","273","231","233","235","237","230","232","234","236","0","260","0","261","221","223","225","227","220","222","224","226"]},"Multiple units of the basic array unit (ARYSEG)  are tiled together to make up one sub-array (MFLSUBARY)  as shown in . And multiples of such (MFLSUBARY)  are tiled horizontally to make up the final 8192 columns for a total of 32768\u00d78192=268,435,460 physical memory cells, or called 256 mega cells. The logical array size is 256 mega cells\u00d74 bits per cell=1 giga bits if 4-bit digital multilevel memory cell is used or 256 mega cells\u00d78 bits per cell=2 giga bits if 8-bit digital multilevel memory cell is used. The top bitlines (BLP) , (BLP) , (BLP) , and (BLP)  run from the top of the array to the bottom of the array. The segment bitlines (SBL) A, (SBL) B, (SBL) A, (SBL) B, (SBL) A, (SBL) B, (SBL) A, and (SBL) B only run as long as the number of rows within a segment, for example, 128 rows. Hence the capacitance contributed from each segment bitline is very small, e.g., 0.15 pF.","The layout arrangement of the top bitlines \u2013 in relative position with each other and with respect to the segment bitlines (SBL) A, (SBL) B, (SBL) A, (SBL) B, (SBL) A, (SBL) B, (SBL) A, (SBL) B are especially advantageous in reducing the bitline capacitance. The purpose is to make the top bitlines as truly floating as possible, hence the name of truly-floating-bitline scheme.","In an embodiment as shown in , lines , , and  are in the middle, sandwiched between lines A, B, A and B in the bottom and lines (CL)  in the top. Furthermore, line  is on top of the spacing between lines A and B and line  is on top of the spacing between lines A and B. This has the benefit of reducing significantly the bottom plane capacitance of line  and line  since the oxide below each line is almost doubled. The lines  and  could be positioned on top of lines A and A, respectively, when the sidewall capacitance reduction outweighs the benefit of the bottom plane capacitance reduction. The sidewall capacitance refers to the capacitance resulting from the vertical walls of a line, the bottom plane capacitance refers to the capacitance from the bottom of a line, and the top plane capacitance refers to the capacitance from the top of a line.","In another embodiment, as shown in , the top bitlines \u2013 have been positioned all the way to the top metal of a multi-layer metal integrated circuit system. For example, for a 5-layer metal integrated circuit system, the top bitlines are metal 5 layer. This avoids the top plane capacitance of the top bitlines \u2013. This also reduces the bottom plane capacitance of the top bitlines \u2013 by a factor of as much as 4 if metal 5 is used. The reduction factor of 4 is due to the oxide below the line increasing by a factor of about as much as 4. Also since the top bitlines \u2013 are spaced further apart as compared to the segment bitlines, the sidewall capacitance is reduced significantly. The top bitlines are now almost floating on top of the array. The end effect is more than on order of magnitude reduction in bitline capacitance. Also since the top bitlines \u2013 spacing are relaxed, the width of the top metal lines can be made larger to reduce the metal bitline resistance.","The reduction in bitline capacitance results in a corresponding increase in speed. To help increase the speed in programming, a bitline-stabilization-assisted operating method can be applied and is described as follows. At the beginning of the programming cycle, a bitline stabilization control signal is used to set all the bitlines to a predetermined voltage VBLPRE, e.g., 0.4\u20130.8 V. Then high voltage VCL is applied to selected memory common lines for programming. Now the bitlines only have to move partially to a final voltage. This speeds up the TBL timing.","There is an important transient effect related to bitline capacitance in programming. For high speed writing, each program cycle takes time in the microsecond range. The program bias condition for a memory cell is control gate voltage VCGP,=\u02dc0.7\u20132.5 V, bitline cell current Ipcell,=\u02dc50\u2013500 nA, and common line voltage VCL going from a low,=\u02dc0 V, to a high programming voltage,=\u02dc8\u201313 V. As the VCL ramps from a low to a high voltage, there is a transient current flowing through the memory cell to charge up the bitline node capacitance. This transient current flowing through the cell contributes to the cell programming in addition to the programming current Ipcell. Prior art CHE programming would not be bothered with this effect since the additional transient programming current is small compared to the actual programming current. However, for a very fine programming voltage level control as required for high bits per cell, this effect will cause the programming level to be uncontrollable, making the multilevel memory system useless. The following example is given to appreciate the magnitude of this transient current. Assuming program VCL ramp time=1 \u03bcs, CBL=1 pF, the voltage the bitline has to slew=1 V, then, by equation (2), I=CV\/T=1 pF\u00d71 V\/1 \u03bcs=1 \u03bcA, which can be 10\u00d7 the programming current. Hence a method is needed to reduce the transient programming current.","Two approaches are shown in  to reduce this transient phenomenon. In one embodiment, 2-step ramp rate control approach greatly reduces this transient effect without prolonging the programming time as follows. First VCL ramps fast during TRP to an intermediate voltage VCLINT, e.g., 2\u20136 V, then VCL stays at an intermediate voltage for a finite time TVCLINT, then VCL ramps slow during TRP to a final voltage VCLFIN. The first fast ramp with the flat intermediate time TVCLINT will let transient current flowing through the cell to stabilize most of the cell capacitances such as CBL in a short time and at sufficiently low VCL voltage so that insignificant programming takes place while the transient current is flowing. The TRP is made fast to consume little programming time. The second slow ramp then brings the cell to a final programming voltage without affecting the programming rate since very little current is flowing through the cell in the second ramp.","Another embodiment of the ramp rate control is a fast-slow ramp rate control approach. VCL first ramps fast during TRP to an intermediate voltage VCLINT, then VCL ramps slow during TRP to a final voltage VCLFIN. The first ramp TRP is faster than that of the TRP ramp to allow the transient current during the first ramp TRP to stabilize quickly all the cell capacitances while VCL is low enough to not cause significant programming.","The ramp rate can be generated by a RC network, meaning the rate is controlled by a certain capacitance multiplied by a certain resistance, or by a CV\/I network, meaning the rate is controlled by a certain capacitance multiplied by a voltage swing divided by a certain bias current. Further, the ramp rate can be programmable by programmable fuses as a function of bitline capacitance to optimize the programming time without introducing adverse transient current. That is the ramp rate is made to be faster for smaller bitline capacitance.","The common line CL  is common to four rows of memory cells for the following reason. Allowing 4 mV voltage drop along the CL line during programming to avoid programming error as described previously, with 1024 cells operating simultaneously with 0.1 ala drawn per cell, the voltage drop by equation (1) is, dVCLP=4 mV=0.5*(1024)(1025) R8cell*0.1 \u03bca, hence R8cell=76 milliohms. For a typical CL line with the line width half as wide as the memory cell, the CL resistance per cell is=\u02dc80 milliohms, for 8 cells in series, R8cell is 8\u00d780=640 milliohms, which is much greater than 76 milliohms. Hence by making CL line  four memory cells wide, R8cells is=\u02dc80 milliohms. The reason the width of the line CL  cannot be made arbitrarily large is due to the program disturb. As the high voltage is applied to CL line  in programming, all the cells connected to the CL line  will see the VCL voltage whether they are selected for programming or not. The more cells connected to the same CL line, the longer time for the disturb for the unselected cells.","Shown in  are the metal strapping lines (CLSTRAP) S and (CLSTRAP) S of the common lines that connect the diffusion common lines to the metal common lines. The metal strapping could be done every 8, 16, or 32 memory cells depending on an allowable voltage drop along the common line diffusion inside the strapping. This voltage drop depends on the diffusion common line resistance for a given operating current.","An alternative method that mitigates the voltage drop problem along the common line in the program cycle is by the constant-total-current-program scheme. Namely by keeping the same total current flowing all the time independent of whether the cells have been verified or not, the common line voltage drop is kept constant during programming. This could be done for example, by adding additional switching transistors in the array every 8, 16, 32, or 64 memory cells and switching into the CL line the current equivalent to the current from verified cells.","Table 1 shows the operating conditions for the memory array in read, erase, and program. The array operating conditions are shown for the cell  of the block ARYBLK A in , of a selected page for read and program. The selected cell  is one cell out of 1024 selected cells within a selected page. The other 1023 selected cells belong to the other 1023 ARYSEG  connected horizontally. The array operating conditions are also shown for all cells connected to CL  for erase.","As shown in Table 1, the operating conditions are such that all the unselected memory cells see no voltage other than 0 volts. This reduces significantly the power consumption. This is also particularly advantageous for improved speed in very high-density memory chips since all the necessary driver circuits only see the loading from the selected memory cells. The loading from the whole array is tremendous due to large number of transistors in array, e.g., 256 million transistors, with its tremendous diffusion, metal and poly interconnect parasitics. For example, one bitline capacitance, CBL is 25 pF, with 8192 bitlines the total bitline capacitance is 8192\u00d725 pF=204 nF. This would require a tremendous amount of power during signal switching, for example, to inhibit all the bitlines during programming. Also not shown in Table 1, the unselected control signals ENBLAs, ENBLBs, INHBLAs, and INHBLBs for unselected array units ARYSEG  only see 0 or VDD but not the multiplied high voltage. This again saves significant power and increases speed due to no loading from unselected control circuits.","Another factor that is reduced greatly is the excessive leakage current from the bitline to ground due to junction leakage, bitline to bitline leakage, band-to-band tunneling, and cell subthreshold conduction. For example, for a typical leakage of 10 pA per cell, with 16,384 cells per bitline, the total leakage is 164 nA, which is greater than Ipcell=100 nA. This implies that the multilevel programming will be uncontrolled due to the uncontrollable excessive leakage current contributing to the controlled programming current Ipcell. With the inhibit and segmentation scheme, the total leakage current is reduced to 128\u00d710 pA=1.28 nA, which is much less than Ipcell=100 nA.",{"@attributes":{"id":"p-0204","num":"0203"},"figref":"FIG. 4B","b":["1","274"]},{"@attributes":{"id":"p-0205","num":"0204"},"figref":"FIG. 4C","b":"999"},{"@attributes":{"id":"p-0206","num":"0205"},"figref":["FIG. 4D","FIG. 4A","FIG. 4D"],"b":["1","3","1","3","275","280","999","220","227","200","261","999","120","0","240","0","261","0","0","240","0","240","999"]},{"@attributes":{"id":"p-0207","num":"0206"},"figref":["FIG. 4E","FIG. 4D"],"b":["0","3","281","284","240","247","240","247","275","280"]},{"@attributes":{"id":"p-0208","num":"0207"},"figref":["FIG. 4F","FIG. 4A"]},"Note that it is possible to do one top bitline per one segmented bitline in the ARYSEG . In this case, the sidewall capacitance from one top bitline to adjacent top bitlines increases due to reduced spacing between the top bitline and the adjacent top bitlines.","Note that it is also possible to do one top bitline per more than two segmented bitlines in the ARYSEG . In this case, more decoding transistors are needed in the array to select one segmented bitline out of more than two segmented bitlines, which leads to more die size. However the sidewall capacitance from one top bitline to adjacent top bitlines decreases due to increased spacing between the top bitline and the adjacent top bitlines. This reduction of capacitance may not be significant if the spacing is already wide enough.","An alternative embodiment of reducing the bitline capacitance is by hierarchical interconnect segmentation that is an extension over the previous concept as follows. A first segment bitline running in first layer of metal couples to a plurality of memory cells. A second segment bitline running in second layer of metal is coupled to a plurality of first segment bitlines by bitline segment transistors through vias between metal 1 and metal 2. Third segment bitline running in third layer of metal is coupled to a plurality of second segment bitlines by other bitline segment transistors through vias between metal 1 and metal 2 and metal 3. This can continue to higher metal layers. This approach allows optimization of horizontal spacing, vertical spacing, interconnect width, and interconnect length between different layers of interconnect metals for minimum capacitive coupling between metal interconnect lines. This results in further reduced bitline capacitance.",{"@attributes":{"id":"p-0212","num":"0211"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Array Operating Conditions"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"READ","ERASE","PROGRAM"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SELECTED",{},{},{}]},{"entry":[{},"SEGMENTS:"]},{"entry":[{},"CG0","3\u20136 V","8\u201313 V","0.7\u20132.5 V"]},{"entry":[{},"CG1, 2, 3","0",{},"\u2002\u2009\u20098\u201313 V"]},{"entry":[{},"CG4\u201315","0","0","0"]},{"entry":[{},"Rest of all","0","0","0"]},{"entry":[{},"CG lines"]},{"entry":[{},"CL0","2\u20133 V","0","\u2002\u2009\u20094\u201313 V"]},{"entry":[{},"CL1, 2, 3","0","0","0"]},{"entry":[{},"Rest of all","0","0","0"]},{"entry":[{},"CL lines"]},{"entry":[{},"BL0, 8, 16 . . .","0 TO 2\u20133 V","FL or 0 V","\u2002\u20090\u20130.8 V"]},{"entry":[{},"BL1\u20137, 9\u201315,","VINH","VINH","VINH"]},{"entry":[{},"17\u201323, . . ."]},{"entry":[{},"UNSELECTED"]},{"entry":[{},"SEGMENTS:"]},{"entry":[{},"All CG lines","0 V","0 V","0 V"]},{"entry":[{},"All CL lines","0 V","0 V","0 V"]},{"entry":[{},"All BL lines","0 V","0 V","0 V"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0213","num":"0212"},"figref":"FIG. 6"},"As discussed in the array architecture section, the voltage drop along the common line would cause a programming error as well as sense error in read. Hence the drop is brought down to a manageable level. By partitioning a common line into small line sections, with drivers on both sides of each of the line sections, the voltage drop is reduced. However, prior art partition would cause a tremendous area penalty due to the large amount of decoding lines and circuits. This invention provides an enhanced decoding circuit by routing the interconnect in the higher metal layers and by using circuit configurations suitable for multilevel decoding.","The block (VCGCLPRED)  has been expanded to include sub-blocks inside. Common line predecoder and driver (XCLPREDRV)  provide predecoded common lines with precision voltages to regular memory common lines in block  and . A common line predecoder and driver (XCLSPREDRV)  provides predecoded common lines with precision voltages to spare memory common lines in block . The circuit block  is functional equivalent to circuit . A control gate predecoder (XCGPREDEC)  provides predecoded control gate lines to block . A spare control gate predecoder (XCGSPREDEC)  provides predecoded control gate lines to block . A bitline predecoder (BLXDEC)  provides predecoded bitlines to block (MLMDEC) . All other circuit blocks have been described in association with .",{"@attributes":{"id":"p-0216","num":"0215"},"figref":["FIG. 7","FIG. 9B"],"b":["1","300","1","300","0","290","1","300","301","302","302","1","303","1","304","301","300","1","300","302","303","999","290","1","304"]},{"@attributes":{"id":"p-0217","num":"0216"},"figref":"FIG. 8","b":["301","310","311","154","312","315","313","316","313","314","1","317","314","318","319","333","1","317","777","666","322","777","328","301","323","324","1111","328","301","325","666","329","301","666","326","327","1111","329","301","323","326","1111","324","327","328","329"]},{"@attributes":{"id":"p-0218","num":"0217"},"figref":"FIG. 9A","b":["302","319","341","360","361","329","369","362","313","363","342","369","333","364","365","319","343","329","371","366","313","367","340","371","333","777","301","360","361","364","365","329","369","371","362","363","366","367","777"]},{"@attributes":{"id":"p-0219","num":"0218"},"figref":"FIG. 9B","b":["303","350","318","353","343","329","345","351","352","314","340","345","333","354","318","357","341","329","347","355","356","314","342","347","333","358","319","999","349","359","313","349","333","302"]},"The circuit blocks RDSGPSDEC , RDSGBLDEC , RDSGINHDEC , and RDSUBBLK  are used in the array as shown in  for array selection and inhibit decoding.",{"@attributes":{"id":"p-0221","num":"0220"},"figref":"FIG. 9C","b":["302","0","3","445","0","3","445","950","302","0","3","950","0","3","456","438","319","0","3","445","0","3","456","439","313","0","3","456","5555","0","15"]},{"@attributes":{"id":"p-0222","num":"0221"},"figref":["FIG. 10","FIG. 4A","FIG. 4A"],"b":["304","304","304","304","412","413","418","412","4","414","410","310","311","154","413","4","414","4","415","418","4","415","4","417","770","418","770","328","301","304","4","1","416","422","262","263","265","268","270","271","1","290","423","264","269","1","290","420","951","456","302","444","5555"]},{"@attributes":{"id":"p-0223","num":"0222"},"figref":"FIG. 11A","b":["4","1","416","430","432","434","436","0","440","1","441","2","442","3","443","440","443","0","450","1","451","2","452","3","453","0","3","440","443","951","438","0","456","0","454","439","0","454","5555","446","430","432","434","436","1","447","0","3","450","453","444","431","433","435","437","0","454","5555","439","1","446","1","447","4","417","4","414","304"]},"Four common lines of memory cells are coupled together to one decoded common line CL as shown in the block (ARYSEG)  in . Four blocks of the RDCGCL  are used to provide array block selection as shown in the block (ARYSEG)  in . One array block is defined as including 16 rows and 4 common lines of memory cells. One array block includes a plurality of blocks (ARYBLK) A connected horizontally.","The lines (VXRGND) , (VXCLGND) , and (VXCGGND)  could be individually controlled to be biased at different voltage levels during erase, read, and program to optimize circuit functionality, for instance, to increase the breakdown or to reduce the leakage of MOS decoding transistors.","Note that the same transistors are used for decoding in erase, read, and program operation. In conventional decoding, read decoding is isolated from erase and program decoding since read decoding requires only low voltage and hence the decoding size can be optimized for read speed. Here all decoding is combined together to minimize the die size. Further all decoding is done by NMOS transistors instead of by both PMOS and NMOS transistors as conventionally done. This has the benefit of reducing the capacitive loading. This is so because in deselection one PMOS presents itself as a gate capacitor load while one NMOS only presents itself as a source or drain overlap capacitor load, which is much smaller than a gate capacitor load. Low capacitive loading leads to less power consumption for NMOS decoding. This is against conventional wisdom, which holds that a CMOS circuit is more power efficient than a NMOS circuit.",{"@attributes":{"id":"p-0227","num":"0226"},"figref":"FIG. 11B","b":["4","1","416","438","438","445","950","445","445","0","454"]},{"@attributes":{"id":"p-0228","num":"0227"},"figref":["FIG. 11C","FIG. 12","FIG. 12","FIG. 12"],"b":["1","304","1","304","438","1","446","0","456","0","454","0","454","304","0","454","4","1","416","439","1","447","0","454","5555","439","0","454","5555","439","4","1","416","439","439","0","456","950","4","417","4","414","1","304","446","1","447","4","417","4","414","1","304","1","304","4","1","416"]},{"@attributes":{"id":"p-0229","num":"0228"},"figref":"FIG. 12"},"The block (MLMDECS) , shown in  and also in , includes a plurality of the blocks (RDSGCLPDEC) B and a plurality of the blocks (RDCL) C. Only one block (RDSGCLPDEC) B and one block (RDCL) C per block  are shown in  for clarity. Other blocks have similar connections. The block (MLMDEC) , shown in  and also in , includes a plurality of the blocks (RDSEG) . The block RDSEG  includes a block (RDSGPSDEC)  and a plurality of blocks (RDSUBBLK) . Only the block (RDSGPSDEC)  and one block (RDSUBBLK)  inside one block RDLSEG  are shown in  for clarity. Other blocks have similar connections.","The feedthrough-to-memory uses a single driver to drive both left and right sides of a memory array. The layout of row decoding circuits such as of the block (RDSUBBLK)  is very dense because of the limited height of a typical advanced memory cell, e.g., 0.5\u20131 \u03bcm per cell height, and the very wide width of each decoding transistor, e.g., 20\u201350 \u03bcm, due to their required precision multilevel drive ability. This makes it extremely difficult to route the required lines from the right side across the active circuit of this row decoding circuit to the left side with limited layers of metal interconnect. As shown in , the control lines CG[0:15] A\u2013P and common lines CL [0:3] A\u2013D provides the control signals to the memory cells on the right side as well as the memory cells on the left side. This is also shown in  in block B with lines pointing to the right as well as to the left. Similarly it also shows the control lines from circuit block A and C driving both sides. The feedthrough-to-memory scheme also shows predecoded high voltage lines (ENHVBLK)  and (ENVSUP)  and predecoded low voltage lines (ENB)  and (ENB)  being fed through the memory by running on top of the memory, for example, in metal 4, without interfering with the memory cells underneath. Other control lines could also be fed through the memory. Again this is achievable by three or more metal layers which allow a different circuit configuration with minimal active area. The circuit block C is the precision voltage driver for the common lines CL of the memory cells in addition to the circuit block B. The feedthrough-to-driver scheme shows control signals from circuit blocks B and A being fed through the memory array to the precision voltage drivers C.","The common line segmentation is also shown in . Each metal common line runs the length of the memory core horizontally across the full array with seven circuit blocks (RDCL) C and two circuit blocks (RDSUBBLK)  driving the same common line. The voltage drop across one common line is thus divided into eight voltage drop segments. Each voltage drop segment belongs to each common line of each sub-array block (MFLSUBARY) . Within each voltage drop segment, the voltage value on the left side is same as the voltage value on the right side of the voltage drop segment and the lowest voltage value is in the middle of the voltage drop segment. This is because there is a precision circuit driver (RDLCL) C or (RDCGCL)  on each side of the voltage drop segment. One alternative embodiment of the common line segmentation scheme is to have these common lines physically divided into eight separate common lines. That is, each sub-array block (MFLSUBARY)  shown in  has its separate common line. However, in this case, the deselect transistor S in the block (RDCL) C is no longer optional but necessary to deselect each separated common line.","The voltage level on the control gates is controlled by the voltage on the lines (CGP[0:15]) A\u2013P in circuit block . The voltage on lines (CGP[0:15]) A\u2013P are in turn controlled by a precise bandgap-referred regulated voltage. Hence precision voltage level is provided at the memory control gates. The voltage level on the common lines is controlled by the voltage on the predecoded common lines (CLP[0:3]) A\u2013D in circuit block . The voltage on lines (CLP[0:3]) A\u2013D are in turn controlled by a precise bandgap-referred regulated voltage for each common line driver. Hence precision voltage level is provided at the memory common lines. The programming and sensing current bias are also bandgap-referred; hence they are highly stable.","Note that in  an alternative embodiment is to share one block (RDSGPSDEC)  or A across the full array by doing feedthrough of the outputs of (RDSGPSDEC)  or A across the full memory array. In this case the drive ability of the driver circuit inside block (RDSGPSDEC)  or A should be adequately designed to drive the long interconnect lines.","Note that in  an alternative embodiment is to have a separate block (RDCGCL)  for driving the right side of an array and another separate block (RDCGCL)  for driving the left side of an array. Another alternative embodiment is to share just one CL driver for both left and right sides but to have separate control gate CG drivers for the left side and the right side.","Multilevel Reference System:",{"@attributes":{"id":"p-0236","num":"0235"},"figref":"FIG. 13","b":["106","116","126","146","0","15","760","775"]},{"@attributes":{"id":"p-0237","num":"0236"},"figref":"FIG. 14","b":["719","0","15","700","715","0","15","720","735","106","106","106","126","106","126","106","126","106"]},"A buffer (VRBUFFER)  and a comparator  are inside a block (REFYDRVS) S. The buffer (VRBUFFER)  is used to drive each reference level of (VREF\u2013) \u2013 for all the y-drivers. A buffer circuit without offset auto zero A is used to isolate the reference cell from all capacitance from auxiliary circuits. The offset auto zero cancels out the voltage offset of an analog buffer. The voltage offset of an analog buffer is typically uncontrollable and is caused by threshold voltage mismatch, transistor transconductance mismatch, and systematic offset. This voltage offset would cause an uncertainty in the reference voltage, which would degrade the margin of one voltage level with respect to another voltage level. Line (VBUF)  is used to verify a reference cell is programmed to one desired reference level out of 16 possible reference levels. Line (VBUF)  is used instead of the direct memory cell output for verifying in the verify cycle. This is to include the buffer offset from buffer A in the verifying process. The comparator  is used to do the actual comparison in verify. A buffer with offset auto zero B is used to drive a reference level. Various voltage levels needed for multilevel algorithm are also generated by the buffer B with switch capacitor technique. The auto zero is needed to zero out the offset of this buffer since a typical buffer offset is 10\u201320 mV. This voltage amount if not canceled out would degrade the margin of a reference level, which effectively reduces the voltage margin for each level. Capacitors are needed to accomplish the auto zero and level shifting operation in the buffer B. However as described in the array architecture description, any additional capacitance would adversely degrade the write and read speed. Hence buffer A is inserted between the reference cell and the buffer B so that the reference cell only sees one gate capacitance inside a typical buffer as a capacitor load.","Lines (VREF\u2013) \u2013 are the final reference lines driving into all the y-drivers as needed for verify-program cycles and read cycles. Switch S D couples line (VREFD)  to the input terminal of buffer B when one selected page programs for the first time. Switch S C couples line (VBUF)  to input terminal of buffer B when the same selected page programs for the second time or more without an erase in between program. The reason is that for first time programming, reference levels for data cells come from a reference generator VREFGEN  and for subsequent programming reference levels come from the reference cells in MFLASHREFS A.","For the memory system described herein, there are 8 pages for each row, 4 rows for each block, and 512 bytes per page with a 4-bit digital multilevel memory cell. Since any one page is written or read at any time a complete reference set of 16 levels is reserved for each page instead of for each row. This is done to preserve the operating conditions through the lifetime of a memory system exactly the same for reference cells as regular data cells. This is done for example to make the reference and data cells have the same voltage readout drift over time. For each row, there are 8\u00d716=128 reference cells. This has some small die size penalty. The reference cells are written at the same time as the regular data cells.","After the reference cells are written with the first programming sequence, if subsequent programming cycles are allowed to write other data cells in the same page, the previously programmed reference cells stay in the program inhibit mode. This is accomplished as shown in . A comparator  is used to compare a reference voltage from a bandgap VREF , e.g., 1.2 V, versus a readout voltage from a reference memory cell VREFOUT , for example, level 0, e.g., 0.5V. If the reference cell has not been written, VREF <VREFOUT , then line (REFON)  would be low. If the reference cell has been written, VREF >VREFOUT , then line (REFON)  would be high indicating that the reference cells have been previously written and the reference cells are inhibited in programming.","For subsequent programming cycles after the first programming cycle, the reference voltages for the data cells come from the reference cells and the reference voltages are shifted appropriately to place the data voltages in between the adjacent reference voltages.","The voltage drop along the common line poses a particular problem for a multilevel reference system. Reference cells are needed to track the data cells over temperature, process, or power supply. But as temperature changes, the voltage drop along the common line changes, which causes a sense error. The voltage drop along the line from one end to the other end follows geometrically as described earlier. That is depending on position along the common line, the cells experience different amounts of common line voltage changes, which cause different voltage readout shifts due to different voltage amounts being coupled into the cells. This cannot be corrected by a conventional reference system.",{"@attributes":{"id":"p-0244","num":"0243"},"figref":"FIG. 16","b":["859","856","858","857","1","3","888","857","1","3","888"]},{"@attributes":{"id":"p-0245","num":"0244"},"figref":["FIG. 17","FIG. 16"],"b":"857"},"In , each full array is divided into three sub-arrays (ARYVSUB\u2013) A\u2013C and (ARYVSUB\u2013) D\u2013F respectively. It should be noted that the array could be divided into as many sub-arrays as needed to reduce the voltage error. Also shown in , each sub-array of ARYVSUB\u2013 A\u2013F includes its own complete set of reference cells in the middle. A complete set of reference cells provides all the reference levels, e.g., 16 levels for 4-bit digital multilevel cell per page, for all the pages. One row of reference cells includes 128 reference cells if each row has 8 pages and each reference cell provides one reference level. An alternative embodiment is to have more than one reference cell per level, e.g., 4\u201316 cells per level. This averages out the electrical variation of multiple cells.",{"@attributes":{"id":"p-0247","num":"0246"},"figref":"FIG. 18","b":["862","866","868","868","863","861","867","865","868","868"]},"One alternative embodiment of the reference system is, instead of using 16 reference cells for a 4-bit digital multilevel cell, to use 2 or 4 or 8 reference cells to generate 16 reference levels with level interpolation. That is from reference levels coming from reference cells, the other reference levels are interpolated by using linear or any other interpolation.","Multilevel Algorithm:",{"@attributes":{"id":"p-0249","num":"0248"},"figref":"FIG. 19A","b":["172","0","15","0","15","172","172"]},"Page Programming Cycle:",{"@attributes":{"id":"p-0250","num":"0249"},"figref":["FIG. 20","FIG. 26"],"b":["110","114","112","110","114","112","110","114","112","110","110","114","162","152","186","110","114","110","114","110","114","110","114","110","114","110","114","112","110","114","112","116","116","116"]},{"@attributes":{"id":"p-0251","num":"0250"},"figref":["FIG. 21","FIG. 22A"],"b":["182","110","114","112","110","114","112","116","116","116","110","114","112"]},"As shown in , next, for each level L, upper program margin verify voltage UMV(L)=VCELLR(L)\u2212VUM(L) is generated, where VUM(L) is the upper margin voltage for level L. Depending on the data latch output B[0:3] of the data latches in the respective YDRVS S, SYDRVS S, RYDRVS S the appropriate voltage UMV(L) is compared with read back cell voltage VCELLD(L) for all the data cells. If the result of comparison indicates that all upper cell margins are not within limits then a program flag=fail condition is set; BUSY signal is reset and programming cycle is done. If the result of comparison indicates that all the upper cell margins are within limits then a program flag=fail condition is not set and then, for each level L, lower program margin verify voltage LMV(L)=VCELLR(L\u22121)+VLM(L) is generated, where VLM(L) is the lower margin voltage for level L. Depending on the data latch output B[0:3] of the data latches in the respective YDRVS S, SYDRVS S, RYDRVS S the appropriate voltage LMV(L) is compared with read back cell voltage VCELLD(L). If the result of comparison indicates that all lower cell margins are not within limits then a program flag=fail condition is set; BUSY signal is reset and programming cycle is done. If the result of comparison indicates that all the lower cell margins are within limits then a program flag=fail condition is not set and BUSY signal is reset and programming cycle is done. The program flag=fail indicates the programming cycle has been unsuccessful to program the current page. It does not indicate specifically which cell or cells caused the unsuccessful programming.","Page Read Cycle:",{"@attributes":{"id":"p-0253","num":"0252"},"figref":["FIG. 23","FIG. 24","FIG. 25"],"b":["110","114","112","1111","182","3","2","1","0","3","2","1","0","3","2","1","0","110","114","112","3","2","1","0","110","114","112","112","1001","110","1001"]},{"@attributes":{"id":"p-0254","num":"0253"},"figref":"FIG. 26","b":["110","114","112","110","114","112","110","3","10","2","11","1","12","0","13","3","10","2","11","1","12","0","13","3","14","2","15","1","16","0","17","3","10","2","11","1","12","0","13","3","18","2","19","1","20","0","21","3","14","2","15","1","16","0","17","3","18","2","19","1","20","0","21","140","110","144","142","114","112","3","22","2","23","1","24","0","25","3","10","2","11","1","12","0","13","3","14","2","15","1","16","0","17","3","22","2","23","1","24","0","25","3","10","2","11","1","12","0","13","3","22","2","23","1","24","0","25","26","0","15","27","27","28","164","29","28","27","30","28","164","31","32","33","32","33","110","114","112","34","35","31","35","120","110","124","122","114","112","0","15","750"]},{"@attributes":{"id":"p-0255","num":"0254"},"figref":["FIG. 27","FIG. 2C"],"b":["28","31","34","55","26","27","58","27","59","29","59","29","29","59","29","59","30","59","30","59","40","59","1","43","41","59","2","44","40","3","10","2","11","112","0","13","40","49","49","2","2","52","49","48","1","45","3","47","53","48","2","46","35","1","45","3","47","2","46","35","27","1","45","57","4","54","3","47","2","46","4","50","5","60","4","50","5","51","5","51","4","50","5","51","56","57","4","50","5","51","35","53","52","4","50","5","51"]},"After the page program command and the address of the page to be program is issued, the data to be programmed is loaded in the data latches DATALAT , DATALAT , DATALAT , DATALAT  of each of the YDRVS S, SYDRVS S or RYDRVS S. The REFERENCE MULTIPLEXER  then couples one of the inputs VR through VR to its output VROUT . During a program verify cycle VREFD() through VREFD() are available on the VR through VR lines respectively. VR through VR are commonly coupled to REFERENCE MULTIPLEXER  of all the YDRV , SYDRV , RYDRV . The REFYDRVS S have the data latches internally set. In this embodiment there are 16 REFYDRVS S. Each REFYDRVS S is used for a specific level. For example, the data latches of a REFYDRVS S used for level 5 will be internally set to program level 5 into reference cells coupled to it. VR through VR are commonly coupled to REFERENCE MULTIPLEXER  of all the REFYDRVS S. During a program verify cycle, VREFR() through VREFR() are respectively available at the VR through VR lines of a REFYDRVS S. Depending on the output B, B, B, B of the data latches DATALAT , DATALAT , DATALAT , DATALAT  within each YDRVS S, SYDRVS S, SYDRVS S one specific voltage VREFD() through VREFD() is output to the input of the VOLTAGE COMPARATOR . Depending on the output B, B, B, B of the data latches DATALAT , DATALAT , DATALAT , DATALAT  within each REFYDRV  one specific voltage VREFR() through VREFR() is output to the input of the VOLTAGE COMPARATOR .","The latch  within each REFYDRVS S, YDRVS S, SYDRVS S and RYDRVS S are all reset by pulsing line RBYLATCOMP . RBYLATCOMP  is commonly connected to the reset input of the latch  within each REFYDRVS S, YDRVS S, SYDRVS S, and RYDRVS S. After latch  is reset, COMLATQ  is at logic low. The NAND  then outputs logic high to line NDO . Output of INV  then is at logic low on line INVO . With NDO  at logic high and INVO  at logic low transistors N  and P  couple BLIN  to N . P  de-couples the inhibit voltage VIH  from BLIN . The memory cell is placed in the voltage read mode and the cell read back voltage VCELLR(L) or VCELLD(L) is available on BLIN . At this point, the VOLTAGE COMPARATOR  compares the voltages at its inputs. If voltage on BLIN  is higher then voltage on VROUT  the output COMPOUT  is low, otherwise it is high. At this time a positive going strobe pulse is applied to the ENLATCOMP  common to all the latches  in REFYDRVS S, YDRVS S, SYDRVS S and RYDRVS S, to latch the status of line COMPOUT . If COMPOUT  is low, then the COMLATQ  remains at logic low.","If COMPOUT  is high, then the COMLATQ  switches to logic high. If during an iteration of verify-program cycles any one of the latches  latches a logic high on COMLATQ , called a program inhibit state, then for that specific REFYDRVS S, YDRVS S, SYDRVS S or RYDRVS S, the line NDO  is at low and the line INVO  is at logic high. With latch  in a program inhibit state, BLIN  is de-coupled from ND  and there is no current load, whereas, BLIN  is coupled to the inhibit voltage VIH  through P . With latch  in the program inhibit state, further programming pulses do not cause programming.","The line COMPOR  is connected in a wire-OR fashion to all the COMPOR  lines of each REFYDRVS S, YDRVS S, SYDRVS S or RYDRVS S. There is a pull up load coupling the COMPOR  line to the power supply. Similarly, the line COMPORB  is connected in a wire-OR fashion to all the COMPORB  lines of each REFYDRVS S, DRVS S, SYDRVS S or RYDRVS S. There is a pull up load coupling the COMPORB  line to the power supply. The COMPORB line  goes high whenever all the latches  have reached the program inhibit mode. When the Program Pulse Count=MAXPC is reached, the ALGOCNTRL  latches the status of COMPORB line  in a status latch in block INPUT LOGIC . The status latch can be read at one of the IO[0:7]  lines by the external host. If ALGOCNTRL  latches a logic low in the status latch in block INPUT LOGIC  then a program fail condition is reached and the ALGOCNTRL  goes out of the page programming cycle.","If at the end of any verify-program iteration, the COMPOR  line goes high, the ALGOCNTRL  sequences to the margin verify mode. All latches  are reset. All cells are placed in the voltage read mode by READB  at logic low. At this time inhibit voltage is de-coupled from BLIN  and current bias transistor N  is coupled to BLIN . Cell voltages VCELLR(L) or VCELLD(L) are respectively available on BLIN  of a REFYDRVS S or BLIN  of YDRVS S, SYDRVS S, or RYDRVS S. During program margin verify the voltages read back from the data cells are checked for adequate margin from voltages read back from reference cells for each programmed level L. In the Upper Program Margin Verify mode, voltages UMV() through UMV() are placed on the VR through VR(). Depending on the output B, B, B, B of the data latches DATALAT , DATALAT , DATALAT , DATALAT  within each YDRVS S, SYDRVS S, RYDRVS S one specific voltage UMV() through UMV() is output to the input VROUT  of the VOLTAGE COMPARATOR . At this time the VOLTAGE COMPARATOR  compares the voltages at its inputs. If voltage on BLIN  is higher then voltage on VROUT  the output COMPOUT  is low, otherwise it is high. At this time a positive going strobe pulse is applied to the ENLATCOMP  common to all the latches  in YDRVS S, SYDRVS S and RYDRVS S, to latch the status of line COMPOUT . If COMPOUT  is low, then the COMLATQ  remains at logic low. If COMPOUT  is high, then the COMLATQ  switches to logic high. At this time, if LGOCNTRL  latches a logic low in the status latch in INPUT LOGIC  block by looking at the status of the COMPORB  line, then a program fail condition is reached and the ALGOCNTRL  goes out of the page programming cycle. Otherwise, ALGOCNTRL  sequences to the Lower Program Margin Verify mode.","In the Lower Program Margin Verify mode, all latches  are reset. Voltages LMV() through LMV() are placed on the VR through VR(). Depending on the output B, B, B, B of the data latches (DATALAT) , (DATALAT) , (DATALAT) , (DATALAT)  within each YDRVS S, SYDRVS S, RYDRVS S one specific voltage LMV() through LMV() is output to the input VROUT  of the VOLTAGE COMPARATOR . At this time the VOLTAGE COMPARATOR  compares the voltages at its inputs. If voltage on BLIN  is higher then voltage on VROUT  the output COMPOUT  is low, otherwise is high. At this time a positive going strobe pulse is applied to the ENLATCOMP  common to all the latches  in YDRVS S, SYDRVS S and RYDRVS S, to latch the status on line COMPOUT . If COMPOUT  is low, then the COMLATQ  remains at logic low. If COMPOUT  is high, then the COMLATQ  switches to logic high. At this time, if ALGOCNTRL  latches a logic low in the status latch in INPUT LOGIC  block by looking at the status of the COMPOR line , then a program fail condition is reached and the ALGOCNTRL  goes out of the page programming cycle.","During page read cycle, after page read command and the page address is issued, the reference and the data cells are placed in the voltage read mode. At this time all the B[0:3] lines output . VR through VR have VCELLR() through VCELLR(). VCELLR() through VCELLR() are the voltages read out of the reference cells of the page being read. Under the control of the ALGOCNTRL  block 4 bits are sequentially read into the data latches (DATALAT) , (DATALAT) , (DATALAT) , (DATALAT) . For example, B is read by forcing the output of DATALAT to output B=0. At this time B[0:3]=. The REFERENCE MULTIPLEXER  then outputs VCELLR() on the VROUT  in each of the YDRVS S, SYDRVS S and RYDRVS S. The output COMPOUT  of the VOLTAGE COMPARATOR  is high or low depending on whether voltage VCELLD(L) on the BLIN  is lower or higher relative to voltage VCELLR() on line VROUT . If COMPOUT  is high then a logic high is latched into DATALAT  and B=0, otherwise logic low is latched and B=1. Next, B is read by forcing the output of DATALAT  to output B=0. At this time B[0:3]=B. B is the output of DATALAT  from previous sequence. The REFERENCE MULTIPLEXER  then outputs VCELLR(L), depending on B on the VROUT  line in each of the YDRVS S, SYDRVS S and RYDRVS S. The output COMPOUT  of the VOLTAGE COMPARATOR  is high or low depending on whether voltage VCELLD(L) on the BLIN  is lower or higher relative to voltage VRCELL(L) on line VROUT . If COMPOUT  is high then a logic high is latched into DATALAT  and B=0, otherwise logic low is latched and B=1. In this manner, the next two sequences latch two bits into the DATALAT  and DATALAT .","After all 4 bit from the cell are latched into the DATALAT , DATALAT , DATALAT , DATALAT  for all the YDRVS S, SYDRVS S and RYDRVS S, the restore margins are checked. All latches  are reset. First the RESTORE LOW margin is checked. At this time, for each level 0 through 15, MARGIN RESTORE LOW Voltage VRSTRL() through VRSTRL() is placed at the VR through VR lines respectively. Depending on each outputs B, B, B , B of the data latches DATALAT , DATALAT , DATALAT , DATALAT  within each YDRVS S, SYDRVS S and RYDRVS S, the REFERENCE MULTIPLEXER  outputs one of VRSTRL() through VRSTRL() on line VROUT  going into the positive input of the VOLTAGE COMPARATOR . ENLATCOMP  is strobed with the positive pulse to latch the status of the COMPOUT  line. If data cell read out voltage VCELLD(L) on BLIN  line is higher than voltage VRSTRL(L) on VROUT  line then COMLATQ  remains at logic low and COMLATQB  at logic high. Otherwise, COMLAT  is at logic high and COMLATQB  at logic low. At this time, if ALGOCNTRL  latches a logic low in the RESTORE LOW latch in INPUT LOGIC  block by looking at the status of the COMPORB line , then a restore low flag condition is reached. Next, all latches  are reset.","Next the RESTORE HIGH margin is checked. At this time, for each level 0 through 15, MARGIN RESTORE HIGH Voltage VRSTRH() through VRSTRH() is placed at the VR through VR lines respectively. Depending on each outputs B, B, B, B of the data latches DATALAT , DATALAT , DATALAT , DATALAT  within each YDRVS S, SYDRVS S and RYDRVS S, the REFERENCE MULTIPLEXER  outputs one of VRSTRH() through VRSTRH() on line VROUT  going into the positive input of the VOLTAGE COMPARATOR . ENLATCOMP  is strobed with the positive pulse to latch the status of the COMPOUT  line. If data cell read out voltage VCELLD(L) on BLIN  line is higher than voltage VRSTRH(L) on VROUT  line then COMLATQ  remains at logic low and COMLATQB  at logic high. Otherwise, COMLAT  is at logic high and COMLATQB  at logic low. At this time, if ALGOCNTRL  latches a logic low in the RESTORE HIGH latch in INPUT LOGIC  block by looking at the status of the COMPOR line , then a restore high flag condition is reached.","At this time, 4 bits from every cell with the page being read are latched into the respective data latches within each YDRVS S, SYDRVS S and RYDRVS S. Next under the control of the READ CLOCK data is sequentially read on IO[0:7]. If after READ CLOCK the RED_ADD_TRUE=Y condition is true then the data is read from the addressed RYDRVS S otherwise data is read from the addressed YDRVS S or SYDRVS S.",{"@attributes":{"id":"p-0266","num":"0265"},"figref":"FIG. 19B","b":"172"},{"@attributes":{"id":"p-0267","num":"0266"},"figref":["FIG. 22B","FIG. 19B","FIG. 22B","FIG. 22A"]},{"@attributes":{"id":"p-0268","num":"0267"},"figref":["FIG. 22C","FIG. 22B","FIGS. 23 and 24"]},"The embodiment shown in  can be used in combination with the embodiment shown in . As discussed in the multilevel reference system section above, the embodiment shown in  can be used when a selected page programs for the first time after block erase. For subsequent page programming cycles on the same page, the embodiment shown in  is advantageous since the VCELLR(L) values may shift between initial page programming and subsequent page programming.",{"@attributes":{"id":"p-0270","num":"0269"},"figref":"FIG. 28","b":"2800"},"The memory system  comprises a plurality of memory arrays  arranged in rows and columns of memory arrays . Each memory array  comprises a plurality of memory subarrays , a plurality of local sense amplifiers , and a plurality of global sense amplifiers . In one embodiment, a local sense amplifier  is disposed adjacent to a memory subarray . In another embodiment, the local sense amplifier  is shared between a plurality of memory subarrays . The local sense amplifier  reads the contents of the memory cells within the corresponding memory subarray . The memory subarrays  are arranged in rows and columns. The local sense amplifiers  coupled to a column of memory subarrays  are coupled to a global sense amplifier . The memory cells may include redundant cells, reference cells or spare cells.",{"@attributes":{"id":"p-0272","num":"0271"},"figref":"FIG. 29A","b":"2900"},"The inverter mode sensing circuit  comprises a PMOS transistor , a plurality of NMOS transistors  and , a feedback circuit , a plurality of memory cells , and a comparator . For clarity, only one memory cell  and one NMOS transistor  are shown for a subarray, but the subarray comprises a plurality of memory cells  arranged in columns. Each column has a corresponding NMOS transistor  or a plurality of NMOS transistors  arranged in series. Only one column with one memory cell  is shown.","The comparator  determines the voltage of the memory cell by comparing the cell voltage (VCELL)  to a reference voltage (VREF)  in a manner described above. The PMOS transistor , the NMOS transistors  and  and the memory cells  are coupled in series between the supply voltage and ground. The selected memory cell  is read by applying a control gate reference voltage (VCGRD)  on the control gate of the memory cell . The column of memory cells  and an associated bit line has a capacitance  that slows the sensing of the memory cells . The NMOS transistor  functions as a switch to couple the column of memory cells  to the sensing portion of the circuit. The feedback circuit  controls biasing of the NMOS transistor  to stabilize the cell voltage . The drain of the diode connected PMOS transistor  is coupled to the cell voltage . Inverter mode sensing may also be referred to as current mode sensing or common source sensing. In another embodiment of current mode sensing, the source line (CL) (as shown coupled to ground) and the bitline are interchanged, and thus the voltage on the source line is coupled to the readout voltage . In this case, the array architecture uses only one source line in read at a given time, for example by multiplexing through decoder circuitry or over time. This mode is to be known as Inverse Current Mode sensing.",{"@attributes":{"id":"p-0275","num":"0274"},"figref":"FIG. 29B","b":"2950"},"The voltage sensing circuit  is similar to the inverter mode sensing circuit  except that a current source  replaces the PMOS transistor  and is coupled to ground, the memory cell  is coupled to a reference bias, and the NMOS transistor  and the feedback circuit  are omitted. The voltage mode sensing may also be referred to as source follower sensing.",{"@attributes":{"id":"p-0277","num":"0276"},"figref":"FIG. 30","b":"3000"},"The memory array  includes a plurality of voltage mode sensing circuits . The voltage mode sensing circuit  comprises a PMOS transistor , a plurality of NMOS transistors , , , a feedback circuit , a plurality of memory cells , a current source (IRCELL) , and a comparator . For clarity, only one memory cell , one NMOS transistor , and one NMOS transistor  are shown for a subarray, but the subarray comprises a plurality of memory cells  arranged in columns. Each column has a corresponding NMOS transistor . Only one column with one memory cell  is shown. Possible decoding circuitry between the current source  and the memory cell  and between the current source  and the NMOS transistor  is not shown.","The comparator  determines the voltage of the memory cell by comparing a cell voltage (VCELL)  to a reference voltage (VREF)  in a manner described above. The PMOS transistor , the NMOS transistors ,  and  are coupled in series between the supply voltage and ground. The current source  is coupled between the gate of the NMOS transistor  and ground. The memory cell  is coupled between a reference voltage (VCLRD) and the common node formed of the current source  and the gate of the NMOS transistor .","The selected memory cell  is read by applying a control gate reference voltage (VCGRD)  on the control gate of the memory cell . The biasing of the gate of the NMOS transistor  by the current source  and the memory cell  controls the voltage on the bit line.","The NMOS transistor  functions as a switch to couple the column of NMOS transistors  and the associated memory cells  to the sensing portion of the circuit. The feedback circuit  controls biasing of the NMOS transistor  to stabilize the cell voltage . The drain of the diode connected PMOS transistor  is coupled to the cell voltage .",{"@attributes":{"id":"p-0282","num":"0281"},"figref":"FIG. 31","b":"3100"},"The voltage mode sensing circuit  comprises a plurality of memory subarrays , a plurality of local sense amplifiers , and a plurality of global sense amplifiers . The local sense amplifier  includes a local source follower stage. The global sense amplifier  includes a common source stage.","The memory array  includes columns of memory cells  coupled to first bitlines .","Each local sense amplifier  is coupled to a memory subarray . In one embodiment, the local sense amplifier  is disposed adjacent the memory subarray . The local sense amplifier  includes a selection circuit  that couples a selected bitline  to a bitline . In one embodiment, the selection circuit  comprises transistors. The local sense amplifier  senses the selected memory cell on the bitline  and provides a voltage to a global sense amplifier .","The local sense amplifier  comprises an NMOS transistor  coupled between the bitline  and ground, and includes a gate coupled to the bitline . A current source  is coupled between the gate of the NMOS transistor  and ground.","The global sense amplifier  comprises a comparator , a PMOS transistor  and a selection circuit . The selection circuit  couples the selected one of the bitlines  to a common node formed of a voltage cell input  of the comparator  and the drain of the diode connected PMOS transistor . A reference voltage  is applied to the second input of the comparator .","The local sense amplifier  provides a larger voltage range by using optimally low current bias. The global sense amplifier  includes a common source stage with a PMOS transistor  as a load, and buffers the column capacitance.","The voltage mode sensing circuit  further comprises a plurality of reference subarrays , a plurality of local sense amplifiers , and a plurality of global sense amplifiers . The reference subarrays  comprise a plurality of reference cells for storing reference signals. In one embodiment, the reference subarrays  are similar to the memory subarrays . The local sense amplifiers  read the reference subarrays . In one embodiment, the local sense amplifiers  are similar to the local sense amplifiers . The global sense amplifiers  detect and amplify the voltage from the local sense amplifiers .","The global sense amplifier  comprises a comparator , a PMOS transistor  and a selection circuit , which are arranged in similar manner as the comparator , the PMOS transistor  and the selection circuit  of the global sense amplifier , except the comparator  is configured as a buffer. The comparator  serves as a comparator in sensing the reference cells and serves as a buffer for driving the reference level.",{"@attributes":{"id":"p-0291","num":"0290"},"figref":"FIG. 32","b":"3200"},"The voltage mode sensing circuit  includes like elements as the voltage mode sensing circuit  () and are given like reference numbers. The voltage mode sensing circuit  comprises a memory array , a plurality of local sense amplifiers  and a plurality of global sense amplifiers . The local sense amplifier  includes a local source follower stage and includes a PMOS source follower as part of the global sense amplifier. The global sense amplifier  includes a source follower stage.","Each local sense amplifier  is coupled to a memory subarray . In one embodiment, the local sense amplifier  is disposed adjacent the memory subarray . The local sense amplifier  includes a selection circuit  that couples a selected bitline  to a bitline . In one embodiment, the selection circuit  comprises transistors. The local sense amplifier  senses the selected memory cell on the bitline  and provides a voltage to a global sense amplifier .","The local sense amplifier  comprises a PMOS transistor  coupled between the bitline  and ground, and includes a gate coupled to the bitline . A current source  is coupled between the gate of the PMOS transistor  and ground. The local sense amplifier  provides a maximum voltage range by using low current bias.","The global sense amplifier  comprises a comparator , a current source  and a selection circuit . The current source  couples the supply voltage to the cell voltage terminal  of the comparator  to ground. The selection circuit  couples the selected one of the bitlines  to a common node formed of a voltage cell input  of the comparator  and the current source . A reference voltage  is applied to the second input of the comparator .","The global sense amplifier  buffers the column capacitance.","The voltage mode sensing circuit  further comprises a plurality of reference subarrays , a plurality of local sense amplifiers , and a plurality of global sense amplifiers . The reference subarrays  comprise a plurality of reference cells for storing reference signals. In one embodiment, the reference subarrays  are similar to the memory subarrays . The local sense amplifiers  read the reference subarrays . In one embodiment, the local sense amplifiers  are similar to the local sense amplifiers . The global sense amplifiers  detect and amplify the voltage from the local sense amplifiers .","The global sense amplifier  comprises a comparator , a current source  and a selection circuit , which are arranged in similar manner as the comparator , the current source  and the selection circuit  of the global sense amplifier , except the comparator  is configured as a buffer. The comparator  serves as a comparator in sensing the reference cells and serves as a buffer for driving the reference level.",{"@attributes":{"id":"p-0299","num":"0298"},"figref":"FIG. 33","b":"3300"},"The voltage mode sensing circuit  includes like elements as the voltage mode sensing circuit  () and are given like reference numbers. The voltage mode sensing circuit  comprises a memory array , a plurality of local sense amplifiers  and a plurality of global sense amplifiers . The local sense amplifier  includes a local source follower stage and includes an NMOS source follower as part of the global sense amplifier. The global sense amplifier  includes a source follower stage.","Each local sense amplifier  is coupled to a memory subarray . In one embodiment, the local sense amplifier  is disposed adjacent the memory subarray . The local sense amplifier  includes a selection circuit  that couples a selected bitline  to a bitline . In one embodiment, the selection circuit  comprises transistors. The local sense amplifier  senses the selected memory cell on the bitline  and provides a voltage to a global sense amplifier .","The local sense amplifier  comprises an NMOS transistor  coupled between the bitline  and a supply voltage terminal, and includes a gate coupled to the bitline . A current source  is coupled between the gate of the NMOS transistor  and ground. The local sense amplifier  provides a maximum voltage range by using low current bias.","The global sense amplifier  comprises a comparator , a current source  and a selection circuit . The current source  couples the voltage terminal  of the comparator  to a ground terminal. The selection circuit  couples the selected one of the bitlines  to a common node formed of a voltage cell input  of the comparator  and the current source . A reference voltage  is applied to the second input of the comparator . The global sense amplifier  is selectively coupled to the bitline to compare the cell voltage to a reference voltage . The global sense amplifier  buffers the column capacitance.","The voltage mode sensing circuit  further comprises a plurality of reference subarrays , a plurality of local sense amplifiers , and a plurality of global sense amplifiers . The reference subarrays  comprise a plurality of reference cells for storing reference signals. In one embodiment, the reference subarrays  are similar to the memory subarrays . The local sense amplifiers  read the reference subarrays . In one embodiment, the local sense amplifiers  are similar to the local sense amplifiers . The global sense amplifiers  detect and amplify the voltage from the local sense amplifiers .","The global sense amplifier  comprises a comparator , a current source  and a selection circuit , which are arranged in similar manner as the comparator , the current source  and the selection circuit  of the global sense amplifier , except the comparator  is configured as a buffer. The comparator  serves as a comparator in sensing the reference cells and serves as a buffer for driving the reference level.","In another embodiment, the local sense amplifier is a common source amplifier, and the global sense amplifiers are NMOS source follower stages or PMOS source follower stages.","In another embodiment, the local sense amplifier is a common source amplifier, and the global sense amplifiers are common source amplifiers.",{"@attributes":{"id":"p-0308","num":"0307"},"figref":"FIG. 34","b":"3400"},"The comparators , , , and  of  maybe the global sense amplifier .","The sense amplifier  comprises an operational amplifier , a pair of capacitors  and , and a plurality of switches  and .","The capacitors  and  couples respective inputs  and  of the operational amplifier  to the switch .","In response to an auto zero (AZ) command , the switches  selectively couples an output  of the operational amplifier  to the input  to equalize the voltages on the output  and input , and selectively couples an output  of the operational amplifier  to the input  to equalize the output  and the input . In the auto zero mode, the voltage on A terminals of the capacitors  and  are set equal to the reference voltage (VREF) , and the B terminals of the capacitors  and  are equalized to the complementary outputs of the operational amplifier . The switch  is switched by an evaluation (EVA) command  to connect the cell voltage (VCELL)  to the other end of the capacitor  for comparison from the operational amplifier .","The switch  selectively applies the reference voltage (VREF)  to the capacitor  in response to the evaluation (EVA) command . The switch  also selectively applies either the reference voltage (VREF)  or a cell voltage (VCELL)  to the capacitor  in response to the evaluation (EVA) command . The evaluation command  equalizes the signals on terminals A and A of the capacitors  and .","In an alternate embodiment, the nodes B and B of the capacitors  and  are reset to a fixed bias voltage. In another embodiment, the nodes B and B of the capacitors  and  are shorted together.","By using a capacitor for sensing, the input common load range to the operational amplifier (or comparator) is substantially constant and independent of the memory cell voltage or current.",{"@attributes":{"id":"p-0316","num":"0315"},"figref":"FIG. 35","b":"3500"},"The autozero sense amplifier  comprises a plurality of PMOS transistors  and , a plurality of NZ NMOS transistors  and , a plurality of NMOS transistors  through , a plurality of capacitors  and  and a plurality of transfer gates  through .","The PMOS transistors  and  and the NMOS transistors ,  and  and the NZ NMOS transistor  are arranged as a differential pair. The NMOS transistors  and  provide the differential input pair. The NZ NMOS transistor  and the NMOS transistor  provide bias for the NMOS transistor  and . The PMOS transistors  and  are coupled for cross-coupled loading. The PMOS transistor  is coupled between the supply voltage and an output terminal . A bias voltage  is applied to the gates of the NZ NMOS transistors  and  and the NMOS transistors  and .","The NMOS transistors  and  provide an NMOS coupled internal latch, which is active while the differential input pair is on. The drain of the NMOS transistor  is coupled to the drain of the NMOS transistor  and the gate of the NMOS transistor . The drain of the NMOS transistor  is coupled to a common node formed of the drain of the NMOS transistor  and gate of the NMOS transistor . The NZ NMOS transistor  and the NMOS transistor  provide bias for the NMOS transistors  and  and are coupled between the common node formed of the sources of the NMOS transistors  and , and ground.","The transfer gate  couples the drains of the PMOS transistors  and  and the output  to each other for equalization and quick recovery for the next comparison in response to a release signal  and an inverted release signal .","The capacitor  couples the gate of the NMOS transistor  to first terminals of the transfer gates  and  which include a second terminal coupled to a reference voltage . The capacitor  couples the gate of the NMOS transistor  into first terminals of the transfer gates  and , which have second terminals coupled to the reference voltage  and a cell voltage , respectively. The transfer gates  and  are controlled by a auto zero signal  and an inverted auto zero signal . The transfer gates  and  are controlled by evaluation signals  and .","The transfer gates  and  couple the drains of the PMOS transistors  and , respectively, to the gates of the NMOS transistors  and , respectively, in response to the auto zero signal  and inverted auto zero signal . The NMOS transistors  and  couple the gates of the NMOS transistors  and , respectively, to ground in response to a strobe signal  to pull down the transistors  and  to turn off the differential pair. The NMOS transistor  couples the sources of the NMOS transistors  and  to the ground in response to the strobe signal  for full level latching.","The array architectures described herein may enable multilevel parallel operation.","A pipelined read operation may be as follows. A first row is selected in a selected subarray, such as subarray  or subarray \/, and the content of selected memory cells are coupled to the local bitline and to the global bitlines while a second row in another subarray  or \/ is selected and the content of the selected memory cells are coupled to the local bitlines but not yet coupled to the global bitlines. After the read operation completes processing the data of the first row, the data of the second row is enabled to couple to the global bitlines to continue the read operation, and a third row in a different subarray  or \/ is selected to enable the content of the selected memory cells to couple to the local bitlines but not yet to the global bitlines. This cycle continues until all desired data are read out. This, for example, enables continuous read of multilevel memory cells.","In another embodiment, pipelined read operation is performed by operating on memory cells in a row in an array, such as memory array , while another row in another memory array  is selected to enable the contents of the memory cells to be ready.","A read-while-read operation may be as follows. A read operation operates on both arrays, such as memory array  (or memory subarrays  or ), simultaneously and the data are available from both arrays possibly at the same time. In this case, for example, data latches are used to latch the data from both arrays. In another embodiment, two sets of data lines may be used to transfer the data from both arrays to an on-chip controller.","A read\/write-while-write\/read operation may be as follows. Similarly while one operation, e.g., read, is executed on an array, such as subarray  or array  or subarrays \/, another operation is executed, e.g., write, on another array such as subarray  or  or subarray \/. This is possible because control circuits associated with decoding and sensing and\/or writing may be embedded for each array.","A read\/erase-while-erase\/read may be as follows. Similarly while one operation, e.g., read, is executed on an array, such as subarray  or  or subarray \/, another operation is executed, e.g., erase, on another array such as subarray  or  or subarray \/. This is possible because each array may have its own decoders and embedded control circuits associated with sensing.","An erase-while-erase operation may be as follows. Similarly while one erase operation is executed on an array, such as subarray  or  or subarray \/, another erase operation is executed on another array, such as subarray  or  or subarray \/. This is possible because each array may have its own decoders.","A write\/erase-while-erase\/write operation may be as follows. Similarly while one operation, e.g., write, is executed on an array, such as subarray  or array  or subarrays \/, another operation is executed, e.g., erase, on another array such as subarray  or  or subarray \/. This is possible because each array may have its own decoders and embedded control circuits associated with sensing and\/or writing.","A write-while-write operation may be as follows. Similarly while one write operation is executed on an array, such as subarray  or  or subarray \/, another write operation is executed on another array, such as subarray  or  or subarray \/. This is possible because each array may have its own decoders and embedded control circuits associated with sensing and\/or writing.",{"@attributes":{"id":"p-0332","num":"0331"},"figref":"FIG. 36","b":"3600"},"The memory system  comprises a plurality of memory arrays  arranged in rows and columns of memory arrays . Each memory array  comprises a plurality of memory subarrays , a plurality of local sense amplifiers , and a plurality of global sense amplifiers . In one embodiment, the local sense amplifier  is disposed adjacent to a memory subarray . In another embodiment, the local sense amplifier  is shared between a plurality of memory subarrays . The local sense amplifier  reads the contents of the memory cells within the corresponding memory subarray . The memory subarrays  are arranged in rows and columns. The local sense amplifiers  coupled to a column of memory subarrays  are coupled to a global sense amplifier . The memory cells may include redundant cells, reference cells, or spare cells. The local sense amplifier  may include an autozero function. In one embodiment, the global sense amplifiers  include an autozero function. In another embodiment, the global sense amplifiers  does not include an autozero function. In another embodiment, the memory system  includes only the global sense amplifiers  at the top level (at the system ), which are shared between the memory arrays .",{"@attributes":{"id":"p-0334","num":"0333"},"figref":"FIG. 36A","b":"3650"},"The memory system  is similar to memory system , but it does not include the global sense amplifiers . In this case, memory subarrays  are similar to the memory subarrays  without the global sense amplifiers , but include buffers  that are disposed locally right after the local sense amplifier  to drive a global bus (not shown) coupled between a sensed and amplified output of the buffer  to global latches (not shown) or output buffers (not shown). This architecture may be most realizable for highest speed. Alternatively, the latches instead of global latches may be disposed locally next to the local sense amplifier .","The memory subarrays  of  may be segmented arrays. The memory subarray  may include status cells disposed in a separate row or rows or same row which indicates status of the subarray\/row such as it is used for data or code storage, whether the subarray\/row is at erase or program state, whether the subarray\/row is good, not-so-good or bad condition, a number of bad cells in a subarray\/row, or degree of cell storage level wearing, or operational status such as bias values for erase\/program\/read bias for each row or page. The memory subarray  may include reference cells disposed in a separate row or rows, which are enabled when a data row is enabled in a verify or a read mode.","The memory subarray  may include reference cells that are read for each page, such as described above, or for each segment.","The local current sense amplifier  may be a current sense amplifier  (), the current sense amplifier  (), the two-stage current sense amplifier  (), a two-stage current sense amplifier  (), a two-stage indirect current sensing amplifier  (), and a two-stage indirect current sensing amplifier  ().",{"@attributes":{"id":"p-0339","num":"0338"},"figref":"FIG. 37","b":"3700"},"A memory system  comprises a plurality of segmented arrays , a plurality of autozero local sense amplifiers , and a plurality of autozero global sense amplifiers . The memory system  may be arranged in a manner similar to the memory system  described above. For clarity,  shows only one segmented array , one autozero local sense amplifier , and one autozero global sense amplifier . The segmented array  comprises a plurality of data memory cells  and a plurality of reference memory cells . For clarity only one data memory cell  and one reference memory cell  are shown. The data cells  and the reference memory cells  are coupled to the corresponding autozero local sense amplifier  for sensing the content of the data memory cell  in comparison with the reference memory cell . The autozero local sense amplifier  may be, for example, one of the sense amplifiers described below in conjunction with . The autozero local sense amplifier and the autozero global sense amplifier are single ended amplifiers.","In another embodiment, the autozero local sense amplifier  may be a current sensing autozero sense amplifier, and the autozero global sense amplifier  may be a voltage sensing autozero sense amplifier, such as described above. In another embodiment, the autozero local sense amplifier  may be a current sensing autozero sense amplifier, and the autozero global sense amplifier  may be a current sensing autozero sense amplifier. In another embodiment, the autozero local sense amplifier  may be a voltage sensing autozero sense amplifier, and the autozero global autozero sense amplifier  may be a current sensing autozero sense amplifier.",{"@attributes":{"id":"p-0342","num":"0341"},"figref":"FIG. 38","b":"3800"},"The memory system  comprises a plurality of segmented memory arrays , a plurality of local autozero sense amplifiers , and a plurality of global sense amplifiers . For clarity,  shows only one segmented memory array , one autozero local sense amplifier , and one autozero global sense amplifier . The memory system  may be arranged in a manner similar to the memory systems  and , except that the autozero local sense amplifier  and the autozero global sense amplifier  may include a differential autozero sense amplifier such as the global sense amplifier  described above in conjunction with . In another embodiment, the memory system  does not include a global sense amplifier . In this case, a differential to single ended output and buffered stage may be coupled locally right after the local sense amplifier  to drive a global bus (not shown) coupled between from a sensed and amplified output of the buffered stage to global latches (not shown) or output buffers (not shown).",{"@attributes":{"id":"p-0344","num":"0343"},"figref":"FIG. 39","b":"3900"},"The memory system  comprises a plurality of memory arrays , and a plurality of global sense amplifiers . For clarity and simplicity, only one memory array  and one global sense amplifier  are shown. The memory  comprises a plurality of data cells , a plurality of reference cells  and a plurality of local sense amplifiers . For clarity and simplicity, only one column of data cells , one column of reference cells , and one local sense amplifier  are shown. A data bitline  couples a column of data cells  to the local sense amplifier . A reference bitline  couples a column of reference cells  to the local sense amplifier . The local sense amplifier  is coupled to the global sense amplifier . The data bitline  and the reference bitline  are disposed in a crossed configuration with the bitlines  and  being disposed so the signal path goes back and forth between the physical location of the columns of data cells  and reference cells . Crossing may provide similar electrical characteristics as a twisted wire pair. A global bitline  couples the global sense amplifier  to the local sense amplifier . Global bitlines  may be arranged in a crossed configuration. One bitline  or  may be crossed in the same metal while the other bitline makes a crossing jump by another metal line, a poly line, or a diffusion over the first bitline.","In another embodiment, the local sense amplifiers  and the global sense amplifiers  may use the sense amplifiers described below in conjunction with .",{"@attributes":{"id":"p-0347","num":"0346"},"figref":"FIG. 40","b":"4000"},"The current sense amplifier  uses autozero or equalization to equalize voltages on an output terminal  and a node  that stores a voltage corresponding to the current on a reference cell bitline (IR)  so that the signal path through the current sense amplifier  is similar for both the data cell bitline (ICELL)  and the reference cell bitline (IR) . The current sense amplifier  may be used in the autozero local sense amplifier  of .","The current sense amplifier  comprises a plurality of inverters  and , a plurality of PMOS transistors  and , a plurality of NMOS transistors  through , and a charge cancellation injection circuit .","The NMOS transistors  and  are arranged as a switch to selectively couple the reference cell bitline (IR)  or the data cell bitline (ICELL)  to a first node . The drain-source terminals of the NMOS transistor  couple the reference cell bitline (IR)  to the first node  in response to a first autozero selection signal  applied to a gate of the NMOS transistor . The drain-power terminals of the NMOS transistor  couple the data cell bitline (ICELL)  to the first node  in response to a second autozero selection signal  applied to a gate of the NMOS transistor . In another embodiment, PMOS transistors (not shown) may be coupled in parallel to the NMOS transistors  and  and controlled by the second autozero selection signal  and the first autozero selection signal , respectively.","The inverters  and  are coupled in series to generate the second autozero selection signal  and the first autozero selection signal , respectively, in response to an autozero control signal  applied to the input of the inverter . In one embodiment, the timing of the generation of the first and second autoselection signals  and , respectively, causes the NMOS transistors  and  operating as switches to break before make.","The drain-source terminals of the diode connected PMOS transistor  couple a supply voltage VSUP to the first node  to generate a current indicative of the voltage on the first node  and correspondingly indicative of the voltage in the respective data memory cell or reference memory cell.","The drain-source terminals of the PMOS transistor  and the NMOS transistor  are coupled in series between the supply voltage and ground to form an output terminal  formed of the common node of the drains of the transistors  and . The gate of the PMOS transistor  is coupled to the common node of the gate and drain of the PMOS transistor  to form a current mirror with the PMOS transistor .","The NMOS transistor  is arranged as a switch to selectively couple the voltage on the common node formed of the output terminal  and the drain terminals of the transistors  and  to a second node  in response to the first autozero selection signal . When the voltage on the output terminal  is coupled to the second node , the voltage on the second node  is indicative of the voltage on the first node , which corresponds to the data cell plus any offset through the data path and the sense amplifier . The drain-source terminals of the NMOS transistor  couple the drain of the NMOS transistor  to the common node formed of the second node  and the gate of the NMOS transistor  to diode connect the NMOS transistor  in response to the first autozero selection signal  applied to the gate of the NMOS transistor .","In another embodiment, a capacitor (not shown) is coupled between the second node  and ground to store charge indicative of the reference memory cell current.","The charge injection cancellation circuit  provides charge injection cancellation caused by the NMOS transistor  switching. The charge injection cancellation circuit  may be an NMOS transistor arranged as a capacitor coupled between the source of the NMOS transistor  and the second autozero selection signal . In one embodiment, the NMOS transistor  is one-half the size of the NMOS transistor . In another embodiment, the drain-source terminals of a PMOS transistor (not shown) may be coupled between the drain-source terminals of the NMOS transistor .","As an overview, the NMOS transistors  and  selectively couple the reference memory cell line (IR)  and the data memory cell (Icell)  to the first node  in response to the first and second autozero selection signals  and , respectively. The data from the reference memory cell line  and the data memory cell line  may be mismatched, but after the data reaches the first node , the current sense amplifier  provides a similar path to eliminate mismatch of the signals from the data memory cell and the reference memory cell when they are compared. The reference level of the reference memory cell is first converted from a current to a voltage and a corresponding voltage is stored on the second data node  and then the data cell is read by applying the current to the first node  and comparing to the reference memory cell stored on the second node  to produce an output signal on the output terminal  indicative of the difference in the voltage on the first node  and the second node  to indicate the difference between the data memory cell and the reference voltage from the reference memory cell.","During a first operation, the current sense amplifier  is operated to store a voltage on the second node  indicative of the reference bitline (IR) . The first autozero selection signal  is set to an enable state, and the second autozero selection signal  is correspondingly set to the disabled state. When the first autozero selection signal  is enabled, the NMOS transistors  and  are turned on. The NMOS transistor  applies the reference current (IR) to the first node  which is applied to the PMOS transistor . The PMOS transistor  mirrors the current from the PMOS transistor . The NMOS transistor  is diode connected because the enabled NMOS transistor  shorts the output terminal to the second node . The voltage on the second node  sustains the current in the PMOS transistor  and the NMOS transistor . The voltage on the second node  corresponds to the reference memory cell current IR plus any offset between the PMOS transistors  and , hence the current in the PMOS transistor  corresponds to the reference memory cell current IR but not necessarily exactly due to any mismatch between the PMOS transistors  and .","During the second operation, the first autozero selection signal  is disabled and the second autozero selection signal  is enabled, to connect the data cell to the first node . The NMOS transistor  is turned on and the NMOS transistors  and  are turned off. The NMOS transistor  provides the data cell current ICELL to the PMOS transistor , which the PMOS transistor  mirrors. The PMOS transistor  compares this current to the current from the NMOS transistor  generated in response to the voltage on the second node . The output voltage VOUT on the output terminal  is the current difference between the two currents multiplied by the output impedance looking into the PMOS transistor  and the NMOS transistor . In biased voltage range, the output impedance is the drain-source resistance of the PMOS transistor  in parallel with the drain-source resistance of the NMOS transistor .",{"@attributes":{"id":"p-0360","num":"0359"},"figref":"FIG. 41","b":"4100"},"The current sense amplifier  is similar to the current sense amplifier , and includes a replica loading circuit comprising a PMOS transistor  and an NMOS transistor  that are arranged to precharge the data cell reference line (ICELL) . Like numbers represent like elements. The current sense amplifier  may be used in the autozero sense amplifier  of .","The drain-source terminals of the diode connected PMOS transistor  and the NMOS transistor  are coupled in series between the supply voltage Vsup and the data memory cell line (ICELL) . The NMOS transistor  is enabled by the first autozero selection signal  applied to the gate thereof. The transistors  and  replicate the loading of the transistors  and . In one embodiment, the PMOS transistor  is the same size as the PMOS transistor . Likewise, the NMOS transistor  is the same size as the NMOS transistor .","When the first autozero selection signal  is enabled, both the NMOS transistors  and  are enabled. The first node  is brought to the level of the reference memory cell line (IR)  as described above, and the data cell line (ICELL)  is precharged. After the second autozero selection signal  is enabled, the NMOS transistor  is disabled and the first node  is brought to the data cell reference as described above, but at a faster speed because of the precharge.",{"@attributes":{"id":"p-0364","num":"0363"},"figref":"FIG. 42","b":"4200"},"The two-stage current sense amplifier  is similar to the current sense amplifier  of , but also includes an output stage. The output stage is autozeroed or equalized to the output of the current sense amplifier  during a first operation. The two-stage current sense amplifier  may be used in the autozero sense amplifier  of .","The two stage current sense amplifier  comprises a current sense amplifier  and an output stage .","The output stage  compares or amplifies the output of the current sense amplifier . The output stage  comprises a PMOS transistor , NMOS transistors  and , and a charge injection cancellation circuit . The drain-source terminals of the PMOS transistor  and the NMOS transistor  are coupled in series between the supply voltage and ground, and form an output terminal  at a common node formed of the drains of the transistors  and . The gate of the PMOS transistor  is coupled to the gate of the PMOS transistor  for biasing that is the same as the same autozero bias condition. The gate of the NMOS transistor  is biased by the output  of the current sense amplifier . The drain-source terminals of the NMOS transistor  diode connect the NMOS transistor  in response to the first autozero selection signal . In one embodiment, the transistors , , and  are similar to respective transistors , , and  to increase gain and speed. The charge injection cancellation circuit  may be an NMOS transistor arranged as a capacitor coupled between the source of the NMOS transistor  and the second autozero selection signal . In one embodiment, the NMOS transistor of the charge injection cancellation circuit  is similar to the charge injection cancellation circuit .","In an alternative embodiment, a decoupling capacitor (not shown) may be coupled between the output of the current sense amplifier  and the common node formed of the gate of the NMOS transistor , the source of the NMOS transistor  and the charge injection cancellation circuit .",{"@attributes":{"id":"p-0369","num":"0368"},"figref":"FIG. 43","b":"4300"},"The two-stage current sense amplifier  is similar to the current sense amplifier  of , but also includes an output stage. The output stage is autozeroed or equalized to the output of the current sense amplifier  during a first operation. The two-stage current sense amplifier  may be used in the autozero local sense amplifier  of .","The two-stage current sense amplifier  comprises the current sense amplifier  and an output stage .","The output stage  inverts and amplifies the output signal from the current sense amplifier . The output stage  comprises a PMOS transistor , NMOS transistors  and , a charge injection cancellation circuit , and a capacitor . The drain-source terminals of the PMOS transistor  and the NMOS transistor  are coupled in series between the supply voltage and ground, and form an output terminal  at the common node formed of the drains of the transistors  and . The gates of the transistors  and  are coupled together to form an inverter of the transistors  and . The drain-source terminals of the NMOS transistor  diode connect the NMOS transistor  in response to the first autozero selection signal . The charge injection cancellation circuit  may be an NMOS transistor arranged as a capacitor coupled between the source of the NMOS transistor  and the second autozero selection signal . The capacitor  is coupled between the output  of the current sense amplifier  and the common node formed of the gates of the transistors  and , the source of the NMOS transistor  and the charge injection cancellation circuit . The capacitor  decouples the output stage  from the current sense amplifier .","In an alternative embodiment, the gate of the PMOS transistor  may be coupled to the PMOS transistor .",{"@attributes":{"id":"p-0374","num":"0373"},"figref":"FIG. 44","b":"4400"},"The two-stage indirect current sensing amplifier  may be used in the autozero local sense amplifier  of .","The two-stage indirect current sensing amplifier  comprises an indirect current input stage , an indirect current sense amplifier , and an output stage . The indirect current input stage  selectively switches between a reference memory cell bitline (IREF)  and a data memory cell bitline (ICELL) . In a first operation, the indirect current input stage  stores a voltage corresponding to the current on the reference memory cell bitline (IREF)  and any offset in the circuit. The two-stage indirect current sensing amplifier  autozeroes or equalizes the output of the indirect current sense amplifier  and the output of the output stage  with the stored voltage. During a second operation, the indirect current input stage  couples the data memory cell bitline (ICELL)  to an input of the indirect current sense amplifier  for comparison with the reference current on the reference memory cell bitline (IREF)  as adjusted by the stored voltage in the indirect current input stage . The indirect current sense amplifier  amplifies the voltage difference, which is further amplified by the output stage .","The indirect current input stage  comprises a plurality of NMOS transistors  through  and a capacitor . The indirect current sense amplifier  comprises a plurality of PMOS transistors  and , a plurality of NMOS transistors  through , and a charge injection cancellation circuit . The output stage  comprises a PMOS transistor , a plurality of NMOS transistors  and , and a charge injection cancellation circuit .","The diode connected NMOS transistor  couples the reference memory cell bitline (IREF)  to ground. The reference memory cell bitline (IREF)  is coupled to the gate of the NMOS transistor  for providing a reference bias and also is coupled to the drain of the NMOS transistor  for selective switching to the capacitor  in response to a first autozero selection signal .","The diode connected NMOS transistor  couples the data memory cell bitline (ICELL)  to ground. The data memory cell bitline (ICELL)  is coupled to the drain of the NMOS transistor  for selective switching to the capacitor  in response to a second autozero selection signal .","The drain-source terminals of the diode connected PMOS transistor  and the NMOS transistor  are coupled in series between the supply voltage VSUP and ground to provide a reference current in response to the reference bias applied to the gate of the NMOS transistor  by the reference memory cell bitline (IREF) . The drain-source terminals of the PMOS transistor  and the NMOS transistor  are coupled in series between the supply voltage VSUP and ground. The gate of the PMOS transistor  is coupled to the common node formed of the gate and drain of the PMOS transistor  to form a current mirror with the PMOS transistor . The drain-source terminals of the NMOS transistor  diode connect the NMOS transistor  in response to being enabled by the first autozero selection signal . The charge injection cancellation circuit  is coupled to the source of the NMOS transistor  to provide charge injection cancellation in response to the second autozero selection signal . The charge injection cancellation circuit  may be an NMOS transistor arranged as a capacitor coupled between the source of the NMOS transistor  and the second autozero selection signal .","In the output stage , the drain-source terminals of the PMOS transistor  and the NMOS transistor  are coupled in series between the supply voltage VSUP and ground, and the drains of the transistors  and  form an output terminal . The gate of the PMOS transistor  is coupled to the common node formed of the gate and drain of the PMOS transistor  to form a current mirror with the PMOS transistor . The drain-source terminals of the NMOS transistor  diode connect the NMOS transistor  and couple the output  of the indirect current sense amplifier  to the output terminal  of the output stage  in response to being enabled by the first autozero selection signal . The charge injection cancellation circuit  is coupled to the source of the NMOS transistor  to provide charge injection cancellation in response to the second autozero selection signal . The charge injection cancellation circuit  may be an NMOS transistor arranged as a capacitor coupled between the source of the NMOS transistor  and the second autozero selection signal .","During the first operation, the first autozero selection signal  is enabled, and the transistors , , and  are enabled to couple the reference memory cell bitline (IREF)  to the capacitor  which stores the voltage corresponding to the current on the reference memory cell bitline (IREF)  and any offset in the circuit, and couples the voltage to the output of the indirect current sense amplifier  and the output  of the output stage . During a second operation, the second autozero selection signal  is enabled, which enables the NMOS transistor  to couple the data memory cell bitline (ICELL)  to the capacitor , which is compared to the stored voltage. The indirect current sense amplifier  amplifies the voltage difference, which is further amplified by the output stage .","The mismatch between the NMOS transistors  and  may not be cancelled in the two-stage indirect current sense amplifier .",{"@attributes":{"id":"p-0384","num":"0383"},"figref":"FIG. 45","b":"4500"},"The two-stage indirect current sensing amplifier  is similar to the indirect current sensing amplifier , but instead includes an inverter arranged output stage. The output stage is autozeroed or equalized to the output of an indirect current sense amplifier during a first operation. The two-stage indirect current sensing amplifier  may be used in the autozero local sense amplifier  of .","The two-stage indirect current sense amplifier  comprises an indirect current input stage , an indirect current sense amplifier  and an output stage . The output stage  comprises a PMOS transistor , a plurality of NMOS transistors  and , a capacitor , and a charge injection cancellation circuit . The transistors  and  are arranged as an inverter gain stage with self bias. The drain-source terminals of the PMOS transistor  and the NMOS transistor  are coupled in series between the supply voltage VSUP and ground, and include gates coupled to each other. The drains of the transistors  and  form an output node . The capacitor  couples the output of the indirect current sense amplifier  to the common node formed of the gates of the transistors  and  to decouple the indirect current sense amplifier  and the output stage . The drain-source terminals of the NMOS transistor  couple the output terminal of the output stage  to the common node formed of the gates of the transistors  and  in response to the first autozero selection signal . The charge injection cancellation circuit  is coupled to the source of the NMOS transistor  in response to the second autozero selection signal . The charge injection cancellation circuit  may be an NMOS transistor arranged as a capacitor coupled between the source of the NMOS transistor  and the second autozero selection signal .","The memory system  of  may be configured to operate at low voltages, e.g. 0. to 1.2 volts. The local sense amplifier  may include a readout circuit that operates to read multilevel memory cells in this voltage range, such as described below in conjunction with .",{"@attributes":{"id":"p-0388","num":"0387"},"figref":["FIG. 46","FIGS. 46","FIGS. 46","FIGS. 34"],"b":["4600","46","47","47","47","48","48","48","46","47","47","47","48","48","48","35","38","57"]},"The memory system  is similar to the memory system  described above in conjunction with , but the local sense amplifier  includes a readout circuit . For clarity,  shows only one memory subarray  and one local sense amplifier , and only one memory cell  is shown in the memory subarray . The readout circuit  may operate in a low voltage range. The readout circuit  may read memory cells that store low voltages and may provide a read signal  indicative of the content of the memory cells .","The readout circuit  comprises a buffer  and a resistor . The resistor  provides feedback between an output and an inverting input of the buffer . The inverting input of the buffer  is coupled to the bitline for coupling to the memory cells . A non-inverting input of the buffer  is coupled to a reference voltage from a reference memory cell (not shown).","As an illustrative example, the voltage stored in the memory cell  and the voltage (VBITLN) on the bitline may be in the range of 0.0 through 1.0 volts. The minimum supply voltage (VDD) equals the voltage (VBITLN) on the bitline plus a differential operating voltage (dVOP), for example 0.5 volts. A control gate voltage (VCGR) of 1.8 to 2.4 volts is applied to the control gate of the memory cell . The memory cell  operates in a linear region or saturation. During a read or verify, the bitline voltage (VBITLN) may be 0.2 V or 0.6 V. The read signal  output from the comparator  may be in a range of 0.2 to 0.4 volts or 0.8 to 1.2 volts.",{"@attributes":{"id":"p-0392","num":"0391"},"figref":"FIG. 46A","b":"4650"},"The memory system  is similar to the memory system  described above in conjunction with , but the local sense amplifier  includes a readout circuit  that may operate in a low voltage range. The readout circuit  may read memory cells that store low voltages and may provide a read signal  indicative of the content of the memory cells . The readout circuit  comprises a resistor  coupled between the supply voltage and the output , which is coupled to the bitline coupled to the memory cell .",{"@attributes":{"id":"p-0394","num":"0393"},"figref":"FIG. 47","b":"4700"},"The memory system  is similar to the memory system  in  described above. For clarity,  shows only one memory subarray  and one local sense amplifier . The local sense amplifier  includes a readout circuit , which is similar to the readout circuit , except that a PMOS transistor  functions as the feedback element and replaces the resistor . The readout circuit  may operate in a low voltage range. The PMOS transistor  includes drain-source terminals coupled between the output and the inverting input of a buffer  and includes a gate coupled to a fixed voltage, such as ground.",{"@attributes":{"id":"p-0396","num":"0395"},"figref":"FIG. 47A","b":"4750"},"The memory system  is similar to the memory system  in  described above, but the local sense amplifier  includes a readout circuit  that comprises a PMOS transistor  that includes drain-source terminals coupled between a supply voltage and an output node , which is coupled to the bitline coupled to the memory cell , and includes a gate coupled to a fixed voltage, such as ground.",{"@attributes":{"id":"p-0398","num":"0397"},"figref":"FIG. 47B","b":"4770"},"The memory system  is similar to the memory system  in  described above, but the local sense amplifier  includes a readout circuit  that comprises a diode connected PMOS transistor  coupled between the supply voltage and an output node .",{"@attributes":{"id":"p-0400","num":"0399"},"figref":"FIG. 48","b":"4800"},"The memory system  is similar to the memory system  of . For clarity,  shows only one memory subarray  and one local sense amplifier . The local sense amplifier  includes a readout circuit  that comprises a buffer  and an NMOS transistor , which can be an enhancement NMOS transistor (threshold voltage VT=\u02dc0.5 to 1.0V) or a native NMOS transistor (threshold voltage VT=\u02dc0.2 to 0.2). The NMOS transistor  includes drain-source terminals coupled between the supply voltage VDD and an inverting input of the buffer , and includes a gate coupled to the output of the buffer  for feedback. The operation of the readout circuit  is similar to that described above for the readout circuit , except the minimum supply voltage VDDmin equals a fixed voltage, e.g., 0.4 volts, plus a differential operating voltage (dVOP), e.g., 0.5 volts.",{"@attributes":{"id":"p-0402","num":"0401"},"figref":"FIG. 48A","b":"4850"},"The memory system  is similar to the memory system  in  described above, but the local sense amplifier  includes a readout circuit  that comprises a NMOS transistor  that includes drain-source terminals coupled between a supply voltage and an output node , which is coupled to the bitline coupled to the memory cell , and includes a gate coupled to a fixed voltage.",{"@attributes":{"id":"p-0404","num":"0403"},"figref":"FIG. 48B","b":"4870"},"The memory system  is similar to the memory system  in  described above, but the local sense amplifier  includes a readout circuit  that comprises a diode connected NMOS transistor  coupled between the supply voltage and an output node .",{"@attributes":{"id":"p-0406","num":"0405"},"figref":["FIG. 49","FIG. 38"],"b":["4900","4900","3800"]},"The shared sense amplifier segmented reference array  comprises a plurality of array segments - and - and a plurality of differential sense amplifiers - through -. As an illustrative example, the array  includes two array segments . In one embodiment, the array segments  are disposed above and below the differential sense amplifiers .","The array segment  comprises a plurality of memory cells  arranged in rows and columns. A pair of reference rows  comprise two rows of memory cells that store reference levels. Word lines WLR and WLR are coupled to even and odd reference rows, respectively, to account for odd and even row effect. Even or odd reference rows are used for even or odd data rows respectively. Word lines WL through WL are coupled to the data rows.","The array segment  comprises a plurality of memory columns - through -, a first multiplexer  and a plurality of second multiplexers - through -. As an illustrative example, the memory cells store two bits, and accordingly, there are three reference cells for three reference levels. In this case, the memory cells  of the reference rows  store reference voltages in the memory cells in the three memory columns --through -. The other memory cells  in the reference row  may be left floating, or may be connected, but not used. The first multiplexer  couples each of the memory columns  to a first input of each of the differential sense amplifiers . The multiplexers - through - couple the respective memory column - through - to a second input of a respective differential sense amplifier - through -. Each memory column  comprises a column of the memory cells  and a multiplexer . For clarity, reference numerals are shown only for one memory column . The multiplexer  allows the memory cells  to be accessed.","In one embodiment, data is stored in one of the array segments , for example, the bottom array segment , and reference voltages are stored in the memory cells  of the reference rows  that are in the memory columns - through - of the other array segment , for example, the top array segment . When memory cells  in one of the array segments  are selected for multiplexing to the differential sense amplifiers , memory cells  in the memory columns - through - that function as reference memory cells of the other array segment  is selected at the same time.",{"@attributes":{"id":"p-0411","num":"0410"},"figref":"FIG. 50","b":"5000"},"The memory cell replica sense amplifier  comprises a plurality of memory cell circuits - and -, a plurality of replica memory cell circuits - through -, a differential amplifier , and a plurality of bias generators - and -. For clarity, the details of only the bias generator - are shown. Although five replica memory cell circuits  are shown, other numbers of circuits  may be used. One of inputs to the differential amplifier  couples to the read out voltage from a data memory cell and the other input couples to read out voltage from a reference memory cell.","The memory cell circuits  comprise a memory cell circuit , a PMOS transistor , and a plurality of NMOS transistors  and . For clarity, the details of only the memory cell circuit - are shown. The memory cell circuit  is a circuit that is an equivalent model for a source side injection (SSI) split gate flash memory cell in read mode. In one embodiment, the memory cell circuit  comprises a pair of NMOS transistors, in which a bottom transistor corresponds to a floating gate transistor, and a top transistor corresponds to a select gate (control gate) transistor. The NMOS transistor  operates as a switch or multiplexer to allow access to the memory cell circuit  in response to a column decode (COLDEC) signal. The NMOS transistor  provides column bias to the memory cell circuit  in response to the bias generator , which generates a bias and includes feedback control of the bias.","The replica memory cell circuits  comprise a replica memory cell circuit , a PMOS transistor , and a plurality of NMOS transistors  and . For clarity, the details of only the replica memory cell circuit - are shown. The replica memory circuit  replicates the SSI flash memory cells. In one embodiment, the replica memory cell circuit  comprises a pair of NMOS transistors. The PMOS transistor  mirrors the current of the PMOS transistor  of the memory cell circuit . The NMOS transistor  replicates the column select decoding of the NMOS transistor . The NMOS transistor  provides column bias to the replica memory cell circuit . A control gate voltage CG is applied to the memory cell circuits  of both memory cell circuits - and -. A data floating gate voltage FCD is shown as a storage node of the data memory cell  of the memory cell circuit -. A reference floating gate voltage FCR is shown as a storage node of the reference memory cell  of the memory cell circuit -. The gate of a transistor in the replica memory cell circuit  is coupled to the drain of the NMOS transistor  so that the output voltage is approximately the same as the floating gate voltage because the size and operating condition of the replica memory cell circuit  is equivalent to that of the memory cell circuit . The drain of the PMOS transistor  of the replica memory cell circuit - provides an output data voltage, and the drain of the PMOS transistor  of the other replica memory circuits  provides an output reference voltage. The PMOS transistors  of the replica memory cell circuits - through - are dimensioned to a ratio to the PMOS transistor  of the memory cell circuit  to set different output reference voltage levels. As an illustrative example, three levels are set for two-bit cells, and a fourth level is set as an erase reference.","In one embodiment, the transistors  of the memory cell circuits  and the transistors  of the replica memory cell circuits  are the same size.","In another embodiment, the replica memory cell circuits - through - are coupled to a corresponding memory cell circuit . In this case each memory cell circuit  of the memory circuit  has a different floating gate voltage FGR to generate different levels.",{"@attributes":{"id":"p-0417","num":"0416"},"figref":"FIG. 51","b":"5100"},"The differential current sense amplifier  comprises a plurality of current sources  through , a plurality of PMOS transistors  and , and a plurality of NMOS transistors  and . The current sense amplifiers  through  are arranged as a differential sense amplifier to form an up output (OP) node  between the current sources  and  and to form a down output (ON) node  between the current sources  and . The current source  is parallel to the current source , and the current source  is parallel with the current source . The current source  is a data current source. The current source  is a reference current source. In one embodiment, the current source  replicates the reference current IREF from a reference memory cell, and the current source  replicates the data current IDAT from a data memory cell.","The drain-source terminals of the PMOS transistor  and the diode connected NMOS transistor  are coupled between the up output node  and ground. The drain-source terminals of the PMOS transistor  and the NMOS transistor  are coupled between the down output node  and ground. The drains of the transistors  and  form an output node . A bias voltage VPBIAS applied to the gates of the PMOS transistors  and  establishes a bias point on the up node  and the down node . The drain of the NMOS transistor  biases the gate of the NMOS transistor  to mirror the current.","In one embodiment, the fixed bias currents of the current sources  and  are set equal (I=I). The fixed bias currents of the current sources  and  are set equal to each other (I=I). The current of the current source  is greater than the current of the current source  (I>I). As an illustrative example, the current source  provides a current of 30 \u03bca and the current source  provides a bias fixed current of 60 \u03bca. The current in the NMOS transistor , the current in the NMOS transistor  and the current in the PMOS transistor  are equal to each other (I=I=I), and equal the difference of the current source  and the sum of the currents from the current sources  and  (I=I=I=I\u2212I\u2212IDAT). This relationship follows from the NMOS transistor  mirroring the current of the NMOS transistor . The current from the PMOS transistor  is the difference between the current from the current source  and the sum of the currents of the current sources  and  (I=I\u2212I\u2212IREF). Accordingly, the output voltage equals\n\nOUT=\u0394=()*,\n\nwhere the resistance Ris the equivalent resistance at the output node (VOUT) . Equivalently the output voltage equals\n\nOUT=()*,\n\nwhich is the difference of the data and reference currents multiplied by the output resistance. Alternatively, the output from the output terminal  may be a current that is the difference of the data and reference currents multiplied by a gain factor G, or\n\nOUT=(),\n\nwhere the gain factor G may be provided by an additional current gain circuit (not shown) having a gain G.\n",{"@attributes":{"id":"p-0421","num":"0420"},"figref":"FIG. 52","b":"5200"},"The two-stage differential current sense amplifier  comprises the differential current sense amplifier  and an output stage . The output stage  comprises a plurality of PMOS transistors  and  and a plurality of NMOS transistors  and . The output stage  operates as another gain stage. The output stage  provides an output rail to rail level at an output node VOUT.","In another embodiment, the differential current sense amplifier stage  includes an NMOS transistor  that has a gate that is diode connected instead of being coupled to the NMOS transistor .","The drain-source terminals of the diode connected PMOS transistor  and the NMOS transistor  are coupled in series between the supply voltage and ground. The gate of the NMOS transistor  is coupled to the drain of the NMOS transistor . The drain-source terminals of the PMOS transistor  and the NMOS transistor  are coupled in series between the supply voltage and ground and form an output voltage terminal  of the common node of the drains of the transistors  and . The gate of the PMOS transistor  is coupled to the drain of the PMOS transistor  to mirror the current of the PMOS transistor . The gate of the NMOS transistor  is coupled to the drain of the NMOS transistor .",{"@attributes":{"id":"p-0425","num":"0424"},"figref":"FIG. 53","b":"5300"},"The differential current sense amplifier  comprises a reference current source  that provides a reference current IREF, a data current source  that provides a data current IDAT, and an output current source  that provides an output current IOUT. The reference current source  and the data current source  are coupled in series between a power terminal and a ground terminal and form an output node  that provides an output that is a current. The output current source  is coupled between the output node  and ground.","If the data current IDAT is greater than the reference current IREF, the output current IOUT equals zero. Otherwise, the output current IOUT=IREF\u2212IDAT.","In another embodiment, the reference current source  and the output current source  may be interchanged.","In another embodiment, the output of the sense amplifier  may be an output voltage VOUT equals the difference of the data and reference current multiplied by the output resistance, or\n\nOUT=(OUT1)=()*OUT,\n\nwhere ROUT is the equivalent resistance at the output node .\n","In another embodiment, the output current IOUT may be referred to the positive rail instead of ground, coupled between the power terminal and the output node , and such the output current IOUT=IDAT\u2212IREF.","In another embodiment, another output current source may be coupled between the power terminal and the output node  to generate a positive output current IOUTP (=IDAT\u2212IREF) in addition to a negative output current IOUTN (=IREF\u2212IDAT) from the output current source .",{"@attributes":{"id":"p-0432","num":"0431"},"figref":"FIG. 54","b":"5400"},"The current difference sense amplifier  comprises a reference current source  that provides a reference current IREF, a data current source  that provides a data current IDAT, a PMOS transistor , and a plurality of NMOS transistors  and . The NMOS transistor  provides an output current IOUT. The reference current source  and the data current source  are coupled in series between a power terminal and a ground terminal and form an output node . The drain-source terminals of the PMOS transistor  and the diode connected NMOS transistor  are coupled in series between the output node  and ground. The drain-source terminals of the NMOS transistor are coupled between an output note  and ground, and the gate of the NMOS transistor  is biased by the drain of the PMOS transistor , which has a bias voltage VPBIAS applied to the gate of the PMOS transistor  to establish the bias voltage on the node . In another embodiment, the diode connected NMOS transistor  is connected directly to the node , i.e., without coupling through the PMOS transistor .","The transistors , , and  form an output stage to buffer the current, and amplify a current difference. The current flow in the NMOS transistor  equals the difference of the reference current IREF and the data current IDAT, or =IREF\u2212IDAT.","The output current IOUT equals the difference of the data and reference currents multiplied by a gain factor G, or\n\nOUT=().\n","The size of the NMOS transistor  equals the gain factor G times the size of the NMOS transistor .",{"@attributes":{"id":"p-0437","num":"0436"},"figref":"FIG. 55","b":"5500"},"The dynamic sense amplifier  comprises a data memory cell , a reference memory cell , a plurality of NMOS transistors , , , , , , and a comparator . For clarity, only one data memory cell  and one reference memory cell  are shown for subarray, but a subarray comprises a plurality of data memory cells  arranged in columns and a plurality of reference cells  arranged in columns. Each column of data memory cells  includes corresponding NMOS transistors  and  for decoding. Each reference column comprises NMOS transistors  and  for decoding. Only one column with one data memory cell  is shown.","The comparator  determines the voltage of the data memory cell  by comparing the cell voltage (VCELLD) on a cell bitline  to a reference voltage (VCELLR) on a reference bitline . The NMOS transistor  couples a bias voltage (VBIAS)  to the data cell voltage  in response to an initialize bitline (INITBL) signal . The NMOS transistor  couples the bias voltage signal  to the reference cell voltage  in response to the initialized bitline signal . The cell bitline  has a capacitance shown as a capacitor . The reference bitline  has a capacitance shown as a capacitor . Additional capacitance can be added to the bit lines  and  to achieve a desired value of capacitance. A data control gate voltage (VCGR)  is applied to the control gate of the data memory cell . A reference control voltage (VCGEFR)  is applied to the control gate of the reference memory cell . A comparator enable (ENBLADIFA) signal  enables the comparator .",{"@attributes":{"id":"p-0440","num":"0439"},"figref":"FIG. 56","b":"5500"},"The initialize bitline signal  is set to high to enable the NMOS transistors  and  to initialize the bitlines  and , respectively, at a bias voltage (VBIAS) . The control gate voltage of the data control gate voltage  and the reference control gate voltage  are applied during this time. Once sufficient voltage is developed between the data cell voltage (VCELLD) on the cell bitline  and the reference cell voltage on the reference cell bitline , the comparator  is enabled to amplify the difference voltage. As an illustrative example, for a difference current of 0.5 \u03bca, a bitline capacitance of 0.5 pF, and a voltage of 10 mV is developed in 10 nanoseconds from the relationship that 10 mV equals 0.5 \u03bca times 10 nanoseconds divided by 0.5 pF. In this embodiment, no load, such as pullup, is needed for the sensing circuitry. In another embodiment, the data cell voltage (VCELLD)  and the reference cell voltage (VCELLR)  go in a positive direction during the signal development period instead of a negative direction as shown in . Voltage mode sensing or current mode sensing may be utilized for memory cells  and .",{"@attributes":{"id":"p-0442","num":"0441"},"figref":"FIG. 57","b":"5700"},"The dynamic charge sense amplifier  comprises a data memory cell , a reference memory cell , NMOS transistors , , , ,  and  arranged in a similar manner as the dynamic sense amplifier  of . The dynamic charge sense amplifier  further comprises a plurality of capacitors  through , a comparator , and a plurality of switches  and . The capacitor  couples the cell voltage line  to a positive input of the differential comparator . The capacitor  couples the reference cell voltage  to a negative input of the comparator . The switches  and  couple respective inverted and non-inverted outputs  and  to the positive and negative inputs of the comparator . The capacitors  and  are coupled in parallel to the switches  and , respectively. An autozero signal  is applied to the switches  and  and is an active low to enable voltage signal development of the comparator . In one embodiment, the autozero signal  is buffered from, and thus is logically the same as, the initialized bitline signal . The negative and positive nodes of the comparator  are initialized or autozeroed at a bias in an autozero state. The capacitors  and  cause the comparator  to function as a gain amplifier with a gain equal to the ratio of the capacitances of the capacitors  and . In another embodiment, the dynamic charge sense amplifier  does not include the capacitors  and , and the comparator  functions as a comparator with the capacitor  and  providing capacitive coupling.","The systems described above may be used for Inverse Voltage Mode Sensing, No Current (Digital) Multilevel Mode Sensing, or Inverse Current Mode Sensing with appropriate modification, and may include an autozero function of the sense amplifier. The autozero function may include equalizing the input and output of the sense amplifier before sensing or the storage of the reference cell sensing before the data cell sensing to reduce signal path mismatch.",{"@attributes":{"id":"p-0445","num":"0444"},"figref":"FIG. 58","b":["2","1","0","2","0"]},"The data cells are set into a sensing condition, and the data memory cell (IDAT) bitline is set into an autozero condition and the data cells are read (block ). The data range being evaluated is divided into half and the data current (IDAT) is analyzed to determine whether the data current is in the upper or lower half of the current range. The data current (IDAT) is compared to a reference current from the reference memory cells corresponding to the mid-point of the entire data range (block ). For example, for a three-bit system, the data current (IDAT) is compared to the reference current for the fourth memory level (IR). If the sensed data current (IDAT) is greater than or equal to the fourth level reference current (IR), the first bit being detected B is set to a high value (B=1) (block ). The data current (IDAT) is in the upper half of the data range, and the upper half of the data range is divided in half or into two one-quarter data ranges. The data current (IDAT) is compared to the midpoint reference current of the upper half which in the illustrative example corresponds to the sixth reference current (IR). If the data current (IDAT) is greater than or equal to the sixth reference current (IR) (block ), the second data bit, B, is set high (B=1) (block ), and the data current (IDAT) is in the upper half of the data range. The upper quarter of the data range is again divided into half and the data current (IDAT) is compared to the bit level current of the upper quarter range, which is the seventh reference current (IR). If the data current (IDAT) is greater than or equal to the seventh reference current (IR) (block ), the third bit B is set high (B=1) (block ). Thus in this case, the data of the cell corresponds to B, B and B equals \u2018111\u2019. Otherwise if the data current (IDAT) is less than the seventh reference current (IR) (block ), the data current (IDAT) is in the bottom half of the upper quarter of the data range and the last bit B is set low (B=0) (block ), and the data in the cell corresponds to BBB equals \u2018110\u2019.","On the other hand, if the data current (IDAT) is less than the sixth reference current (IR) (block ), the data is in the quarter range that is in the bottom half of the top half of the voltage range and the second bit B is set low (B=0) (block ). This quarter range is then divided into two sections corresponding to one-eighth of the overall data range and the data current (IDAT) is compared to the fifth reference current (IR). If the data current (IDAT) is greater than or equal to the fifth reference current (block ), the data current (IDAT) is in the top half of the quarter range, and the third data bit B is set high (B=1) (block ), and the data in the cell corresponds to BBB equals \u2018101\u2019. Otherwise, if the data current (IDAT) is less than the fifth reference current (block ), the third bit B is set low (B=0) (block ), and the data in the cell corresponds to BBB equals \u2018100\u2019.","On the other hand, if the data current (IDAT) is less than the fourth reference current (IR) (block ), the data is in the lower half of the current range, and the first bit B is set low (B=0) (block ). The half range is divided into two halves corresponding to one-quarter ranges of the overall data range, and the data current (IDAT) is compared to the second reference current (IR). If the data current (IDAT) is greater than or equal to the second reference current (block ), the data current (IDAT) is in the upper quarter range of the bottom half range, and the second data bit B is set high (B=1) (block ). Again, the quarter range is divided into one-eighth ranges and the data current (IDAT) is compared to the third reference current (IR). If the data current (IDAT) is greater than or equal to the third reference current (block ), the data current (IDAT) is in the top half of this quarter range, and the third data bit B is set high (B=1) (block ), and the data in the cell corresponds to BBB equals \u2018011\u2019. Otherwise, if the data current (IDAT) was less than the third reference current (block ), the third bit B is set low (B=0) (block ), and the data in the cell corresponds to BBB equals \u2018010\u2019.","On the other hand, if the data current (IDAT) is less than the second data current (IR) (block ), the data is in the quarter range that is in the bottom half of the range, and the second bit B is set low (B=0) (block ). This quarter range is then divided into two sections corresponding to one-eighth of the overall data range and the data current (IDAT) is compared to the first reference current (IR). If the data current (IDAT) is greater than or equal to the first reference current (block ), the data current (IDAT) is in the top half of this quarter range, and the third bit B is set high (B=1) (block ), and the data of the cell corresponds to BBB equals \u2018001\u2019. Otherwise if the data current (IDAT) is less than the first reference current (block ), the third bit B is set low (B=0) (block ), and the data in the cell corresponds to BBB equals \u2018000\u2019.",{"@attributes":{"id":"p-0450","num":"0449"},"figref":"FIG. 59"},"As an illustrative example, the data cell is a three-bit data cell that stores bits BBB in a manner similar to that described above for . Further to the illustrative example, two bits are determined per comparison stage. The three-bit system has eight data values with corresponding eight reference values. In this illustrative example, three comparators are used to compare the data current to the three different reference levels. In the first comparison, the full range is divided into eight ranges.","The data cells are put into a current sensing condition and the data memory cell (IDAT) bitline is set into an autozero condition and the data cells are read (block ). The data current (IDAT) is compared to a fourth reference level (IR) (block ), a sixth reference current (IR) (block ), and a second reference current (IR) (block ). The comparison of the data current (IDAT) to the fourth reference level (IR) determines whether the first data bit B is set high or low. If the data current (IDAT) is greater than or equal to the fourth reference current (IR) (block ), the first data bit B is set high (B=1) (block ), or otherwise the first data bit B is set low (B=0) (block ). The data current (IDAT) is compared to the sixth reference current (IR) to determine the second data bit B. If the data current (IDAT) is greater than or equal to the sixth reference current (IR) (block ), the second data bit B is set high (B=1) (block ), or otherwise the second data bit B is set low (B=0) (block ). The data current (IDAT) is compared to the second reference current (IR). If the data current (IDAT) is greater than or equal to the second reference current (IR) (block ), the second data bit B is set high (B=1) (block ), or otherwise the second data bit B is set low (B=0) (block ). If the comparison at block  determines that the data current (IDAT) is greater than or equal to the fourth reference current, then the data from the comparison at block  is discarded (block ). On the other hand, if the data current (IDAT) is less than the fourth reference current (IR) (block ), the comparison of block  is discarded (block ).","During the second stage, the third data bit B is determined. If the data current (IDAT) comparison to the sixth reference current (IR) (block ) indicates the second bit B is set high (B=1) (block ), the second comparison operation compares the data current (IDAT) to the seventh reference current (IR). If the data current (IDAT) is greater than or equal to the seventh reference current (IR) (block ), the third data bit B is set high (B=1) (block ), and the data in the cell corresponds to BBB equals \u2018111\u2019. On the other hand, if the data current (IDAT) is less than the seventh reference current (IR) (block ), the third data bit B is set low (B=0) (block ), and the data in the cell corresponds to BBB equals \u2018110\u2019.","On the other hand, if the data current (IDAT) comparison to the sixth reference current IR6 (block ) indicates the second bit B is set low (B=0) (block ), the second comparison operation compares the data current (IDAT) to the fifth reference current (IR). If the data current (IDAT) is greater than or equal to the fifth data current (block ), the third data bit B is set high (B=1) (block ), and the data in the cell corresponds to BBB equals \u2018101\u2019. On the other hand, if the data current (IDAT) is less than the fifth reference current (IR) (block ), the third data bit B is set low (B=0) (block ), and the data in the cell corresponds to BBB equals \u2018100\u2019.","If the data current comparison to the second reference current IR indicates the second bit B is set high (B=1) (block ), the second comparison operation compares the data current to the third reference current IR. If the data current (IDAT) is greater than or equal to the third reference current IR (block ), the third bit B is set high (B=1) (block ), and the data in the cell corresponds to BBB equals \u2018011\u2019. On the other hand, if the data current (IDAT) is not greater than or equal to the reference current IR (block ), the third bit B is set low (B=0) (block ), and the data in the cell corresponds to BBB equals \u2018010\u2019.","On the other hand, if the data current (IDAT) comparison to the second reference current IR (block ) indicates a second bit B is set low (B=0) (block ), the second comparison operation compares the data current (IDAT) to the first reference current (IR). If the data current (IDAT) is greater than or equal to the first data current (IR) (block ), the third data bit B is set high (B=1) (block ), and the data in the cell corresponds to BBB equals \u2018001\u2019. On the other hand, if the data current (IDAT) is less than the first reference current (IR) (block ), the third data bit B is set low (B=0) (block ), and the data in the cell corresponds to BBB equals \u2018000\u2019.","By increasing the number of comparisons done at one time to thereby determine multiple bits in one comparison cycle, the number of sequential comparison cycles may be reduced to increase the binary search operation.",{"@attributes":{"id":"p-0458","num":"0457"},"figref":"FIG. 60","b":"6000"},"The memory system  may be a modified version of the super-high density, nonvolatile multilevel memory integrated circuit system of . For clarity,  shows only the portions of the memory that are different. The memory system  includes a byte decoder , a multiplex column decoder , and a memory array . The byte decoder  replaces the byte decoder  of . The memory array  is shown as a single page of the memory array . The multiplexer column decoder  replaces the page select circuit  and the byte select circuit . As an illustrative example, a page of 512 bytes is described, but other sizes of pages may be used.","The memory array  includes memory cells organized as a normal data region , a redundant data region , and a bad byte locator . As an illustrative example, the memory array  comprises 512 bytes of normal data in the normal data region , one redundant byte in the redundant data region , and 10 bits for the bad byte locator . The bad byte locator  includes an indicator of whether a bad byte exists in the normal data region  of the memory array , and includes an address of the location of the bad byte. In the illustrative embodiment, the bad byte locator  includes one bit for the indicator and nine bits for the address of the bad byte. The byte decoder  decodes an address , which is shown illustratively in  as an address  for the 512 bytes of normal data, an address  for one redundant byte and an address  for 10-bit bad byte locator, and addresses the page of the memory array , and applies the decoded address to the multiplexer column decoder  to address the memory array .","In one embodiment, the bad byte latch may be configured to store a predetermined data pattern, such as \u2018FF\u2019 to disable programming of the bad byte of the normal data region .","During byte loading, the byte decoder  is addressed by the address  to address the page of the memory array  for loading data into the normal data region , the redundant data region , and the bad byte locator . When the bad byte locator  indicates a bad byte in the normal data region , the byte data corresponding to this address is loaded into the redundant byte . In one embodiment, the bad byte latch may remain with a predetermined data pattern, e.g., \u2018FF\u2019, to disable programming. In one embodiment, the bad byte locator  is programmed during testing at another location, such as the manufacturer, with the bad byte indicator and the byte address of the location in the normal data region  that is bad.","During a program and verify operation, the byte decoder  addresses all locations of the normal data region  and the redundant data region  for writing the data, for example 513 bytes, into the memory cells of the memory array . The bad byte locator  is used by the byte decoder  to determine whether the normal data region  has a bad byte and the address of the bad byte from which the byte decoder  determines the data for storing in the redundant data region . In one embodiment, the bad byte is not programmed if an indicator \u2018FF\u2019 is used to disable the program and verify for that bad byte.","During a read operation, the byte decoder  addresses all addresses in the page of the memory array  to read the normal data region , the redundant data region , and the bad byte locator . In the illustrative example, all 513 bytes of data and the 10 bits of the bad byte locator are read. The byte decoder  decodes the bad byte locator  to determine whether the byte redundancy is invoked and the address of the bad byte of the normal data region . If the byte redundancy is invoked, the address of the bad byte is used to switch the data from the redundant data region , and ignore the data read from the bad byte of the normal data region .","During an erase operation, the byte decoder  addresses all memory cells in the normal data region  and the redundant data region . In the illustrative embodiment, the 513 bytes are erased, but the bad byte locator  is not erased. In another embodiment, the erase includes a process of storing the data in the bad byte locator  in a latch, erasing the entire memory array  and rewriting the data stored in the latch into the bad byte locator .","In another embodiment, the memory cells may be verified and read in different sensing modes. For example, the memory cell may be verified by placing the memory cell in a voltage mode while reading of the memory cell may be done in a current sensing mode.","In another embodiment, additional reference currents may be formed by interpolating or extrapolating the values stored in the reference memory cells. For example, the reference memory cells may store data in 0.1 \u03bca increments in a range from 0.0 to 1.6 \u03bca. A reference current may be interpolated from currents with adjacent values stored in the reference memory cells, such as by forming a reference current as an average value between adjacent reference values. For example, the first memory cell may store 0.1 \u03bca and a second memory cell may store 0.2 \u03bca. A reference level of 0.15 \u03bca may be generated by dividing the memory range into two. A reference current outside the range may be formed by extrapolation.",{"@attributes":{"id":"p-0468","num":"0467"},"figref":"FIG. 61","b":"2000"},"The nonvolatile multilevel memory integrated circuit system  comprises the algorithm controller , the voltage algorithm controller block , the plurality of y-drivers  and the plurality of memory arrays . The y-drivers  include a plurality of sense amplifiers . The sense amplifiers  may be the sense amplifiers described above in conjunction with .","The algorithm controller  executes the multilevel erase, programming and sensing procedures for multilevel nonvolatile operation, and is also used to control the precise bias and timing conditions used for multilevel precision programming. The voltage algorithm controller  provides various specifically shaped voltage signals of various amplitudes and durations used for multilevel nonvolatile operation and to provide precise voltage levels with tight tolerance used for precision multilevel programming, erasing and sensing.","The algorithm controller  executes a multilevel cell seek window programming procedure that first seeks out a dynamic window collectively or individually and then executes precision programming. The dynamic window is a range of usable voltages or currents for the memory cells. The window may change depending on fundamental memory cell technology variation (distribution) (such as NAND cell, ETOX stack cell, or Source Side Injection Cell), data retention, foundry (e.g., different fabrication equipment causing different variation), data pattern (e.g., FF or AA or 00), and process drift. The window also may depend on the sensing method and mechanism, such as IM (current mode) sensing or VM (voltage mode) sensing. (In one embodiment, current mode sensing is used for the erase window for a deeper erase, and voltage mode sensing is used for the programming window for deeper programming.) The window may also depend on the cycling of the memory cells because the endurance of the cell depends on the number of program and erase cycles of the memory may be subjected to that changes the window of the memory cells. A typical cycling specification for flash memory is 10,000 to 100,000 cycles. The algorithm results in optimal programming time over memory cell distribution that may be due to a large memory array, cell variation, process variation, endurance, or data pattern.","The algorithm controller  seeks out the dynamic window of a group of cells (e.g., a sector of, e.g., 128 K or 32 K cells). After the window is found, the algorithm controller  applies precision programming to achieve precision levels.",{"@attributes":{"id":"p-0473","num":"0472"},"figref":"FIG. 62"},"The algorithm controller  executes an asymmetrical margining programming procedure to search for one end of the dynamic window using a first parameter and then using a second parameter set to find the other end of the dynamic window. In this procedure, the dynamic window is searched for by stepping through varying increments in the programming voltage (Vsp) until data stored in any cell is verified to within a predetermined margin of a first endpoint of the dynamic window. The detected endpoint of the dynamic window may be within a range of the endpoint of the dynamic window because of the chosen incremental voltage. The endpoint of the dynamic window may refer to a voltage within this range. Afterward, all data is verified by stepping through all levels. The verification of the data may be verified within a predetermined margin that is different than the verification during the seeking process.","First and second increment pulse counters are initialized (PC=PC=0) (block ). The programming voltage VSP is incremented by a first incremental voltage (inc) (block ). The data is verified with a first margin (IVMargin) associated with a reference level of the first point of the window (block ) and if the data is not verified and the first increment pulse counter (PC) does not exceed a threshold (PC+1>PCEND), the first increment pulse counter (PC) is incremented and the programming voltage is incremented (block ). If any data is verified or the first increment pulse counter (PC) exceeds a threshold (PC+1>PCEND), all data is next programmed and verified. The programming voltage is again incremented, by an incremental voltage (inc) (block ). This data is verified using a different margin analysis (block ). In this verification, all data is verified with an upper margin (IVMarginA) and a lower margin (IVMarginB) associated with the reference levels corresponding to the data or until the second increment counter exceeds a threshold (PC+1>PCEND) (block ), and the programming ends (block ).","In one embodiment, the first margin (IVMargin) is different from the second margin (IVMargin) and the third margin (IVMargin). In another embodiment, the first margin (IvMargin) is equal to the second margin (IVMargin) and the third margin (IVMargin).","In alternative embodiments of , the verifying is performed before the programming.",{"@attributes":{"id":"p-0478","num":"0477"},"figref":"FIG. 63"},"First, second, and third increment pulse counters are initialized (PC=PC=PC=0) (block ). The programming voltage VSP is incremented by a first incremental voltage (inc) (block ). The data is verified with a first margin (IVMargina) associated with reference level of the first point of the window (block ), and if the data is not verified and the first increment pulse counter (PC) does not exceed a threshold (PC+1>PCEND), the first increment pulse counter (PC) is incremented and the programming voltage is incremented by the first incremental voltage (inc) (block ). If any data is verified or the first increment pulse counter (PC) exceeds a threshold (PC+1>PCEND), all data is next programmed and verified. The programming voltage is incremented by a second incremental voltage (inc) (block ). The data is verified using a different margin analysis (block ). In this verification, all data is verified with an upper margin (IVMarginb) and a lower margin (IVMarginc) associated with the reference levels corresponding to the data or until the second increment pulse counter (PC) exceeds a threshold (PC+1>PCEND) (block ). The remainder of the possible window is determined by a different margin analysis. In this section, the range is evaluated for whether certain selected data is verified. The certain selected data indicates end of window data. Specifically, the programming voltage VSP is incremented by an incremental voltage (inc) (block ). The selected data is verified with a fourth margin (IVMargind) associated with a reference level of a second point of the window (block ), and if the data is not verified or the third increment pulse counter (PC) does not exceed a threshold (PC+1>PCEND), the third increment pulse counter is incremented and the programming voltage is incremented by the incremental voltage (inc) (block ). If selected data is verified within the fourth margin (IVMargind) or the third increment pulse counter (PC) exceeds a threshold (PC+1>PCEND) (block ), the analysis of the range is terminated and the programming ends (block ).",{"@attributes":{"id":"p-0480","num":"0479"},"figref":"FIG. 64"},"The algorithm controller  first seeks a dynamic window of a group of cells (e.g., a sector that may include for example 128 k or 32 k memory cells). The seeking of the window is done by using a combination of variable steps to seek out the first end portion of the window.","First, second, third, and fourth increment pulse counters are initialized (PC=PC=PC=PC=0) (block ). The programming voltage VSP is incremented by a first incremental voltage (inc) (block ). The data is verified with a first margin (IVMargina) associated with reference level of the first point of the window (block ), and if the data is not verified and the first increment pulse counter (PC) does not exceed a threshold (PC+1>PCEND), the first increment pulse counter (PC) is incremented and the programming voltage is incremented by the first incremental voltage (inc) (block ). If any data is verified, the programming and verification of other data is tested by changing the increment steps of the programming voltage VSP. Specifically, the programming voltage is incremented by a second incremental voltage (inc) (block ). The data is verified with a second margin (IVMarginb) associated with the reference level of a second point of the window (block ), and if the data is not verified and the second increment pulse counter (PC) does not exceed a threshold (PC+1>PCEND), the second increment pulse counter (PC) is incremented and the programming voltage is incremented by the second incremental voltage (inc) (block ). If any data is verified or the second increment pulse counter (PC) exceeds a threshold (PC+1>PCEND), all data is next programmed and verified. The programming voltage is incremented by a third incremental voltage (inc) (block ). The data is verified by a different margin analysis (block ). In this verification, all data is verified with an upper margin (IVMarginc) and a lower margin (IVMargind) associated with the reference levels corresponding to the data or until the third increment pulse counter exceeds a threshold (PC+1>PCEPD) (block ). The remainder of the possible windows is determined by a different margin analysis. In this section, the range is evaluated for whether certain selected data is verified. The certain selected data indicates end of window data. Specifically, the programming voltage VSP is incremented by a fourth incremental voltage (inc) (block ). The data is verified against a fifth margin (IVMargine) associated with a second point of the window (block ), and if the block is not verified and the fourth increment pulse counter (PC) does not exceed a threshold (PC+1>PCEND), the fourth increment pulse counter (PC) is incremented and the programming voltage VSP is incremented by the fourth incremental voltage (inc) (block ). If selected data is verified to within the fifth margin (IVMargine) or the fourth increment pulse counter exceeds a threshold (PC+1>PCEND) (block ), the analysis of the range is terminated and the programming ends (block ).",{"@attributes":{"id":"p-0483","num":"0482"},"figref":"FIG. 65"},"The algorithm controller  first seeks out a window for individual cells (e.g., D or D) and then applies precision programming for the found data window to achieve precision levels.","First, second, and third increment pulse counters are initialized (PC=PC=PC=0) (block ). The programming voltage VSP is incremented by a first incremental voltage (inctry) (block ). The data is verified with a first margin (IVMarginx) associated with the reference level of the first point of the window (block ), and if the data is not verified and the first increment pulse counter (PC) does not exceed a threshold (PC+1>PCEND), the first increment pulse counter (PC) is incremented and the programming voltage is incremented by the first incremental voltage (inctry) (block ). If any data is verified or the first increment pulse counter (PC) exceeds a threshold (PC+1>PCEND, all data is next programmed and verified. The programming voltage is incremented by a second incremental voltage (inc) (block ). The data is verified by a different margin analysis (block ). In this verification, all data is verified with an upper margin (IVMarginya) and a lower margin (IVMarginyb) associated with the reference levels of the data, or until the second increment pulse counter (PC) exceeds a threshold (PC+1>PCEND) (block ). The remainder of the possible window is determined by a different margin analysis. In this section, the range is evaluated for whether certain selected data is verified. The certain selected data corresponds to end of window data. Specifically, the programming voltage VSP is incremented by the first incremental voltage (inctry) (block ). The data is verified against the first margin (IVMarginx) (block ), and if the data is not verified or the third increment pulse counter (PC) exceeds a threshold (PC+1>PCEND), the third increment pulse counter is incremented and the programming voltage is incremented (block ). If selected data is verified within the first margin (IvMarginx) (block ), the analysis of the range is terminated and the programming ends (block ).",{"@attributes":{"id":"p-0486","num":"0485"},"figref":"FIG. 66"},"The algorithm controller  first seeks out a window for individual cells (e.g., D or D) and then applies precision programming for the found data window to achieve precision levels. The seeking is done by using a combination of small steps and large steps to seek out the first end portion of the window.","First, second, third, and fourth increment pulse counters are initialized (PC=PC=PC=PC=0) (block ). The programming voltage VSP is incremented by a first incremental voltage (inc) (block ). The data is verified with a first margin (IVMargina) associated with the reference level of the first point of the window (block ), and if the data is not verified and the first increment pulse counter (PC) does not exceed a threshold (PC+1>PCEND), the first increment pulse counter (PC) is incremented and the programming voltage is incremented by the first incremental voltage (inc) (block ). If any data is verified or the first increment pulse counter (PC) exceeds a threshold (PC+1>PCEND), the dynamic range is sought using a different sized increment, and verified against a different margin. The programming voltage VSP is incremented by a second incremental voltage (inc) (block ). The data is verified with a second margin (IvMarginb) associated with the reference level at the second point of the window (block ), and if the data is not verified and the second increment pulse counter (PC) does not exceed a threshold (PC+1>PCEND), the second increment pulse counter (PC) is incremented and the programming voltage is incremented by the second incremental voltage (inc) (block ). If any data is verified, all data is next programmed and verified. The programming voltage is incremented by a third incremental voltage (inc) (block ). The data is verified by a different margin analysis (block ). In this verification, all data is verified with an upper margin (IVMarginc) and a lower margin (IVMargind) associated with the reference levels or until the third increment pulse counter (PC) exceeds a threshold (PC+1>PCEND) (block ). The remainder of the possible window is determined by a different margin analysis. In this section, the range is evaluated for whether certain selected data is verified. The certain selected data corresponds to end of window data. Specifically, the programming voltage VSP is incremented by a fourth increment voltage (inc) (block ). The data is verified against a fifth margin (IVMargine) associated with a third point of the window (block ), and if the data is not verified and the fourth increment pulse counter (PC) does not exceed a threshold (PC+1>PCEND), the fourth increment pulse counter (PC) is incremented and the programming voltage is incremented (block ). If selected data is verified to within the fifth margin (IVMargine) or the fourth increment pulse counter (PC) exceeds a threshold (PC+1>PCEND) (block ), the analysis of the range is terminated and the programming ends (block ).","In alternative embodiments of the embodiments of , the margins used in the programming and verify may be different or equal to other margins used during the procedures. In yet other alternative embodiments of the embodiments of , the increments in the programming voltages used in the programming and verify may be different or equal to other programming voltages used during the procedures.",{"@attributes":{"id":"p-0490","num":"0489"},"figref":"FIG. 67"},"In this algorithm unequal steps are used to cover a greater voltage range in less time. The table portion of  shows the time of various parts of the programming pulse and the voltage levels of the programming pulse VSP.","The timing diagram of  is an illustrative embodiment of using unequal programming steps. The programming pulse has a verify time (Tpvfy) and a high voltage programming time (Tproghv). The programming high voltage time (Tproghv) comprises a ramp up time (Tprmpu), a flat portion time (Tprflat) and a ramp down time (Tprmpd). The programming voltage Vsp has increasing levels for each pulse with a first pulse having a voltage Vspi, the second pulse having a voltage that is an incremented voltage Vspinc greater than the first pulse Vspi. Subsequent pulses increase by the incremented voltage Vspinc so that the last pulse has an amplitude voltage Vspfin. During the programming, a programming current (ISP) is applied to the memory cells. The pulsewidth of one pulse is (Tp1pls) and the total programming time is Tprogr_tol. As shown, the first eight and the last eight pulses have a greater increment than the other pulses.","In other embodiments, the incremental voltage may be changed linearly or geometrically.",{"@attributes":{"id":"p-0494","num":"0493"},"figref":["FIG. 68","FIGS. 62\u201367"]},"In this embodiment, unequal margins are used to speed up the programming. During the programming verify, a large margin is first used. For example, a first cell (cellE) is verified using a larger margin relative to a reference voltage REFE, and a second cell (cellN) is verified also using a larger margin relative to a reference voltage REFN. The larger margin uses less time at the beginning of the programming. Subsequent smaller margins such as shown in other cells (Cell and Cell) are applied against other reference voltages REF and REF, respectively.",{"@attributes":{"id":"p-0496","num":"0495"},"figref":"FIG. 69"},"In the erase algorithm, unequal steps are used to cover a greater voltage range in less time.","The timing diagram of  is an illustrative embodiment of using unequal erase steps. The erase pulse has an erase verify time (Tevfy) and a high voltage erase time (Terhv). The erase high voltage time (Terhv) comprises a ramp up time (Termpu), a flat portion time (Terflat) and a ramp down time (Termpd). The erase voltage Ver has increasing levels for each pulse with a first pulse having a voltage Veri, the second pulse having a voltage that is an incremented voltage Verinc greater than the first pulse Veri. Subsequent pulses increase by the incremented voltage Verinc so that the last pulse has an amplitude voltage Verfin. The pulsewidth of one pulse is (Terlpls) and the total erase time is Ter_tol. As shown, the last two pulses have a greater increment than the other pulses.","In other embodiments, the incremental voltage may be changed linearly or geometrically.","In the foregoing description, various methods and apparatus, and specific embodiments are described. However it should be obvious to the one conversant in the art, various alternatives, modifications, and changes may be possible without departing from the spirit and the scope of the invention which is defined by the metes and bounds of the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 1B","FIG. 1A"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1C"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1D"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1E"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2C"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 3C"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 4C"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 4D"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 4E"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 4F"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 5C"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 9A"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 9B"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 9C"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 11A","FIG. 10"]},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 11B"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 11C"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 19A"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 19B"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 22A"},{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 22B","FIG. 22A"]},{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 22C","FIG. 22B"]},{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIG. 24","FIG. 23"]},{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 25","FIG. 24"]},{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 26","b":"110"},{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 27","b":"110"},{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 29A"},{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 29B"},{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 30"},{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 31"},{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 32"},{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 33"},{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 34"},{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 35"},{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 36"},{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 36A"},{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 37"},{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 38"},{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIG. 39"},{"@attributes":{"id":"p-0078","num":"0077"},"figref":"FIG. 40"},{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 41"},{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 42"},{"@attributes":{"id":"p-0081","num":"0080"},"figref":"FIG. 43"},{"@attributes":{"id":"p-0082","num":"0081"},"figref":"FIG. 44"},{"@attributes":{"id":"p-0083","num":"0082"},"figref":"FIG. 45"},{"@attributes":{"id":"p-0084","num":"0083"},"figref":"FIG. 46"},{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIG. 46A"},{"@attributes":{"id":"p-0086","num":"0085"},"figref":"FIG. 47"},{"@attributes":{"id":"p-0087","num":"0086"},"figref":"FIG. 47A"},{"@attributes":{"id":"p-0088","num":"0087"},"figref":"FIG. 47B"},{"@attributes":{"id":"p-0089","num":"0088"},"figref":"FIG. 48"},{"@attributes":{"id":"p-0090","num":"0089"},"figref":"FIG. 48A"},{"@attributes":{"id":"p-0091","num":"0090"},"figref":"FIG. 48B"},{"@attributes":{"id":"p-0092","num":"0091"},"figref":"FIG. 49"},{"@attributes":{"id":"p-0093","num":"0092"},"figref":"FIG. 50"},{"@attributes":{"id":"p-0094","num":"0093"},"figref":"FIG. 51"},{"@attributes":{"id":"p-0095","num":"0094"},"figref":"FIG. 52"},{"@attributes":{"id":"p-0096","num":"0095"},"figref":"FIG. 53"},{"@attributes":{"id":"p-0097","num":"0096"},"figref":"FIG. 54"},{"@attributes":{"id":"p-0098","num":"0097"},"figref":"FIG. 55"},{"@attributes":{"id":"p-0099","num":"0098"},"figref":["FIG. 56","FIG. 55"]},{"@attributes":{"id":"p-0100","num":"0099"},"figref":"FIG. 57"},{"@attributes":{"id":"p-0101","num":"0100"},"figref":"FIG. 58"},{"@attributes":{"id":"p-0102","num":"0101"},"figref":"FIG. 59"},{"@attributes":{"id":"p-0103","num":"0102"},"figref":"FIG. 60"},{"@attributes":{"id":"p-0104","num":"0103"},"figref":"FIG. 61","b":"2000"},{"@attributes":{"id":"p-0105","num":"0104"},"figref":"FIG. 62"},{"@attributes":{"id":"p-0106","num":"0105"},"figref":"FIG. 63"},{"@attributes":{"id":"p-0107","num":"0106"},"figref":"FIG. 64"},{"@attributes":{"id":"p-0108","num":"0107"},"figref":"FIG. 65"},{"@attributes":{"id":"p-0109","num":"0108"},"figref":"FIG. 66"},{"@attributes":{"id":"p-0110","num":"0109"},"figref":"FIG. 67"},{"@attributes":{"id":"p-0111","num":"0110"},"figref":["FIG. 68","FIGS. 62\u201367"]},{"@attributes":{"id":"p-0112","num":"0111"},"figref":"FIG. 69"}]},"DETDESC":[{},{}]}
