---
title: Generic security claim processing model
abstract: A system for processing multiple types of security schemes includes a server having a claims engine that extracts claim(s) from security token(s) and maps extracted claims to other claims. The term claim as used in this context is a statement about a token's subject. The claims engine can extract claim(s) from one or more different types of security tokens corresponding to the multiple security schemes. These extracted claim(s) can then be selectively mapped to other claims using mapping information that is accessible to the server. The security decision can then be based on the extracted and/or derived claim(s) rather than tokens. This system can thereby support multiple security schemes and simplify the security process for the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07640573&OS=07640573&RS=07640573
owner: Microsoft Corporation
number: 07640573
owner_city: Redmond
owner_country: US
publication_date: 20040216
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","Example Scenario","Exemplary Claims Engine"],"p":["This application is related to U.S. patent application Ser. No. 10\/779,922, filed Feb. 16, 2004, entitled \u201cSecurity Scopes and Profiles\u201d.","Various embodiments described below relate generally to security mechanisms for computing environments, more particularly but not exclusively to, authentication and authorization of messages.","Many message-based computing systems include security scheme for messages sent from one process (e.g. a piece of running software) to another process. Typically, such security schemes include an authentication mechanism in which the sender's \u201cidentity\u201d is verified (e.g., checking a username\/password) and an authorization mechanism in which the \u201cactions\u201d (e.g., accessing a resource) the sender is authorized to perform are determined. An access control mechanism can then be used to determine whether the message can then be allowed to proceed to the target process.","However, conventional message-based systems typically support only one security mechanism with a single level of security. Consequently, when a message is sent in a path having multiple security schemes (e.g., when the path has one or more intermediaries that use a different security scheme from that of the original sender), the security process can become complex (e.g., requiring the original sender to know the security scheme of each intermediary so that the message will meet the security requirements).","In accordance with aspects of the various described embodiments, a system for processing multiple types of security schemes is provided. The system includes a server having a claims engine that extracts claim(s) from security token(s) and maps extracted claims to other claims. The term \u201cclaim\u201d as used in this context is a statement about a token's subject. The claims engine can be selectively configured to extract claim(s) from one or more different types of security tokens corresponding to the multiple security schemes. The extracted claim(s) can then be selectively mapped to other claims. The security decision can then be based on the extracted and\/or derived claim(s) rather than tokens. This aspect allows a system to support multiple security schemes and simplifies the security process, thereby providing a generic solution.","In another aspect, each claim is associated with a resource, and the security decision is to allow\/deny access to the resource. The claims engine can be configured to determine the resource(s) being accessed by extracting or obtaining resource identifiers from a message at run-time (e.g., a property of the runtime environment), or by examining the static configuration of the service (e.g., a default resource). This aspect increases the flexibility\/extensibility of the system.","In yet another aspect, the claims engine can send a return message to a sender of the message, with the return message including derived claims and\/or information related to the location or accessing of derived claims. The sender can then send the derived claims or information pertaining to the derived claims in a subsequent message. This aspect eliminates the need for claim mapping on those subsequent messages, thereby reducing the amount of processing performed by the claims engine.","In still another aspect, the claims engine can be configured to selectively reject a claim (e.g., the server does not trust certificates from a particular certificate authority). This aspect increases the flexibility of the system.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 1","FIG. 2"],"b":["100","100","102","104","102","104","102","106","108","104","112","114","114","116","116"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 2","FIG. 1","FIGS. 1 and 2"],"b":["116","100","100","106","102","104","108","116","104"]},"In a block , claim(s) are extracted from the token(s). In this embodiment, claims engine  of security module  extracts the claim(s). As used herein, a claim is a statement about the subject of the security token asserted by either the subject itself or by another party about the subject and, as previously described, associated with a resource. There may be more than one claim associated with a resource. In one embodiment, a claim can be in the form of a \u201ctype\u201d and a \u201cvalue\u201d. For example, a claim extracted from a token can have a type of \u201cX.509 Subject\u201d and a value of \u201cCN=John Doe, E=JohnDoe@xyz.com\u201d. Claims can also be used to assert a role assumed by or assigned to the subject of the token (e.g., the type can be \u201crole\u201d and the value can be \u201ccustomer\u201d). Claims can also be used to provide information about cryptographic keys owned by the subject, which also may have been used to encrypt or sign information contained in the message.","In a block , the extracted claim(s) are mapped to other claim(s). In this embodiment, claims engine  maps the extracted claim(s) into other claim(s), also referred to herein as \u201cderived\u201d claim(s). In some scenarios, claims engine  may not have mappings from the extracted claim(s) to other claim(s). Further, in some embodiments, the mapping definitions may include revocation of preselected claim(s). In one embodiment, these mappings are defined during configuration of server . For example, mapping(s) can be defined in a configuration file, in code, in scope and\/or profiles (e.g., as described in aforementioned U.S. patent application Ser. No. 10\/779,922 entitled \u201cSecurity Scopes and Profiles\u201d). Block  may be performed multiple times to ensure that all of the possible valid claim mapping(s) are found. For example, block  can be repeated until the derived claim(s) remain unchanged.","In a block , the extracted and derived claim(s) resulting from block  are collected so that they can be used in further processing. In this embodiment, these claim(s) are stored in-memory, but in other embodiments the resulting claim(s) can be stored in a file, database, etc.","In a block , the claim collection is used to allow\/deny access to the resource(s) referred to in the message. In this embodiment, claims engine  tests the claim(s) to determine whether to allow\/deny access, unlike conventional systems in which the access control decision is based on the token or other information specific to the message sender. This scheme allows for multiple security mechanisms to be used in the message path that has intermediaries and does not depend on the messaging system.","Although the above operational flow is described sequentially, in other embodiments, the operations described in the blocks may be performed in different orders, multiple times, and\/or in parallel.","For example, employee John Doe of XYZ Company wishes to purchase an item that is available from an \u201con-line\u201d retailer for work-related purposes. XYZ Company in this example has created an entity (i.e., an intermediary) through which employees authorized to make \u201cInternet purchases\u201d may request items via an intranet and the company will then order and pay for the item over the Internet. Employee John Doe can send the request (which includes the Universal Product Code or UPC of the desired item) via client  to the intermediary (i.e., server  in this example) along with, for example, a Windows\u00ae Kerberos token (which is a token that contains a claim in which the type is \u201cgroup membership\u201d and the value is \u201cfull-time employees\u201d). The intermediary can then perform block  to extract this claim from the token.","The intermediary can then attempt to map the claim to another claim. In this example, the intermediary (i.e., server ) can map claims having a type \u201cgroup membership\u201d and the value \u201cfull-time employees\u201d to another claim in which the type is \u201crole\u201d and the value is \u201cpurchaser\u201d, which is defined for employees that are authorized to make Internet purchases. Thus, for example, claims engine  can perform block  to determine whether the value of \u201cfull-time employees\u201d of type \u201cgroup membership\u201d can be mapped to the claim having the type \u201crole\u201d and the value \u201cpurchaser\u201d. This claim can be defined during the configuration of the intermediary. The intermediary can then perform block  to form both of these claims into a collection.","The intermediary can then determine whether to send the purchase request to the on-line retailer using the claim collection. For example, the intermediary can perform block  to determine whether the claims associated with the message have a \u201crole\u201d with a value of \u201cpurchaser\u201d. In this example, John Doe is a \u201cpurchaser\u201d and, thus, claims engine  will allow the message to be sent to the application (or infrastructure) that sends the purchase order to the on-line retailer.","Continuing the example, the intermediary can then become the \u201cclient\u201d and the on-line retailer can become the \u201cserver\u201d. The intermediary can send a message (with the purchase order) along with, for example, an X.509 token, which the retailer can then attempt map into a claim of approved customers before processing the purchase order. The message sent by the intermediary can include all or some of the claims resulting from John Doe's message to the intermediary.","In another embodiment, system  operates substantially as described above, but with the additional operation of sending back to client  one or more derived claim(s), if any, or location information for where these derived claim(s) are stored in server . In some such embodiments, server  sends the derived claim(s) to client  using a message containing a time-bounded XrML (Extensible Rights Markup Language) license or SAML (Security Assertions Markup Language) assertion, which are both types of security tokens. For example, the message can be conformed by Extensible Markup Language (XML) Version. 1.0 (Third Edition) Feb. 4, 2004 or Security Assertion Markup Language (SAML) Version 1.1 Ratified as Oasis Standard, Sep. 23, 2003. This feature allows the client to include the additional derived claim(s) (or the location information) in the token(s) for subsequent messages. In scenarios having intermediaries, each intermediary can send its derived claims back to the original sender, or alternatively, the endpoint recipient can send all of the derived claims back to the original sender. In this way, performance can be improved by reducing the time\/computation needed to perform blocks  and .",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 3","FIG. 1","FIG. 2"],"b":["116","116","302","302","306","306","308","302","302","302","302","202"],"sub":["1","L","1","M","1","L ","1","L "]},"Auth-Z modules -, in one embodiment, perform claim mapping operations such as, for example, mapping extracted claims to other claims for \u201cM\u201d different mappings. For example, Auth-Z modules -can perform claim mapping operations to: (1) identify claims; (2) group membership claims (e.g., as defined in WINDOWS SERVER 2003\u2122 Authorization Manager); and (3) role claims; as well as other types of claims. In one embodiment, Auth-Z modules -map claims to other claims as described above in conjunction with block  (). In addition, Auth-Z modules -, can map claims on a per resource basis. For example (continuing the above Internet purchase example), one of the Auth-Z modules can map the aforementioned employee's identity claim (John Doe) to the role claim (purchaser) for a resource (shopping cart: John Doe).","AC module , in this embodiment, performs access control operations as described above in conjunction with block  (). For example, AC module  can make the access control decision (e.g., allow\/disallow the message to be further processed) by determining whether the message has an appropriate claim (either extracted or derived) for the resource(s) associated with the message (e.g., whether there is a role claim with value \u201cpurchaser\u201d for a \u201cshopping cart\u201d resource).","In some embodiments, claims engine  also extracts resource(s) from the message. In one embodiment, claims engine  performs resource extraction before the claim mapping operations performed by the Auth-Z modules. For example, if the message is XML-based and supports XPath (e.g., XML Path Language Version 1.0, Nov. 16, 1999), AC module  can be configured to extract resource(s) contained in the message by evaluating an XPath expression against an XML message. AC module  can also be configured to extract a resource at run-time (e.g., determining the identifier for computing platform in which server  resides, domain, etc.). Still further, AC module  can be configured (e.g., by custom code) to determine a selected property of the message itself (e.g., size in bytes, a count of messages from the sender for the day, or other property that may not be accessible via XPath). Claims engine  may also have one or more default resources (e.g., setting a maximum purchase amount).",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 4","FIG. 3","FIGS. 3 and 4"],"b":["116","116","116","401","401","401","301","302"],"sub":["1","L"]},"In this example, if message  includes an X.509 token, an Auth-N module (e.g., Auth-N module ) performs an authentication process that includes authentication operations in accordance with the X.509 Standard and, in addition, claim extraction operations as described above in conjunction with block  (). Similarly, if message  includes a Kerberos token, an Auth-N module (e.g., Auth-N module ) performs an authentication process that includes claim extraction operations and authentication operations in accordance with the Kerberos Standard. Likewise, if message  includes a Username\/Password token, an Auth-N module (e.g., Auth-N module ) performs an authentication process that includes standard username\/password authentication operations and the aforementioned claim extraction operations. In other embodiments, there may be more or less than three Auth-N modules, depending on the scenario.","The extracted claim(s), if any, are the grouped into a claim collection . Claim collection  is then operated on by Auth-Z modules -. As previously described, Auth-Z modules -map claims into other claims, which may include revoking claim(s).","In this example, an Auth-Z module (e.g., Auth-Z module ) receives claim collection  and performs an authorization process in which Auth-Z module maps the received claim(s) into Identity claims, as previously described in conjunction with block  (). Claim collection  then contains the resulting extracted\/derived claims.","Claim collection  is then received by another Auth-Z module (e.g., Auth-Z module ) in this example. Auth-Z module then performs an authorization process to map the extract\/derived claims resulting from process into Group claims, which will then form part of claim collection .","Similarly, claim collection  is next received by another Auth-Z module (e.g., Auth-Z module ) in this example. Auth-Z module then performs an authorization process to map the extracted\/derived claims resulting from processes and into Role claims. In some embodiments, there may be a custom Auth-Z module (not shown), which performs an authorization process to map extracted\/derived claims into custom claims (e.g., claims that are specific to application ).","Optionally, the claims may undergo authorization processes -multiple times to ensure that all of the valid claim mappings have been made, as indicated by a dashed arrow  that loops back to authorization process . As previously described, claims derived by the Auth-Z modules form part of claims collection . Claim collection  is then used to create message , which includes the claim(s) of claim collection  with or instead of the token(s). In other embodiments, there may be more or less than three Auth-Z modules, depending on the scenario.","Alternatively, extracted claims form claim collection  while derived claims (derived by the Auth-Z modules) can form another claim collection (not shown). These two claim collections are then used to create message , which includes the claim(s) of these claim collections with or instead of the token(s).","The various embodiments described above may be implemented in computer environments of the server and clients. An example computer environment suitable for use in the server and clients is described below in conjunction with .",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 5","b":["500","500","500","500"]},"Computer environment  includes a general-purpose computing device in the form of a computer . The components of computer  can include, but are not limited to, one or more processors or processing units , system memory , and system bus  that couples various system components including processor  to system memory .","System bus  represents one or more of any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures. By way of example, such architectures can include an Industry Standard Architecture (ISA) bus, a Micro Channel Architecture (MCA) bus, an Enhanced ISA (EISA) bus, a Video Electronics Standards Association (VESA) local bus, a Peripheral Component Interconnects (PCI) bus also known as a Mezzanine bus, a PCI Express bus, a Universal Serial Bus (USB), a Secure Digital (SD) bus, or an IEEE 1394, i.e., FireWire, bus.","Computer  may include a variety of computer readable media. Such media can be any available media that is accessible by computer  and includes both volatile and non-volatile media, removable and non-removable media.","System memory  includes computer readable media in the form of volatile memory, such as random access memory (RAM) ; and\/or non-volatile memory, such as read only memory (ROM)  or flash RAM. Basic input\/output system (BIOS) , containing the basic routines that help to transfer information between elements within computer , such as during start-up, is stored in ROM  or flash RAM. RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently operated on by processing unit .","Computer  may also include other removable\/non-removable, volatile\/non-volatile computer storage media. By way of example,  illustrates hard disk drive  for reading from and writing to a non-removable, non-volatile magnetic media (not shown), magnetic disk drive  for reading from and writing to removable, non-volatile magnetic disk  (e.g., a \u201cfloppy disk\u201d), and optical disk drive  for reading from and\/or writing to a removable, non-volatile optical disk  such as a CD-ROM, DVD-ROM, or other optical media. Hard disk drive , magnetic disk drive , and optical disk drive  are each connected to system bus  by one or more data media interfaces . Alternatively, hard disk drive , magnetic disk drive , and optical disk drive  can be connected to the system bus  by one or more interfaces (not shown).","The disk drives and their associated computer-readable media provide non-volatile storage of computer readable instructions, data structures, program modules, and other data for computer . Although the example illustrates a hard disk , removable magnetic disk , and removable optical disk , it is appreciated that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes or other magnetic storage devices, flash memory cards, CD-ROM, digital versatile disks (DVD) or other optical storage, random access memories (RAM), read only memories (ROM), electrically erasable programmable read-only memory (EEPROM), and the like, can also be utilized to implement the example computing system and environment.","Any number of program modules can be stored on hard disk , magnetic disk , optical disk , ROM , and\/or RAM , including by way of example, operating system , one or more application programs , other program modules , and program data . Each of such operating system , one or more application programs , other program modules , and program data  (or some combination thereof) may implement all or part of the resident components that support the distributed file system.","A user can enter commands and information into computer  via input devices such as keyboard  and a pointing device  (e.g., a \u201cmouse\u201d). Other input devices  (not shown specifically) may include a microphone, joystick, game pad, satellite dish, serial port, scanner, and\/or the like. These and other input devices are connected to processing unit  via input\/output interfaces  that are coupled to system bus , but may be connected by other interface and bus structures, such as a parallel port, game port, or a universal serial bus (USB).","Monitor  or other type of display device can also be connected to the system bus  via an interface, such as video adapter . In addition to monitor , other output peripheral devices can include components such as speakers (not shown) and printer , which can be connected to computer  via I\/O interfaces .","Computer  can operate in a networked environment using logical connections to one or more remote computers, such as remote computing device . By way of example, remote computing device  can be a PC, portable computer, a server, a router, a network computer, a peer device or other common network node, and the like. Remote computing device  is illustrated as a portable computer that can include many or all of the elements and features described herein relative to computer . Alternatively, computer  can operate in a non-networked environment as well.","Logical connections between computer  and remote computer  are depicted as a local area network (LAN)  and a general wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets, and the Internet.","When implemented in a LAN networking environment, computer  is connected to local network  via network interface or adapter . When implemented in a WAN networking environment, computer  typically includes modem  or other means for establishing communications over wide network . Modem , which can be internal or external to computer , can be connected to system bus  via I\/O interfaces  or other appropriate mechanisms. It is to be appreciated that the illustrated network connections are examples and that other means of establishing at least one communication link between computers  and  can be employed.","In a networked environment, such as that illustrated with computing environment , program modules depicted relative to computer , or portions thereof, may be stored in a remote memory storage device. By way of example, remote application programs  reside on a memory device of remote computer . For purposes of illustration, applications or programs and other executable program components such as the operating system are illustrated herein as discrete blocks, although it is recognized that such programs and components reside at various times in different storage components of computing device , and are executed by at least one data processor of the computer.","Various modules and techniques may be described herein in the general context of computer-executable instructions, such as program modules, executed by one or more computers or other devices. Generally, program modules include routines, programs, objects, components, data structures, etc. for performing particular tasks or implement particular abstract data types. These program modules and the like may be executed as native code or may be downloaded and executed, such as in a virtual machine or other just-in-time compilation execution environment. Typically, the functionality of the program modules may be combined or distributed as desired in various embodiments.","An implementation of these modules and techniques may be stored on or transmitted across some form of computer readable media. Computer readable media can be any available media that can be accessed by a computer. By way of example, and not limitation, computer readable media may comprise \u201ccomputer storage media\u201d and \u201ccommunications media.\u201d","\u201cComputer storage media\u201d includes volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules, or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by a computer.","\u201cCommunication media\u201d typically embodies computer readable instructions, data structures, program modules, or other data in a modulated data signal, such as carrier wave or other transport mechanism. Communication media also includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. As a non-limiting example only, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared, and other wireless media. Combinations of any of the above are also included within the scope of computer readable media.","Reference has been made throughout this specification to \u201cone embodiment,\u201d \u201can embodiment,\u201d or \u201can example embodiment\u201d meaning that a particular described feature, structure, or characteristic is included in at least one embodiment of the present invention. Thus, usage of such phrases may refer to more than just one embodiment. Furthermore, the described features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.","One skilled in the relevant art may recognize, however, that the invention may be practiced without one or more of the specific details, or with other methods, resources, materials, etc. In other instances, well known structures, resources, or operations have not been shown or described in detail merely to avoid obscuring aspects of the invention.","While example embodiments and applications have been illustrated and described, it is to be understood that the invention is not limited to the precise configuration and resources described above. Various modifications, changes, and variations apparent to those skilled in the art may be made in the arrangement, operation, and details of the methods and systems of the present invention disclosed herein without departing from the scope of the claimed invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Non-limiting and non-exhaustive embodiments are described with reference to the following figures, wherein like reference numerals refer to like parts throughout the various views unless otherwise specified.",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
