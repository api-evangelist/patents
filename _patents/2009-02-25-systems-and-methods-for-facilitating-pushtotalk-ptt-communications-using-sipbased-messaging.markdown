---
title: Systems and methods for facilitating push-to-talk (PTT) communications using SIP-based messaging
abstract: A method of facilitating push-to-talk (PTT) communications between a server device and a client device using SIP-based messaging, the server device being in communication with a media server. The method includes receiving in the server device from the client device a SUBSCRIBE message for subscription to a push-to-talk group, the SUBSCRIBE message including media information of the client device, storing in the server device the media information of the client device, and sending from the server device to the client device a NOTIFY message, the NOTIFY message including media information of the media server for storage by the client device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08374643&OS=08374643&RS=08374643
owner: Research In Motion Limited
number: 08374643
owner_city: Waterloo
owner_country: CA
publication_date: 20090225
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","DESCRIPTION OF EXAMPLE EMBODIMENTS"],"p":["The present application relates to push-to-talk systems and methods, and in particular to implementing push-to-talk using Session Initiation Protocol (SIP).","Push-to-talk (PTT) generally refers to real-time direct one-to-one and one-to-group voice communication service, which may occur in the cellular, Public Switch Telephone Networks (PSTN) and Internet networks. PTT calls can be directed to both individuals and talk groups. In a PTT call, the call connection is initiated by an originator device while the receiver typically does not have to \u201canswer\u201d the call.","PTT calls are one-way communications (half-duplex), which means that while one person speaks the others listen. In a PTT conversation, users typically no longer need to make several calls to coordinate with a group.","PTT service users are typically engaged in some other activity than a telephone call, and they listen to the group traffic during their activity. A user is usually contacted by receiving a PTT call from a member of the PTT group and can respond to the PTT group with a push of a key.","Session Initiation Protocol (SIP) is a protocol which is based on a request-response model. SIP leaves open the particular implementation of the desired functionality, and for example does not provide for specific implementation of PTT. As the interpretation remains open, some implementations of PTT using SIP may lead to inefficiencies.","For example, in some conventional systems implementing PTT using SIP, media parameters are negotiated and communicated only once the PTT call is initiated by a user. This wastes resources and time between when the user actually initiates the PTT call and when the system connects the user to the receiving units. Call lags may occur each time a user initiates a PTT call. Further, such inefficiencies become magnified when the PTT group involves a large number of parties.","Other difficulties with existing conventional systems will be apparent to those skilled in the art in view of the detailed description below.","Similar reference numerals may have been used in different figures to denote similar components.","In one aspect, there is provided a method of facilitating push-to-talk (PTT) communications between a server device and a client device using SIP-based messaging, the server device being in communication with a media server. The method includes: receiving in the server device from the client device a SUBSCRIBE message for subscription to a push-to-talk group, the SUBSCRIBE message including media information of the client device, storing in the server device the media information of the client device, and initiating, based on receipt in the server device of a second SUBSCRIBE message for initiating a push-to-talk session, a media session between the media server and the client device using the stored media information.","In another aspect, there is provided a method of facilitating push-to-talk (PTT) communications between a server device and a client device using SIP-based messaging, the server device being in communication with a media server. The method includes: receiving in the server device from the client device a SUBSCRIBE message for subscription to a push-to-talk group, sending from the server device to the client device a NOTIFY message, the NOTIFY message including media information of the media server for storage by the client device, and initiating, based on receipt in the server device of a second SUBSCRIBE message for initiating a push-to-talk session, a media session between the media server and the client device using the stored media information.","In yet another aspect, there is provided a server device for facilitating push-to-talk (PTT) communications using SIP-based messaging. The server device includes a memory, a controller for accessing the memory, a communications module in communications with the controller for communicating with a media server and a client device. The controller is configured to: receive from the client device a SUBSCRIBE message for subscription to a push-to-talk group, the SUBSCRIBE message including media information of the client device, store in memory the media information of the client device, send to the client device a NOTIFY message, the NOTIFY message including media information of the media server for storage by the client device, and initiate, based on receipt of a second SUBSCRIBE message for initiating a push-to-talk session, a media session between the media server and the client device using the stored media information.","In yet another aspect, there is provided a system for facilitating push-to-talk (PTT) communications using SIP-based messaging. The system includes a media server, a server device in communication with the media server, and at least one PTT receiving client devices, each for sending to the server device a SUBSCRIBE message for subscription to a push-to-talk group, the SUBSCRIBE message including media information of each of the PTT receiving client devices. The system further includes a PTT originator client device for sending to the server device a SUBSCRIBE message for subscription to a push-to-talk group. The server device is configured to: store the media information of the PTT-receiving client devices, and send to the PTT originator client device a NOTIFY message, the NOTIFY message including media information of the media server. The PTT originator client device is configured to store the media information of the media server. The server device is further configured to, upon receipt in the server device from the PTT originator client device of a second SUBSCRIBE message for initiating a push-to-talk session, initiate a media session between the media server and the client devices using the stored media information.","Other aspects will be apparent to those of ordinary skill in the art from a review of the following detailed description in conjunction with the drawings.","The present application relates to the control and management of push-to-talk (PTT) communications. Although reference may be made to \u201ccalls\u201d and \u201ctalk\u201d in the description of example embodiments below, it will be appreciated that the described systems and methods are applicable to session-based communications in general and not limited to voice calls. Reference to calls may for example include voice calls as well as media sessions which may for example include video and\/or audio.","Reference is now made to , which shows, in block diagram form, an example system, generally designated , for the control and management of communications. The system  includes an enterprise or business system , which in many embodiments includes a local area network (LAN). In the description below, the enterprise or business system  may be referred to as an enterprise network . It will be appreciated that the enterprise network  may include more than one network and may be located in multiple geographic areas in some embodiments.","The enterprise network  may be connected, often through a firewall , to a wide area network (WAN) , such as the Internet. The enterprise network  may also be connected to a public switched telephone network (PSTN)  via direct inward dialing (DID) trunks or primary rate interface (PRI) trunks.","The enterprise network  may also communicate with a public land mobile network (PLMN) , which may also be referred to as a wireless wide area network (WWAN) or, in some cases, a cellular network. The connection with the PLMN  may be made via a relay , as known in the art.","The enterprise network  may also provide a wireless local area network (WLAN) featuring wireless access points. Other WLANs  may exist outside the enterprise network . For example, WLAN may be connected to WAN .","The system  may include a number of enterprise-associated mobile devices  (only one shown). The mobile devices  may include devices equipped for cellular communication through the PLMN , mobile devices equipped for Wi-Fi communications over one of the WLANs , or dual-mode devices capable of both cellular and WLAN communications. WLANs  may be configured in accordance with one of the IEEE 802.11 specifications.","It will be understood that the mobile devices  include one or more radio transceivers and associated processing hardware and software to enable wireless communications with the PLMN  and\/or one of the WLANs . In various embodiments, the PLMN  and mobile devices  may be configured to operate in compliance with any one or more of a number of wireless protocols, including GSM, GPRS, CDMA, EDGE, UMTS, EvDO, HSPA, 3GPP, or a variety of others. It will be appreciated that the mobile device  may roam within the PLMN  and across PLMNs, in known manner, as the user moves. In some instances, the dual-mode mobile devices  and\/or the enterprise network  are configured to facilitate roaming between the PLMN  and a WLAN , and are thus capable of seamlessly transferring sessions (such as voice calls) from a connection with the cellular interface of the dual-mode device  to the WLAN  interface of the dual-mode device , and vice versa.","The enterprise network  typically includes a number of networked servers, computers, and other devices. For example, the enterprise network  may connect one or more desktop or laptop computers  (one shown). The connection may be wired or wireless in some embodiments. The enterprise network  may also connect to one or more digital telephone sets  (one shown).","The enterprise network  may include one or more mail servers, such as mail server , for coordinating the transmission, storage, and receipt of electronic messages for client devices operating within the enterprise network . Typical mail servers include the Microsoft Exchange Server\u2122 and the IBM Lotus Domino\u2122 server. Each user within the enterprise typically has at least one user account within the enterprise network . Associated with each user account is message address information, such as an e-mail address. Messages addressed to a user message address are stored on the enterprise network  in the mail server . The messages may be retrieved by the user using a messaging application, such as an e-mail client application. The messaging application may be operating on a user's computer  connected to the enterprise network  within the enterprise. In some embodiments, the user may be permitted to access stored messages using a remote computer, for example at another location via the WAN  using a VPN connection. Using the messaging application, the user may also compose and send messages addressed to others, within or outside the enterprise network . The messaging application causes the mail server  to send a composed message to the addressee, often via the WAN .","The relay  serves to route messages received over the PLMN  from the mobile device  to the corresponding enterprise network . The relay  also pushes messages from the enterprise network  to the mobile device  via the PLMN .","The enterprise network  also includes an enterprise server . Together with the relay , the enterprise server  functions to redirect or relay incoming e-mail messages addressed to a user's e-mail address within the enterprise network  to the user's mobile device  and to relay incoming e-mail messages composed and sent via the mobile device  out to the intended recipients within the WAN  or elsewhere. The enterprise server  and relay  together facilitate \u201cpush\u201d e-mail service for the mobile device  enabling the user to send and receive e-mail messages using the mobile device  as though the user were connected to an e-mail client within the enterprise network  using the user's enterprise-related e-mail address, for example on computer .","As is typical in many enterprises, the enterprise network  includes a Private Branch exchange (although in various embodiments the PBX may be a standard PBX or an IP-PBX, for simplicity the description below uses the term PBX to refer to both)  having a connection with the PSTN  for routing incoming and outgoing voice calls for the enterprise. The PBX  is connected to the PSTN  via DID trunks or PRI trunks, for example. The PBX  may use ISDN signaling protocols for setting up and tearing down circuit-switched connections through the PSTN  and related signaling and communications. In some embodiments, the PBX  may be connected to one or more conventional analog telephones . The PBX  is also connected to the enterprise network  and, through it, to telephone terminal devices, such as digital telephone sets , softphones operating on computers , etc. Within the enterprise, each individual may have an associated extension number, sometimes referred to as a PNP (private numbering plan), or direct dial phone number. Calls outgoing from the PBX  to the PSTN  or incoming from the PSTN  to the PBX  are typically circuit-switched calls. Within the enterprise, e.g. between the PBX  and terminal devices, voice calls are often packet-switched calls, for example Voice-over-IP (VoIP) calls.","The enterprise network  may further include a Service Management Platform (SMP)  for performing some aspects of messaging or session control, like call control and advanced call processing features. The SMP  may, in some cases, also perform some media handling. Collectively the SMP  and PBX  may be referred to as the enterprise communications platform, generally designated . It will be appreciated that the enterprise communications platform  and, in particular, the SMP , is implemented on one or more servers having suitable communications interfaces for connecting to and communicating with the PBX  and\/or DID\/PRI trunks. Although the SMP  may be implemented on a stand-alone server, it will be appreciated that it may be implemented into an existing control agent\/server as a logical software component. As will be described below, the SMP  may be implemented as a multi-layer platform.","The enterprise communications platform  implements the switching to connect session legs and may provide the conversion between, for example, a circuit-switched call and a VoIP call, or to connect legs of other media sessions. In some embodiments, in the context of voice calls the enterprise communications platform  provides a number of additional functions including automated attendant, interactive voice response, call forwarding, voice mail, etc. It may also implement certain usage restrictions on enterprise users, such as blocking international calls or 1-900 calls. In many embodiments, Session Initiation Protocol (SIP) may be used to set-up, manage, and terminate media sessions for voice calls. Other protocols may also be employed by the enterprise communications platform , for example, Web Services, Computer Telephony Integration (CTI) protocol, Session Initiation Protocol for Instant Messaging and Presence Leveraging Extensions (SIMPLE), and various custom Application Programming Interfaces (APIs), as will be described in greater detail below.","One of the functions of the enterprise communications platform  is to extend the features of enterprise telephony to the mobile devices . For example, the enterprise communications platform  may allow the mobile device  to perform functions akin to those normally available on a standard office telephone, such as the digital telephone set  or analog telephone set . Example features may include direct extension dialing, enterprise voice mail, conferencing, call transfer, call park, etc.","Reference is now made to , which show example embodiments of the enterprise communications system .  illustrates an embodiment intended for use in a circuit-switched TDM context. The PBX  is coupled to the SMP  via PRI connection  or other suitable digital trunk. In some embodiments, the PRI connection  may include a first PRI connection, a second PRI connection, and a channel service unit (CSU), wherein the CSU is a mechanism for connecting computing devices to digital mediums in a manner that allows for the retiming and regeneration of incoming signals. It will be appreciated that there may be additional or alternative connections between the PBX  and the SMP .","In this embodiment, the SMP  assumes control over both call processing and the media itself. This architecture may be referred to as \u201cFirst Party Call Control\u201d. Many of the media handling functions normally implemented by the PBX  are handled by the SMP  in this architecture. Incoming calls addressed to any extension or direct dial number within the enterprise, for example, are always first routed to the SMP . Thereafter, a call leg is established from the SMP  to the called party within the enterprise, and the two legs are bridged. Accordingly, the SMP  includes a digital trunk interface  and a digital signal processing (DSP) conferencing bridge . The DSP conferencing bridge  performs the bridging of calls for implementation of various call features, such as conferencing, call transfer, etc. The digital trunk interface  may be implemented as a plurality of telephonic cards, e.g. Intel Dialogic cards, interconnected by a bus and operating under the control of a processor. The digital trunk interface  may also be partly implemented using a processor module such as, for example, a Host Media Processing (HMP) processor.","The SMP  may include various scripts  for managing call processing. The scripts  are implemented as software modules, routines, functions, etc., stored in non-volatile memory and executed by the processor of the SMP . The scripts  may implement call flow logic, business logic, user preferences, call service processes, and various feature applications.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 3","b":["16","18","18","18"]},"The call control server  is coupled to the PBX , for example through the LAN, enabling packet-based communications and, more specifically, IP-based communications. In one embodiment, communications between the PBX  and the call control server  are carried out in accordance with SIP. In other words, the call control server  uses SIP-based communications to manage the set up, tear down, and control of media handled by the PBX . In one example embodiment, the call control server  may employ a communications protocol conforming to the ECMA-269 or ECMA-323 standards for Computer Supported Telecommunications Applications (CSTA).",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 4","b":["14","18","74","74","18","72","76","72","76","72","74"]},"The SIP server  interacts with the media server  using SIP-based media handling commands. For example, the SIP server  and media server  may communicate using Media Server Markup Language (MSML) as defined in IETF document Saleem A., \u201cMedia Server Markup Language\u201d, Internet Draft, draft-saleem-msml-07, Aug. 7, 2008. The media server  may be configured to perform Host Media Processing (HMP).","Other architectures or configurations for the enterprise communications system  will be appreciated by those ordinarily skilled in the art.","Reference is now made to , which shows another embodiment of the enterprise communications system  with a Third Party Call Control architecture. In this embodiment, the SMP  is a multi-layer platform that includes a protocol layer , a services layer  and an application layer . The protocol layer  includes a plurality of interface protocols configured for enabling operation of corresponding applications in the application layer . The services layer  includes a plurality of services that can be leveraged by the interface protocols to create richer applications. Finally, the application layer  includes a plurality of applications that are exposed out to the communication devices and that leverage corresponding ones of the services and interface protocols for enabling the applications.","Specifically, the protocol layer  preferably includes protocols which allow media to be controlled separate from data. For example, the protocol layer  can include, among other things, a Session Initiation Protocol or SIP , a Web Services protocol , an Application Programming Interface or API , a Computer Telephony Integration protocol or CTI , and a Session Initiation Protocol for Instant Messaging and Presence Leveraging Extensions or SIMPLE protocol . It is contemplated that the interface protocols - are plug-ins that can interface directly with corresponding servers in the enterprise network , which will be further described below.","For the purposes of this disclosure, SIP  will be utilized, although it is appreciated that the system  can operate using the above disclosed or additional protocols. As known by those of ordinary skill in the art, SIP is the IETF (Internet Engineering Task Force) standard for multimedia session management, and more specifically is an application-layer control protocol for establishing, maintaining, modifying and terminating multimedia sessions between two or more endpoints. As further known by those of ordinary skill in the art, the SIP protocol  includes two interfaces for signaling: SIP-Trunk (hereinafter referred to as \u201cSIP-T\u201d) and SIP-Line (hereinafter referred to as \u201cSIP-L\u201d). Specifically, the SIP-T interface is utilized when the endpoint is a non-specific entity or not registered (i.e., when communicating between two network entities). In contrast, the SIP-L interface is utilized when the endpoint is registered (i.e., when dialing to a specific extension). SIP is defined in J. Rosenberg et al., \u201cRFC 3261\u2014Session Initiation Protocol\u201d (June 2002), the contents of which are herein incorporated by reference. Other protocols, extensions, and standards related to SIP may be implemented and referenced, as appropriate. For example, Session Description Protocol (SDP), as described herein, is defined in RFC 3264, and is herein incorporated by reference.","The specific operation of the system  utilizing SIP  will be described in further detail below.","The SMP  also includes a plurality of enablers, among other things, a VoIP enabler , a Fixed Mobile Convergence or FMC enabler , a conference services enabler , a presence enabler  and an Instant Messaging or IM enabler . Each of the enablers - are used by corresponding services in the services layer  that combine one or more of the enablers. Each of the applications in the application layer  is then combined with one or more of the services to perform the desired application. For example, a phone call service may use the VoIP or PBX enabler, and an emergency response application may use the phone call service, an Instant Messenger service, a video call service, and email service and\/or a conference service.","The application layer  may include a conference services application  that, together with the conference services enabler , enables multiple communication devices (including desk telephones and personal computers) to participate in a conference call through use of a centralized conference server . As seen in , the conference server  is provided in the enterprise network  and is in communication with the conference services enabler  preferably through the SIP protocol , although it is recognized that additional protocols that control media separate from data may be appropriate, such as the Web Services protocol  or the CTI protocol . As will be described in further detail below, the conference call server  is configured for directing media and data streams to and from one or more communication devices (i.e., mobile devices , telephones , and computers ).","Reference is now made to , which shows, in block diagram form, an example PTT system, generally designated , for implementing a push-to-talk (PTT) procedure  in accordance with example embodiments. As shown, the PTT system  includes a PTT server device  in communication with a number of PTT client devices , illustrated as one PTT originator  and a plurality of PTT receivers , , . The client devices  may collectively form a PTT group. The PTT receivers , ,  may also sometimes be referred to as terminating devices.","The server device  includes a controller and a memory for storage of, among other items, the media information of client devices  which subscribe to a push-to-talk group. The server device  includes a communications module or submodule for communicating with other devices. The server device  may for example be part of the call control server or SMP  (). The server device  may further be part of the enterprise or business system  (). The server device  may include or be coupled to the media server  (), wherein the server device  controls the media handling of the media server .","Although the client devices  are illustrated as handheld mobile communication devices (such as a smart phone, cellular phone, soft phone, dual-mode phone, etc.), the client devices may be any device configured with the functionality described herein, and may for example include computer devices, relays, proxies, gateways and any appropriate User Agents (as defined in SIP).","Reference is now to , which shows a subscription procedure between the server device  and a client device . Generally, the PTT system  provides a subscription-based communications wherein certain information, including media information, may be communicated between the client devices  and the server device  prior to initiation of the actual PTT session (also referred to as PTT call). Some communications within the PTT system  implement the SUBSCRIBE and NOTIFY requests, which are defined in A. B. Roach, \u201cRFC 3265\u2014Session Initiation Protocol (SIP)-Specific Event Notification\u201d (June 2002), the contents of which are herein incorporated by reference.","In some conventional systems, a PTT session is implemented by using INVITE to set a pre-established (or early) session mode. However, such conventional systems using INVITE are limited to the basic request\/response functionality provided by INVITE. It is recognized herein that the SIP SUBSCRIBE method and related commands may provide further and additional functionality and flexibility in implementation, as can be appreciated in view of the description below.","Referring still to , a summary of the subscription procedure  will now be described, which occurs prior to the PTT call. At step , the client device  sends a SUBSCRIBE request to the server device , including information regarding the push-to-talk group number of the device and the port number of the particular mobile device  that is used to receive subsequent message, as well as for receiving a future PTT session. At step , the server device  provides a 200-OK message (accepting the subscription request). The server device  may also reject the subscription request (and\/or the subscription request may fail), for example using the 4xx or 5xx family of responses. At step , the server device  sends a NOTIFY request to the client device , with media information including a port number of the media server  () for future PTT sessions originating from the particular client device . At step , the client device  accepts the NOTIFY message by using 200-OK response. Generally, all client devices  which are to form part of the PTT group would implement the subscription procedure . The server device  is therefore informed of the port information of each subscribing client device , while each client device is informed of the port information of the media server .","Referring now to , a summary of the PTT procedure  will now be described. Generally, the PTT procedure  is used to establish a PTT call or session from the PTT originator  to the PTT receivers , , . The PTT procedure  typically occurs after the subscription procedure  (), with the media parameters already communicated. At step , the PTT originator  sends another SUBSCRIBE request (indicated as \u201cRE-SUSCRIBE\u201d for convenience) to the server device . At step , the server device  sends NOTIFY requests to the PTT receivers , , . As will be described in detail below, the NOTIFY request includes an indication of a new \u201cactive\u201d state. At step , the PTT receivers , ,  respond with a 200-OK message if a PTT call is acceptable to be received. A busy message such as 486-Busy may be sent as a response if the particular PTT receiver , ,  is busy or not accepting the PTT call. Each PTT receiver , ,  which indicated 200-OK further opens its allocated port for receiving media from the media server  (), for example Real-Time Transport Protocol (RTP) media, as could be implemented by those skilled in the art. At step , the server device  sends a 200-OK for the re-subscription message if at least one of the PTT-receivers , ,  is not busy. The media server  may thereafter open its media port for receiving or listening to media from the PTT originator . The PTT originator  thereafter starts a media session (e.g. an RTP media session, as could be implemented by those skilled in the art) to the port of the media server , with media information previously received in the NOTIFY step  ().","Detailed example implementations of the subscription procedure  and PTT procedure  will now be described, with reference to , which shows a general or generic example message template  for the SUBSCRIBE and NOTIFY requests. As shown, the message template includes a request , request headers  and associated body, and a SDP body (if present) . As shown, the request  may be either a SUBSCRIBE request  or a NOTIFY request , depending on the particular application and implementation.","The request headers  include headers relating to the PTT session information (the SUBSCRIBE or NOTIFY body is not shown here as it is context dependent). The configuration of the particular headers is dependent on the type of message being sent. The request headers  include Max-Forwards, To, From, Call-ID, CSeq, Contact, Event, Accept, Push-To-Talk-Group, Expires, Content-Type, and Content-Length. Regarding the \u201cEvent:\u201d header , RFC 3265 permits the creation and use of \u201cEvent packages\u201d which includes the creation of templates, event package responsibilities, parameters, and associated syntax and semantics for the headers . Thus, in this particular example a \u201cpush-to-talk\u201d event package is provided, and indicated as \u201cEvent: push-to-talk\u201d  (as shown). The headers  may further contain a \u201cPush-To-Talk-Group:\u201d  and associated \u201cstate=\u201d, which are created in the particular Event package. Note that the INVITE does not typically contain or provide for such Event packages.","The SDP body  includes parameters relating to session description , time description , and media description . These parameters are described in SIP. As can be appreciated, the SDP body  would not be present in some of the requests, such as in the RE-SUSCRIBE  and NOTIFY  messages (). Further, the media description  would not be present in some of the requests, for example when media information is already provisioned in advance of a PTT session. The SDP body  as shown may include parameters indicated by an asterisk (*) which are considered optional as defined by SIP (not to be confused with parameters which are optional in the present PTT system ).","The subscription procedure  () and PTT procedure  () will now be described in greater detail. Reference is now made to , which shows an example message  for implementing the SUBSCRIBE step  () in detail. As shown, the message  indicates in the header \u201cEvent: push-to-talk\u201d . The message  also contains the \u201cPush-To-Talk-Group\u201d header  that indicates a specific PTT group-identifier (ID) which the client device  is subscribing to. The message  also includes in the body of the \u201cPush-To-Talk-Group\u201d header  a current \u201cstate\u201d  of the client device. For example, the state  may be \u201cidle\u201d while available to receive a PTT call, or \u201cactive\u201d while wishes to initiate a PTT call. In the present message  for subscribing to a PTT group, the state  is set to \u201cidle\u201d, as shown. The SUBSCRIBE message  also includes an \u201cExpires:\u201d header , which includes in the body the requested expiry information of the particular subscription to the PTT group. The expiry information is stored by the server device  and generally indicates when the subscription to the PTT group is expired, and may be refreshed by subsequent SUBSCRIBE messages.","The message  further includes a SDP body , which contains media information  including port information of the client device . In the example shown, the media information  is \u201cSDP m-header port number 50000\u201d, which is the port number that will be used by the client device  for receiving the incoming media when a PTT call is received by the client device . For example, port information may include Internet Protocol (IP) port, codec, etc. In some example embodiments, the media information  is sent from the server device  to the media server  for storage by the media server  to implement a future media session with the client device . In other example embodiments, the media information  is stored by the server device  and passed on to the media server  when the media session starts.","The server device  can authenticate this request if needed and either accept or reject the subscription. If the subscription is accepted the server device  will send 200-OK response  () to indicate the successful status of the subscription.","The client device  can re-subscribe by sending another SUBSCRIBE message to the server device  if it wishes update the subscription, for example to modify or update SDP capabilities, expiry, state or ID of the Push-To-Talk-Group.","Reference is now made to , which shows an example message  for implementing the NOTIFY step  () in detail. As shown, the NOTIFY message  includes the same Call-ID, an incremented CSeq (727 versus 726 as in the SUBSCRIBE message ), and the same From and To headers. Thus, the NOTIFY message  includes some of the same headers  as the SUBSCRIBE message  (). As shown, the NOTIFY message  also includes the same event package, including the header \u201cEvent package: push-to-talk\u201d  and the header for \u201cPush-To-Talk-Group\u201d  as in the original SUBSCRIBE message . Once the server device  has accepted the subscription of the client device  to the particular PTT group, the server device  provides to the client device  media information  of the media server . As shown, the SDP body  includes the media information , including port information of the media server  to the client device . The client device  may store the media information  and use the media information  to implement a future PTT session when the client device  acts as a PTT-Originator  (). The specific server device  and media server  negotiations would be understood by those skilled in the art.","Referring still to , with regards to the Expires header  (shown as \u201cExpires: 2900\u201d), the server  may reduce the expiration value, and client device  must adhere to this new expiration value. In other example embodiments, the server  may reply with a SIP-Expires in the header of a 200 OK in response to the SUBSCRIBE command .","In some example embodiments, the server device  upon receiving of the SUBSCRIBE request (including the expiration value) from client device  will start a timer for the present subscription. Once the timer has expired the server device  will notify the client device  about the terminated\/terminating state of the subscription by means of another NOTIFY request.","The client device  accepts the provisioning NOTIFY message  request by responding with 200-OK  ().","In some embodiments, the server device  can periodically send updated NOTIFY messages to the client device(s) , which may for example include updated SDP information. Thus, the client device  may be configured to check for the SDP body in the NOTIFY messages.","Reference is now made to , which shows an example SUBSCRIBE message  for implementing the RE-SUBSCRIBE step  () in detail, for initiating the PTT call or session to the PTT group. As shown, the SUBSCRIBE message  does not include an SDP body, as the SDP information (including media information) was previously provided in the previous SUBSCRIBE message  (). As shown, in the \u201cPush-To-Talk Group\u201d header , the \u201cstate\u201d  is set to \u201cactive\u201d. This indicates that the particular client device  is initiating a PTT session to the PTT receivers , ,  in the PTT group and is acting as the PTT originator  (). As can be appreciated, using the SUBSCRIBE message  to initiate the PTT session would include additional information (such as the event package) when compared to a conventional INVITE message.","After the SUBSCRIBE message  has been sent to the server device , the PTT-originator  can start the media session (such as an RTP-session) to the media information , including the media port, that was previously provided in the NOTIFY message  ().","The server device  checks whether the current state of the PTT group is \u201cidle\u201d and that there is no \u201cactive\u201d PTT session. The server device  also verifies whether the PTT originator  has permission to initiate the PTT session (the floor control functionality of the server device  would be understood by those skilled in the art), for example if the \u201cexpiry\u201d for the particular subscription has expired. If the request by the PTT originator  is acceptable, the server device  will mark the PTT group as \u201cactive\u201d and follow to the next NOTIFY step . Otherwise the request will be rejected by the server device  sending to the PTT originator  one of the SIP-reject codes (e.g. 486 Busy Here).","Reference is now made to , which shows an example NOTIFY message  for implementing the NOTIFY step  (). The server device  will send the NOTIFY message  to all PTT receivers , ,  of the PTT group (). The NOTIFY message , as shown, indicates the \u201cstate\u201d  is set to \u201cactive\u201d. The NOTIFY message  is typically sent to those PTT receivers , ,  which had previously subscribed to the PTT group (using the subscription procedure , ) and whose particular subscriptions have not expired, as determined by the server device .","If a PTT-Receiver , ,  is not willing to accept the PTT call, the PTT-Receiver shall be configured to not receive any RTP session and reject the NOTIFY message  request, for example by responding with 486 Busy Here (or 480 Temporary Unavailable) SIP-responses. Otherwise, the PTT-Receiver , ,  will open the port (e.g., \u201clisten\u201d) which it has allocated for the media session in step  () for receiving the RTP-media. The PTT-Receiver , ,  thereafter starts playing (e.g. outputting to a speaker, not shown) the RTP-media received on the port.","Once any one of the PTT receivers , ,  sends a 200 OK response to the NOTIFY message  request, the server device  will send 200 OK (or 202 Accepted)  response to the SUBSCRIBE message  request ().","It can be appreciated that another client device  (such as one of the PTT receivers , , ) would not be able to start another PTT session while the current state of the group is \u201cactive\u201d.","Referring to , in order to terminate a PTT session, the PTT originator  sends a new RE-SUBSCRIBE request (using a SUBSCRIBE message similar to SUBSCRIBE message , ), in this case with the \u201cstate\u201d indicated as \u201cidle\u201d. The server device  will terminate the sessions with the PTT receivers , ,  by sending terminating NOTIFY requests (similar to the NOTIFY message , ) with the \u201cstate\u201d indicated as \u201cidle\u201d to all PTT receivers , , . Once the request to terminate the session by the PTT originator  is received, the PTT session is considered as terminated and the server device  must reset states of the all group members to \u201cidle\u201d regardless of responses received for the terminating NOTIFY requests to the PTT receivers , , .","Referring to , in order for a client device  to unsubscribe from the push-to-talk service (or a specific PTT group), the client device  must follow an un-subscription procedure, for example as described in RFC 3265, as would be understood by those skilled in the art.","In some example embodiments, the client devices may be designated as dedicated PTT originators or dedicated PTT receivers. Thus, in some of the provisioning message requests, certain media information including media port information would not be included, as such information would not be used by the dedicated PTT originators or dedicated PTT receiver, thereby reducing the size of the required message content.","Certain adaptations and modifications of the described embodiments can be made. Therefore, the above discussed embodiments are considered to be illustrative and not restrictive."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Reference will now be made, by way of example, to the accompanying drawings which show example embodiments, and in which:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 5","FIG. 3"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 6","FIG. 1"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 7","FIG. 6"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 8","FIGS. 6 to 7"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 9","FIG. 8"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 10","FIG. 8"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 11","FIG. 7"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 12","FIG. 7"]}]},"DETDESC":[{},{}]}
