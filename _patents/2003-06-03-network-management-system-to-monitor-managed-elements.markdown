---
title: Network management system to monitor managed elements
abstract: A network management system in which an administrator may specify attributes of interest, and the specified attributes are monitored. Graphs/reports corresponding to the specified reports may be generated in a single place (e.g., on a web page) such that the data points for the various attributes may be correlated easily. The specified attributes may contain attributes which are dynamically created (e.g., counters measuring various aspects related to instances of objects). The network management system provides the ability to discover such attributes using a suitable interface, and selection of such attributes as well.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07882213&OS=07882213&RS=07882213
owner: BMC Software, Inc.
number: 07882213
owner_city: Houston
owner_country: US
publication_date: 20030603
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS","1. Overview","2. Example Environment","3. Network Management Station (NMS)","4. Monitoring Newly Available Attributes","5. Enabling Administrator to Select Specific Attributes to Monitor","6. User Interface for Defining Monitor Type","7. User Interface for Instantiating a Monitor Instance","8. Displaying the Monitored Attributes","9. Implementation Considerations","10. Software Implementation","11. Conclusion"],"p":["1. Field of the Invention","The present invention relates to network management systems, and more specifically to a method and apparatus for enabling a user\/administrator to monitor managed elements.","2. Related Art","Networking environments often contain several devices interconnected using networks. Examples of devices include, but not limited to, client machines, web server machines, application server machines, database server machines, etc. Networks in turn are generally implemented using network elements such as routers, bridges, repeaters, and switches connected by various wire-based or wireless mediums. In general, networks provide connectivity between various devices.","Network management systems are used to monitor various attributes in devices and network elements, which (devices and network elements) are together hereafter referred to as \u2018managed elements\u2019. An attribute generally refers to an entity, the status or a related statistic of which can be determined. Examples of attributes include, but not limited to, operational status of device\/network element (or an interface thereon), the utilization (processing power, number of bytes transferred) of disk space\/processor\/interface, etc., as is well known in the relevant arts.","Vendors often provide network management systems, which monitor and display several attributes. In one prior approach, a vendor determines the attributes of possible interest to users (e.g., administrators or managers), and implements a network management system to retrieve data points of the attributes and display the corresponding data points using a suitable interface. One advantage of such an approach is that the users are provided information of possible interest without requiring substantial configuration.","However, one disadvantage of the approach is that the attributes of possible interest determined by a vendor may not precisely match the actual interest of at least some users. Accordingly, a corresponding network management system may not be entirely suitable to such users. In addition, the attributes of possible interest may not be known\/available at a time the network management system is implemented.","In the drawings, like reference numbers generally indicate identical, functionally similar, and\/or structurally similar elements. The drawing in which an element first appears is indicated by the leftmost digit(s) in the corresponding reference number.","A network management system according to an aspect of the present invention enables an administrator (or user) to specify attributes of interest, and to later view the data points related to the attributes. As a result, users may customize the attributes of interest and monitor only such attributes. According to another aspect of the present invention, a convenient interface is provided for a user to discover and display attributes of dynamically created managed entities. The user can then merely select the attributes to cause the selected attributes to be monitored.","Several aspects of the invention are described below with reference to examples for illustration. It should be understood that numerous specific details, relationships, and methods are set forth to provide a full understanding of the invention. One skilled in the relevant art, however, will readily recognize that the invention can be practiced without one or more of the specific details, or with other methods, etc. In other instances, well known structures or operations are not shown in detail to avoid obscuring the invention.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 1","FIG. 1"],"b":["110","120","130","140","140","150","160","170","170","170","190","190","110","130","170","170","170","140","140"]},"It should be appreciated that only a few representative systems and components are shown in  for illustration. However, typical environments contain several more (types) devices, agent modules, clients, etc. Similarly, for simplicity, several of the components are shown connected by a single network  or by point-to-point connections. The components can be connected using several disparate networks which are implemented in different administrative domains (e.g., Intranet, Internet, departmental network) and using different technologies.","In addition, agent modules and monitor instances are shown as separate blocks merely for clarity. The two blocks can be implemented within NMS , within a device being monitored, and\/or in a separate machine dedicated for monitoring of devices. The specific hardware on which the blocks are implemented may be referred to as a monitor server. Thus, the monitor server may be integrated with NMS  or the device being monitored, or be implemented as a separate machine. All such implementations are contemplated to be within the scope and spirit of various aspects of the present invention.","Devices -A and -Z represent (or contain) example managed elements, which are used to illustrate several aspects of the present invention. Each device may correspond to an element such as a server (e.g., web server, database server, network cache). However, for illustration, it is assumed that device -Z contains managed entities which are dynamically created, and thus need to be monitored. Device -Z may correspond to a Windows NT server 4.0 (available from Microsoft Corporation) executing on one of several commercially available machines, and the managed entities may correspond to instances of objects.","Agent modules -A and -X may be implemented to facilitate the instantiation of monitor instances according to various aspects of the present invention. In addition, tasks such as changing of control parameters (e.g., polling frequency), forwarding the data points polled for various attributes, etc., may be performed using communication from NMS . Agent module -A is shown interfacing with monitor instance -A, and agent module -X is shown interfacing with monitor instances -Y and -Z, merely for illustration.","Monitor instance -Z may be configured to indicate the attributes (including the specific managed element on which the attribute is present) which need to be monitored, and any related control parameters (e.g., polling frequency, timeouts). Monitor instance -Z may accordingly poll device -Z at the specified frequency, and send corresponding data points to NMS  via agent module -X. A timeout value for each poll may be specified by data received from NMS . Only monitor instance -Z is described below for conciseness, however the description may be applicable to other monitor instances as well.","To provide the above features, each agent module is provided the ability (compatible network protocol, medium interface, etc.) to communicate with NMS  and the monitor instance is provided the ability to communicate with corresponding managed elements sought to be managed. Thus, assuming for illustration that monitor instances -A and -Z are respectively used to monitor attributes in devices -A and -Z, monitor instance -A may communicate with device -A on network  (using IP) and monitor instance -Z may communicate with device -Z using potentially a proprietary protocol. Similarly, each agent module may communicate with NMS  on network  (using IP) or through other mechanism (as illustrated with point-to-point path -A).","An aspect of the present invention enables a user to define a new monitor instance to monitor various attributes as described in sections below in detail. Thus, some of the monitor types may be provided by a vendor providing NMS , and some monitor types may be defined by a user dynamically as described below.","Administrator tool  is used by an administrator to configure and instantiate various monitor instances. Administrator tool  may be integrated into NMS  as one unit. However, for ease of administration, administration tool may be provided from various client systems (). The manner in which a user may define monitor types and instantiate new monitor instances according to various aspects of the present invention, is described below in further detail. In an embodiment, the user may further group the monitors in various hierarchical menus such that navigation through the monitors is further simplified.","NMS  is used in conjunction with database  for several of the operations described above. Briefly, NMS  interfaces with administrator tool  to enable creation of new monitor types, configuration and instantiation of configured monitor types. In addition, NMS  may selectively store in database  all or some of the data points (or summary thereof) received from the monitor types. Also, NMS  may allow a user to access various reports generated based on the stored data points. The architecture view of an example embodiment of NMS  is described below in further detail.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 2","b":["110","110","210","220","230","250","270","280","290"]},"Web server  provides interface to client  and administrator tool  to interact with other modules in NMS . In an embodiment, a request for a web page is received in the form of a URL and associated parameters, and web server  communicates with an application server (not shown) to provide the appropriate interface for client  and administrator tool . The application server may be implemented to contain graphs\/reports generator  and administrator module . Web server  and the application server may be implemented using products available in the market-place as will be apparent to one skilled in the relevant arts.","Administrator module  provides appropriate interface for administrator tool  to enable an administrator to define, configure and instantiate monitor instances according to various aspects of the present invention. Administrator module  generates the appropriate database schemas, and configures database  corresponding to any monitor types\/instances defined according to various aspects of the present invention. In general, administrator module  may be used to specify the manner in which data points related to an attribute need to be displayed, and graphs\/reports generator  displays the data points accordingly.","Graphs\/reports generator  retrieves from database  (by interfacing through database interface ) various data points corresponding to attributes sought to be monitored, and displays data points. Data representing the requested graphs and reports may be generated, and provided to web server  for display in the form of web pages. The operation of graphs\/reports generator  and administrator module  is described with reference to example(s) below.","Data points module  receives various data points related to attributes being monitored by the corresponding monitor instances, and determines the manner in which the data points need to be processed. At least some of the data points may be stored in database  by communicating with database interface . The number of data points stored may be reduced and\/or alarms logged, for example, as described in U.S. Pat. No. 6,453,346 issued to Garg et al, which is incorporated in its entirety into the present application.","Agent controller  operates under the control of administrator tool  (via administrator module ) to instantiate various monitor instances, and to provide the appropriate configuration parameters. In general, each monitor instance may be provided information indicating the specific attributes to be monitored, polling frequency, timeout value for each poll, etc., in addition to the program logic enabling the monitor instance to poll the device for the data point. Agent interface  enables communication with each of the monitor instances according to the specific medium\/protocol using which the monitor instance can be contacted.","The description is continued with reference to the manner in which several aspects of the present invention may be implemented in the embodiment(s) described above.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 3A","FIGS. 1 and 2"],"b":["301","305"]},"In step , new attributes available on a managed element may be discovered (from administrator tool  after appropriate authentication of the administrator). The managed element may need to be specified by the administrator trying to define the new monitor type (or the attributes sought to be monitored therein). Thus, a suitable interface may be provided to enable the specific managed element from which to discover the attributes.","In step , administrator tool  displays the discovered attributes, again using a suitable interface. In an embodiment described below with reference to , the display depends on the type of managed entity providing the display attributes to enhance the user-friendliness of the interface.","In step , administrator tool  enables the administrator to specify display properties and control parameters for each attribute. The display properties may include the specific \u2018label\u2019 (usually descriptive) to be associated with the display of the attribute, the units of measurement\/display, etc. As described below, the data points for the attribute are then displayed according to the specified display properties. The control parameters in turn specify aspects such as polling frequency and poll timeouts, as noted in sections above also.","In step , administrator tool  generates a monitor type based on the selected attributes. In general, generating a monitor type entails storing the appropriate data representing the various attributes and the associated information, and enabling administrators at least to later access the monitor type to either further edit it, or to instantiate an instance of the corresponding monitor type. The manner in which monitor types may be supported is described in further detail with reference to examples in sections below.","In step , administrator tool  enables an administrator to instantiate a monitor instance of the monitor type defined earlier. As many instances as is desirable (usually associated with different managed entities) may be instantiated at a time convenient for the administrator. The administrator may be provided the further option of changing aspects such as display properties and control parameters for the specific instance being instantiated. In addition, when the identifiers of attributes depend on the specific instances of managed entities (e.g., objects), the user interface may permit the administrator to apply a monitor type to monitor such attributes as well as described below with examples.","In step , the instantiated monitor instance polls and stores data points related to the associated attributes. As noted above, the monitor instance needs to be provided the ability to communicate with the monitored device to enable such polling. In an embodiment, all monitor instances are implemented to communicate with devices which are already provided with the ability to respond to polling requests according to pre-defined interface(s), and thus monitor instances merely need to send poll requests consistent with the corresponding interface to receive each data point for a monitored attribute.","In step , graphs\/reports generator  generates graphs\/reports based on the data available in database  in response to corresponding request received from client . Each graph\/report may be generated (by default) according to the display properties specified in step . The method then ends in step .","Thus, the method of A illustrates the manner in which newly available attributes may be monitored in an embodiment of the present invention. However, it may be desirable to provide the administrator the ability to select only specific attributes to monitor. Such ability to select specific attributes may be desirable in other environments (independent of ability to monitor newly available attributes). The manner in which such a feature may be provided is described below with additional examples.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 3B","FIGS. 1 and 2"],"b":["351","355"]},"In step , administrator tool  displays various attributes which may be monitored using a network management system provided according to an aspect of the present invention. In step , administrator tool  enables an administrator to select attributes of interest. Any suitable user interface may be used to provide a display and enable selection.","In step , administrator tool  enables the administrator to specify display properties and control parameters for each selected attribute. In step , administrator tool  generates a monitor type based on the selected attributes. Steps  and  may be performed similar to steps  and  of . Similarly, steps ,  and  may be performed similar to steps ,  and  described above. The method of  ends in step .","Thus, an aspect of the present invention enables convenient monitoring of only the desired attributes. Various user interfaces may be implemented to provide the features described above with reference to . An example user interface, which provides various features described in both the figures is described below for illustration.",{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIGS. 4A","FIGS. 3A and 3B"],"b":["4","4","160"]},{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 4A","b":["400","410"]},"The selection of \u2018Monitor Wizard\u2019 sub-option causes pop-up menu  to be displayed, which displays the various monitor domains available for definition of a new monitor type. Assuming for illustration, the administrator selects \u2018Windows Performance Counter\u2019 (an example monitor domain) in pop-up menu , window  of  may be displayed. Area  in window  may contain the various instances of monitor types defined for the windows performance counter. Accordingly, area  is shown options containing buttons to Add, Edit, Delete, and Close. The edit and delete options may be used with pre-existing type instances.","Assuming the administrator selects \u2018Add\u2019 option in area , window  of  may be displayed. As may be appreciated, the layout of screen  is designed to be suitable for displaying the newly available attributes. The administrator may enter a suitable display label (that will be displayed when displaying graphs and reports) in field , a text identifier for the type instance (which is later displayed in area  of ). The value in field  represents the organization of various monitor types hierarchically (there in \u2018Windows NT\/2000\u2019 group which is below System group), and is specified by the administrator.","The administrator may also enter a unique name in field , which may then be used to identify the corresponding database schema and table name for this monitor type in database . NMS  may validate this unique name during monitor type definition to ensure that it is unique within the system and conforms to certain naming conventions (e.g., name cannot have blank spaces or special characters, name cannot begin with numeric value, etc.). The unique name thus created may be stored (e.g., in line  of the meta file illustrated later in ).","To discover the newly available attributes, the administrator enters in field  the address (target IP address) of a device from which the attribute types are discoverable, and then clicks on load counters button . In an embodiment implemented in the context of Windows NT\/2000 servers, the objects (sought to be monitored) are retrieved and made available in pull-down menu . The specific object of interest is selected by operating pull-down menu . The objects may be retrieved for example, using PDH interface described in further detail in a book entitled, \u201cWindows NT Performance Monitoring, Benchmarking, and Tuning\u201d by Mark Edmead (New Riders Publishing, November 1998, ISBN 1562059424).","The process object is shown selected in pull-down menu . The corresponding active instances are shown in scroll bar area . When an instance is selected, the corresponding available counters (attributes) are displayed in scroll bar area . The administrator selects each attribute of interest by first highlighting the attribute, and then clicking on add button . The selected attributes are displayed in scroll bar area . Remove button  can be used to remove a previously selected attribute.","The administrator may define various display properties associated with each selected attribute, and the corresponding columns are also shown in scroll bar area . Counter column contains the name of the attribute (specified according to standards) in scroll bar area . The \u2018measure as\u2019 column indicates the form of data that is collected for use in data analytics and display (e.g., graphs, reports, etc.). The common options are raw form (\u2018as is\u2019 value of the counter), delta form (difference from a previous value of the counter), and rate form (delta divided by some time interval), where the use of a particular form of data helps provide improved analytics or better understandability of graphs and reports.","The scale factor indicates a factor by which each data point is to be multiplied for purposes of display and is included in \u2018Scale\u2019 column. The unit column indicates the unit of measurement. The symbol # indicates that a dimensionless number is stored, e.g., count of threads, % CPU utilization, etc. Other possible options include dimensional numbers to indicate a rated value, e.g., memory growth\/unit time, connections opened\/unit time, etc. The \u2018Graph Default\u2019 option indicates whether the attribute is to be included by default in any graph display (described in further detail with reference to ).","\u2018Normal Distribution\u2019 column specifies whether the data points for the attribute are expected to follow a normal distribution (for computation to generate alarms when there is substantial deviation from the expected patterns). Other possible patterns include Poisson Distribution, etc., which are well known in the relevant arts.","Once the administrator is done with selecting the newly available attributes of interest and specifying the display attribute, update monitor button  may be clicked on to update the information (representing the monitor type instance) in database . It should be appreciated the interface of  is designed to be suitable for the specific examples described above. However, different interfaces may be provided as is suitable for the specific environment. The description is continued with reference to an example interface for instantiation of a monitor instance using the monitor type defined above.",{"@attributes":{"id":"p-0071","num":"0070"},"figref":["FIGS. 5A through 5E","FIG. 5A"],"b":"500"},"It may be noted that the detailed entries for \u2018Remote Agent\u2019 in area  indicate the specific locations where agent modules are installed. In an embodiment described in further detail, each agent module is provided the ability to receive data indicating the specific attributes to be monitored and control parameters, in addition to program logic for retrieving data points for specific device types. The program and logic are used during instantiation of monitor instances later.","Continuing with the manner in which the screen of  can be used, an administrator selects the \u201cAdd Monitor\u201d, \u201cSystem\u201d, \u201cWindows NT\/2000\u201d and \u201cWindows Process Monitor\u201d in successive pop-up windows , ,  and  respectively. It may be appreciated that the selection sequence corresponds to the information specified in field  in . Window  of  is displayed as a result.","With reference to  (configuration tab  selected by default), the administrator may provide a unique name for the monitor instance (here, \u201cJava Processes\u201d) in field . Source agent field  contains the default address (of field  of ), which was specified while defining the monitor type. The address may be modified if the monitor instance is to be instantiated on some other machine by specifying the corresponding new address. The list of such machines is provided in area  as noted above. Similarly, the IP address of the target machine on which the attributes are to be monitored, is specified in field .","All the instances of objects selected in  are available for monitoring. Additional instances may be discovered by clicking on load button . The list thus discovered may be accessible via list-down menu , and one of the object instances may be selected (instead of the Java instance). As the selected instance is of the same object type as the instances selected in , the attributes corresponding to such new instances also can be monitored.","The user may specify control attributes (to control polling behavior) by selecting control tab  as described below with reference to .","With reference to window  of , drop-down box  is used to indicate the poll interval value which specifies the frequency with which the monitor instance will send poll requests to obtain counter values for attributes defined in the monitor type. Drop-down box  contains the poll timeout value which specifies the duration of time after which a poll will timeout (and return \u2018no data\u2019 value) if the monitor instance cannot complete the poll for some reason (e.g., managed element which is being monitored is temporarily not accessible from the network).","Check-box  contains a flag to indicate if data collection should be enabled for the monitor instance. Data collection may be disabled from time to time for various administrative reasons (e.g., if the managed element which is being monitored is temporarily brought down for maintenance purposes). Once the administrator is done with the selection of  and specifying poll attributes of , the finish button (shown in area ) may be clicked on.","Administrator tool  causes the monitor instance to be instantiated on a machine with the address in source agent field , to monitor objects on a machine with the address in Target IP\/Host Name field . A confirmation message may be generated as shown in the window of . The administrator may then confirm the instantiation of the instance by examining the appropriate entries as shown in .","With reference to , all the monitor instances instantiated are shown at the hierarchy device\/server\/machine address (192.168.3.29 in this case). An instance with name \u2018Java Processes\u2019 is shown in the monitor type of \u2018Windows Process Monitor\u2019. Once instantiated, the monitor instance polls the managed entity, and the received data points are stored in database . The description is continued with reference to the display of such data points (and other data such as alarms which are monitored).",{"@attributes":{"id":"p-0080","num":"0079"},"figref":["FIGS. 6A and 6B","FIG. 6A","FIG. 6B"],"b":["600","610","615","610","650"]},"With respect to , it may be observed that the one entry (\u201c% Privileged Time\u201d) checked off in the \u2018Graph Default\u2019 column of  is displayed by default. The data points for the other attributes may also be displayed by checking off the boxes corresponding to other attributes in area .","Thus, it may be appreciated that the interfaces above enable selection of only attributes desired to be monitored. Such attributes include any newly available attributes as well (in addition to any already existing attributes). The description is continued with reference to some implementation considerations.","It will be appreciated by one skilled in the relevant arts that the features and interfaces described above may be implemented using several approaches depending on factors such as implementation environment, design choices, etc. The description is continued with reference to some general considerations in an example implementation.","In an embodiment, the information received in the interfaces of  is first stored in the form of a meta file. Portions of the meta file are depicted in  and A-B. In general, data in the meta file may be referred to as specification data to define the monitor type\/instance. The line numbers in the figures are unique and (substantially) contiguous, and the lines are described with reference to line numbers. Only the portions of the meta file as relevant to an understanding of the described embodiments are described in detail for conciseness.","With respect to , lines  through  shows several variables that are associated with the monitor type. The variables in  may be viewed as a specification of the base instance (parent level) from which the actual instance (level 1) of this monitor type is derived. These variables generally control how each monitor type operates with respect to the agent module. The labels are intended to be self-explanatory, and all lines are not described here in the interest of conciseness.","Line  includes a unique identifier for each monitor type (MOTypeid), and the corresponding names are shown in lines  and . MOTypeid value is automatically assigned by NMS  during monitor type definition. The values may be assigned using some simple scheme (e.g., lowest unassigned value in a certain range of numbers). When several instances of the same monitor type are instantiated on the same agent, the MOTypeid may be used to identify the common information for all the instances.","As may be readily observed, line  corresponds to field  in  where the administrator defines a display name for the monitor type, and line  corresponds to field  in  where the administrator defines a unique monitor name for the monitor type. Several of the other variables are set by default. These are pre-defined depending on the monitor domain, the operation of the monitor type with respect to the agent module, the characteristics of the monitor type with respect to the data collection, etc.","Line  refers to the executable program for this monitor domain (Windows Performance Counter) within NMS . Line  refers to the current version of this monitor type and is used for change tracking purposes. Line  defines a flag which specifies that there is a single instance of this monitor type (Windows Process Monitor) per parent node (shown in  under the hierarchy device\/server\/machine address, where machine address is the IP address of the parent node, 192.169.3.29 in this case).","Line  defines a flag which specifies that instances of this monitor type can run remotely from an agent module that is outside the NMS . Line  defines a flag which specifies that instances of this monitor type can also run locally from an agent module that is inside the NMS . Line  defines an operating system mask which specifies that instances of this monitor type can only run from an agent module on Windows (wherein the value 6 is based on an encoding scheme to represent the Windows platform). Lines - define other variables which are generally relevant to the operation of the monitor type, but these are not significant with respect to the present invention and hence are not described in detail in the interest of conciseness.","With reference to , lines - define an input attribute to represent the parent level instance of this monitor type (shown in various figures with the label \u2018Windows Process Monitor\u2019). Variable entitled \u2018AttrID\u2019 (501046999 in this case) is assigned a unique value across all attributes of all monitor types within NMS , and is obtained by concatenating the value of a second variable \u2018UsrAttrID\u2019 (999 in this case) with the parent level MOTypeid value (501046) from line . The values may be assigned using some simple approach (e.g., lowest unassigned value in a certain range of numbers).","NMS  may use AttrID as a unique identifier to represent the parent level instance of this monitor type within the system. There is also a variable entitled \u2018DisplayName\u2019 which contains a pre-set value that is later mapped to the actual value entered by the administrator in field  (shown later in various figures as \u2018Windows Process Monitor\u2019).","The variables in lines - may be viewed as a specification of the actual instance (level 1) of this monitor type derived from the parent level instance (shown in ). As may be readily observed, the variables in lines - substantially correspond to the variables in lines - (in ). This includes an additional variable entitled \u2018StatsPollPeriod\u2019 which specifies the polling period (300 seconds in this case) for data collection upon instantiation.","Lines - represent the manner in which some of the input information for creating an actual instance (level 1) of this monitor type (shown in ) is stored in the meta file. In particular, lines - correspond to attribute \u2018Instance Name\u2019 (field ) and lines - correspond to attribute \u2018Target IP\/Host Name\u2019 (field ) in .","Lines - are used as an example to describe the significant variables for a typical input attribute used to create an actual instance (level 1) of this monitor type. Variable entitled \u2018AttrID\u2019 (501047070 in this case) has a unique value across all attributes of all monitor types within NMS , and is obtained by concatenating the value of a second variable \u2018UsrAttrID\u2019 (070 in this case) with the level 1 MOTypeid value (501047) from line . The values may be assigned using some simple scheme (e.g., lowest unassigned value in a certain range of numbers).","NMS  may use AttrID as a unique identifier for the attribute within the system. Variable entitled \u2018DisplayName\u2019 contains display string for the attribute (Target IP\/Host Name in this case). Variable entitled \u2018UniqueName\u2019 contains a unique name value for the attribute (TARGETIP in this case). The display name is not necessarily unique, so either the AttrID value or the unique name value may be used to distinguish one attribute from another. Unique name value is intended to be in human readable form, whereas AttrID is not easily comprehensible since it is intended for computation purposes (e.g., as a key in database ).","Variable entitled \u2018DataType\u2019 specifies data type for this attribute (integer in this case). Variable entitled \u2018AttrType\u2019 specifies type of this attribute (input in this case). Variable entitled \u2018DisplayType\u2019 specifies display type format for this attribute (IP address format in this case). Variable entitled \u2018DisplaySeqNo\u2019 specifies the order in which this attribute is displayed (third in this case, which is the position of field  in ). Variable entitled \u2018RequiredOnCreate\u2019 specifies if this is a required or optional input to create the monitor instance (yes in this case, shown with an asterisk mark and caption \u201c*=required field\u201d for field  in ).","With respect to , lines - represent the manner in which some of the information input by the administrator when defining a monitor type in  may be stored in a meta file. In particular, lines - correspond to the counter \u201c% Privileged Time\u201d shown in the first row of table  of , lines - correspond to the counter \u201c% Processor Time\u201d shown in the second row of table  of , and so on. These counters constitute the specific attributes selected by the administrator for which performance data is collected from a managed element.","Lines - are used as an example to describe the significant variables for a typical attribute which is selected to collect performance data. Variable entitled \u2018AttrID\u2019 (501047020 in this case) whose value is unique across all attributes of all monitor types within NMS , and is obtained by concatenating the value of a second variable \u2018UsrAttrID\u2019 (020 in this case) with the level 1 MOTypeid value (501047) from line . The values may be assigned using some simple scheme (e.g., lowest unassigned value in a certain range of numbers). NMS  uses AttrID as a unique identifier for the attribute within the system.","Variable entitled \u2018DisplayName\u2019 contains display string for the attribute (% Privileged Time in this case). Variable entitled \u2018UniqueName\u2019 contains unique name value for the attribute (STATS_ATTRIB in this case). The display name is not necessarily unique, and thus either the AttrID value or the unique name value may be used to distinguish one attribute from another. Unique name value is intended to be in human readable form, whereas AttrID is not easily comprehensible since it is intended for computation purposes (e.g., as a key in database ).","Variable entitled \u2018DataType\u2019 specifies data type for this attribute (character in this case). Variable entitled \u2018AttrType\u2019 specifies type of this attribute (hidden in this case). This is set to hidden since it is an input attribute used to only define the counter; it does not output the counter value obtained in a monitor poll\u2014the counter value is actually output using a corresponding output attribute described later (). Variable entitled \u2018Default\u2019 stores a composite value to indicate the properties of this attribute as selected in table  of  (\u201cProcess+java+% Privileged Time; 1.0; #; true; true; RAW\u201d in this case).","With reference to table , the value indicates that the attribute is for the \u2018process\u2019 object (third column), \u2018Java\u2019 instance (second column), \u2018% Privileged Time\u2019 counter (first column); the attribute has scale factor equal to \u20181\u2019 (sixth column); the attribute has unit of measure equal to \u2018#\u2019 (seventh column); the attribute has the default graph option set to \u2018true\u2019 (eight column); the attribute has the normal data distribution option set to \u2018true\u2019 (ninth column); the attribute has the data form option set to \u2018RAW\u2019 (fifth column).","With respect to , lines - represent the manner in which the data output by some of the counters in a monitor poll may be specified in the meta file. In particular, the variables \u2018TableName\u2019 and \u2018ColumnName\u2019 contain the table name and column name respectively in database  where the output values (data points) from each counter are stored. Lines - correspond to the counter \u201c% Privileged Time\u201d shown in the first row of table  of , lines - correspond to the counter \u201c% Processor Time\u201d shown in the second row of table  of , and so on.","Lines - are used as an example to describe the significant variables for a typical attribute to store its counter output values in the database. Variable entitled \u2018AttrID\u2019 (501047072 in this case) whose value is unique across all attributes of all monitor types within NMS , and is obtained by concatenating the value of a second variable \u2018UsrAttrID\u2019 (072 in this case) with the level 1 MOTypeid value (501047) from line . The values may be assigned using some simple scheme (e.g., lowest unassigned value in a certain range of numbers).","NMS  uses AttrID as a unique identifier for the attribute within the system. Variable entitled \u2018DisplayName\u2019 contains display string for the attribute (% Privileged Time in this case). Variable entitled \u2018UniqueName\u2019 contains unique name value for the attribute (STATS in this case). The display name is not necessarily unique, so either the AttrID value or the unique name value may be used to distinguish one attribute from another. Unique name value is intended to be in human readable form, whereas AttrID is not easily comprehensible since it is intended for computation purposes (e.g., as a key in database ). Variable entitled \u2018AttrType\u2019 specifies type of this attribute (stats in this case). This is set to stats since it is an output attribute used to record the counter value obtained in a monitor poll.","Variable entitled \u2018UOM\u2019 specifies the units of measurement for this attribute (# in this case). Variable entitled IsDefaultStats' specifies if this is a default counter for which data is collected (yes in this case). Variable entitled \u2018TableName\u2019 has the database table name for this attribute (WinProcess in this case). The database table name is derived from the unique name for this monitor type (see field  of  and line  of ). Variable entitled \u2018ColumnName\u2019 has the column name for this attribute (STATS in this case). The column name is derived from the unique name for this attribute (STATS on line ). Variable entitled \u2018UseNormalDistribution\u2019 specifies if the data for this attribute follows the statistical Normal Distribution form (yes in this case).","With respect to , lines - represent the manner in which some of the information to control the data collection behavior of a monitor instance may be specified in the meta file. In particular, lines - correspond to drop-down box  in  and relates to the poll interval (frequency with which the monitor instance will poll to obtain counter values for attributes defined in the monitor type), and lines - correspond to drop-down box  in  and relates to the poll timeout (duration of time after which a poll will timeout in case the monitor instance is not able to complete the poll and obtain counter values for attributes defined in the monitor type). The values of the control attributes may be specified during monitor instance creation and determine the poll behavior for that monitor instance.","Lines - are used as an example to describe the significant variables for a typical control attribute. Variable entitled \u2018AttrID\u2019 (501047998 in this case) whose value is unique across all attributes of all monitor types within NMS , and is obtained by concatenating the value of a second variable \u2018UsrAttrID\u2019 (998 in this case) with the level 1 MOTypeid value (501047) from line . The values may be assigned using some simple scheme (e.g., lowest unassigned value in a certain range of numbers). NMS  uses AttrID as a unique identifier for the attribute within the system.","Variable entitled \u2018DisplayName\u2019 contains display string for the attribute (Statistics Poll Interval in this case). Variable entitled \u2018UniqueName\u2019 contains unique name value for the attribute (STSPOLLPERIOD in this case). The display name is not necessarily unique, so either the AttrID value or the unique name value may be used to distinguish one attribute from another. Unique name value is intended to be in human readable form, whereas AttrID is not easily comprehensible since it is intended for computation purposes (e.g., as a key in database ). Variable entitled \u2018DisplayType\u2019 specifies how the values for this attribute will be displayed (integer in this case).","Variable entitled \u2018AttrMetaType\u2019 specifies the type of this attribute (control in this case). Variable entitled \u2018InputOnCreate\u2019 specifies if an input value must be provided at the time of monitor instance creation (yes in this case). Variable entitled \u2018Editable\u2019 specifies if the value input for this attribute may be edited and set to another value. Variable entitled \u2018RequiredOnCreate\u2019 specifies if this is a required or optional input to create the monitor instance (yes in this case, shown with an asterisk mark and caption \u201c*=required field\u201d for drop-down box  in ). Variable entitled \u2018Default\u2019 specifies the default value set for this attribute in case the administrator does not specify another value during monitor instance creation (900 seconds in this case, which equals the value 15 minutes shown in drop-down box  in ).","It should be understood that using the information such as described above in the meta file, monitor instances can be created on agent modules using several approaches.","In one approach, a database schema is generated by the administrator module  for the monitor type after definition according to . A unique identifier (MOTypeid from line  in ) identifies the monitor type within the network management system. The database schema is then associated with each instantiation of the monitor according to .","When a monitor instance is created; NMS  creates a unique instance identifier (InstanceID) value for each instance. The InstanceID value may be assigned using some simple scheme (e.g., lowest unassigned value in a certain range of numbers) and is then stored in database  along with the associated data (from  and A-B) for each monitor instance. When used together, MOTypeid uniquely identifies the monitor type and InstanceID uniquely identifies an instance of this monitor type within the network management system. The database schema associated with the monitor type is used to create the necessary tables in database  to store the data points received during a monitor poll.","In addition, program logic specifying the manner in which each of the attributes can be retrieved may also be sent to agent module -X. In an embodiment, the program logic is sent in the form of a JAR (Java Archive) file, and a JVM (Java Virtual Machine) executes the JAR file. The resulting program is provided the ability to poll the corresponding device (with the corresponding control parameters), and send the data points (along the identifiers of the table\/column where the data points are to be stored). The JAR file generally contains various objects which provide the feature(s) described above.","The implementation of such a JAR file will be apparent to one skilled in the relevant arts. In general, the implementation of the program logic to poll a device depends on the specific machine (vendor, operating system, connectivity environment, support of application programming interfaces, etc.) on which the monitor instance is implemented, and such implementation will be apparent to one skilled in the relevant arts.","In addition, the specific manner in which the attributes to be monitored, the manner in which a monitor instance sends back (or stores) the data points in database , etc., are merely exemplary. The implementation of such an approach based on the above disclosure will also be apparent to one skilled in the relevant arts. Various modifications may be made to the above described approaches, without departing from the scope and spirit of various aspects of the present invention, as will also be apparent to one skilled in the relevant arts. Such modifications will also be apparent to one skilled in the relevant arts.","It should be understood that the different components of the network management system can be implemented in a combination of one or more of hardware, software and firmware. In general, when throughput performance is of primary consideration, the implementation is performed more in hardware (e.g., in the form of an application specific integrated circuit). When flexibility and\/or cost are of primary consideration, the implementation is performed more in software (e.g., using a processor executing instructions provided in software\/firmware). Cost and performance can be balanced by implementing with a desired mix of hardware, software and\/or firmware. An embodiment implemented substantially in software is described below.",{"@attributes":{"id":"p-0117","num":"0116"},"figref":"FIG. 9","b":["900","900","110","160","120","900","910","920","930","960","980","990"]},"Input interface  (e.g., interface with a key-board and\/or mouse, not shown) enables a user\/administrator to provide any necessary inputs to System . Output interface  provides output signals (e.g., display signals to a display unit, not shown), and the two interfaces together can form the basis for a suitable user interface for an administrator to interact with system . For example, assuming an administrator (or user) interacts with NMS  using command line interface, the corresponding interface may be provided using input interface  and output interface .","Network interface  may enable system  to send\/receive data packets to\/from other systems on corresponding paths using protocols such as internet protocol (IP). The packets may form the basis for instantiating a monitor instance, to receive data points corresponding to various attributes, interface with client , etc. Network interface , output interface  and input interface  can be implemented in a known way.","RAM  receives instructions and data on path  (which may represent several buses) from secondary memory , and provides the instructions to processing unit  for execution.","Secondary memory  may contain units such as hard drive  and removable storage drive . Secondary memory  may store the software instructions and data, which enable System  to provide several features in accordance with the present invention.","Some or all of the data and instructions may be provided on removable storage unit  (or from a network using protocols such as Internet Protocol), and the data and instructions may be read and provided by removable storage drive  to processing unit . Floppy drive, magnetic tape drive, CD-ROM drive, DVD Drive, Flash memory, removable memory chip (PCMCIA Card, EPROM) are examples of such removable storage drive .","Processing unit  may contain one or more processors. Some of the processors can be general purpose processors which execute instructions provided from RAM . Some can be special purpose processors adapted for specific tasks (e.g., for memory\/queue management). The special purpose processors may also be provided instructions from RAM .","In general, processing unit  reads sequences of instructions from various types of memory medium (including RAM , secondary memory  and removable storage unit ), and executes the instructions to provide various features of the present invention described above. Thus, a medium providing such instructions\/data may be referred to as a computer readable medium.","While various embodiments of the present invention have been described above, it should be understood that they have been presented by way of example only, and not limitation. Thus, the breadth and scope of the present invention should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention will be described with reference to the accompanying drawings, wherein:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4C"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5C"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5D"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5E"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 6B"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIGS. 7A-7C"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIGS. 8A and 8B"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
