---
title: Physical simulations on a graphics processor
abstract: The present invention is directed to a method, computer program product, and system for performing physics simulations on at least one graphics processor unit (GPU). The method includes the following steps. First, data representing physical attributes associated with at least one mesh are mapped into a plurality of memory arrays to set up of a linear system of equations that governs motion of the at least one mesh depicted in a scene. Then, computations are performed on the data in the plurality of memory arrays using at least one pixel processor to solve the linear system of equations for an instant of time, wherein modified data representing the solution to the linear system of equations for the instant of time are stored in the plurality of memory arrays.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08666712&OS=08666712&RS=08666712
owner: ATI Technologies Inc.
number: 08666712
owner_city: Markham, Ontario
owner_country: CA
publication_date: 20060724
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION","I. OVERVIEW OF PHYSICS SIMULATION ON ONE OR MORE GPUS","II. AN EXAMPLE PHYSICAL SIMULATION INTERFACE","III. AN EXAMPLE METHOD FOR PERFORMING PHYSICS SIMULATIONS ON ONE OR MORE GPUS","IV. EXAMPLE COMPUTER IMPLEMENTATION","V. CONCLUSION"],"p":["1. Field of the Invention","The present invention is generally directed to graphics processor units, and more particularly to using graphics processor units to perform game physics simulations.","2. Background Art","An application, such as a video game, running on a computer system may require both physics simulations and graphics rendering. For example,  depicts a block diagram  of a typical pipeline for computing and displaying the motion of one or more characters depicted in a scene of a video game. In a step , physics simulations are performed to determine the motion of the one or more characters depicted in the scene. Then in a step , the results of the physics simulations are graphically rendered for visualization by an end-user.","The physics simulations of step  are typically performed by a physics engine that is executed on a central processing unit (CPU) or a dedicated device of the computer system. Then, the graphics rendering of step  is performed by a graphics processing unit (GPU). Ultimately, however, the results produced by the physics engine are used to modify the graphics of the video game (or, more generally, the application), and therefore will be passed to the GPU in some form. Because the results from the physics engine must be passed to the GPU for rendering, latency and bandwidth problems may arise. Furthermore, as a general processing unit, a CPU does not possess the parallel processing capabilities of a GPU.","Given the foregoing, what is needed is a method, computer program product, and system for performing physics simulations on one or more GPUs.","Embodiments of the present invention, which may include a method, computer program product, and system take advantage of the parallel processing capabilitites available on a GPU to enable faster frame rates as compared to physics simulations executed on a typical CPU. Furthermore, such a method, computer program product, and system utilize an implicit integration technique in the performance of the physics simulations to avoid the relatively small time steps required in explicit integration techniques. Moreover, procedural forces and torques can be represented as a shader program that executes on the GPU(s). In addition, a GPU-based physics simulator can be able to automatically replace a conventional software dynamics solver that typically executes physics simulations on a computer system. Embodiments of the present invention meet the above-identified needs by providing a method, computer program product, and system for performing physical simulations on one or more GPUs. Such a method, computer program product, and system for performing physics simulations on one or more GPUs takes advantage of the parallel processing capabilities available on the GPU(s), thereby enabling faster frame rates compared to physics simulations executed on a typical CPU. Furthermore, such a method, computer program product, and system utilize an implicit integration technique in an embodiment to perform physics simulations, thereby avoiding the relatively small time steps required in explicit integration techniques. Moreover, in accordance with an embodiment of the present invention procedural forces and\/or torques are representable as a shader program that executes on the GPU(s). In addition, a GPU-based physics simulator in accordance with an embodiment of the present invention may be used to automatically replace a conventional software dynamics solver that typically executes physics simulations on a computer system.","In accordance with an embodiment of the present invention there is provided a method for performing physics simulations on at least one GPU. The method includes the following steps. First, data representing physical attributes associated with at least one mesh are stored in a plurality of video memory arrays to set up a linear system of equations that govern motion of the at least one mesh depicted in a scene. Then, computations are performed on the data in the plurality of video memory arrays using at least one pixel processor to solve the linear system of equations for an instant of time, wherein modified data representing the solution to the linear system of equations for the instant of time are stored in the plurality of video memory arrays.","In accordance with another embodiment of the present invention there is provided a computer program product comprising a computer usable medium having control logic stored therein for causing at least one GPU to perform physics simulations. The control logic includes a computer readable first and second program code. The computer readable first program code causes the at least one GPU to store data representing physical attributes associated with at least one mesh in a plurality of video memory arrays to set up a linear system of equations that governs motion of the at least one mesh depicted in a scene. The computer readable second program code causes the at least one GPU to perform computations on the data in the plurality of video memory arrays to solve the linear system of equations for an instant of time, wherein modified data representing the solution to the linear system of equations for the instant of time are stored in the plurality of video memory arrays.","In accordance with a further embodiment of the present invention there is provided a system for performing physics simulations. The system includes a memory that stores a plurality of video memory arrays and at least one pixel processor coupled to the memory. The plurality of video memory arrays store data representing physical parameters associated with at least one mesh to set up a linear system of equations that governs motion of the at least one mesh depicted in a scene. The at least one pixel processor performs computations on the data in the plurality of video memory arrays to solve the linear system of equations for an instant of time, resulting in modified data representing the solution to the linear system of equations for the instant of time.","Further features and advantages of the invention, as well as the structure and operation of various embodiments of the invention, are described in detail below with reference to the accompanying drawings. It is noted that the invention is not limited to the specific embodiments described herein. Such embodiments are presented herein for illustrative purposes only. Additional embodiments will be apparent to persons skilled in the relevant art(s) based on the teachings contained herein.","The features and advantages of the present invention will become more apparent from the detailed description set forth below when taken in conjunction with the drawings, in which like reference characters identify corresponding elements throughout. In the drawings, like reference numbers generally indicate identical, functionally similar, and\/or structurally similar elements. The drawing in which an element first appears is indicated by the leftmost digit(s) in the corresponding reference number.",{"@attributes":{"id":"p-0032","num":"0000"},"ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":{"@attributes":{"id":"ul0001-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0002","list-style":"none"},"li":["I. Overview of Physics Simulation On One Or More GPUs\n        \n        ","II. An Example Physical Simulation Interface\n        \n        ","III. An Example Method For Performing Physics Simulations On One Or More GPUs\n        \n        ","IV. Example Computer Implementation","V. Conclusion"]}}}},"Embodiments of the present invention are directed to a method, computer program product, and system for performing physics simulations on one or more GPUs. Such physics simulations may be used, for example, for performing game computing of an application (such as a video game). To perform physics simulations on one or more GPUs in accordance with an embodiment of the present invention, physical parameters associated with a mesh are mapped directly into video memory. The mesh may represent any physical object, such as a solid object, a volume, a fluid, or a cloth. Presented in more detail herein is an example method for performing physics simulations of a cloth on one or more GPUs. After the mesh is mapped into the video memory, at least one pixel processor of the GPU(s) performs computations on the data in the video memory using a compiled shader program. Performing physics simulations directly on the GPU(s) may reduce the latency and bandwidth issues associated with typical physics simulations performed on a CPU.","Throughout the specification, methods, computer program products, and systems for performing physics simulations on one or more GPUs are described in terms of an example physics simulation software interface (called FYSI) and a physics scene description language (called FYSL). The invention, however, is not limited to FYSI and FYSL. Based on the description herein, a person skilled in the relevant art(s) will understand that methods, computer program products, and systems for performing physics simulations on one or more GPUs may be implemented using other types of physics simulation software interfaces and other types of physics scene description languages.","It is noted that references in the specification to \u201cone embodiment\u201d, \u201can embodiment\u201d, \u201can example embodiment\u201d, etc., indicate that the embodiment described may include a particular feature, structure, or characteristic, but every embodiment may not necessarily include the particular feature, structure, or characteristic. Moreover, such phrases are not necessarily referring to the same embodiment. Further, when a particular feature, structure, or characteristic is described in connection with an embodiment, it is submitted that it is within the knowledge of one skilled in the art to affect such feature, structure, or characteristic in connection with other embodiments whether or not explicitly described.","Described in more detail below are embodiments of the present invention for mapping physics simulations onto one or more GPUs. In Section II, an example interface for performing this mapping is described. Section III presents an example method for performing physics simulations on one or more GPUs, including a particular implementation of the example method for simulating cloth on the GPU(s). In Section IV, an example computer system for implementing physics simulations on one or more GPUs is described. However, before describing embodiments of the present invention in detail, it is helpful to describe an overview of an example workflow for performing physics simulation on one or more GPU(s) and an example GPU for implementing physics simulations.","A. An Example Workflow for Performing Physics Simulations on One or More GPUs",{"@attributes":{"id":"p-0038","num":"0050"},"figref":"FIG. 2","b":["200","200","210","212","214","216","218","220","222","200"]},"As shown in , block diagram  includes an application . Application  is an end user application that requires graphics processing capability, such as a video game application. Application  invokes physics simulation software interface . In an embodiment, physics simulation software interface  is an interface called FYSI developed by ATI Technologies Inc. FYSI is described in more detail herein. However, as mentioned above, the invention is not limited to FYSI. Other physics simulation software interfaces may be used without deviating from the spirit and scope of the present invention, as would be apparent to a person skilled in the relevant art(s). Physics simulation software interface  creates a simple extensible abstract machine (SEAM) on which physics simulations are performed.","Physics simulation software interface  communicates with API . Several APIs are available for use in the graphics processing context. APIs were developed as intermediaries between application software, such as application , and graphics hardware on which the application software runs. With new chipsets and even entirely new hardware technologies appearing at an increasing rate, it is difficult for application developers to take into account, and take advantage of, the latest hardware features. It is also becoming increasingly difficult to write applications specifically for each foreseeable set of hardware. APIs prevent applications from having to be too hardware-specific. The application can output graphics data and commands to the API in a standardized format, rather than directly to the hardware. Because physics simulation software interface  communicates directly with API , there is no need to modify available APIs. Examples of available APIs include DirectX\u00ae or OpenGL\u00ae. API  can be any one of the available APIs for running graphics applications. As will be appreciated by those of ordinary skill in the art, alternative embodiments of the invention could integrate physics simulation software interface  into API  thus enabling application  to work with a single software interface. In such an embodiment, driver  would then be modified to comply with such a single interface combining aspects of physics simulation software interface  with API .","API  communicates with driver . Driver  is typically written by the manufacturer of the graphics hardware, and translates standard code received from the API into native format understood by the graphics hardware. Driver  also accepts input to direct performance settings for the graphics hardware. Such input may be provided by a user, an application or a process. For example, a user may provide input by way of a user interface (UI), such as a graphical user interface (GUI), that is supplied to the user along with driver .","Driver  communicates with first GPU  and\/or second GPU . First GPU  and second GPU  are graphics chips that each includes a shader and other associated hardware for performing physics simulations and graphics rendering. In an embodiment, physics simulations and graphics rendering are performed on a single GPU, such as first GPU . In an alternative embodiment, physics simulations are executed one GPU (or core), such as first GPU , and graphics are rendered on another GPU (or core), such as second GPU . In a still further embodiment, physics simulations and graphics rendering are performed by a plurality of GPUs. After the physics simulations, rendered graphics are sent to display unit  for display. GPU  and GPU  may each be implemented as described in the next section.","B. An Example GPU for Executing Physics Simulations","The architecture of a GPU in accordance with an embodiment of the present invention enables a single instruction, multiple data (SIMD) technique to be employed resulting in data level parallelism. Such a GPU includes processors and textures (or video memory). The processors perform operations on data in the textures. Results of the operations are written into a render target (a portion of video memory). A render target may be reassigned as a texture or as a subsequent computation. The textures are arranged into arrays of memory, such as 1D-, 2D-, or 3D-arrays of memory. Shaders are small programs or sets of instructions that are written for the processors to perform specific computations on the data in the textures.",{"@attributes":{"id":"p-0045","num":"0057"},"figref":"FIG. 3","b":["300","300","310","310","308","308","306","302","310","308","306","310","308","306","310","314","306"],"i":["a","f","a","h"]},"An example manner in which a mesh is represented in the GPU vertex processor is now described. A mesh is composed of a pair of one dimensional lists\u2014a vertex buffer and an index buffer. As illustrated in , the vertex buffer retains vertex positions. The embodiment shown in , illustrates seven vertex positions.  is used for illustrative purposes only, and not limitation. A different number of vertex positions may be stored in the vertex buffer, as would be apparent to a person skilled in the relevant art(s). As illustrated in , the index buffer stores face indices.  is used for illustrative purposes only, and not limitation. A different number of face indices may be stored in the index buffer, as would be apparent to a person skilled in the relevant art(s). A face represents a triangle and the face indices point into the vertex buffer. For example, a face stored in the index buffer may include three vertices, labeled 0, 1, and 2. Each of these labeled vertices points to a separate location in the vertex buffer.","An example manner in which a mesh is mapped into video memory is now described. This example manner is presented for illustrative purposes only, and not limitation. Other manners for mapping a mesh into video memory will be apparent to a person skilled in the relevant art(s) based on the description contained herein. The vertex and index lists are each mapped onto an optimized N dimensional array in video memory to better exploit pixel engine parallelism. An optimized N dimensional array is such that the N dimensional array fits the maximum addressability of the GPU(s) used for performing physics simulations. The vertex buffer maps onto an array of n by m elements and the index buffer maps onto an l by k grid. Each element in video memory (e.g., a pixel) is composed of a four component vector. The first three components represent the x, y, and z components of position, and the fourth component is a boundary tag (which is described below).","In an embodiment, the vertex and index lists are each mapped onto an optimized two dimensional array in video memory, as shown in , respectively. In this embodiment, the vertex buffer maps onto an array of 3 by 3 elements and the index buffer maps onto a 3 by 2 grid.","In the case of multiple meshes in a scene, all the meshes are coalesced into one two dimensional composite mesh in accordance with an embodiment of the present invention. The composite mesh records in video memory sub-mesh boundaries by tagging each sub-mesh with a unique identification (\u201cid\u201d). The id is recorded as the fourth component of each of the grid element. Mesh compositing alleviates both the overhead associated with a small size mesh download to video memory, and relieves hardware resource pressure of total number of textures usage.","As mentioned above with respect to , physics simulation software interface  allows an application  to perform physics simulations on GPU , GPU , and\/or a plurality of GPUs. In this section, an example physics simulation interface is described. First, an example physics simulation software interface, called FYSI, is described. Then, an example scene description language, called FYSL, for expressing the abstract concepts embodied in FYSI is described. Finally, there is described an example manner for converting physical parameters and attributes into FYSL in order to perform physics simulations on one or more GPUs using FYSI, and thereby by-pass a conventional software dynamics solver. It is to be appreciated, however, that these embodiments are presented for illustrative purposes only, and not limitation. Based on the description contained herein, a person skilled in the relevant art(s) will understand how to implement other types of physics simulation software interfaces for performing physics simulations on one or more GPUs.","A. An Example Physics Simulation Software Interface (FYSI)","FYSI\u2014an example physics simulation interface software system\u2014is a vehicle for mapping traditional CPU based simulation related computation onto the GPU. By using FYSI higher interaction rates may be achieved compared to those commonly experienced in game physics. FYSI departs from the conventional occlusion query modality for mapping collision detection and resolution onto graphics hardware. Instead, it proposes a global simulation solution leveraging ever increasing hardware programmable shading power.",{"@attributes":{"id":"p-0053","num":"0065"},"figref":"FIG. 4","b":["400","410","420","410"]},"In a rendering block , the simulation results from the physics block  are rendered for visualization. In general, several physics simulation steps are performed for every rendering frame. Hence, the cumulative frame rate of both the simulation and visual rendering tasks determine the final interactive rate to the user. FYSI is a software development environment for providing physics simulation requirements. Initially, the FYSL input abstraction is parsed and converted onto a collection of internal scene data structures. Simulation then commences in a GPU. Simulation results are either passed directly to the visual rendering thread by means of shared textures or optionally are available to be read back by the programmer. Finally, FYSI implements a compute abstraction layer (CAL) wrapper on top of a graphics hardware interface for ease of extensibility. In an embodiment, FYSI interfaces with Microsoft DirectX\u00ae (versions 9.0 and 10.0); however, a person skilled in the relevant art(s) will appreciate that FYSI can interface with OpenGL\u00ae or some other API.","The physics simulation field in games is rather broad and covers a large gamut of topics. Amongst them is rigid body, cloth, fluid and in general deformable body simulation. The type of physics simulation implies the format of data passed from the simulation stage onto the visual rendering stage. In the case of rigid bodies, FYSI passes to the visual thread transform data, which represents the incremental state change of objects entered in a recent simulation session. Cloth models return perturbed original particle positions and for fluids or deformable bodies the resultant simulated shape is almost non-related to its initial definition. Typically, the physics simulation process is compute bound and bandwidth requirements from it onto the visual rendering thread is relatively limited.","At a fairly high level a generic pipeline  can be formed and applied to most of the aforementioned physics simulation aspects as shown in . Pipeline  includes a system setup stage , a solver stage , and a collision stage . In system setup stage , input is either an initial scene description or an incremental state update of the scene. The role of system setup stage  is to perform an integration of the physical model and arrive at a linear system of the form A*x=b, wherein A is a matrix, x is unknown and b is a known vector.","In solver stage , the linear system is resolved and the state of a depicted scene is updated based on the solution to the linear system. The linear system is resolved using numerical techniques which are available to a person skilled in the relevant art(s). In an embodiment, the linear system is resolved using a modified conjugate gradient method described in more detail below and in David Baraff and Andrew Witkin, \u201cLarge Steps in Cloth Simulation,\u201d Computer Graphics Proceedings pp. 43-54 (Jul. 19-24, 1998) (hereinafter \u201cthe Baraff reference\u201d), the entirety of which is incorporated by reference herein.","In collision stage , the updated model is tested for potential collisions. As a result of computed contacts, the state of the scene is further modified. Collision detection is performed by checking whether pairs of points intersect. Collision detection techniques are well-known to persons skilled in the relevant arts. See, e.g., the Baraff reference at p. 50.","Physics pipeline  is exercised repeatedly across its stages for each of the simulation steps. In general, actors in the scene are considered either individually or on a group basis. Individual actors, as in the case of rigid bodies, pass through system setup stage  and solver stage  of pipeline  and only perform collision stage . Cloth, fluid and deformable entities in general are considered a collection of actors with an explicit interaction model. Hence, they are intended to execute all the stages of pipeline  in most cases. An example in which a cloth is passed through physics pipeline  is described herein in Section III.","B. An Example Physics Scene Description Language (FYSL)","Input abstraction to the FYSI physics simulation interface library is expressed in a custom scene description format, called FYSL. FYSL is expressed in an XML format and is composed of five sections: scene, simulation, actors, joints, and feedback. Each of these FYSL sections includes schema tags and optional value assignments. The schema tags and optional value assignments are described below. Samples of FYSL programs are provided at the end of this sub-section.","The first section of FYSL is the scene. In this section, the scene to be depicted is defined. Example global scene tags are presented in Table 1.",{"@attributes":{"id":"p-0063","num":"0075"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Scene Tags"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Tag","type","options","comments"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","string","any","scene"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}}},"The second section of FYSL is the simulation. The simulation process in FYSI is discrete and commences in steps. FYSL simulation properties include the type and the time interval between simulation steps.","In addition, global fields that represent forces operating identically on all scene actors can be optionally added to the simulation definition. In the present embodiment, FYSL provides three types of force field tags: a drag field, a directional field, and a procedural field. The drag field is a vector composed of three scalar values (one for each dimension) that exerts a braking force based on actor's linear velocity. The directional field is a unary force that is constant throughout the simulation and that operates in the direction specified by the vector. An example directional field is gravity. The procedural field represents a more involved field that might be varying in both time and space. The string attached to the procedural field is a function that is further translated into code of a shader program that executes on the GPU.","Example simulation tags are shown in Table 2 and example field tags are shown in Table 3.",{"@attributes":{"id":"p-0067","num":"0079"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 2"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Simulation Tags"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"tag","type","options","comments"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},"Type","string","Collision","collision detection"]},{"entry":[{},{},{},"response","determination"]},{"entry":[{},{},{},{},"collision detection"]},{"entry":[{},{},{},{},"and response"]},{"entry":[{},"TimeStep","float","decimal","simulation step"]},{"entry":[{},{},{},{},"period (seconds)"]},{"entry":[{},"Fields",{},{},"defined in field tags"]},{"entry":[{},{},{},{},"table"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0068","num":"0080"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 3"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Field Tags"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"tag","type","options","comments"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},"Drag","float","vector(3)","A drag force"]},{"entry":[{},"Directional","float","vector(3)","a constant,"]},{"entry":[{},{},{},{},"directional force"]},{"entry":[{},"Procedural","string","any","a procedural force"]},{"entry":[{},{},{},{},"description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}}},"The third section of FYSL is actors. A group of actors is typically constructed in a logical grid that can be of one, two or three dimensions. The grid serves as means for deploying actors properties in GPU video memory. Grid tags include width, height and depth values as shown in Table 4.",{"@attributes":{"id":"p-0070","num":"0082"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 4"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Grid Tags"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"tag","Type","options","comments"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":[{},"Width","Integer","numeric","Grid width"]},{"entry":[{},"Height","Integer","numeric","Grid height"]},{"entry":[{},"Depth","Integer","numeric","Grid depth"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},"An actor is specified by global and specific shape and dynamics properties. Shapes are used to determine pair wise collision detection and dynamics properties facilitate physics behavior for resolving responses. FYSL and FYSI use a left handed coordinate system for the definition of shapes. Global actor tags include name, type and id values as shown in Table 5:",{"@attributes":{"id":"p-0072","num":"0084"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 5"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Actor Tags"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"tag","type","options","Comments"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":[{},"Name","string","any","actor name"]},{"entry":[{},"Type","string","static","only considered in"]},{"entry":[{},{},{},"dynamic","collision detection"]},{"entry":[{},{},{},"kinematic","both in collision"]},{"entry":[{},{},{},{},"detection, response"]},{"entry":[{},{},{},{},"a dynamic actor w"]},{"entry":[{},{},{},{},"infinite mass"]},{"entry":[{},"Id","integer","numeric","unique actor"]},{"entry":[{},{},{},{},"identification,"]},{"entry":[{},{},{},{},"positive"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},"Actor id (identification) is expected to be a positive integer, unique across a group of actors of the same hierarchy. For the most part FYSI is expected to assign default scene properties for those missing in the FYSL description.","Shape definitions supported in the described FYSL embodiment include box (axis aligned or oriented), sphere, mesh, and tetrahedron. Actor shape is defined in a local reference frame. Box and sphere bounding volumes are represented as a pair of center and radius (the latter is either a vector or a scalar, respectively). Mesh and tetrahedron assume a collection of vertex positions (for tetrahedron the number of vertices is fixed 4) and a set of face indices (implicit for a tetrahedron). For a mesh, faces are explicit; whereas for tetrahedron, faces are implicit. Shapes are associated with a matrix for specifying local frame to world coordinate space transformation (refer to the discussion below). Table 6 through Table 10 illustrate shape specific tags.",{"@attributes":{"id":"p-0075","num":"0087"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 6"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Shape Tags - Common"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"tag","type","options","comments"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":[{},"Transform","float","matrix(4)","local-to-world"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0076","num":"0088"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 7"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Shape Tags - Box"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"tag","type","options","comments"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":[{},"Position","float","vector(3)","box center"]},{"entry":[{},"Radius","float","vector(3)","box half width,"]},{"entry":[{},{},{},{},"height and depth"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0077","num":"0089"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 8"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Shape Tags - Sphere"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"tag","type","Options","comments"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":[{},"Position","float","vector(3)","sphere center"]},{"entry":[{},"Radius","float","Scalar","sphere radius"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0078","num":"0090"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 9"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Shape Tags - Mesh"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Position","float","vector(3)","mesh vertex"]},{"entry":[{},{},{},{},"position"]},{"entry":[{},"Face","int","vector(3)","mesh face indices"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0079","num":"0091"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 10"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Shape Tags - Tetrahedron"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Position","float","vector(3)","Tetrahedron vertex"]},{"entry":[{},{},{},{},"position"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},"Center of mass for bounding volumes is explicit by the definition of the shape. For mesh and tetrahedron FYSI will implicitly compute a center of mass unless it is provided in the linear kinetics property set. Mesh center of mass parameter need not necessarily provided by the user, its presence though will override FYSI's internally computed one.","Simulation takes place in world coordinate space. Shape transform is a concatenation of translation and rotation components, the effect of applying linear and angular motion to an actor, respectively. The resultant matrix transforms a shape from local to world coordinate space. The transform matrix is used by a FYSI client for the visual rendering process.","A FYSL box shape may take inside FYSI either an axis aligned (AABB) or an oriented (OBB) computation path. The choice is rather dynamic and might vary from a simulation step to another e.g. based on contact response. In general, the AABB path for collision detection is more efficient compared to the OBB one.","Dynamics attributes can be of any combination of linear, angular and matter types. Dynamics attributes define kinematics properties that include mass, velocity, explicit center of mass position, orientation, and exerted forces. In addition, they provide contact response matter attributes, such as restitution and friction. Dynamics tags for linear, angular, and matter types are provided in Table 11, Table 12, and Table 13, respectively.",{"@attributes":{"id":"p-0084","num":"0096"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 11"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Dynamic Tags - Linear"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"tag","type","options","comments"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":[{},"Mass","float","scalar","mass property"]},{"entry":[{},"Center","float","vector(3)","Center of mass"]},{"entry":[{},{},{},{},"position"]},{"entry":[{},"Velocity","float","vector(3)","velocity property"]},{"entry":[{},"Forces","defined","in","field tags table"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0085","num":"0097"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 12"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Dynamic Tags - Angular"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"tag","type","options","comments"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":[{},"Inertia","float","matrix(3)","mass distribution"]},{"entry":[{},"Orientation","float","matrix(3)","body rotation"]},{"entry":[{},"Omega","float","vector(3)","velocity property"]},{"entry":[{},{},{},{},"(radians\/sec)"]},{"entry":[{},"Torques",{},{},"defined in field tags"]},{"entry":[{},{},{},{},"table"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0086","num":"0098"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 13"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Dynamic Tags - Matter"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"tag","type","options","comments"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":[{},"Restitution","float","scalar","measure of"]},{"entry":[{},{},{},{},"elasticity"]},{"entry":[{},"StaticFriction","float","scalar","motion resistance"]},{"entry":[{},{},{},{},"from resting"]},{"entry":[{},"DynamicFriction","float","scalar","motion resistance in"]},{"entry":[{},{},{},{},"motion"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},"A rigid body assumes a point mass for FYSI underlying performed physics behavioral rules. Linear motion and external forces operate on body's center of mass; angular motion is applied to the point of contact.","FYSL torques, when present, are applied to the vertices of any of a box or a mesh shape. Torques are also meaningful in the case of particles based actor, where each particle is defined as a sphere with a zero radius. The torque depends on the position relative to the center of mass of the actor (or a parent actor in the case of particles). The torque affects the resulting angular motion of the actor. FYSL torques is meaningful for a particle based actor (such as a shapeless actor without spatial extent). The torque depends on the particle position relative to the virtual center of mass of the top level actor. The torque affects angular motion of the particle.","Orientation for an actor is expected to be an orthogonal matrix where rows and columns are of unit length.","The omega dynamics property is a vector of angles in radians. A positive angle for any axis results in counter clockwise rotation around an axis; whereas, a negative angle results in clockwise rotation around the axis.","Mesh and tetrahedron face indices are zero based and each represent a triangle of a counterclockwise sense.","Grid deployment of actors takes advantage of GPU inherent data parallel architecture. The grid also provides the final image resolution to be read back from the physics assigned GPU for transporting simulation results onto the CPU or to a peer GPU that performs visual rendering. A 1D grid is highly inefficient on the GPU, and is usually not used. Usually, actors are distributed onto a 2D grid. The use of a 3D grid may be used, for example, if the 2D grid addressability exceeds the limits of the GPU. The dimensions of the grid not required to be a power-of-2. Finally, number of actors might not necessarily match the number of grid cells (e.g., the latter must be equal or greater than the number of actors in a hierarchy). As a result, a 2D grid might have the last row not fully populated, and the last slice of a 3D grid might not be fully inhabited. FYSI fills in any incurred sliver with dummy actors.","Actors may be made hierarchical and a collection of actors at each hierarchy level may share global attributes. A grid is expected to be attached to the collection of actors, at each level. Shapes at a higher hierarchy level are assumed to be of coarser geometry representation. This is in line with commencing top-down simulation, for which early collision detection rejection improves overall process efficiency. Also, dynamics properties of an actor can be made unique at each hierarchy level, providing the freedom to exercise adaptable physics. Joints (described hereafter) can be optionally applied to a group of actors for simulating constraints. For example, joints are used in the simulation of cloth as described in more detail in Section III below.","The fourth section of FYSL is joints. Joints define interaction constraints between a pair of actors. They essentially limit the movement of actors. Joints may have common parameters and\/or unique parameters based on type. The common parameters include the joint type and a handle for each of the pair actor members. Joints are at the same tag level as actors in a FYSL description format. As such, they can be defined in both the top scene level and at any actor hierarchy. Example joint tags are provided in Table 14, Table 15, and Table 16.",{"@attributes":{"id":"p-0095","num":"0107"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 14"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Joint Tags - Common"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"tag","type","options","comments"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":[{},"Type","string","distance","distance joint"]},{"entry":[{},{},{},"spring","tightness and"]},{"entry":[{},{},{},{},"damper"]},{"entry":[{},"ActorPair","int","numeric","actor pair handless"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0096","num":"0108"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 15"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Joint Tags - Distance"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"tag","type","options","comments"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":[{},"MinDistance","float","scalar","minimum distance"]},{"entry":[{},"MaxDistance","float","scalar","maximum distance"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0097","num":"0109"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 16"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Joint Tags - Spring"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"tag","type","options","comments"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":[{},"Action","string","stretch","spring action type"]},{"entry":[{},{},{},"shear",{}]},{"entry":[{},{},{},"bend",{}]},{"entry":[{},"Rest Length","float","scalar","spring length at rest"]},{"entry":[{},"Stiffness","float","scalar","relative position"]},{"entry":[{},{},{},{},"force constant"]},{"entry":[{},"Damping","float","scalar","relative velocity"]},{"entry":[{},{},{},{},"force constant"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},"The fifth section of FYSL is feedback. The feedback section of a FYSL description is only provided by FYSI for the return path of simulation results. In a multi-step simulation session there is a feedback section per step. Example feedback tags are shown in Table 17.",{"@attributes":{"id":"p-0099","num":"0111"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 17"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Feedback Tags"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"tag","type","options","comments"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":[{},"Step","integer","numeric","simulation current"]},{"entry":[{},{},{},{},"step#"]},{"entry":[{},"StepRate","float","decimal","simulation steps per"]},{"entry":[{},{},{},{},"second"]},{"entry":[{},"NumStatic","integer","numeric","number static actors"]},{"entry":[{},"NumDynamic","integer","numeric","number dynamic"]},{"entry":[{},{},{},{},"actors"]},{"entry":[{},"NumKinematic","integer","numeric","number kinematic"]},{"entry":[{},{},{},{},"actors"]},{"entry":[{},"NumCollisions","integer","numeric","number actor pair"]},{"entry":[{},{},{},{},"collisions"]},{"entry":[{},"CollisionPair","string","any","actor handle pair"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},"While the exemplary embodiments may include the above tags, other tag types could be used in alternative embodiments. Sample #1. Provided below is an example section of code written in FYSL. This section of code depicts a collision detection physics simulation scene with a pair of mesh shaped actors with angular and linear dynamics, respectively.",{"@attributes":{"id":"p-0101","num":"0113"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!-- fysl scene description -->"]},{"entry":[{},"<Scene>"]},{"entry":[{},"\u2003\u2003<Name>mesh<\/Name>"]},{"entry":[{},"\u2003\u2003<Simulation>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<Type>response<\/Type>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<TimeStep>.005<\/TimeStep>"]},{"entry":[{},"\u2003\u2003<\/Simulation>"]},{"entry":[{},"\u2003\u2003<Actors>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<Grid>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003<Width>2<\/Width>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003<Height>1<\/Height>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003<Depth>1<\/Depth>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<\/Grid>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<Actor>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003<Name>a0<\/Name>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003<Type>static<\/Type>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003<Id>0<\/Id>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003<Shape>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003<Mesh>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Vertex>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Position>\u2212.5 \u2212.5 .0<\/Position>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Position>\u2212.5 .5 .0<\/Position>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Position>.5 \u2212.5 .0<\/Position>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Position>.5 .5 .0<\/Position>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Vertex>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Index>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Face>0 2 1<\/Face>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Face>1 2 3<\/Face>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Index>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003<\/Mesh>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<\/Shape>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<Dynamics>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003<Angular>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Inertia>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u200310. 1. \u22122 1. .0 .0 .1 .3 .4"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Inertia>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Orientation>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u20031. .0 .0 .0 1. .0 .0 .0 1."]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Orientation>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Omega>.0 0. 1.<\/Omega>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Torques>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Directional>1. .0 .0<\/Directional>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Torques>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003<\/Angular>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<\/Dynamics>"]},{"entry":[{},"\u2003\u2003<\/Actor>"]},{"entry":[{},"\u2003\u2003<Actor>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<Name>a1<\/Name>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<Type>dynamic<\/Type>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<Id>1<\/Id>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<Shape>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003<Mesh>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Vertex>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Position>\u2212.5 \u2212.5 3.0<\/Position>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Position>\u2212.5 .5 3.0<\/Position>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Position>.5 \u2212.5 3.0<\/Position>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Position>.5 .5 3.0<\/Position>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Vertex>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Index>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Face>0 2 1<\/Face>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Face>1 2 3<\/Face>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Index>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003<\/Mesh>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<\/Shape>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<Dynamics>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003<Linear>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Mass>10.<\/Mass>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Position>.0 .0 3.<\/Position>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Velocity>.0 .0 \u22121.<\/Velocity>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Forces>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Directional>.0 .0 2.<Directional>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Forces>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Linear>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003<\/Dynamics>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<\/Actor>"]},{"entry":[{},"\u2003\u2003<\/Actors>"]},{"entry":[{},"\u2003\u2003<Feedback><\/Feedback>"]},{"entry":[{},"<\/Scene>"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Sample #2. Provided below is another section of example code written in FYSL. This section of code illustrates a two level hierarchy for particles based actor of a 2 by 2 grid layout. This is a basic structure for defining cloth and fluid entities:",{"@attributes":{"id":"p-0103","num":"0115"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<!-- fysl scene description -->"},{"entry":"<Scene>"},{"entry":"\u2003\u2003<Name>cloth<\/Name>"},{"entry":"\u2003\u2003<Simulation>"},{"entry":"\u2003\u2003\u2003\u2003<Type>response<\/Type>"},{"entry":"\u2003\u2003\u2003\u2003<TimeStep>0.0166<\/TimeStep>"},{"entry":"\u2003\u2003<\/Simulation>"},{"entry":"\u2003\u2003<Actors>"},{"entry":"\u2003\u2003\u2003\u2003<Grid>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<Width>1<\/Width>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<Height>1<\/Height>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<Depth>1<\/Depth>"},{"entry":"\u2003\u2003\u2003\u2003<\/Grid>"},{"entry":"\u2003\u2003\u2003\u2003<Actor>"},{"entry":"\u2003\u2003\u2003\u2003<Name>fabric<\/Name>"},{"entry":"\u2003\u2003\u2003\u2003<Type>dynamic<\/Type>"},{"entry":"\u2003\u2003\u2003\u2003<Id>0<\/Id>"},{"entry":"\u2003\u2003\u2003\u2003<Shape>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<Sphere>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Position>.0 .0 .0<\/Position>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Radius>.0<\/Radius>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/Sphere>"},{"entry":"\u2003\u2003\u2003\u2003<\/Shape>"},{"entry":"\u2003\u2003\u2003\u2003<Dynamics>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<Linear>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Mass>1.<\/Mass>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Center>0.015 0.015 .0<\/Center>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Velocity>.0 .0 .0<\/Velocity>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Forces>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Directional>.0 .0 .0<\/Directional>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Forces>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/Linear>"},{"entry":"\u2003\u2003\u2003\u2003<\/Dynamics>"},{"entry":"\u2003\u2003\u2003\u2003<!- 2 by 2 particles children -->"},{"entry":"\u2003\u2003\u2003\u2003<Actors>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<Grid>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Width>2<\/Width>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Height>2<\/Height>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Depth>1<\/Depth>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/Grid>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<Actor>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Name>00<\/Name>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Type>dynamic<\/Type>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Id>0<\/Id>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Shape>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Sphere>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Position>.0 .0 .0<\/Position>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Radius>.0<\/Radius>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Sphere>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Shape>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Dynamics>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Linear>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Mass>1.<\/Mass>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Center>.0 .0 .0<\/Center>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Velocity>.0 .0 .0<\/Velocity>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Forces>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Directional>.0 .0 .0<\/Directional>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Forces>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Linear>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Dynamics>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/Actor>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<Actor>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Name>01<\/Name>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Type>dynamic<\/Type>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Id>1<\/Id>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Shape>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Sphere>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Position>.001 .0 .0<\/Position>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Radius>.0<\/Radius>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Sphere>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Shape>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Dynamics>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Linear>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Mass>1.<\/Mass>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Center>.0 .0 .0<\/Center>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Velocity>.0 .0 .0<\/Velocity>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Forces>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Directional>.0 .0 .0<\/Directional>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Forces>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Linear>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Dynamics>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/Actor>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<Actor>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Name>10<\/Name>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Type>dynamic<\/Type>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Id>2<\/Id>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Shape>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Sphere>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Position>.0 0.01 .0<\/Position>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Radius>.0<\/Radius>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Sphere>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Shape>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Dynamics>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Linear>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Mass>1.<\/Mass>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Center>.0 .0 .0<\/Center>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Velocity>.0 .0 .0<\/Velocity>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Forces>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Directional>.0 .0 .0<\/Directional>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Forces>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Linear>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Dynamics>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/Actor>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<Actor>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Name>11<\/Name>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Type>dynamic<\/Type>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Id>3<\/Id>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Shape>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Sphere>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Position>.01 0.01 .0<\/Position>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Radius>.0<\/Radius>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Sphere>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Shape>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Dynamics>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Linear>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Mass>1.<\/Mass>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Center>.0 .0 .0<\/Center>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Velocity>.0 .0 .0<\/Velocity>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Forces>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Directional>.0 .0 .0<\/Directional>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Forces>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Linear>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/Dynamics>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/Actor>"},{"entry":"\u2003\u2003\u2003\u2003<\/Actors>"},{"entry":"\u2003\u2003\u2003\u2003<\/Actor>"},{"entry":"\u2003\u2003<\/Actors>"},{"entry":"\u2003\u2003<\/Feedback>"},{"entry":"<\/Scene>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"C. An Example Manner in which Physical Parameters Associated with a Mesh May be Received and Converted into FYSL","Software dynamics solvers (such as Maya\u00ae Dynamics owned by Autodesk\u00ae of San Rafael, Calif.) exist for performing physics simulations that are executed by the CPU. In accordance with an embodiment of the present invention, a plug-in is used to by-pass such a software dynamics solver, and thereby perform physics simulations on the GPU(s) as described herein. In this embodiment, the plug-in captures a scene and converts attributes and fields associated with actors depicted in the scene into FYSL, so that physics simulations may be performed on the GPU(s) using FYSI. In another embodiment, a user may choose whether physics simulations are performed by the GPU(s) or by the software dynamics solver. In a further embodiment, the GPU(s) or the software solver is automatically selected to perform physics simulations based on a predetermined criterion, such as GPU availability and\/or software support for a given feature. For example, the GPU(s) may be used to perform physics simulations of rigid bodies and cloth, but the software dynamics solver may be used to perform physics simulations of fluids. By allowing physics simulations to be performed by either the GPU(s) or the software dynamics solver, faster frame rates may be achieved. An example plug-in for by-passing a particular software dynamics solver (namely, Maya\u00ae Dynamics) is described in this section, but first an overview of Maya\u00ae Dynamics is provided.","Maya\u00ae Dynamics is a class of techniques that produce motion by simulating the physics of the real world. Dynamics in Maya\u00ae is diverse, powerful and owns a tool set positioned at an identical importance level with modeling, animation and rendering. In general, the Maya\u00ae Dynamics concept entails simulation based animation, without the use of key frames. The Maya\u00ae Dynamics family includes rigid and soft bodies, particle systems, cloth, fluid and hair members. Maya\u00ae Dynamics is used in games for creating visually impressive effects that are based on physical principals.",{"@attributes":{"id":"p-0107","num":"0119"},"figref":"FIG. 6","b":"600"},"Workflow  begins at a step  in which the scene exporter receives attributes and fields attached to scene objects by the artist. Attributes include initial velocity, spin, orientation, and matter friction. Fields represent forces that influence motion and involve drag, gravity or procedurally defined, with the latter expressed in a GPU shader program. The user either selects all or a subset of scene objects for commencing GPU based simulation. The exporter converts object geometry shapes and dynamics properties onto a GPU oriented physics simulation format, which in an embodiment is FYSL.","In a step , physics simulations are performed on the GPU(s) using FYSI. The GPU based simulator replaces the software dynamics solver node (such as Maya\u00ae Dynamics\u00ae integrated solver) seamlessly once the appropriate FYSI plugin is present. The GPU simulator runs simulation recursively in multiple discrete frames. In the course of simulation, the current scene state is resolved and collision detection amongst each pair of FYSL dynamic actors is sought. Colliding pairs are further processed to arrive at a contact response that is likely to affect the motion of an involved actor. FYSI GPU assisted physics simulation utilizes primarily the pixel engines that exploits a much higher degree of concurrency than the vertex processors. Physics simulation on the GPU is grid based where there are little or no communication barriers across lattice cells. Computational kernels involved have for the most part a high arithmetic intensity characteristic and are therefore favorable candidates for demonstrating improved speedup compared to an equivalent CPU implementation. The simulation process exploits the use of a single or multiple GPUs for enhanced efficiency, all transparent to the artist interacting with the software dynamics solver. FYSI produces results in an identical FYSL representation format to the one the exporter emitted. FYSI results are cached internally for a full simulation session and are fully exposed for reuse in Maya\u00ae Dynamics.","In a step , simulator results per frame are imported back onto the Maya\u00ae Dynamics scene graph. During step , only geometry shapes and transformation data are of concern. FYSI provides both shape positional and transformation updates for every simulation step. Transform data is relative to the incoming scene positions and orientations. In the case of rigid bodies, it suffices to update transformation scene graph nodes from Maya\u00ae Dynamics. For deformed bodies (such as cloth and fluid), updates are performed on full mesh vertices and indices in scene primitive nodes provided by Maya\u00ae Dynamics.","In a step , the simulation results are rendered for visualization. Either the GPU or a software based renderer is invoked to visualize the simulation effects. In an embodiment, the GPU for running the visual rendering task is physically apart from the GPU(s) performing physics simulation. This is again to facilitate parallelism at a higher level.","In a step , the rendered results are played back in a scene.","A. Overview of Method","An example method for performing physics simulations on the GPU(s) using FYSI and FYSL is now described.  depicts a block diagram illustrating an example method  for performing game physics simulations on one or more GPUs in accordance with an embodiment of the present invention. Method  begins at a step  in which physical parameters associated with a mesh are mapped into video memory to set up a linear system of equations that governs motion of the mesh depicted in a scene. The video memory may comprise textures  described above with reference to . The mesh may represent any type of physical object, such as a solid object, a volume, a fluid, a cloth, or another type of physical object as would be apparent to a person skilled in the relevant art(s).","In a step , computations are performed on the data in video memory using at least one pixel processor to solve the linear system of equations for an instant of time. Modified data representing the solution to the linear system of equations for the instant of time are then stored in the video memory. In an embodiment, the modified data is stored in textures  and then another shader renders graphics corresponding to the modified data. In this embodiment, a single GPU performs the physics simulations and the rendering of graphics. In another embodiment, the modified data is provided as output of a first GPU and then written into the textures of a second GPU. In this embodiment, the first GPU performs the physics simulations and the second GPU performs the rendering of graphics. Alternatively, the first GPU could write the modified data to an area of memory accessible to the second GPU (e.g., video memory of the first GPU or system memory).","Method  may be implemented to simulate any type of physical object. Provided below is an example implementation for simulating cloth on one or more GPUs. This example implementation is provided for illustrative purposes only, and not limitation. Based on the description contained herein, a person skilled in the relevant art(s) will understand how to perform simulations of other types of physical objects on the GPU.","An implicit technique for simulating cloth on one or more GPUs is now described. First, a physical model of cloth and two approaches to simulating that model in discrete time are presented. Second, a three-step process of an implicit discrete time-simulation is described. Third, a method for mapping this three-step process onto the GPU(s) is presented.","B. An Example Physical Model for Cloth Simulation","Cloth may be simulated by an internally constrained particle system. Such an internally constrained particle system may be represented as an array of point masses subject to internal stretch and dampening forces. These forces are dependent on the relative displacement and velocity of neighboring points. Such an array of point masses is referred to herein as a point-mesh.  depicts an example point-mesh .","Given point-mesh , the following physical parameters associated with point-mesh  may be defined:","x\u03b5the position in world space of the i th particle;","{right arrow over (x)}\u03b5the geometric state of all particles in a block vector;","f\u03b5the net force acting on the i th particle;","{right arrow over (f)}\u03b5the block vector of the net forces acting all particles; and","M\u03b5the \u201cDiagonal Mass Matrix\u201d defined by diag(M)={{mmm}{mmm} . . . {mmm} where mis the mass of the i th particle. Alternatively, M may be interpreted blockwise, that is as an {n\u00d7n} diagonal matrix with each element being a {3\u00d73} diagonal matrix.","Newton's Second Law (i.e., F=ma) may be written for point-mesh  as follows: or",{"@attributes":{"id":"p-0123","num":"0135"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mover":{"mi":"f","mo":"\u2192"},"mi":"i"},"mo":"=","mrow":{"mi":"M","mo":"\u00b7","mover":{"mover":{"mi":"x","mo":"\u2192"},"mi":"\u00a8"}}},{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mi":"\u00a8"},"mo":"=","mrow":{"msup":{"mi":"M","mrow":{"mo":"-","mn":"1"}},"mo":"\u00b7","mrow":{"mover":{"mi":"f","mo":"\u2192"},"mo":"."}}}],"mo":["\u2062","\u2062"],"mstyle":{"mtext":{}}}},{"mrow":{"mo":["(",")"],"mrow":{"mi":"Eq","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"1"}}}]}}}},"br":[{},{}]},{"@attributes":{"id":"p-0124","num":"0136"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mo":"."}}},"br":{}},{"@attributes":{"id":"p-0125","num":"0137"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mo":["{","}"],"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":{"mfrac":{"mi":"\u03b4","mrow":{"mi":["\u03b4","t"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},"mo":"\u2062","mover":{"mi":"x","mo":"\u2192"}},"mo":"=","mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}}}},{"mtd":{"mrow":{"mrow":[{"mfrac":{"mi":"\u03b4","mrow":{"mi":["\u03b4","t"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},"mo":"\u2062","mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}},{"msup":{"mi":"M","mrow":{"mo":"-","mn":"1"}},"mo":"\u00b7","mrow":{"mover":{"mi":"f","mo":"\u2192"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mover":[{"mi":"x","mo":"\u2192"},{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}],"mo":","}}}}],"mo":"="}}}]}},"mo":"."}},{"mrow":{"mo":["(",")"],"mrow":{"mi":"Eq","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"2"}}}]}}}},"br":{},"b":"800"},{"@attributes":{"id":"p-0126","num":"0138"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":["f","i"]},"mo":"=","mrow":{"mrow":{"msub":{"mi":["f","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mover":[{"mi":"x","mo":"\u2192"},{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}],"mo":","}}},"mo":"."}}}},"br":{},"b":"800"},"In order for Eq. 2 to be solved by a sequence of computer process (e.g., processes performed by at least one pixel processor in a GPU), Eq. 2 must be converted into a discrete-time problem. In a discrete-time problem, a next state of a system is given by its previous state(s). Specifically, given the position and velocity of a system at time t(i.e., given {right arrow over (x)}={right arrow over (x)}(t) and",{"@attributes":{"id":"p-0128","num":"0140"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"msup":{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mi":"k"},"mo":"=","mrow":{"mrow":{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","k"]}}},"mo":"\u2062","mstyle":{"mtext":")"}}},"mo":","}}},"br":{},"sub":["k+1 ","k+1"],"sup":"k+1"},{"@attributes":{"id":"p-0129","num":"0141"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"msup":{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mrow":{"mi":"k","mo":"+","mn":"1"}},"mo":"=","mrow":{"mrow":{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mrow":{"mi":"k","mo":"+","mn":"1"}}}},"mo":"\u2062","mstyle":{"mtext":")"}}},"mo":","}}},"br":{},"sub":["k+1","k"]},"Explicit methods compute the state at a next time step out of a direct extrapolation of previous states using the forward projection of derivatives. For example, the first-order Euler Forward Difference approximates",{"@attributes":{"id":"p-0131","num":"0143"},"maths":{"@attributes":{"id":"MATH-US-00007","num":"00007"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mfrac":{"mi":"\u03b4","mrow":{"mi":["\u03b4","t"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},"mo":"\u2062","mi":"a"},{"mrow":[{"mi":"b","mo":"->","mfrac":{"mrow":[{"msup":[{"mi":"a","mrow":{"mi":"k","mo":"+","mn":"1"}},{"mi":["a","k"]}],"mo":"-"},{"mi":["\u0394","t"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}]}},{"msup":{"mi":["b","k"]},"mo":"."}],"mo":"="}],"mo":"="}}}},"Note that the right-hand-side of the discrete time-derivative is bound on the left-hand-side by a value in the previous time-step. It follows that the future state may be rewritten as a function of state, namely\n\n\u2003\u2003(Eq. 3).\n","Applying the form of Eq. 3 to point-mesh , the system of equations that governs motion of point-mesh  (i.e., Eq. 2) may be rewritten as a set of simple independent update equations applied per time-step, given by",{"@attributes":{"id":"p-0134","num":"0146"},"maths":{"@attributes":{"id":"MATH-US-00008","num":"00008"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mo":["{","}"],"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":{"mfrac":{"mi":"\u03b4","mrow":{"mi":["\u03b4","t"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},"mo":"\u2062","mover":{"mi":"x","mo":"\u2192"}},"mo":"=","mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}}}},{"mtd":{"mrow":{"mrow":[{"mfrac":{"mi":"\u03b4","mrow":{"mi":["\u03b4","t"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},"mo":"\u2062","mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}},{"msup":{"mi":"M","mrow":{"mo":"-","mn":"1"}},"mo":"\u00b7","mrow":{"mover":{"mi":"f","mo":"\u2192"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mover":[{"mi":"x","mo":"\u2192"},{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}],"mo":","}}}}],"mo":"="}}}]}},{"mrow":{"mo":["{","}"],"mtable":{"mtr":[{"mtd":{"mrow":{"msup":{"mover":{"mi":"x","mo":"\u2192"},"mrow":{"mi":"k","mo":"+","mn":"1"}},"mo":"=","mrow":{"msup":{"mover":{"mi":"x","mo":"\u2192"},"mi":"k"},"mo":"+","mrow":{"mrow":{"msup":{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mi":"k"},"mo":"\u00b7","mi":"\u0394"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"t"}}}}},{"mtd":{"mrow":{"msup":{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mrow":{"mi":"k","mo":"+","mn":"1"}},"mo":"=","mrow":{"msup":{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mi":"k"},"mo":"+","mrow":{"mrow":{"msup":{"mi":"M","mrow":{"mo":"-","mn":"1"}},"mo":["\u00b7","\u00b7"],"mrow":{"mover":{"mi":"f","mo":"\u2192"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msup":[{"mover":{"mi":"x","mo":"\u2192"},"mi":"k"},{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mi":"k"}],"mo":","}}},"mi":"\u0394"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"t"}}}}}]}},"mo":"."}],"mo":"->"}},{"mrow":{"mo":["(",")"],"mrow":{"mi":"Eq","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"4"}}}]}}}}},"The primary draw-back to explicit integration schemes is numerical stability. In general for the forward approximation to hold, the function a(t) in Eq. 3 must not change too rapidly with respect to \u0394t. That is, the product (b\u00b7\u0394t) must be below a threshold. When bis large, the system is termed \u201cstiff\u201d and \u0394t must be made proportionally small.","Implicit methods account for the second class of discrete-time integration techniques. Implicit methods deduce the state at a next time step from a system of equations expressing some \u201creversibility\u201d from the extrapolated results. In other words, the backward derivatives of future state are simultaneously verified against previous state. For example, the first-order Euler Backward Difference approximates",{"@attributes":{"id":"p-0137","num":"0149"},"maths":{"@attributes":{"id":"MATH-US-00009","num":"00009"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mfrac":{"mi":"\u03b4","mrow":{"mi":["\u03b4","t"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},"mo":"\u2062","mi":"a"},{"mrow":[{"mi":"b","mo":"->","mfrac":{"mrow":[{"msup":[{"mi":"a","mrow":{"mi":"k","mo":"+","mn":"1"}},{"mi":["a","k"]}],"mo":"-"},{"mi":["\u0394","t"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}]}},{"msup":{"mi":"b","mrow":{"mi":"k","mo":"+","mn":"1"}},"mo":"."}],"mo":"="}],"mo":"="}}},"br":{}},"Applied to point-mesh , the system's governing equations (i.e., Eq. 2) reduce to a simultaneous system of 3n unknowns",{"@attributes":{"id":"p-0139","num":"0151"},"maths":{"@attributes":{"id":"MATH-US-00010","num":"00010"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mo":["{","}"],"mrow":{"mrow":[{"msup":[{"mover":{"mi":"x","mo":"\u2192"},"mrow":{"mi":"k","mo":"+","mn":"1"}},{"mi":"\u211c","mrow":{"mn":"3","mo":"\u2062","mi":"n"}}],"mo":"\u2208"},{"mrow":{"msup":[{"mover":{"mi":"x","mo":"\u2192"},"mi":"k"},{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mi":"k"}],"mo":"\u22c0"},"mo":"\u2208","msup":{"mi":"\u211c","mrow":{"mn":"3","mo":"\u2062","mi":"n"}}}],"mo":"\u2758"}}}},"br":{}},{"@attributes":{"id":"p-0140","num":"0152"},"maths":{"@attributes":{"id":"MATH-US-00011","num":"00011"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mo":["{","}"],"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":{"mfrac":{"mi":"\u03b4","mrow":{"mi":["\u03b4","t"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},"mo":"\u2062","mover":{"mi":"x","mo":"\u2192"}},"mo":"=","mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}}}},{"mtd":{"mrow":{"mrow":[{"mfrac":{"mi":"\u03b4","mrow":{"mi":["\u03b4","t"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},"mo":"\u2062","mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}},{"msup":{"mi":"M","mrow":{"mo":"-","mn":"1"}},"mo":"\u00b7","mrow":{"mover":{"mi":"f","mo":"\u2192"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mover":[{"mi":"x","mo":"\u2192"},{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}],"mo":","}}}}],"mo":"="}}}]}},{"mrow":{"mo":["{","}"],"mtable":{"mtr":[{"mtd":{"mrow":{"msup":{"mover":{"mi":"x","mo":"\u2192"},"mrow":{"mi":"k","mo":"+","mn":"1"}},"mo":"=","mrow":{"msup":{"mover":{"mi":"x","mo":"\u2192"},"mi":"k"},"mo":"+","mrow":{"mrow":{"msup":{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mi":"k"},"mo":"\u00b7","mi":"\u0394"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"t"}}}}},{"mtd":{"mrow":{"msup":{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mrow":{"mi":"k","mo":"+","mn":"1"}},"mo":"=","mrow":{"msup":{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mi":"k"},"mo":"+","mrow":{"mrow":{"msup":{"mi":"M","mrow":{"mo":"-","mn":"1"}},"mo":["\u00b7","\u00b7"],"mrow":{"mover":{"mi":"f","mo":"\u2192"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msup":[{"mover":{"mi":"x","mo":"\u2192"},"mrow":{"mi":"k","mo":"+","mn":"1"}},{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mrow":{"mi":"k","mo":"+","mn":"1"}}],"mo":","}}},"mi":"\u0394"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"t"}}}}}]}},"mo":"."}],"mo":"->"}},{"mrow":{"mo":["(",")"],"mrow":{"mi":"Eq","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"5"}}}]}}}},"br":{}},"In either the explicit integration method represented in Eq. 4 or the implicit integration method represented in Eq. 5, the net internal force vector {right arrow over (f)} must be evaluated. In general,",{"@attributes":{"id":"p-0142","num":"0154"},"maths":{"@attributes":{"id":"MATH-US-00012","num":"00012"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"f","mo":["(",")"],"mrow":{"mover":[{"mi":"x","mo":"\u2192"},{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}],"mo":","}}}},"br":{}},{"@attributes":{"id":"p-0143","num":"0155"},"maths":{"@attributes":{"id":"MATH-US-00013","num":"00013"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"f","mo":["(",")"],"mrow":{"mover":[{"mi":"x","mo":"\u2192"},{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}],"mo":","}}}},"br":{}},{"@attributes":{"id":"p-0144","num":"0156"},"maths":{"@attributes":{"id":"MATH-US-00014","num":"00014"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":{"msup":{"mover":{"mi":"f","mo":"\u2192"},"mi":"k"},"mo":"=","mrow":{"msup":{"mover":{"mi":"f","mo":"\u2192"},"mi":"k"},"mo":["(",")"],"mrow":{"msup":[{"mover":{"mi":"x","mo":"\u2192"},"mi":"k"},{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mi":"k"}],"mo":","}}},"mo":")"},"mo":"."}}},"br":{},"sup":"k "},{"@attributes":{"id":"p-0145","num":"0157"},"maths":{"@attributes":{"id":"MATH-US-00015","num":"00015"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msup":{"mover":{"mi":"x","mover":{"mo":["->","."]}},"mrow":{"mi":"k","mo":"+","mn":"1"}},"mo":"."}}},"br":{}},{"@attributes":{"id":"p-0146","num":"0158"},"maths":{"@attributes":{"id":"MATH-US-00016","num":"00016"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msup":{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mrow":{"mi":"k","mo":"+","mn":"1"}},"mo":"=","mrow":{"msup":{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mi":"k"},"mo":"+","mrow":{"mrow":[{"msup":{"mi":"M","mrow":{"mo":"-","mn":"1"}},"mo":"\u00b7","mrow":{"msup":{"mover":{"mi":"f","mo":"\u2192"},"mi":"k"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msup":[{"mover":{"mi":"x","mo":"\u2192"},"mi":"k"},{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mi":"k"}],"mo":","}}}},{"mi":"t","mo":"."}],"mo":["\u2062","\u2062","\u2062"],"mi":"\u0394","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}}}},"br":{},"sup":"k"},"The implicit integration technique is not without its share of complications. In particular, the implicit integration technique requires an expression for {right arrow over (f)}, not {right arrow over (f)}. In this case, an approximate is used. Specifically,",{"@attributes":{"id":"p-0148","num":"0160"},"maths":{"@attributes":{"id":"MATH-US-00017","num":"00017"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msup":{"mover":{"mi":"f","mo":"\u2192"},"mrow":{"mi":"k","mo":"+","mn":"1"}},"mo":"=","mrow":{"mover":{"mi":"f","mo":"\u2192"},"mo":["(",")"],"mrow":{"msup":[{"mover":{"mi":"x","mo":"\u2192"},"mrow":{"mi":"k","mo":"+","mn":"1"}},{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mrow":{"mi":"k","mo":"+","mn":"1"}}],"mo":","}}}}},"br":{}},{"@attributes":{"id":"p-0149","num":"0161"},"maths":{"@attributes":{"id":"MATH-US-00018","num":"00018"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msup":{"mover":{"mi":"f","mo":"\u2192"},"mrow":{"mi":"k","mo":"+","mn":"1"}},"mo":"=","mrow":{"mrow":[{"mover":{"mi":"f","mo":"\u2192"},"mo":"+","mrow":{"mrow":{"mo":["(",")"],"mrow":{"msup":[{"mover":{"mi":"x","mo":"\u2192"},"mrow":{"mi":"k","mo":"+","mn":"1"}},{"mover":{"mi":["x","_"]},"mi":"k"}],"mo":"-"}},"mo":"\u00b7","mfrac":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"\u2192"}},{"mo":"\u2202","mover":{"mi":"x","mo":"\u2192"}}]}}},{"mrow":{"mo":"+","mrow":{"mo":["(",")"],"mrow":{"msup":[{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mrow":{"mi":"k","mo":"+","mn":"1"}},{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mi":"k"}],"mo":"-"}}},"mo":"\u00b7","mfrac":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"\u2192"}},{"mo":"\u2202","mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}}]}}],"mo":["\u2062","\u2062","\u2062","."],"msub":[{"mo":"|","mrow":{"mo":["{","}"],"mrow":{"msup":[{"mover":{"mi":"x","mo":"\u2192"},"mi":"k"},{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mi":"k"}],"mo":","}}},{"mo":"|","mrow":{"mo":["{","}"],"mrow":{"msup":[{"mover":{"mi":"x","mo":"\u2192"},"mi":"k"},{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mi":"k"}],"mo":","}}}]}}},{"mrow":{"mo":["(",")"],"mrow":{"mi":"Eq","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"6"}}}]}}}}},"The first term in Eq. 6 is evaluated as in the explicit case, whereas the second and third terms are dependent on Jacobean matrices, \u2202{right arrow over (f)}\/\u2202{right arrow over (x)} and",{"@attributes":{"id":"p-0151","num":"0163"},"maths":{"@attributes":{"id":"MATH-US-00019","num":"00019"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"\u2192"}},{"mo":"\u2202","mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}}],"mo":"\/"},"mo":","}}},"br":{}},"A Jacobean matrix has the form",{"@attributes":{"id":"p-0153","num":"0165"},"maths":{"@attributes":{"id":"MATH-US-00020","num":"00020"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"\u2192"}},{"mo":"\u2202","mover":{"mi":"x","mo":"\u2192"}}]},"mo":"=","mrow":{"mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":"f","mn":"1"}},{"mo":"\u2202","msub":{"mi":"x","mn":"1"}}]}},{"mi":"\u22ef"},{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":"f","mn":"1"}},{"mo":"\u2202","msub":{"mi":["f","n"]}}]}}]},{"mtd":[{"mi":"\u22ee"},{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","i"]}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]}},{"mi":"\u22ee"}]},{"mtd":[{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","n"]}},{"mo":"\u2202","msub":{"mi":"x","mn":"1"}}]}},{"mi":"\u22ef"},{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","n"]}},{"mo":"\u2202","msub":{"mi":["x","n"]}}]}}]}]}},"mo":"."}}},{"mrow":{"mo":["(",")"],"mrow":{"mi":"Eq","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"7"}}}]}}}},"br":{},"sub":["i","j","j","i","j ","i","j "],"img":{"@attributes":{"id":"CUSTOM-CHARACTER-00006","he":"3.13mm","wi":"2.46mm","file":"US08666712-20140304-P00001.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},"sup":"3"},{"@attributes":{"id":"p-0154","num":"0166"},"maths":{"@attributes":{"id":"MATH-US-00021","num":"00021"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","i"]}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]},"mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mfrac":{"mrow":[{"mo":"\u2202","msubsup":{"mi":["f","i","X"]}},{"mo":"\u2202","msubsup":{"mi":["x","i","X"]}}]}},{"mfrac":{"mrow":[{"mo":"\u2202","msubsup":{"mi":["f","i","X"]}},{"mo":"\u2202","msubsup":{"mi":["f","i","Y"]}}]}},{"mfrac":{"mrow":[{"mo":"\u2202","msubsup":{"mi":["f","i","X"]}},{"mo":"\u2202","msub":{"mi":["f","n"]}}]}}]},{"mtd":[{"mfrac":{"mrow":[{"mo":"\u2202","msubsup":{"mi":["f","i","Y"]}},{"mo":"\u2202","msubsup":{"mi":["f","i","X"]}}]}},{"mfrac":{"mrow":[{"mo":"\u2202","msubsup":{"mi":["f","i","Y"]}},{"mo":"\u2202","msubsup":{"mi":["x","i","Y"]}}]}},{"mfrac":{"mrow":[{"mo":"\u2202","msubsup":{"mi":["f","i","Y"]}},{"mo":"\u2202","msubsup":{"mi":["x","i","Z"]}}]}}]},{"mtd":[{"mfrac":{"mrow":[{"mo":"\u2202","msubsup":{"mi":["f","i","Z"]}},{"mo":"\u2202","msubsup":{"mi":["x","i","X"]}}]}},{"mfrac":{"mrow":[{"mo":"\u2202","msubsup":{"mi":["f","i","Z"]}},{"mo":"\u2202","msubsup":{"mi":["x","i","Y"]}}]}},{"mfrac":{"mrow":[{"mo":"\u2202","msubsup":{"mi":["f","i","Z"]}},{"mo":"\u2202","msubsup":{"mi":["x","i","Z"]}}]}}]}]}}}}}},"Supposing \u2202{right arrow over (f)}\/\u2202{right arrow over (x)} and",{"@attributes":{"id":"p-0156","num":"0168"},"maths":{"@attributes":{"id":"MATH-US-00022","num":"00022"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"\u2192"}},{"mo":"\u2202","mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}}],"mo":"\/"}}},"br":{}},{"@attributes":{"id":"p-0157","num":"0169"},"maths":{"@attributes":{"id":"MATH-US-00023","num":"00023"},"math":{"@attributes":{"overflow":"scroll"},"msup":{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mrow":{"mi":"k","mo":"+","mn":"1"}}}},"br":{}},{"@attributes":{"id":"p-0158","num":"0170"},"maths":{"@attributes":{"id":"MATH-US-00024","num":"00024"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mrow":[{"mo":["(",")"],"mrow":{"mrow":[{"mi":"I","mo":"-","mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"t","mo":["\u00b7","\u00b7"],"msup":{"mi":"M","mrow":{"mo":"-","mn":"1"}},"mfrac":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"\u2192"}},{"mo":"\u2202","mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}}]}}}},{"mrow":[{"mo":"-","mi":"\u0394"},{"msup":[{"mi":"t","mn":"2"},{"mi":"M","mrow":{"mo":"-","mn":"1"}}],"mo":["\u00b7","\u00b7"],"mfrac":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"\u2192"}},{"mo":"\u2202","mover":{"mi":"x","mo":"\u2192"}}]}}],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}],"mo":["\u2062","\u2062","\u2062"],"msub":[{"mo":"|","mi":"k"},{"mo":"|","mi":"k"}]}},{"mo":["(",")"],"mrow":{"msup":[{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mrow":{"mi":"k","mo":"+","mn":"1"}},{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mi":"k"}],"mo":"-"}}],"mo":"\u00b7"},{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"t","mo":["\u00b7","\u00b7"],"msup":{"mi":"M","mrow":{"mo":"-","mn":"1"}},"mrow":{"mo":["(",")"],"mrow":{"mrow":[{"msup":{"mover":{"mi":"f","mo":"\u2192"},"mi":"k"},"mo":"+","mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"t","mo":"\u00b7","mfrac":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"\u2192"}},{"mo":"\u2202","mover":{"mi":"x","mo":"\u2192"}}]}}}},{"mo":"\u00b7","msup":{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mi":"k"}}],"mo":["\u2062","\u2062"],"msub":{"mo":"|","mi":"k"}}}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mrow":{"mi":"Eq","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"8"}}}]}}}},"br":{},"sup":"k "},{"@attributes":{"id":"p-0159","num":"0171"},"maths":{"@attributes":{"id":"MATH-US-00025","num":"00025"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":["t","k"]},"mo":",","msup":{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mi":"k"}}}},"br":{},"sub":"k"},{"@attributes":{"id":"p-0160","num":"0172"},"maths":{"@attributes":{"id":"MATH-US-00026","num":"00026"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mover":{"mi":"f","mo":"\u2192"},"mo":["(",")"],"mrow":{"msup":[{"mover":{"mi":"x","mo":"\u2192"},"mi":"k"},{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mi":"k"}],"mo":","}}}},"br":{},"sub":"k","b":"800"},"Eq. 8 may be written as A{right arrow over (x)}={right arrow over (b)}, wherein:",{"@attributes":{"id":"p-0162","num":"0174"},"maths":{"@attributes":{"id":"MATH-US-00027","num":"00027"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mrow":{"mi":"A","mo":"=","mrow":{"mo":["(",")"],"mrow":{"mrow":[{"mi":"I","mo":"-","mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"t","mo":["\u00b7","\u00b7"],"msup":{"mi":"M","mrow":{"mo":"-","mn":"1"}},"mfrac":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"\u2192"}},{"mo":"\u2202","mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}}]}}}},{"mrow":[{"mo":"-","mi":"\u0394"},{"msup":[{"mi":"t","mn":"2"},{"mi":"M","mrow":{"mo":"-","mn":"1"}}],"mo":["\u00b7","\u00b7"],"mfrac":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"\u2192"}},{"mo":"\u2202","mover":{"mi":"x","mo":"\u2192"}}]}}],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}],"mo":["\u2062","\u2062","\u2062"],"msub":[{"mo":"|","mi":"k"},{"mo":"|","mi":"k"}]}}},"mo":";"}},{"mrow":{"mo":["(",")"],"mrow":{"mrow":{"mi":"Eq","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"9"},"mo":"\u2062","mi":"a"}}}]},{"mtd":[{"mrow":{"mrow":{"mover":{"mi":"x","mo":"\u2192"},"mo":"=","mrow":{"mo":["(",")"],"mrow":{"msup":[{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mrow":{"mi":"k","mo":"+","mn":"1"}},{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mi":"k"}],"mo":"-"}}},"mo":";","mi":"and"}},{"mrow":{"mo":["(",")"],"mrow":{"mrow":{"mi":"Eq","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"9"},"mo":"\u2062","mi":"b"}}}]},{"mtd":[{"mrow":{"mi":"b","mo":"=","mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"t","mo":["\u00b7","\u00b7"],"msup":{"mi":"M","mrow":{"mo":"-","mn":"1"}},"mrow":{"mrow":{"mo":["(",")"],"mrow":{"mrow":[{"msup":{"mover":{"mi":"f","mo":"\u2192"},"mi":"k"},"mo":"+","mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"t","mo":"\u00b7","mfrac":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"\u2192"}},{"mo":"\u2202","mover":{"mi":"x","mo":"\u2192"}}]}}}},{"mo":"\u00b7","msup":{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mi":"k"}}],"mo":["\u2062","\u2062"],"msub":{"mo":"|","mi":"k"}}},"mo":"."}}}}},{"mrow":{"mo":["(",")"],"mrow":{"mrow":{"mi":"Eq","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"9"},"mo":"\u2062","mi":"c"}}}]}]}}}},"As set forth above with reference to , performing physics simulations on a GPU using FYSI includes three steps: (i) a system setup step; (ii) a solver step; and (iii) a collision step.","The system setup step involves determining values for {A,{right arrow over (x)},{right arrow over (b)}} in A{right arrow over (x)}={right arrow over (b)}, given a constant timestep \u0394t, the diagonal mass matrix M, and the present positions {right arrow over (x)}and velocities of the point-mesh",{"@attributes":{"id":"p-0165","num":"0177"},"maths":{"@attributes":{"id":"MATH-US-00028","num":"00028"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msup":{"mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."},"mi":"k"},"mo":"."}}},"br":{}},{"@attributes":{"id":"p-0166","num":"0178"},"maths":{"@attributes":{"id":"MATH-US-00029","num":"00029"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mo":["{","}"],"mrow":{"mover":{"mi":"f","mo":"\u2192"},"mo":[",",","],"mrow":[{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"\u2192"}},{"mo":"\u2202","mover":{"mi":"x","mo":"\u2192"}}],"mo":"\/"},{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"\u2192"}},{"mo":"\u2202","mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}}],"mo":"\/"}]}}}},"br":{}},"A linear pair-wise force model for rectangular point-mesh  is used. In the linear pair-wise force model for point-mesh , an edge between points i and j is called a joint, and represents a combined spring and dampener. Two joints are complimentary if ij=ji, in which case equal but opposite forces (i.e., Newton's Third Law) are applied to vertices i and j, given by fand f=\u2212f, respectively. If a joint is not defined between vertices i and j, or if i=j, it is evident that f=0. Finally, an expression for the net internal force acting on the ith point and its Jacobeans with respect to {right arrow over (x)} and",{"@attributes":{"id":"p-0168","num":"0180"},"maths":{"@attributes":{"id":"MATH-US-00030","num":"00030"},"math":{"@attributes":{"overflow":"scroll"},"mover":{"mi":"x","mover":{"mo":["->","."]}}}},"br":{}},{"@attributes":{"id":"p-0169","num":"0181"},"maths":[{"@attributes":{"id":"MATH-US-00031","num":"00031"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":"f","mn":"1"},"mo":"=","mrow":{"munderover":{"mo":"\u2211","mi":"k","mrow":{"mi":"k","mo":"\u2260","mn":"1"}},"mo":"\u2062","msub":{"mi":["f","ik"]}}}}},{"@attributes":{"id":"MATH-US-00031-2","num":"00031.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","i"]}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]},"mo":"=","mrow":{"munderover":{"mo":"\u2211","mi":"k","mrow":{"mi":"k","mo":"\u2260","mn":"1"}},"mo":"\u2062","mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","ik"]}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]}}}}},{"@attributes":{"id":"MATH-US-00031-3","num":"00031.3"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","i"]}},{"mo":"\u2202","msub":{"mover":{"mi":"x","mo":"."},"mi":"j"}}]},"mo":"=","mrow":{"munderover":{"mo":"\u2211","mi":"k","mrow":{"mi":"k","mo":"\u2260","mn":"1"}},"mo":"\u2062","mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","ik"]}},{"mo":"\u2202","msub":{"mover":{"mi":"x","mo":"."},"mi":"j"}}]}}}}}]},"In practice, joints are only defined between neighboring points and exist in a regular pattern. For instance, the joint topology shown in point-mesh  of  includes up to 12 joints per point (subject to boundary conditions).","Since per joint forces are only dependent on their vertices, it can be shown that rows \u2202f\/\u2202{right arrow over (x)} and",{"@attributes":{"id":"p-0172","num":"0184"},"maths":{"@attributes":{"id":"MATH-US-00032","num":"00032"},"math":{"@attributes":{"overflow":"scroll"},"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","i"]}},{"mo":"\u2202","mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}}]}}},"br":{},"sub":["ik","j"]},{"@attributes":{"id":"p-0173","num":"0185"},"maths":[{"@attributes":{"id":"MATH-US-00033","num":"00033"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mfrac":[{"mrow":[{"mo":"\u2202","msub":{"mi":["f","i"]}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]},{"mrow":[{"mo":"\u2202","msub":{"mi":["f","ij"]}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]}],"mo":"="}}},{"@attributes":{"id":"MATH-US-00033-2","num":"00033.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mfrac":[{"mrow":[{"mo":"\u2202","msub":{"mi":["f","i"]}},{"mo":"\u2202","msub":{"mover":{"mi":"x","mo":"."},"mi":"j"}}]},{"mrow":[{"mo":"\u2202","msub":{"mi":["f","ij"]}},{"mo":"\u2202","msub":{"mover":{"mi":"x","mo":"."},"mi":"j"}}]}],"mo":"="}}}]},"On the diagonal (i.e., j=i), the original expressions for \u2202f\/\u2202x=\u2202f\/\u2202xand \u2202f\/\u2202{dot over (x)}=\u2202f\/\u2202{dot over (x)}hold, and the elements are non-zero provided just one joint exists for point i. Therefore, since off-diagonal \u2202f\/\u2202x=0 and \u2202f\/\u2202{dot over (x)}=0 when ij is not a joint,",{"@attributes":{"id":"p-0175","num":"0187"},"maths":{"@attributes":{"id":"MATH-US-00034","num":"00034"},"math":{"@attributes":{"overflow":"scroll"},"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","i"]}},{"mo":"\u2202","mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}}]}}},"br":{},"figref":"FIG. 8"},"In order for the linear system of equations governing the motion of point-mesh  to represent a \u201cwell-formed\u201d system, matrix A must be (i) sparse and (ii) symmetric. With respect to item (i), A is sparse because A is linearly dependent on the Jacobean matrices \u2202{right arrow over (f)}\/\u2202{right arrow over (x)} and",{"@attributes":{"id":"p-0177","num":"0189"},"maths":{"@attributes":{"id":"MATH-US-00035","num":"00035"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"->"}},{"mo":"\u2202","mover":{"mi":"x","mover":{"mo":["->","."]}}}],"mo":"\/"},"mo":","}}},"br":{}},{"@attributes":{"id":"p-0178","num":"0190"},"maths":{"@attributes":{"id":"MATH-US-00036","num":"00036"},"math":{"@attributes":{"overflow":"scroll"},"mfrac":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"\u2192"}},{"mo":"\u2202","mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}}]}}},"br":{}},{"@attributes":{"id":"p-0179","num":"0191"},"maths":{"@attributes":{"id":"MATH-US-00037","num":"00037"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","ji"]}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]},"mo":"=","mrow":{"mrow":[{"mo":"-","mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","ij"]}},{"mo":"\u2202","msub":{"mi":["x","i"]}}]}},{"mrow":{"mfrac":[{"mrow":[{"mo":"\u2202","msub":{"mi":["f","ij"]}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]},{"mrow":[{"mo":"\u2202","msub":{"mi":["f","j"]}},{"mo":"\u2202","msub":{"mi":["x","i"]}}]}],"mo":"\u2192"},"mo":"=","mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","i"]}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]}}],"mo":"="}},{"mrow":[{"mo":"-","mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","ij"]}},{"mo":"\u2202","msub":{"mover":{"mi":"x","mo":"."},"mi":"i"}}]}},{"mrow":[{"mfrac":[{"mrow":[{"mo":"\u2202","msub":{"mi":["f","ij"]}},{"mo":"\u2202","msub":{"mover":{"mi":"x","mo":"."},"mi":"j"}}]},{"mrow":[{"mo":"\u2202","msub":{"mi":["f","j"]}},{"mo":"\u2202","msub":{"mover":{"mi":"x","mo":"."},"mi":"i"}}]}],"mo":"\u2192"},{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","i"]}},{"mo":"\u2202","msub":{"mover":{"mi":"x","mo":"."},"mi":"j"}}]},"mo":"."}],"mo":"="}],"mo":"="}],"mo":["\u2062","\u2062","="],"mstyle":{"mtext":{}},"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","ji"]}},{"mo":"\u2202","msub":{"mover":{"mi":"x","mo":"."},"mi":"j"}}]}}},{"mrow":{"mo":["(",")"],"mrow":{"mi":"Eq","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"10"}}}]}}}},"br":{},"sub":["ij","j","ij","i ","ij","j","ij","i "]},"Referring to , joint forces between points in point-mesh  may be grouped into three classes: (i) stretch joints ; (ii) shear joints ; and (iii) bend joints . Defined between adjacent nodes, stretch joints  model the strongest of the internal forces. Stretch joints  resist in-plane changes in area. Defined between diagonal nodes, shear joints  model the second strongest internal force. Shear joints  resist the tendency for cloth to pinch inwards when pulled at the corners. Finally, defined between alternating nodes, bend joints  model the weakest internal force. Bend joints  resist folding.","While more realistic definitions have been defined, the pair-wise per joint force model presented above is influenced by a mix of the aforementioned Baraff reference and a pair-wise joint force model taught by Kwang-Jin Choi and Hyeong-Seok Ko, \u201cStable but Responsive Cloth,\u201d In ACM Transactions on Graphics, SIGGRAPH 2002, pp. 604-11 (2002), the entirety of which is incorporated by reference herein. According to the model disclosed herein, all joints are modeled by the same function, but classes of joints (i.e., stretch, shear, and bend) can be globally parameterized with different values for a stiffness k, a dampening k, and a natural length L. Per joint, the action of the spring (parameterized by kand L) and dampener (parameterized by k) are linearly independent and can be considered separately.","In general, the per joint force ffor either a spring force or a damping force will satisfy two properties: (i) the per joint force fwill act along the direction of the joint {right arrow over (r)}; and (ii) the per joint force fwill be proportional to a condition function C(x,{dot over (x)}). These two properties may be written mathematically as follows:","given",{"@attributes":{"id":"p-0183","num":"0195"},"maths":[{"@attributes":{"id":"MATH-US-00038","num":"00038"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":[{"msub":{"mi":["x","ij"]},"mo":"\u2208","mrow":{"msup":{"mi":"\u211c","mn":"3"},"mo":["\u2062","\u2062"],"mstyle":{"mtext":"\uf603"},"msub":{"mi":["x","ij"]}}},{"msub":[{"mi":["x","j"]},{"mi":["x","i"]}],"mo":"-"}],"mo":"="},"mo":";"}}},{"@attributes":{"id":"MATH-US-00038-2","num":"00038.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":[{"msub":{"mover":{"mi":"r","mo":"^"},"mi":"ij"},"mo":"\u2208","mrow":{"msup":{"mi":"\u211c","mn":"3"},"mo":["\u2062","\u2062"],"mstyle":{"mtext":"\uf603"},"msub":{"mover":{"mi":"r","mo":"^"},"mi":"ij"}}},{"mrow":{"mover":{"mi":"r","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["x","ij"]}}},"mo":"=","mfrac":{"msub":{"mi":["x","ij"]},"mrow":{"mo":["\uf603","\uf604"],"msub":{"mi":["x","ij"]}}}}],"mo":"="},"mo":";","mi":"and"}}},{"@attributes":{"id":"MATH-US-00038-3","num":"00038.3"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":{"mi":"C","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["x","ij"]},{"mover":{"mi":"x","mo":"."},"mi":"ij"}],"mo":","}}},"mo":"\u2208","mi":"\u211c"},"mo":";"}}},{"@attributes":{"id":"MATH-US-00038-4","num":"00038.4"},"math":{"@attributes":{"overflow":"scroll"},"mi":"then"}},{"@attributes":{"id":"MATH-US-00038-5","num":"00038.5"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"msub":{"mi":["f","ij"]},"mo":"=","mrow":{"mrow":{"mi":"C","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["x","ij"]},{"mover":{"mi":"x","mo":"."},"mi":"ij"}],"mo":","}}},"mo":"\u00b7","msub":{"mover":{"mi":"r","mo":"^"},"mi":"ij"}}},"mo":";"}}},{"@attributes":{"id":"MATH-US-00038-6","num":"00038.6"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","ij"]}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]},"mo":"=","mrow":{"mo":["(",")"],"mrow":{"mrow":[{"mfrac":{"mrow":[{"mo":["(",")"],"mrow":{"mi":"C","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["x","ij"]},{"mover":{"mi":"x","mo":"."},"mi":"ij"}],"mo":","}}}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]},"mo":"\u00b7","msubsup":{"mover":{"mi":"r","mo":"^"},"mi":["ij","T"]}},{"mrow":{"mi":"C","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["x","ij"]},{"mover":{"mi":"x","mo":"."},"mi":"ij"}],"mo":","}}},"mo":"\u00b7","mfrac":{"mrow":[{"mo":"\u2202","msub":{"mover":{"mi":"r","mo":"^"},"mi":"ij"}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]}}],"mo":"+"}}},"mo":";","mi":"and"}}},{"@attributes":{"id":"MATH-US-00038-7","num":"00038.7"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","ij"]}},{"mo":"\u2202","msub":{"mover":{"mi":"x","mo":"."},"mi":"j"}}]},"mo":"=","mrow":{"mo":["(",")"],"mrow":{"mfrac":{"mrow":[{"mo":["(",")"],"mrow":{"mi":"C","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["x","ij"]},{"mover":{"mi":"x","mo":"."},"mi":"ij"}],"mo":","}}}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]},"mo":"\u00b7","msubsup":{"mover":{"mi":"r","mo":"^"},"mi":["ij","T"]}}}},"mo":[",","\u2062"],"mstyle":{"mtext":{}},"mi":"wherein"}}},{"@attributes":{"id":"MATH-US-00038-8","num":"00038.8"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mover":{"mi":"r","mo":"^"},"mi":"ij"}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]},"mo":"=","mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mrow":{"mover":{"mi":"r","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["x","ij"]}}}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]},"mo":"=","mrow":{"mrow":{"mfrac":[{"mi":"I","mrow":{"mo":["\uf603","\uf604"],"msub":{"mi":["x","ij"]}}},{"mrow":{"msub":{"mi":["x","ij"]},"mo":"\u2062","msubsup":{"mi":["x","ij","T"]}},"msup":{"mrow":{"mo":["\uf603","\uf604"],"msub":{"mi":["x","ij"]}},"mn":"3"}}],"mo":"-"},"mo":"=","mfrac":{"mrow":[{"mo":["(",")"],"mrow":{"mi":"I","mo":"-","mrow":{"msub":{"mover":{"mi":"r","mo":"^"},"mi":"ij"},"mo":"\u2062","msubsup":{"mover":{"mi":"r","mo":"^"},"mi":["ij","T"]}}}},{"mo":["\uf603","\uf604"],"msub":{"mi":["x","ij"]}}]}}}},"mo":",","mi":"and"}}},{"@attributes":{"id":"MATH-US-00038-9","num":"00038.9"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mover":{"mi":"r","mo":"^"},"mi":"ij"}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]},"mo":"=","mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mrow":{"mover":{"mi":"r","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["x","ij"]}}}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]},"mo":"."}}}}]},"Since \u2202{right arrow over (r)}\/\u2202x=\u2212\u2202{right arrow over (r)}\/\u2202x, the criteria for symmetry (i.e., \u2202f\/\u2202x=\u2212\u2202f\/\u2202xand \u2202f\/\u2202{dot over (x)}=\u2212\u2202f\/\u2202{dot over (x)}) only requires the following to be enforced for C(x,{dot over (x)}):",{"@attributes":{"id":"p-0185","num":"0197"},"maths":{"@attributes":{"id":"MATH-US-00039","num":"00039"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mo":["(",")"],"mrow":{"mfrac":[{"mrow":[{"mo":["(",")"],"mrow":{"mo":"\u2202","mrow":{"mi":"C","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["x","ij"]},{"mover":{"mi":"x","mo":"."},"mi":"ij"}],"mo":","}}}}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]},{"mrow":[{"mo":["(",")"],"mrow":{"mo":"\u2202","mrow":{"mi":"C","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["x","ij"]},{"mover":{"mi":"x","mo":"."},"mi":"ij"}],"mo":","}}}}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]}],"mo":"="}},{"mrow":{"mi":"and","mo":["\u2062","(",")"],"mstyle":{"mtext":{}},"mrow":{"mfrac":[{"mrow":[{"mo":["(",")"],"mrow":{"mo":"\u2202","mrow":{"mi":"C","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["x","ij"]},{"mover":{"mi":"x","mo":"."},"mi":"ij"}],"mo":","}}}}},{"mo":"\u2202","msub":{"mover":{"mi":"x","mo":"."},"mi":"j"}}]},{"mrow":[{"mo":["(",")"],"mrow":{"mo":"\u2202","mrow":{"mi":"C","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["x","ij"]},{"mover":{"mi":"x","mo":"."},"mi":"ij"}],"mo":","}}}}},{"mo":"\u2202","msub":{"mover":{"mi":"x","mo":"."},"mi":"j"}}]}],"mo":"="}},"mo":"."}],"mo":";"}}}},"The spring component of the per joint force fis now described. An ideal linear translational spring is a reactive mechanical device that resists and stores energy during deformation, and that exhibits a restitutive force acting to release stored energy. \u201cTranslational\u201d refers to type of mechanical forces involved. In the model for cloth simulation described herein, forces act along the direction of joints (i.e., {circumflex over (r)}). \u201cLinear\u201d refers to a restitutive force being directly proportional to deformation (i.e., change in x). Finally, \u201cideal\u201d means that no energy is lost between cycles of deformation and restitution.","A per joint spring condition function is defined that directly conforms to the canonical ideal linear translational spring (i.e., f=k\u00b7\u0394x). C(x) depends only on present vertex positions, satisfies the symmetry criteria for both \u2202{right arrow over (f)}\/\u2202{right arrow over (x)} and",{"@attributes":{"id":"p-0188","num":"0200"},"maths":{"@attributes":{"id":"MATH-US-00040","num":"00040"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mover":{"mi":"f","mo":"\u2192"},"mi":"i"}},{"mo":"\u2202","mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}}]},"mo":","}}},"br":{},"sub":"s "},{"@attributes":{"id":"p-0189","num":"0201"},"maths":[{"@attributes":{"id":"MATH-US-00041","num":"00041"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":[{"msub":{"mi":["C","s"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["x","ij"]}}},{"msub":{"mi":["k","s"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"mo":["\uf603","\uf604"],"msub":{"mi":["x","ij"]}},"mo":"-","mi":"L"}}}],"mo":"="},"mo":";"}}},{"@attributes":{"id":"MATH-US-00041-2","num":"00041.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mrow":{"msub":{"mi":["C","s"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["x","ij"]}}}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]},"mo":"=","mrow":{"msub":[{"mi":["k","s"]},{"mover":{"mi":"r","mo":"^"},"mi":"ij"}],"mo":"\u00b7"}},"mo":";"}}},{"@attributes":{"id":"MATH-US-00041-3","num":"00041.3"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mrow":{"msub":{"mi":["C","s"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["x","ij"]}}}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]},"mo":"=","mrow":{"mo":"-","mfrac":{"mrow":[{"mo":"\u2202","mrow":{"msub":{"mi":["C","s"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["x","ij"]}}}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]}}},"mo":";"}}},{"@attributes":{"id":"MATH-US-00041-4","num":"00041.4"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mrow":{"msub":{"mi":["C","s"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["x","ij"]}}}},{"mo":"\u2202","msub":{"mover":{"mi":"x","mo":"."},"mi":"j"}}]},"mo":"=","mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mrow":{"msub":{"mi":["C","s"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["x","ij"]}}}},{"mo":"\u2202","msub":{"mover":{"mi":"x","mo":"."},"mi":"j"}}]},"mo":"=","mn":"0"}},"mo":";","mi":"and"}}},{"@attributes":{"id":"MATH-US-00041-5","num":"00041.5"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","ij"]}},{"mo":"\u2202","msub":{"mover":{"mi":"x","mo":"."},"mi":"j"}}]},"mo":"=","mn":"0."}}}]},"The damping component of the per joint force fis now described. A damper is a passive mechanical device that resists deformation, but in contrast to a spring does not store energy or exhibit a restitutive force. Instead, dampers resist deformation by dissipating applied energy in the form of heat. This characteristic is produced by a purely resistive force proportional to changes in velocity.","In the model for simulating cloth described herein, ideal linear translational dampers exhibit a resistive force along the direction of a joint {circumflex over (r)}, which is directly proportional to relative changes in velocity of its vertices {dot over (x)}. More specifically, it exhibits a resistive force proportional to relative changes in velocity in the direction of the joint (i.e., {circumflex over (r)}{dot over (x)}). A per joint damper condition function C(x, {dot over (x)}) parameterized by a dampening coefficient kis defined. This per joint damper condition function satisfies the symmetry criteria for both \u2202{right arrow over (f)}\/\u2202{right arrow over (x)} and",{"@attributes":{"id":"p-0192","num":"0204"},"maths":{"@attributes":{"id":"MATH-US-00042","num":"00042"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"->"}},{"mrow":{"mo":"\u2202","mover":{"mi":"x","mover":{"mo":["->","."]}}},"mo":"."}],"mo":"\/"}}},"br":[{},{},{}],"in-line-formulae":[{},{}],"i":["C","x",",{dot over (x)}","k","{circumflex over (r)}","{circumflex over (x)}"],"sub":["d","ij","ij","d","ij","ij"],"sup":"T"},{"@attributes":{"id":"p-0193","num":"0205"},"maths":[{"@attributes":{"id":"MATH-US-00043","num":"00043"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mrow":{"msub":{"mi":["C","d"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["x","ij"]},{"mover":{"mi":"x","mo":"."},"mi":"ij"}],"mo":","}}}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]},"mo":"=","mrow":{"mrow":[{"mo":"-","mrow":{"msub":{"mi":["k","d"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mfrac":{"msub":{"mover":{"mi":"x","mo":"."},"mi":"ij"},"mrow":{"mo":["\uf603","\uf604"],"msub":{"mi":["x","ij"]}}},"mo":"-","mrow":{"mfrac":{"mrow":{"msubsup":{"mi":["x","ij","T"]},"mo":"\u2062","msub":{"mover":{"mi":"x","mo":"."},"mi":"ij"}},"msup":{"mrow":{"mo":["\uf603","\uf604"],"msub":{"mi":["x","ij"]}},"mn":"3"}},"mo":"\u00b7","msub":{"mi":["x","ij"]}}}}}},{"mrow":[{"mo":"-","mfrac":{"msub":{"mi":["k","d"]},"mrow":{"mo":["\uf603","\uf604"],"msub":{"mi":["x","ij"]}}}},{"mo":["(",")"],"mrow":{"msub":{"mover":{"mi":"x","mo":"."},"mi":"ij"},"mo":"-","mrow":{"msubsup":{"mover":{"mi":"r","mo":"^"},"mi":["ij","T"]},"mo":"\u2062","mrow":{"msub":[{"mover":{"mi":"x","mo":"."},"mi":"ij"},{"mover":{"mi":"r","mo":"^"},"mi":"ij"}],"mo":"\u00b7"}}}}],"mo":"\u2062"}],"mo":"="}},"mo":";"}}},{"@attributes":{"id":"MATH-US-00043-2","num":"00043.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mfrac":[{"mrow":[{"mo":"\u2202","mrow":{"msub":{"mi":["C","d"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["x","ij"]},{"mover":{"mi":"x","mo":"."},"mi":"ij"}],"mo":","}}}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]},{"mrow":[{"mo":"\u2202","mrow":{"msub":{"mi":["C","d"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["x","ij"]},{"mover":{"mi":"x","mo":"."},"mi":"ij"}],"mo":","}}}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]}],"mo":"="},"mo":";"}}},{"@attributes":{"id":"MATH-US-00043-3","num":"00043.3"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mrow":{"msub":{"mi":["C","d"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["x","ij"]},{"mover":{"mi":"x","mo":"."},"mi":"ij"}],"mo":","}}}},{"mo":"\u2202","msub":{"mover":{"mi":"x","mo":"."},"mi":"j"}}]},"mo":"=","mrow":{"mrow":{"mo":"-","msub":{"mi":["k","d"]}},"mo":"\u2062","msub":{"mover":{"mi":"r","mo":"^"},"mi":"ij"}}},"mo":";","mi":"and"}}},{"@attributes":{"id":"MATH-US-00043-4","num":"00043.4"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mfrac":[{"mrow":[{"mo":"\u2202","mrow":{"msub":{"mi":["C","d"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["x","ij"]},{"mover":{"mi":"x","mo":"."},"mi":"ij"}],"mo":","}}}},{"mo":"\u2202","msub":{"mover":{"mi":"x","mo":"."},"mi":"j"}}]},{"mrow":[{"mo":"\u2202","mrow":{"msub":{"mi":["C","d"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["x","ij"]},{"mover":{"mi":"x","mo":"."},"mi":"ij"}],"mo":","}}}},{"mo":"\u2202","msub":{"mover":{"mi":"x","mo":"."},"mi":"j"}}]}],"mo":"="},"mo":";"}}},{"@attributes":{"id":"MATH-US-00043-5","num":"00043.5"},"math":{"@attributes":{"overflow":"scroll"},"mi":"then"}},{"@attributes":{"id":"MATH-US-00043-6","num":"00043.6"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"msub":{"mi":["f","ij"]},"mo":"=","mrow":{"mrow":{"mo":"-","mrow":{"msub":{"mi":["k","d"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msubsup":{"mover":{"mi":"r","mo":"^"},"mi":["ij","T"]},"mo":"\u2062","msub":{"mover":{"mi":"x","mo":"."},"mi":"ij"}}}}},"mo":"\u00b7","msub":{"mover":{"mi":"r","mo":"^"},"mi":"ij"}}},"mo":";"}}},{"@attributes":{"id":"MATH-US-00043-7","num":"00043.7"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","ij"]}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]},"mo":"=","mrow":{"mrow":[{"mo":"-","mrow":{"msub":{"mi":["k","d"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mfrac":{"msub":{"mover":{"mi":"x","mo":"."},"mi":"ij"},"mrow":{"mo":["\uf603","\uf604"],"msub":{"mi":["x","ij"]}}},"mo":"-","mrow":{"mfrac":{"mrow":{"msubsup":{"mi":["x","ij","T"]},"mo":"\u2062","msub":{"mover":{"mi":"x","mo":"."},"mi":"ij"}},"msup":{"mrow":{"mo":["\uf603","\uf604"],"msub":{"mi":["x","ij"]}},"mn":"3"}},"mo":"\u00b7","msub":{"mi":["x","ij"]}}}}}},{"mrow":[{"mo":"-","mfrac":{"msub":{"mi":["k","d"]},"mrow":{"mo":["\uf603","\uf604"],"msub":{"mi":["x","ij"]}}}},{"mo":["(",")"],"mrow":{"msub":{"mover":{"mi":"x","mo":"."},"mi":"ij"},"mo":"-","mrow":{"msubsup":{"mover":{"mi":"r","mo":"^"},"mi":["ij","T"]},"mo":"\u2062","mrow":{"msub":[{"mover":{"mi":"x","mo":"."},"mi":"ij"},{"mover":{"mi":"r","mo":"^"},"mi":"ij"}],"mo":"\u00b7"}}}}],"mo":"\u2062"}],"mo":"="}},"mo":";","mi":"and"}}},{"@attributes":{"id":"MATH-US-00043-8","num":"00043.8"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","ij"]}},{"mo":"\u2202","msub":{"mi":["x","j"]}}]},"mo":"=","mrow":{"mo":"-","mrow":{"mrow":{"msub":{"mi":["k","d"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mover":{"mi":"r","mo":"^"},"mi":"ij"},"mo":"\u2062","msubsup":{"mover":{"mi":"r","mo":"^"},"mi":["ij","T"]}}}},"mo":"."}}}}}]},"Response and effect of external forces on point-mesh  is now described. Examples of external forces include gravity, wind, and collisions (both self and with the environment). Note that a clear distinction exists between the response and effect of external forces. Responses involve an immediate change to a present state (i.e., position , velocity",{"@attributes":{"id":"p-0195","num":"0207"},"maths":{"@attributes":{"id":"MATH-US-00044","num":"00044"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msup":{"mover":{"mover":{"mi":["x","_"]},"mo":"."},"mi":"k"},"mo":","}}},"br":{},"sup":"k"},"Several approaches for solving for the response and effect of external forces are known, including approaches that use reduced coordinates, penalty methods, and\/or Lagrange multipliers. See, e.g., the aforementioned Baraff reference. Another approach discussed in the Baraff reference places constraints on the mass of certain points in a point-mesh being modeled. As set forth above, the block-wise interpretation of the Diagonal Mass Matrix M\u03b5represents the mass of the i th particle as a {3\u00d73} diagonal matrix:",{"@attributes":{"id":"p-0197","num":"0209"},"maths":{"@attributes":{"id":"MATH-US-00045","num":"00045"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":["M","ii"]},"mo":"=","mrow":{"mo":"-","mrow":{"mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"msub":{"mi":["m","i"]}},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"msub":{"mi":["m","i"]}},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"msub":{"mi":["m","i"]}}]}]}},"mo":"."}}}},{"mrow":{"mo":["(",")"],"mrow":{"mi":"Eq","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"11"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0198","num":"0210"},"maths":{"@attributes":{"id":"MATH-US-00046","num":"00046"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":["M","ii"]},"mo":"=","mrow":{"mo":"-","mrow":{"mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"msub":{"mi":["m","i"]}},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"msub":{"mi":["m","i"]}},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mi":"\u221e"}]}]}},"mo":"."}}}},{"mrow":{"mo":["(",")"],"mrow":{"mi":"Eq","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"12"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0199","num":"0211"},"maths":{"@attributes":{"id":"MATH-US-00047","num":"00047"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mover":{"mi":["x","\u00a8"]},"mi":"i"},"mo":"-","mrow":{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mn":"1","mo":"\/","msub":{"mi":["m","i"]}}},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mrow":{"mn":"1","mo":"\/","msub":{"mi":["m","i"]}}},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"}]}]}},{"msub":{"mi":["f","i"]},"mo":"."}],"mo":"\u00b7"}}}},"br":{},"sub":"i "},"The approach developed in the Baraff reference has implications on the symmetry, and consequently the efficient solvability, of the linear system. These issues may be resolved by using a Modified Conjugate Gradient (\u201cmodified-CG\u201d) Method that introduces a filtering operation for enforcing the mass-based constraints. Another approach uses both mass based constraints and the modified-CG method, as described in Kwang-Jin Choi and Hyeong-Seok Ko, \u201cStable but Responsive Cloth,\u201d In ACM Transactions on Graphics, SIGGRAPH 2002, pp. 604-11 (2002), the entirety of which is incorporated by reference herein.","C. An Example Implementation for Simulating Cloth on a GPU","Having described a model for implicitly simulating cloth, a three-step method for implementing a simulation of cloth for each discrete time-step on a GPU is now described.  depicts an example flow diagram for implementing a simulation of cloth on a GPU in accordance with an embodiment of the present invention. In other words,  represents a high-level depiction of a particular implementation of physics simulation block  described above with reference to . In , the large circles represent textures or arrays of video memory, which may be similar to textures  described above with reference to . The particular mapping of data to textures is as follows: (i) circles  (labeled M) represent a texture containing data relating to the mass of each point in point-mesh ; (ii) circles  (labeled P) represent a texture containing data relating to the position of each point in point-mesh ; (iii) circles  (labeled P) represent a texture containing data relating to the velocity of each point in point-mesh ; (iv) circles  (labeled F) represent a texture containing data relating to the net force acting on each point in point-mesh ; and (v) circles  (labeled J) represent a texture containing data relating to the Jacobean matrices. Shaded circles  represent kernel operations (such as mathematical computations performed by one or more GPUs).","The first step for implementing a simulation of cloth on a GPU involves mapping physical parameters associated with a point-mesh into textures (i.e., video memory) to set up a linear system of equations that governs motion of the point-mesh, as shown in . By applying an implicit integration technique, it was set forth above that the linear system of equations that governs motion of the point-mesh may be written as A{right arrow over (x)}={right arrow over (b)}, wherein:",{"@attributes":{"id":"p-0204","num":"0216"},"maths":{"@attributes":{"id":"MATH-US-00048","num":"00048"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mrow":{"msub":{"mrow":{"mrow":{"mi":"A","mo":"=","mrow":{"msub":{"mrow":{"mo":["(","\uf604"],"mrow":{"mi":"I","mo":"-","mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"t","mo":["\u00b7","\u00b7"],"msup":{"mi":"M","mrow":{"mo":"-","mn":"1"}},"mfrac":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"->"}},{"mo":"\u2202","mover":{"mi":"x","mover":{"mo":["->","."]}}}]}}}}},"mi":"k"},"mo":"-","mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"msup":[{"mi":"t","mn":"2"},{"mi":"M","mrow":{"mo":"-","mn":"1"}}],"mo":["\u00b7","\u00b7"],"mfrac":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"->"}},{"mo":"\u2202","mover":{"mi":"x","mo":"->"}}]}}}}},"mo":"\uf604"},"mi":"k"},"mo":")"},"mo":";"}},{"mrow":{"mo":["(",")"],"mrow":{"mrow":{"mi":"Eq","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"9"},"mo":"\u2062","mi":"a"}}}]},{"mtd":[{"mrow":{"mrow":{"mrow":{"mover":{"mi":"x","mo":"->"},"mo":"=","mrow":{"mo":["(",")"],"mrow":{"msup":[{"mover":{"mi":"x","mover":{"mo":["->","."]}},"mrow":{"mi":"k","mo":"+","mn":"1"}},{"mover":{"mi":"x","mover":{"mo":["->","."]}},"mi":"k"}],"mo":"-"}}},"mo":";"},"mo":["\u2062","\u2062"],"mstyle":{"mtext":{}},"mi":"and"}},{"mrow":{"mo":["(",")"],"mrow":{"mrow":{"mi":"Eq","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"9"},"mo":"\u2062","mi":"b"}}}]},{"mtd":[{"mrow":{"mrow":{"mrow":{"mi":"b","mo":"=","mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"t","mo":["\u00b7","\u00b7","\u00b7"],"msup":[{"mi":"M","mrow":{"mo":"-","mn":"1"}},{"mover":{"mi":"x","mover":{"mo":["->","."]}},"mi":"k"}],"msub":{"mrow":{"mo":["(","\uf604"],"mrow":{"msup":{"mover":{"mi":"f","mo":"->"},"mi":"k"},"mo":"+","mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"t","mo":"\u00b7","mfrac":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"->"}},{"mo":"\u2202","mover":{"mi":"x","mo":"->"}}]}}}}},"mi":"k"}}}},"mo":")"},"mo":"."}},{"mrow":{"mo":["(",")"],"mrow":{"mrow":{"mi":"Eq","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"9"},"mo":"\u2062","mi":"c"}}}]}]}}},"br":{},"b":["902","904","906","910"],"i":["a","a","a ","a "]},{"@attributes":{"id":"p-0205","num":"0217"},"maths":{"@attributes":{"id":"MATH-US-00049","num":"00049"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mo":["{","}"],"mrow":{"mover":{"mi":"f","mo":"->"},"mo":[",",","],"mrow":[{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"->"}},{"mo":"\u2202","mover":{"mi":"x","mo":"->"}}],"mo":"\/"},{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"->"}},{"mo":"\u2202","mover":{"mi":"x","mover":{"mo":["->","."]}}}],"mo":"\/"}]}},"mo":")"}}},"br":{},"b":["904","906","908","908","912","908","912"],"i":["a","a","a","b ","b","b ","b"]},"The second step for implementing a simulation of cloth on a GPU involves solving the linear system for updated values of position and velocity (i.e.,",{"@attributes":{"id":"p-0207","num":"0219"},"maths":{"@attributes":{"id":"MATH-US-00050","num":"00050"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":{"mo":["{","}"],"mrow":{"msup":[{"mover":{"mi":"x","mo":"->"},"mrow":{"mi":"k","mo":"+","mn":"1"}},{"mover":{"mi":"x","mover":{"mo":["->","."]}},"mrow":{"mi":"k","mo":"+","mn":"1"}}],"mo":","}},"mo":")"},"mo":","}}},"br":{},"figref":"FIG. 9","b":["910","902","904","906","908","912","904","906"],"i":["b ","a","a","a","b","b","b ","b"]},"The final step for implementing a simulation of cloth on a GPU involves collision detection, as shown in . A kernel operation determines whether collisions occur based on input from textures , , , and . The results of kernel operation are written into texture , , , and . After these results are written, the collision response step is complete for this time-step.","Each of the steps for implementing a simulation of cloth on a GPU is now described in more detail.","i. Step One: System Setup","A significant design challenge of a GPU implementation is the development of a texture representation of the system equations that is both compact and facilitates single instruction multiple data (SIMD) parallelization. An embodiment of the present invention, utilizes 17 persistent textures with structures derived directly from the rectangular point-mesh under consideration. However, the invention is not limited to 17 textures. A person skilled in the relevant art(s) will understand how to perform physics simulations on the GPU using a different number textures without deviating from the spirit and scope of the present invention.","The textures used to simulate cloth as described herein are two-dimensional textures of n texels with heights of \u2018rows\u2019 and widths of \u2018cols\u2019 corresponding to point-mesh , which is organized into rows and columns of \u2018rows\u2019 and \u2018cols\u2019 elements respectively. Accordingly, each texel location of each texture maps one-to-one to a particular point of point-mesh . Each texture is ordered left-to-right top-to-bottom. In general, individual textures store different properties pertaining to the same point i at the same texture-coordinate {s, t}. (For clarity this document depicts all texture coordinates as un-normalized integers bound by a height=\u2018rows\u2019 and width=\u2018cols\u2019). The mappings from a point's number to its texture-coordinates, and vice-versa, are given-by\n\nmod \n\n\u2518; and\n\n\n","Furthermore, subject to boundary conditions, the point offsets of the joint topology shown in  also maps to two-dimensional texture offsets as shown in Table 18.",{"@attributes":{"id":"p-0214","num":"0226"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 18"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":[{},"Joint","Point Offset","Texture Offset"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Stretch-Horizontal","\u00b11","{\u00b11, 0}"]},{"entry":[{},"Stretch-Vertical","\u00b1cols","{0, \u00b11}"]},{"entry":[{},"Shear-Negative-Diagonal","\u00b1cols \u2212 1","{\u22121, \u00b11}"]},{"entry":[{},"Shear-Positive-Diagonal","\u00b1cols + 1","{+1, \u00b11}"]},{"entry":[{},"Bend-Horizontal","\u00b12","{\u00b12, 0}"]},{"entry":[{},"Bend-Vertical","\u00b12 \u2212 cols","{0, \u00b12}"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"The 17 textures are labeled P, V, F, A#, B#, C, and D, wherein A# and B# are each collections of six textures. For each point itexel {s,t} the contents of the 17 textures are then given by the following definitions. First, textures P, V, and F represent",{"@attributes":{"id":"p-0216","num":"0228"},"maths":{"@attributes":{"id":"MATH-US-00051","num":"00051"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msup":[{"mover":{"mi":["x","_"]},"mi":"k"},{"mover":{"mi":"x","mover":{"mi":"_","mo":"."}},"mi":"k"}],"mo":[",",","]}}},"br":{},"sup":"k","ul":{"@attributes":{"id":"ul0006","list-style":"none"},"li":{"@attributes":{"id":"ul0006-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0007","list-style":"none"},"li":["P stores the three components of a point's present position x;","V stores the three components of a point's present velocity {dot over (x)}; and","F stores the three components of a point's present net force vector f.\n\nSecond, A# and B# represent the lower-triangular (off-diagonal elements) of \u2202{right arrow over (f)}\/\u2202{right arrow over (x)} and\n"]}}}},{"@attributes":{"id":"p-0217","num":"0232"},"maths":{"@attributes":{"id":"MATH-US-00052","num":"00052"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"->"}},{"mo":"\u2202","mover":{"mi":"x","mover":{"mo":["->","."]}}}],"mo":"\/"}}},"br":{},"ul":{"@attributes":{"id":"ul0008","list-style":"none"},"li":{"@attributes":{"id":"ul0008-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0009","list-style":"none"},"li":["A#: stores the {3\u00d73} matrix corresponding to a \u2202f\/\u2202x; and","B#: stores the {3\u00d73} matrix corresponding to \u2202f\/\u2202{dot over (x)}; wherein A0-A5 and B0-B5 are defined for each of the following six joints:","m=0\u2192j=i+1 (stretch);","m=1\u2192j=i+2 (bend);","m=2\u2192j=i+cols\u22121 (shear);","m=3\u2192j=i+cols (stretch);","m=4\u2192j=i+cols+1 (shear); and","m=5\u2192j=i+2\u2212cols (bend).\n\nThird, textures C and D represent on-diagonal elements of \u2202{right arrow over (f)}\/\u2202{right arrow over (x)} and\n"]}}}},{"@attributes":{"id":"p-0218","num":"0241"},"maths":{"@attributes":{"id":"MATH-US-00053","num":"00053"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msup":{"mover":{"mi":"f","mo":"\u2192"},"mi":"k"}},{"mo":"\u2202","mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}}]},"mo":","}}},"br":{},"ul":{"@attributes":{"id":"ul0010","list-style":"none"},"li":{"@attributes":{"id":"ul0010-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0011","list-style":"none"},"li":["C: stores the {3\u00d73} matrix corresponding to \u2202f\/\u2202x; and","D: stores the {3\u00d73} matrix corresponding to \u2202f\/\u2202{dot over (x)}."]}}}},"Having defined the 17 textures, a two-stage process for filling these textures (i.e., for performing the system set-up step of ) is now described.  depicts a flow diagram of a two-stage process for setting up a linear system of equations that governs motion of point-mesh . Included in  are input textures and (corresponding to P:{right arrow over (x)}and",{"@attributes":{"id":"p-0220","num":"0245"},"maths":{"@attributes":{"id":"MATH-US-00054","num":"00054"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":{"mi":"V","mo":["\u2062","\u2062"],"mstyle":{"mtext":":"},"msup":{"mover":{"mi":"x","mover":{"mo":["->","."]}},"mi":"k"}},"mo":")"},"mo":","}}},"br":{},"b":["1006","1008","1012","1014","1016"],"i":["a","a","a","a","a "],"sup":["k","k"]},{"@attributes":{"id":"p-0221","num":"0246"},"maths":{"@attributes":{"id":"MATH-US-00055","num":"00055"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":{"mrow":[{"mo":["{","}"],"mrow":{"mrow":{"mi":["B","#"],"mo":"\u2062"},"mo":",","mi":"D"}},{"mrow":[{"mo":"\u2202","msup":{"mover":{"mi":"f","mo":"->"},"mi":"k"}},{"mo":"\u2202","mover":{"mi":"x","mover":{"mo":["->","."]}}}],"mo":"\/"}],"mo":["\u2062","\u2062"],"mstyle":{"mtext":":"}},"mo":")"},"mo":"."}}}},"The first stage of  involves six identical sub-passes represented by kernel operations -that operate for complementary pairs of joints. In this first stage, the net-force vector {right arrow over (f)}(i.e., texture F) and the lower-triangular (off-diagonal elements) of \u2202{right arrow over (f)}\/\u2202{right arrow over (x)} and",{"@attributes":{"id":"p-0223","num":"0248"},"maths":{"@attributes":{"id":"MATH-US-00056","num":"00056"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"->"}},{"mo":"\u2202","mover":{"mi":"x","mover":{"mo":["->","."]}}}],"mo":"\/"}}},"br":{},"b":["1010","1010","1002","1004","1008","1006","1008","1012"],"i":["a","f ","b","b","c","b","b","b. "]},"The second stage of  involves two identical sub-passes represented by kernel operations and that determine the diagonal elements of \u2202{right arrow over (f)}\/\u2202{right arrow over (x)} and",{"@attributes":{"id":"p-0225","num":"0250"},"maths":{"@attributes":{"id":"MATH-US-00057","num":"00057"},"math":{"@attributes":{"overflow":"scroll"},"mfrac":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"\u2192"}},{"mo":"\u2202","mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}}]}}},"br":{},"b":["1010","1010","1016","1014"],"i":["g ","h ","b ","b"]},"The first-stage of system-setup () involves determining the net-force vector {right arrow over (f)}(i.e., texture C) and the lower-triangular (off-diagonal elements) of \u2202{right arrow over (f)}\/\u2202{right arrow over (x)} and",{"@attributes":{"id":"p-0227","num":"0252"},"maths":{"@attributes":{"id":"MATH-US-00058","num":"00058"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"->"}},{"mo":"\u2202","mover":{"mi":"x","mover":{"mo":["->","."]}}}],"mo":"\/"}}},"br":{},"figref":["FIG. 10","FIG. 11"],"b":["1010","1010"],"i":["a","f"]},{"@attributes":{"id":"p-0228","num":"0253"},"figref":"FIG. 11","b":["1100","1110","1110","1110"],"i":["a ","b ","a ","m=","j=i+","m=","j=i+","m=","j=i+cols\u2212","m=","j=i+cols ","m=","j=i+cols+","m=","j=i+","cols "],"sub":["y","y","j","y","j "],"sup":["k","k","k"],"br":[{},{},{},{},{},{}],"in-line-formulae":[{},{},{},{},{},{},{},{},{},{},{},{}]},"First kernel (evalJoint) takes advantage of the following facts:\n\n",{"@attributes":{"id":"p-0230","num":"0257"},"maths":{"@attributes":{"id":"MATH-US-00059","num":"00059"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"->"}},{"mo":"\u2202","mover":{"mi":"x","mover":{"mo":["->","."]}}}],"mo":"\/"},"mo":","}}},"br":{},"sub":["i","j","y","j ","i","j","j","i"],"sup":["k","k","k","k"],"ul":{"@attributes":{"id":"ul0014","list-style":"none"},"li":{"@attributes":{"id":"ul0014-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0015","list-style":"none"},"li":"(3) By symmetry (i.e., f=\u2212f,\u2202f\/\u2202x=\u2202f\/\u2202xand \u2202f\/\u2202{dot over (x)}=\u2202f\/\u2202{dot over (x)}) complimentary joints involve identical analysis. It is therefore ideal (i.e., no replication of work) to analyze a unique half of the joints in our topology. Moreover, by symmetry, the lower-triangular (off-diagonal elements) of \u2202{right arrow over (f)}\/\u2202{right arrow over (x)} and"}}}},{"@attributes":{"id":"p-0231","num":"0259"},"maths":{"@attributes":{"id":"MATH-US-00060","num":"00060"},"math":{"@attributes":{"overflow":"scroll"},"mfrac":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"\u2192"}},{"mo":"\u2202","mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}}]}}},"br":{}},"Second kernel (labeled updateF) updates the net-force vector {right arrow over (f)}(or texture) C with the forces of the joint being analyzed. Second kernel (updateF) adds the contribution of per joint forces fnow stored in T, to an input net-force vector {right arrow over (f)}or texture C (either coming from another sub-pass or containing external forces). It takes particular advantage of the linear independence of joint forces, and the symmetry provided by Newton's Third Law. Because each sub-pass effectively calculates the forces of complementary pairs of joints, second kernel (updateF) is responsible for addressing T to properly consider both contributions (due to boundary conditions certain values per joint forces in T may be inordinate).","Referring again to , the second and final stage of system-setup involves determining the diagonal elements of \u2202{right arrow over (f)}\/\u2202{right arrow over (x)} and",{"@attributes":{"id":"p-0234","num":"0262"},"maths":{"@attributes":{"id":"MATH-US-00061","num":"00061"},"math":{"@attributes":{"overflow":"scroll"},"mfrac":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"\u2192"}},{"mo":"\u2202","mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}}]}}},"br":{}},{"@attributes":{"id":"p-0235","num":"0263"},"maths":{"@attributes":{"id":"MATH-US-00062","num":"00062"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","i"]}},{"mo":"\u2202","msub":{"mi":["x","i"]}}]},"mo":"=","mrow":{"munderover":{"mo":"\u2211","mi":"k","mrow":{"mi":"k","mo":"\u2260","mn":"1"}},"mo":"\u2062","mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","ik"]}},{"mo":"\u2202","msub":{"mi":["x","i"]}}]}}}},{"mrow":{"mo":["(",")"],"mrow":{"mrow":{"mi":"Eq","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"13"},"mo":"\u2062","mi":"a"}}}]},{"mtd":[{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","i"]}},{"mo":"\u2202","msub":{"mover":{"mi":"x","mo":"."},"mi":"i"}}]},"mo":"=","mrow":{"munderover":{"mo":"\u2211","mi":"k","mrow":{"mi":"k","mo":"\u2260","mn":"1"}},"mo":"\u2062","mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["f","ik"]}},{"mo":"\u2202","msub":{"mover":{"mi":"x","mo":"."},"mi":"i"}}]},"mo":"."}}}},{"mrow":{"mo":["(",")"],"mrow":{"mrow":{"mi":"Eq","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"13"},"mo":"\u2062","mi":"b"}}}]}]}}}},"As graphically depicted in , the summation in Eq. 13a is evaluated by a kernel (labeled evalDiagonalC) and the summation in Eq. 13b is evaluated by a kernel (labeled evalDiagonalD). Kernels and are independent and only differ in their inputs and outputs. Kernel takes as input the data from textures , , , , , and , which collectively represent the off-diagonal elements of Jacobean matrix \u2202{right arrow over (f)}\/\u2202{right arrow over (x)}. The output of kernel is written to texture (i.e., texture C). Kernel takes as input the data from textures . , , , , and , which collectively represent the off-diagonal elements of Jacobean matrix",{"@attributes":{"id":"p-0237","num":"0265"},"maths":{"@attributes":{"id":"MATH-US-00063","num":"00063"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mover":{"mi":"f","mo":"\u2192"}},{"mo":"\u2202","mover":{"mover":{"mi":"x","mo":"\u2192"},"mo":"."}}]},"mo":"."}}},"br":{},"b":["1250","1234"],"i":["c ","b "]},"ii. Step Two: System Solver","Referring again to , the second step in the simulation of cloth on a GPU is the system solver step. A dominant approach for the system solver step is to employ the Conjugate Gradient (CG) method for iteratively solving linear systems (i.e., A{right arrow over (x)}={right arrow over (b)}), described in the aforementioned Baraff reference. Best suited to large sparse, symmetric and positive definite systems, the CG method involves procedurally approximating x until \u2225{right arrow over (b)}\u2212A{right arrow over (x)}\u2225 falls below a user-defined threshold. Although the example method described herein uses the CG method for the system solver step, other methods may be used without deviating from the spirit and scope of the present invention as would be apparent to a person skilled in the relevant art(s).","iii. Step Three: Collision Response","Referring again to , the third and final step in the simulation of cloth on a GPU is the collision response step. A collision detection scheme checks whether a collision has occurred by determining whether a pair of points from the mesh being simulated (e.g., point-mesh ) intersect with either (i) another pair of points from the mesh or (ii) a pair of points from another object being simulated (e.g., a ball that is depicted in the same scene as point-mesh ). Collision detection schemes are well-known to persons skilled in the relevant art(s), as illustrated by the aforementioned Baraff reference. Any collision detection scheme known to persons skilled in the relevant art(s) may be used without deviating from the spirit and scope of the present invention.","D. Example Code Written in FYSL","Provided below are example sections of code written in FYSL. In particular, provided below are the following: (i) a high-level scene description written in FYSL; (ii) a child actors expansion; and (iii) a fabric joint prototype expansion.",{"@attributes":{"id":"p-0244","num":"0272"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"i.\u2003\u2003High-Level Scene Description FYSL"},{"entry":"<!-- fysl scene description -->"},{"entry":"<Scene>"},{"entry":"\u2003<Name>cloth<\/Name>"},{"entry":"\u2003<Simulation>"},{"entry":"\u2003\u2003<Type>collision<\/Type>"},{"entry":"\u2003\u2003<TimeStep>1\/60<\/TimeStep>"},{"entry":"\u2003<\/Simulation>"},{"entry":"\u2003<Actors>"},{"entry":"\u2003\u2003<Grid>"},{"entry":"\u2003\u2003\u2003<Width>4<\/Width>"},{"entry":"\u2003\u2003\u2003<Height>4<\/Height>"},{"entry":"\u2003\u2003\u2003<Depth>1<\/Depth>"},{"entry":"\u2003\u2003<\/Grid>"},{"entry":"\u2003\u2003<Actor>"},{"entry":"\u2003\u2003\u2003<Name>fabric<\/Name>"},{"entry":"\u2003\u2003\u2003<Type>dynamic<\/Type>"},{"entry":"\u2003\u2003\u2003<Id>0<\/Id>"},{"entry":"\u2003\u2003\u2003<!-- assuming super structure can be modeled as a point mass"},{"entry":"\u2003\u2003\u2003\u2003(i.e. sphere with zero radius) -->"},{"entry":"\u2003\u2003<Shape>"},{"entry":"\u2003\u2003\u2003<Sphere>"},{"entry":"\u2003\u2003\u2003\u2003<Position>.0 .0 .0<\/Position>"},{"entry":"\u2003\u2003\u2003\u2003<Radius>.0<\/Radius>"},{"entry":"\u2003\u2003\u2003<\/Sphere>"},{"entry":"\u2003\u2003<\/Shape>"},{"entry":"\u2003\u2003<Dynamics>"},{"entry":"\u2003\u2003\u2003<Linear>"},{"entry":"\u2003\u2003\u2003\u2003<Mass>1.<\/Mass>"},{"entry":"\u2003\u2003\u2003\u2003<Center>0.015 0.015 .0<\/Center>"},{"entry":"\u2003\u2003\u2003\u2003<Velocity>.0 .0 .0<\/Velocity>"},{"entry":"\u2003\u2003\u2003\u2003<Forces>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<Directional>.0 .0 .0<\/Directional>"},{"entry":"\u2003\u2003\u2003\u2003<\/Forces>"},{"entry":"\u2003\u2003\u2003<\/Linear>"},{"entry":"\u2003\u2003<\/Dynamics>"},{"entry":"\u2003\u2003<!-- 4\u00d74 children -->"},{"entry":"\u2003\u2003<Actors>...<\/Actors>"},{"entry":"\u2003\u2003<!--prototype tags for describing canonical cloth simulation"},{"entry":"\u2003\u2003parameters -->"},{"entry":"\u2003\u2003<Joints>...<\/Joints>"},{"entry":"\u2003<Feedback \/>"},{"entry":"<\/Scene>"},{"entry":"ii.\u2003\u2003Child Actors Expansion"},{"entry":"<!-- 4\u00d74 children -->"},{"entry":"<Actors>"},{"entry":"\u2003<Actor>"},{"entry":"\u2003\u2003<Name>00<\/Name>"},{"entry":"\u2003\u2003<Type>dynamic<\/Type>"},{"entry":"\u2003\u2003<Id>0<\/Id>"},{"entry":"\u2003\u2003<Shape>"},{"entry":"\u2003\u2003\u2003<Sphere>"},{"entry":"\u2003\u2003\u2003\u2003<Position>.0 .0 .0<\/Position>"},{"entry":"\u2003\u2003\u2003\u2003<Radius>.0<\/Radius>"},{"entry":"\u2003\u2003\u2003<\/Sphere>"},{"entry":"\u2003\u2003<\/Shape>"},{"entry":"\u2003\u2003<Dynamics>"},{"entry":"\u2003\u2003\u2003<Linear>"},{"entry":"\u2003\u2003\u2003\u2003<Mass>1.<\/Mass>"},{"entry":"\u2003\u2003\u2003\u2003<Center>.0 .0 .0<\/Center>"},{"entry":"\u2003\u2003\u2003\u2003<Velocity>.0 .0 .0<\/Velocity>"},{"entry":"\u2003\u2003\u2003\u2003<Forces>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<Directional>.0 .0 .0<\/Directional>"},{"entry":"\u2003\u2003\u2003\u2003<\/Forces>"},{"entry":"\u2003\u2003<\/Dynamics>"},{"entry":"\u2003<\/Actor>"},{"entry":"\u2003<Actor>"},{"entry":"\u2003\u2003<Name>nm<\/Name>"},{"entry":"\u2003\u2003<Type>dynamic<\/Type>"},{"entry":"\u2003\u2003<Id>4n+m<\/Id>"},{"entry":"\u2003\u2003<Shape>"},{"entry":"\u2003\u2003\u2003<Sphere>"},{"entry":"\u2003\u2003\u2003\u2003<Position>n*0.01 m*0.01 .0<\/Position>"},{"entry":"\u2003\u2003\u2003\u2003<Radius>.0<\/Radius>"},{"entry":"\u2003\u2003\u2003<\/Sphere>"},{"entry":"\u2003\u2003<\/Shape>"},{"entry":"\u2003\u2003<Dynamics>"},{"entry":"\u2003\u2003\u2003<Linear>"},{"entry":"\u2003\u2003\u2003\u2003<Mass>1.<\/Mass>"},{"entry":"\u2003\u2003\u2003\u2003<Center>.0 .0 .0<\/Center>"},{"entry":"\u2003\u2003\u2003\u2003<Velocity>.0 .0 .0<\/Velocity>"},{"entry":"\u2003\u2003\u2003\u2003<Forces>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<Directional>.0 .0 .0<\/Directional>"},{"entry":"\u2003\u2003\u2003\u2003<\/Forces>"},{"entry":"\u2003\u2003\u2003<\/Linear>"},{"entry":"\u2003\u2003<\/Dynamics>"},{"entry":"\u2003<\/Actor>"},{"entry":"\u2003<Actor>"},{"entry":"\u2003\u2003<Name>33<\/Name>"},{"entry":"\u2003\u2003<Type>dynamic<\/Type>"},{"entry":"\u2003\u2003<Id>15<\/Id>"},{"entry":"\u2003\u2003<Shape>"},{"entry":"\u2003\u2003\u2003<Sphere<>"},{"entry":"\u2003\u2003\u2003\u2003<Position>0.03 0.03 .0<\/Position>"},{"entry":"\u2003\u2003\u2003\u2003<Radius>.0<\/Radius>"},{"entry":"\u2003\u2003\u2003<\/Sphere>"},{"entry":"\u2003\u2003<\/Shape>"},{"entry":"\u2003\u2003<Dynamics>"},{"entry":"\u2003\u2003\u2003<Linear>"},{"entry":"\u2003\u2003\u2003\u2003<Mass>1.<\/Mass>"},{"entry":"\u2003\u2003\u2003\u2003<Center>.0 .0 .0<\/Center>"},{"entry":"\u2003\u2003\u2003\u2003<Velocity>.0 .0 .0<\/Velocity>"},{"entry":"\u2003\u2003\u2003\u2003<Forces>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<Directional>.0 .0 .0<\/Directional>"},{"entry":"\u2003\u2003\u2003\u2003<\/Forces>"},{"entry":"\u2003\u2003\u2003<\/Linear>"},{"entry":"\u2003\u2003<\/Dynamics>"},{"entry":"\u2003<\/Actor>"},{"entry":"<\/Actors>"},{"entry":"iii.\u2003\u2003Fabric Joint Prototype Expansion"},{"entry":"<!-- prototype tags for describing canonical cloth simulation"},{"entry":"parameters -->"},{"entry":"<Joints>"},{"entry":"\u2003<Spring>"},{"entry":"\u2003\u2003<Action>Stretch<\/Action>"},{"entry":"\u2003\u2003<RestLength >0.01<\/ RestLength>"},{"entry":"\u2003\u2003<Stiffness>le5<\/Stiffness>"},{"entry":"\u2003\u2003<Dampening>le-3<\/Dampening>"},{"entry":"\u2003<\/Spring>"},{"entry":"\u2003<Spring>"},{"entry":"\u2003\u2003<Action>Shear<\/Action>"},{"entry":"\u2003\u2003<RestLength >0.01414<\/RestLength>"},{"entry":"\u2003\u2003<Stiffness>le3<\/Stiffness>"},{"entry":"\u2003\u2003<Dampening>le-2<\/Dampening>"},{"entry":"\u2003<\/Spring>"},{"entry":"\u2003<Spring>"},{"entry":"\u2003\u2003<Action>Bend<\/Action>"},{"entry":"\u2003\u2003<RestLength>0.02<\/ RestLength>"},{"entry":"\u2003\u2003<Stiffness>le2<\/Stiffness>"},{"entry":"\u2003\u2003<Dampening>le-2<\/Dampening>"},{"entry":"\u2003<\/Spring>"},{"entry":"<\/Joints>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Embodiments of the present invention may be implemented using hardware, software or a combination thereof and may be implemented in one or more computer systems or other processing systems. However, the manipulations performed by the present invention were often referred to in terms, such as adding or comparing, which are commonly associated with mental operations performed by a human operator. No such capability of a human operator is necessary, or desirable in most cases, in any of the operations described herein which form part of the present invention. Rather, the operations are machine operations. Useful machines for performing the operation of the present invention include digital computers, such as personal computers, video game consoles, mobile telephones, personal digital assistants, or similar devices.","In fact, in one embodiment, the invention is directed toward one or more computer systems capable of carrying out the functionality described herein. An example of a computer system  is shown in .","The computer system  includes one or more processors, such as processor . Processor  may be a general purpose processor (such as, a CPU) or a special purpose processor (such as, a GPU). Processor  is connected to a communication infrastructure  (e.g., a communications bus, cross-over bar, or network). Various software embodiments are described in terms of this exemplary computer system. After reading this description, it will become apparent to a person skilled in the relevant art(s) how to implement the invention using other computer systems and\/or architectures.","Computer system  includes a display interface  that forwards graphics, text, and other data from communication infrastructure  (or from a frame buffer not shown) for display on display unit .","Computer system  also includes a main memory , preferably random access memory (RAM), and may also include a secondary memory . The secondary memory  may include, for example, a hard disk drive  and\/or a removable storage drive , representing a floppy disk drive, a magnetic tape drive, an optical disk drive, etc. The removable storage drive  reads from and\/or writes to a removable storage unit  in a well known manner. Removable storage unit  represents a floppy disk, magnetic tape, optical disk, etc. which is read by and written to by removable storage drive . As will be appreciated, the removable storage unit  includes a computer usable storage medium having stored therein computer software and\/or data.","In alternative embodiments, secondary memory  may include other similar devices for allowing computer programs or other instructions to be loaded into computer system . Such devices may include, for example, a removable storage unit  and an interface . Examples of such may include a program cartridge and cartridge interface (such as that found in video game devices), a removable memory chip (such as an erasable programmable read only memory (EPROM), or programmable read only memory (PROM)) and associated socket, and other removable storage units  and interfaces , which allow software and data to be transferred from the removable storage unit  to computer system .","Computer system  may also include a communications interface . Communications interface  allows software and data to be transferred between computer system  and external devices. Examples of communications interface  may include a modem, a network interface (such as an Ethernet card), a communications port, a Personal Computer Memory Card International Association (PCMCIA) slot and card, etc. Software and data transferred via communications interface  are in the form of signals  which may be electronic, electromagnetic, optical or other signals capable of being received by communications interface . These signals  are provided to communications interface  via a communications path (e.g., channel) . This channel  carries signals  and may be implemented using wire or cable, fiber optics, a telephone line, a cellular link, an radio frequency (RF) link and other communications channels.","In this document, the terms \u201ccomputer program medium\u201d and \u201ccomputer usable medium\u201d are used to generally refer to media such as removable storage drive , a hard disk installed in hard disk drive , and signals . These computer program products provide software to computer system . The invention is directed to such computer program products.","Computer programs (also referred to as computer control logic) are stored in main memory  and\/or secondary memory . Computer programs may also be received via communications interface . Such computer programs, when executed, enable the computer system  to perform the features of the present invention, as discussed herein. In particular, the computer programs, when executed, enable the processor  to perform the features of the present invention. Accordingly, such computer programs represent controllers of the computer system .","In an embodiment where the invention is implemented using software, the software may be stored in a computer program product and loaded into computer system  using removable storage drive , hard drive  or communications interface . The control logic (software), when executed by the processor , causes the processor  to perform the functions of the invention as described herein.","In another embodiment, the invention is implemented primarily in hardware using, for example, hardware components such as GPUs. Implementation of the hardware state machine so as to perform the functions described herein will be apparent to persons skilled in the relevant art(s).","In yet another embodiment, the invention is implemented using a combination of both hardware and software.","It is to be appreciated that the Detailed Description section, and not the Summary and Abstract sections, is intended to be used to interpret the claims. The Summary and Abstract sections may set forth one or more but not all exemplary embodiments of the present invention as contemplated by the inventor(s), and thus, are not intended to limit the present invention and the appended claims in any way."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS\/FIGURES","p":["The accompanying drawings, which are incorporated herein and form part of the specification, illustrate the present invention and, together with the description, further serve to explain the principles of the invention and to enable a person skilled in the relevant art(s) to make and use the invention.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 14A"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 14B"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 15A"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 15B","FIG. 15A"]}]},"DETDESC":[{},{}]}
