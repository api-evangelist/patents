---
title: Information exchange engine providing a critical infrastructure layer and methods of use thereof
abstract: A virtual record manager and a data exchange engine are provided for dynamically defining data records in a database and for dynamically allocating instances of defined data records. These components are capable of mediating between the database and application and client interface layers to facilitate exchange of information over a network. Embodiments are configured to allow complex data records having a plurality of related fields, and to allow management and exchange of information at both the data field level and data record level.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07788222&OS=07788222&RS=07788222
owner: Planetid, Inc.
number: 07788222
owner_city: Palo Alto
owner_country: US
publication_date: 20001220
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS","Define New Record Type","Add New Data Record"],"p":["This application claims priority from U.S. Provisional Patent Application No. 60\/172,977 entitled \u201cWeb-Based Personal Data Repository and Access Management System and Methods of Use Thereof,\u201d filed on Dec. 20, 1999.","1. Field of the Invention","The present invention relates generally to information technology, and more particularly to systems and methods for providing dynamic creation, storage and exchange of personal information.","2. Description of Related Art","With the evolution of social interaction, people feel the need to exchange personal and business information with each other. In addition, with the advancement and proliferation of communication technology, people have acquired more and more personal contact information, such as electronic mail addresses, mobile phone numbers, and the like. These issues, coupled with the dynamic nature of society, has created a need for an easier, more accurate way to store personal information, to maintain its accuracy and currentness, and to exchange it with others.","With the advancement and proliferation of computer network technology, people and businesses have increasingly relied on computers, computer networks, handheld electronic devices, and the like to manage their vast amount of personal and business information. Thus, there is a further need for convergence of a robust data management system with network communication technologies to fill the need for a flexible, easily updateable, real-time information exchange mechanism.","An information exchange system which provides a critical infrastructure layer, and methods of user thereof, are described. The information exchange system provides a tool for dynamically defining data records and dynamically allocating instances of those records. The system further provides a tool for facilitating electronic exchange of personal information represented by the data, such as contact, payment, shipping, and other information, between individuals and the people and businesses with which they interact. The system allows editing and sharing of information at a data field level, in addition to supporting information transactions at a complex level, defined as a combination of related fields. The architecture of one embodiment is such that the system can be coupled with a conventional relational database application.","The information exchange system comprises an interface layer providing a tool for users to interact with the system through a plurality of client-side platforms. The system also comprises an application layer comprising a vault providing a storage mechanism for individual and business users to store information about themselves and\/or their business, and a contact manager providing a utility for saving information about static and dynamic contacts.","The system further comprises a critical exchange engine layer comprising an account manager, a virtual record manager, a data exchange engine, and an encryption engine which provides the capability to save and access raw data that has been encrypted in a relational database. The virtual record manager is configured to manage the storage of data, whereby support for complex data records is supported while maintaining access and control of data on an individual field basis. The data exchange engine supports the exchange of information between system users and the definition and enforcement of rule-based behaviors on the availability of information.","A database is provided in one embodiment for storage of encrypted personal information of system users, for storage of metadata describing the structure and description of the personal information stored in the database, and for storage of permissions data describing sharing and accessibility rules related to the fields of information.","The system generally provides a private, accurate, convenient, and secure method of maintaining and accessing up-to-date information at any time from anywhere. Users are able to expand and customize their information readily and in real-time. The information in the robust data repository can be accessed through a WAN such as the Internet or through various handheld wireless devices. Upon a change of information, all persons that have permission to view that information field are alerted and updated automatically with the new data.","Although uses of the information exchange system described herein are many, several are provided for exemplary purposes. Exemplary uses for an individual user which are provided by the system include: (1) requesting a summary of information that has changed for people, groups, or businesses in their network of contacts, possibly through a personal newsletter or as highlighted boxes on a system home page, thus being automatically informed of changes; (2) maintaining a community address book whereby clubs, organizations, chat groups, etc. can maintain current information on members which can be reflected in distribution lists or instant messaging buddy lists linked to the system; (3) drawing on information already stored in the system to save time filling out on-line registration, commerce, and site log-in forms preferably by supplying a system ID to the site of interest which is linked to personal, commerce, and site specific user name\/password information of the user; and (4) automatically notify friends, relatives, and businesses when a user moves, providing the new personal information immediately.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1","b":["102","110","140","120","102","130","102","160","102","150"]},"The application layer  and its components are described prior to the detailed description of the interface layer , so it is noted that a client user interacts with the system  and its application layer  through the interface layer . The application layer  contains a vault  and a contact manager . The vault is depicted as containing constituent elements for individual  and business  applications for didactic purposes, but configurations are contemplated wherein the needs of both individual and business users are provided by a single vault  application.","The vault  is an application that provides a storage mechanism for registered individual and business users of the system  to store information about themselves and\/or their business. Non-limiting examples of an individual user's information include name, home and office addresses, home, office, mobile phone and various other phone numbers, date of birth, as well as similar information about the user's spouse and children. Additional examples include names and membership numbers related to various organizations of which the user is a member, bank and mortgage information, and similar information. A user's information may be described within the system  in relation to various permission groups to facilitate management by the user, e.g., groups such as \u201cfamily,\u201d \u201cwork,\u201d \u201cfinancial,\u201d \u201csocial,\u201d \u201crecreational,\u201d etc. Non-limiting examples of a business user's information include the business name, address of their headquarters and branch offices, names of the company executives, Dun and Bradstreet number, tax identification number, bank account information, membership in various organizations, etc.","The vault  presents the registered user with a number of fields with predefined semantics. To this end, the vault  utilizes information stored and managed by the account manager engine , to know if the user is a business user or an individual user. For example, the vault  may present \u201cname\u201d and \u201chome address\u201d fields to an individual user, whereas it may present \u201coffice phone number\u201d and \u201cD&B number\u201d fields to a business user. The number of fields of information and the nature of the fields are decided by each registered user of the system, and are not limited to those presented. Consequently, the exchange system  is configured to facilitate the exchange of dynamic, user-defined information and types of information.","The vault  invokes the virtual record manager (VRM)  of exchange engine layer  to actually store and retrieve the information. In managing the information, the vault  queries the VRM  using an internal account ID of the registered user as a parameter of the query. The VRM  provides the name, value, and an internal ID of every field in which the user has stored information. The vault  also provides to the user the information stored in each of these fields. Upon user modification of any of the user's information fields, the vault  provides to the VRM  the fields that have changed and the VRM  subsequently stores the modifications in the database . Upon user creation of a new field of a particular type, the vault  directs the VRM  to allocate memory for the new field. The VRM  operates to allocate sufficient memory to store the new field and the related information depending on the type of the field created, such as text or numeral, simple or complex, and the like.","The contact manager  is an application similar to a conventional address book application, but providing a number of novel features. The contact manager  provides to users a utility for saving information about their contacts, i.e., people with whom the users desire to keep communicative contact. The contact manager  differentiates between two types of contacts, static and dynamic contacts.","Static contacts are defined as those in which information is provided to the system  by a user. For example, an individual user could employ the system to store the name of a friend and an associated home and work phone numbers and home address, whereby this information is not provided to the system directly by friend. If the friend were to change residence (and hence home address and home phone number), the user would need to re-enter these changes into the system .","In contrast, dynamic contacts are those in which information is provided to the system  directly by the contact person and is shared with others through operation of embodiments of the system . For example, if a user desires to have a friend's information in a personal list of contacts managed in the system  and if the friend is a registered user of the system , the user does not need to provide the friend's information to the system. The friend would directly save personal information in the system , utilizing the vault  application as previously described. The friend would then permit the system  to share portions of personal information, e.g., home and office phone numbers, with the user. The user would consequently find the personal list of contacts to include the friend with the relevant information that the user has is permitted to access and view. If the friend were to modify any portion of the information that is being shared with the user, the user will be able to view the new information when viewing the personal contact list. In addition, the system , primarily through operation of a data exchange engine  of exchange engine layer  and permissions data  of database , provides the capability for the friend to manage access to personal information by directing the contact manager  to share this or any other personal information with the user for a defined period of time only. After expiration of this defined period, the user will no longer be able to view the friend's information.","The contact manager  manages the information about each registered user's static contacts by storing these in the database  and retrieving it when necessary. In contrast, to manage dynamic contacts the contact manager  invokes the VRM  and the data exchange engine (DXE) . The contact manager  first invokes the account manager  to verify that the user logging in to the system  is a registered user and to retrieve the internal account ID of the user. The contact manager  would then communicate with the VRM , providing the VRM  with the account ID of the registered user. The VRM  is operative to retrieve from the database  and to present to the user the names and account IDs of the user's dynamic contacts. The contact manager  then invokes the DXE  to determine which fields of each dynamic contact are being shared with this registered user.","Once the contact manager  is familiar with the fields (represented as field IDs) shared by one registered user with another (i.e., shared by the dynamic contact with the logged-in user), it invokes the VRM  to read the contents of the shared fields. The system  is capable of then providing the content of these fields to the appropriate interface layer server -, for transmission to the associated client platform -.","It is noteworthy that the contact manager  provides a rich set of information about a user's contacts, including every piece of information that the contact registered user allows one to see. In addition, the contact manager  provides the capability for the user to query the contact manager  in order to determine who has actually viewed which personal information fields in their information repository. Furthermore, if a personal information field has been constructed as time-limited, the system  will automatically stop sharing this information upon expiration of the associated time limit.","Reference is directed to the exchange engine layer , which comprises the account manager , the virtual record manager (VRM) , the data exchange engine (DXE) , and the encryption engine . The account manager  manages account information about each registered user. This information includes, but is not limited to, whether a user is a business or individual user, their internal account ID and password, the last time they logged into the system , whether their registration is still active, etc. The account manager  also implements security rules that inactivate a registered user's account upon certain occurrences or non-occurrences. For example, registered users are considered inactive and thus their accounts inactivated if they do not login to the system  at least once every six months. Additionally, users may be locked out of the system  for a 24-hour period if they unsuccessfully attempt to login four times during any four-month window.","The account manager  preferably stores the relevant account information in a table of a relational database. Each row of the table is configured to store information about one registered user. The columns of the table are preferably configured to represent the registered user's password, the last time they logged in to the system , whether the user is locked out for a security reason, whether the user has changed the login name and the previous login name, and the like. Those skilled in the art may recognize that the information stored and managed by the account manager may include more than those items listed above and still be within the scope of the present invention.","The virtual record manager (VRM)  is configured to manage the storage of data preferably utilizing a conventional relational database. The VRM  supports complex data type (record) modeling while maintaining access and control of data on an individual field basis. For example, the VRM  architecture supports operations on a single-field record, an entire complex (multi-field) record, or an individual field within a complex record. Furthermore, the VRM  is configured to provide a fully dynamic extensible data store mechanism whereby new instances of data records as well as entirely new and possibly unique data types may be defined \u201con the fly,\u201d or substantially instantaneous, for each user, without the need for any system downtime to perform such operations.","The VRM  operates at the level of a single field of information. For instance, each field of information is assigned a unique ID so that operations can be performed on individual fields. The fields are also defined for a particular user of the system, although sharing of fields between users is possible by employing the DXE . The information fields are also typed, allowing type-specific behavior (input data validation, for example) to be implemented.","To support record-level data modeling, the VRM utilizes the concept of a virtual object (VOB) (not shown). The VOB defines a record structure (logical collection of individual data fields), and also supports the ability to arbitrarily nest record structures. Any number of VOB types can be defined, either globally accessible by all users or per user of the system, and each VOB type is assigned a unique VOB type ID. VOB type information provides the metadata, which is generally a definition or description of the data, for the VRM  to dynamically support arbitrary data types and is stored in the VOB and VOB Field of the following database  table.",{"@attributes":{"id":"p-0032","num":"0031"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Database Table","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["VOB","Metadata for Virtual Objects (VOBs) describing"]},{"entry":[{},"elements such as the VOB type name, VOB Type ID,"]},{"entry":[{},"etc. There is one row for each VOB type defined."]},{"entry":["VOB_Field","Metadata describing the individual fields defined for"]},{"entry":[{},"each VOB. There is one row for each field within a"]},{"entry":[{},"virtual object."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{},"b":["154","160"]},{"@attributes":{"id":"p-0033","num":"0032"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Database Table","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["VOB_Data","Instances of VOB types. There is one record"]},{"entry":[{},"for every VOB that is instantiated. Each VOB is"]},{"entry":[{},"instantiated for a particular user account."]},{"entry":["VOB_Field_Data","Data for each VOB instance. There is a row for"]},{"entry":[{},"each field defined for an instantiated VOB type."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{},"b":"154"},"In addition to VOBs, the VRM  also supports two additional concepts, InfoCards and VRecords. InfoCards provide a convenient way for users to share their information using the DXE . An InfoCard allows a user to define a specific collection of information fields. It is noted that InfoCards differ from VOBs in that they can only be defined from a set of already defined fields, and that the fields selected can actually span across VOBs. To ensure a minimum set of data may be exchanged between any two user accounts, the VRM  may pre-populate every user account with a minimum set of VOBs, and define a set of system-defined InfoCards that use those VOBs. The operability of the InfoCard feature is provided primarily by the database  table depicted.",{"@attributes":{"id":"p-0035","num":"0034"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Database Table","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Field_Group","Contains InfoCards. There is a row for each"]},{"entry":[{},{},"InfoCard defined for a user account."]},{"entry":[{},"Field_Group_Data","Defines the fields that belong to each InfoCard"]},{"entry":[{},{},"defined. There is a row for each field"]},{"entry":[{},{},"that is defined within an InfoCard."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"VRecords provide a generic mechanism for the electronic exchange of information with third-party systems, a valuable feature for business-to-business (B2B) electronic commerce. In many cases, a third party has a data record format that they wish to have returned from the system  when requesting information about a particular registered user of the system . The VRecord defines a mapping between the third party record format, and the native system  record structure as primarily defined by the metadata  of database . Employment of a VRecords further allows a user to define a mapping based on the user class (e.g. a different mapping can be defined for business and individual users). This VRecords feature operates by correlating a field ID for each class of user with an output field name selected by the VRecord author. The operability of the VRecords feature is provided primarily by the database  table depicted.",{"@attributes":{"id":"p-0037","num":"0036"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Database Table","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["VRecord","Contains VRecords."]},{"entry":["VRecord_Dynamic_Data","Defines field mapping for obtaining"]},{"entry":[{},"information from system 102"]},{"entry":[{},"member accounts."]},{"entry":["VRecord_Static_Data","Defines field mapping for obtaining"]},{"entry":[{},"information for static contacts defined in"]},{"entry":[{},"the system 102 contact manager 148"]},{"entry":[{},"for the requesting party. Primarily"]},{"entry":[{},"useful for synchronization applications."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Some of the operational capability of the VRM  is exemplified below by describing the effect that occurs in certain tables of database  when a transaction is implemented.","This example demonstrates the database  changes that occur when a new VOB type is defined in the system . Assume that a user desires to define a new record named \u201cFriend\u201d that has the following fields:","First Name","Last Name","PhoneNumber","Assuming this is done for user account , and that the last VOB_Type_ID used was , this operation creates the following row in the VOB table:",{"@attributes":{"id":"p-0043","num":"0042"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 5"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Account_ID","VOB_Type_ID","VOB_Name","VOB_Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["250","205","Friend","Record for adding a friend."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0044","num":"0043"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"center"}}],"thead":{"row":{"entry":"TABLE 6"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":[{},{},{},{},"Field_type"]},{"entry":["Account_ID","VOB_Type_ID","Field_Order","Field_Label","ID"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"char","char":"."}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["250","205","5","First Name","1"]},{"entry":["250","205","10","Last Name","1"]},{"entry":["250","205","15","PhoneNumber","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"This example demonstrates the database  changes that occur when a user adds a new data record to the system . Assume that a user wishes to add a new data record to their account of type \u201cFriend\u201d as was defined in the previous example, with the following values:","First Name: Tom","Last Name: Smith","Phone Number: 555-1212","Assuming that the user's account ID is 250, the last VOB_ID used for the account was 500, the last Field_ID used for the account was 1250 and the user wishes to name this record \u201cTom Smith\u201d, this operation creates the following row in the VOB_Data table:",{"@attributes":{"id":"p-0049","num":"0048"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 7"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Account_ID","VOB_ID","VOB_Type_ID","VOB_Labe1"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["250","505","205","Tom Smith"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0050","num":"0049"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"49pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 8"},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":["Account_ID","Field_ID","VOB_ID","Field_Order","Field_Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"char","char":"."}},{"@attributes":{"colname":"5","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["250","1255","505","5","Tom"]},{"entry":["250","1260","505","10","Smith"]},{"entry":["250","1265","505","15","555-1212"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},"In at least one embodiment, the primary database  tables with which the VRM  interacts to provide the capabilities described above are presented. Presentation of these exemplary tables is not intended to limit practice of the invention to use of only these tables or the specific data table structure presented, for those skilled in the art will recognize that a different data and table architecture may be implemented and still fall within the scope of the invention.","The VOB table structure for an exemplary embodiment is as follows:",{"@attributes":{"id":"p-0053","num":"0052"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 9"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["VOB Table Column","Type","Primary Key","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Account_ID","Number","Yes","Unique ID that"]},{"entry":[{},{},{},"identifies the user"]},{"entry":[{},{},{},"account for which the"]},{"entry":[{},{},{},"VOB type is defined."]},{"entry":["VOB_Type_ID","Number","Yes","Unique ID in the scope"]},{"entry":[{},{},{},"of Account_ID for this"]},{"entry":[{},{},{},"VOB Type."]},{"entry":["VOB_Name","Text","No","Name of the VOB type."]},{"entry":["VOB_Description","Text","No","A description of the"]},{"entry":[{},{},{},"VOB type."]},{"entry":["XML_Tag_Name","Text","No","A name to use for this"]},{"entry":[{},{},{},"type when translating to"]},{"entry":[{},{},{},"an XML representation."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"The VOB_Field table structure for an exemplary embodiment is as follows:",{"@attributes":{"id":"p-0055","num":"0054"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 10"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["VOB_Field Column","Type","Primary Key","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Account_ID","Number","Yes","Unique ID that"]},{"entry":[{},{},{},"identifies the user"]},{"entry":[{},{},{},"account for which the"]},{"entry":[{},{},{},"VOB type is defined."]},{"entry":["VOB_Type_ID","Number","Yes","ID of the VOB Type of"]},{"entry":[{},{},{},"which this field is a"]},{"entry":[{},{},{},"member."]},{"entry":["Field_Order","Number","Yes","Specifies the relative"]},{"entry":[{},{},{},"order of this field"]},{"entry":[{},{},{},"within the VOB Type."]},{"entry":["Field_Label","Text","No","Name of this field."]},{"entry":["Field_Type_ID","Number","No","ID representing the"]},{"entry":[{},{},{},"Type of field (text, date,"]},{"entry":[{},{},{},"CC Type, Country,"]},{"entry":[{},{},{},"etc.)."]},{"entry":["Field_Default_Value","Text","No","Default value for the"]},{"entry":[{},{},{},"field."]},{"entry":["XML_Tag_Name","Text","No","A name to use for this"]},{"entry":[{},{},{},"field when translating"]},{"entry":[{},{},{},"to an XML"]},{"entry":[{},{},{},"representation"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"The VOB Data table structure for an exemplary embodiment is as follows:",{"@attributes":{"id":"p-0057","num":"0056"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"77pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 11"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["VOB_Data Table",{},{},{}]},{"entry":["Column","Type","Primary key","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Account_ID","Number","Yes","Unique ID that"]},{"entry":[{},{},{},"identifies the user"]},{"entry":[{},{},{},"account for which the"]},{"entry":[{},{},{},"VOB instance is defined."]},{"entry":["VOB_ID","Number","Yes","Unique ID in the scope"]},{"entry":[{},{},{},"of Account_ID for this"]},{"entry":[{},{},{},"VOB instance."]},{"entry":["VOB_Type_ID","Number","No","ID of the VOB Type of"]},{"entry":[{},{},{},"this VOB instance."]},{"entry":["VOB_Label","Text","No","Label to use for this"]},{"entry":[{},{},{},"VOB instance (for User"]},{"entry":[{},{},{},"Interface display"]},{"entry":[{},{},{},"purposes)."]},{"entry":["Category_ID","Number","No","Category under which"]},{"entry":[{},{},{},"this VOB is organized."]},{"entry":["VOB_Order","Number","No","Order of this VOB"]},{"entry":[{},{},{},"within the specified"]},{"entry":[{},{},{},"category."]},{"entry":["Show_VOB","Number","No","Allows the fields within"]},{"entry":[{},{},{},"this VOB to be"]},{"entry":[{},{},{},"displayed or not."]},{"entry":[{},{},{},"0 = VOB fields are"]},{"entry":[{},{},{},"hidden, 1 = VOB fields"]},{"entry":[{},{},{},"are shown."]},{"entry":["Public_VOB_ID","Text","No","VOB ID that is used by"]},{"entry":[{},{},{},"the B2B interface 119."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"The VOB_Field_Data table structure for an exemplary embodiment is as follows:",{"@attributes":{"id":"p-0059","num":"0058"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"77pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 12"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["VOB_Field_Data",{},{},{}]},{"entry":["Column","Type","Primary key","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Account_ID","Number","Yes","Unique ID that identifies"]},{"entry":[{},{},{},"the user account for"]},{"entry":[{},{},{},"which the VOB instance"]},{"entry":[{},{},{},"is defined."]},{"entry":["Field_ID","Number","Yes","Unique ID of this field"]},{"entry":[{},{},{},"record in the scope of"]},{"entry":[{},{},{},"Account_ID."]},{"entry":["VOB_ID","Number","No","ID of the VOB that is the"]},{"entry":[{},{},{},"owner of this field. See"]},{"entry":[{},{},{},"VOB_Data::VOB_ID."]},{"entry":["Field_Order","Number","No","Order of this field within"]},{"entry":[{},{},{},"the parent VOB. See"]},{"entry":[{},{},{},"VOB_Field::Field_Order."]},{"entry":["Field_Value","Text","No","Value of the field."]},{"entry":["Field_Mod","Date\/Time","No","Last time the field value"]},{"entry":[{},{},{},"was modified."]},{"entry":["Encryption","Number","No","Indicates the type of"]},{"entry":[{},{},{},"encryption applied to the"]},{"entry":[{},{},{},"field."]},{"entry":["Public_Field_ID","Text","No","Field ID that may be"]},{"entry":[{},{},{},"used via the B2B"]},{"entry":[{},{},{},"interface 119 to reference"]},{"entry":[{},{},{},"this field."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"The Field_Group table structure for an exemplary embodiment utilizing the InfoCard feature is as follows:",{"@attributes":{"id":"p-0061","num":"0060"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 13"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Field_Group",{},{},{}]},{"entry":["Column","Type","Primary key","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Account_ID","Number","Yes","Unique ID that identifies"]},{"entry":[{},{},{},"the user account for which"]},{"entry":[{},{},{},"the InfoCard is defined."]},{"entry":["Group_ID","Number","Yes","Unique ID of this InfoCard"]},{"entry":[{},{},{},"in the scope of Account_ID."]},{"entry":["Group_Name","Text","No","Name of this InfoCard."]},{"entry":["Required","Number","No","1 = this InfoCard is defined"]},{"entry":[{},{},{},"by the system and cannot"]},{"entry":[{},{},{},"be removed."]},{"entry":["Read_Only","Number","No","1 = you cannot edit the"]},{"entry":[{},{},{},"InfoCard."]},{"entry":[{},{},{},"0 = you can edit the"]},{"entry":[{},{},{},"InfoCard."]},{"entry":["Hidden","Number","No","1 = this group cannot be"]},{"entry":[{},{},{},"edited or seen."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"The Field\u2014Group_Data table structure for an exemplary embodiment utilizing the InfoCard feature is as follows:",{"@attributes":{"id":"p-0063","num":"0062"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 14"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Field_Group_Data",{},{},{}]},{"entry":["Column","Type","Primary key","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Account_ID","Number","Yes","Unique ID that"]},{"entry":[{},{},{},"identifies the user"]},{"entry":[{},{},{},"account for which the"]},{"entry":[{},{},{},"InfoCard is defined."]},{"entry":["Group_ID","Number","Yes","ID of the InfoCard to"]},{"entry":[{},{},{},"which this field"]},{"entry":[{},{},{},"belongs."]},{"entry":["Field_ID","Number","Yes","Field_ID of the field to"]},{"entry":[{},{},{},"include in the InfoCard."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"The VRecord table structure for an exemplary embodiment is as follows:",{"@attributes":{"id":"p-0065","num":"0064"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 15"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":[{},{},"Primary",{}]},{"entry":["VRecord Column","Type","key","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Account_ID","Number","Yes","Unique ID that identifies the"]},{"entry":[{},{},{},"user account for which the"]},{"entry":[{},{},{},"VRecord is defined."]},{"entry":["VRecord_ID","Number","Yes","Unique ID in the scope of"]},{"entry":[{},{},{},"Account_ID for this VRecord."]},{"entry":["VRecord_Name","Text","No","Name of the Vrecord."]},{"entry":["Label","Text","No","Printable name for the VRecord."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"The VRecord_Dynamic_Data table structure for an exemplary embodiment is as follows:",{"@attributes":{"id":"p-0067","num":"0066"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"77pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 16"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["VRecord_Dynamic_Data",{},"Primary",{}]},{"entry":["Column","Type","key","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Account_ID","Number","Yes","Unique ID that identifies "]},{"entry":[{},{},{},"the user account"]},{"entry":[{},{},{},"for which the"]},{"entry":[{},{},{},"VRecord is defined."]},{"entry":["VRecord_ID","Number","Yes","ID of the VRecord to"]},{"entry":[{},{},{},"which this field"]},{"entry":[{},{},{},"belongs. See"]},{"entry":[{},{},{},"VRecord::VRecord_ID."]},{"entry":["Account_Type_ID","Number","Yes","Indicates the user"]},{"entry":[{},{},{},"class that this mapping"]},{"entry":[{},{},{},"record applies"]},{"entry":[{},{},{},"to (e.g. business"]},{"entry":[{},{},{},"or individual account)."]},{"entry":["Field_Order","Number","Yes","Order within the"]},{"entry":[{},{},{},"VRecord that this field"]},{"entry":[{},{},{},"should be mapped."]},{"entry":["Field_ID","Number","No","Field_ID of the field to"]},{"entry":[{},{},{},"include in the Vrecord."]},{"entry":["Label","Text","No","Printable name of the"]},{"entry":[{},{},{},"field within the Vrecord."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"The VRecord_Static_Data table structure for an exemplary embodiment is as follows:",{"@attributes":{"id":"p-0069","num":"0068"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 17"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["VRecord_Static_Data",{},"Primary",{}]},{"entry":["Column","Type","key","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Account_ID","Number","Yes","Unique ID that identifies the"]},{"entry":[{},{},{},"user account for which the"]},{"entry":[{},{},{},"VRecord is defined."]},{"entry":["VRecord_ID","Number","Yes","ID of the VRecord that this"]},{"entry":[{},{},{},"field belongs to. See"]},{"entry":[{},{},{},"VRecord::VRecord_ID."]},{"entry":["Column_Name","Text","Yes","Name of the column in"]},{"entry":[{},{},{},"Contact table to use for the"]},{"entry":[{},{},{},"field."]},{"entry":["Column_Order","Number","No","Order of the column within"]},{"entry":[{},{},{},"the Vrecord."]},{"entry":["Label","Text","No","Printable name for the field."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"The data exchange engine (DXE)  supports the exchange of information between users of the system . The DXE  provides interfaces to enable users to request information from each other, approve or deny requests for information, and provide authorized information. The DXE  also supports the definition and enforcement of rule-based behaviors on the availability of information, sharing of information in a global space (public directory), sharing of simple text messages, and event triggers based on requests and changes to authorized information.","In requesting information from another system  user, registered users may request either globally defined InfoCards (see the description of InfoCards above) of information, or globally defined fields of information from the other user. The DXE  provides event notification hooks for requests for information and messages. Users may approve or deny the request by InfoCard or field, and apply rules regarding access to any provided information, e.g., specifying an expiration date for access to the information. Furthermore, users may also provide any field or InfoCard to another user at any time.","The DXE  further provides interfaces for registered users to view information made available to them from other registered users. It is noted that when a user changes a field that has been shared, the changed information is available to other users immediately. This functionality is operative due to the DXE  architecture, which provides event notification hooks for changes to information that is available to other users.","The DXE  is operative to track relationships between users in a Data_Sharing table. Each record represents what is shared from user A to user B. A record exists only if user A is sharing one or fields with user B. In addition, if user B shares information with user A, an additional record appears in the Data_Sharing table. It is in this table that any rules regarding the sharing of information between the two users is defined.","As previously described, users can share information either by specifying individual fields of information, or by using the InfoCards feature. This sharing information is tracked by the DXE  in the Data_Sharing_Field_ID and Data_Sharing_Group_ID tables (shown below), respectively. The DXE  architecture explicitly normalizes this data in the database  to enable the capability to perform reverse lookups of shared information, e.g., finding all users that you are sharing your home phone number with. It is noted that there is one InfoCard that the DXE  treats specially, the Directory InfoCard. The Directory InfoCard is given the same ID for all users (which uniquely identifies it as the Directory InfoCard) and has the behavior attribute that all fields defined within this Infocard are implicitly shared with all other users. For example, when an application in the application layer  requests the information being shared by user A with user B, the system  returns all of the fields explicitly shared by A with B, and all the fields that A has placed in his\/her Directory InfoCard.","In at least one embodiment, the primary database  tables with which the DXE  interacts to provide the capabilities described above are presented. Presentation of these exemplary tables is not intended to limit practice of the invention to utilization of only these tables or the specific data table structure presented, for those skilled in the art will recognize that a different data and table architecture may be implemented and still fall within the scope of the invention.","The Data_Sharing table structure for an exemplary embodiment is as follows:",{"@attributes":{"id":"p-0077","num":"0076"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"77pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 18"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":[{},{},"Primary",{}]},{"entry":["Column","Type","Key","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Account_ID","Number","Yes","Unique identifier for the"]},{"entry":[{},{},{},"user account that is"]},{"entry":[{},{},{},"sharing information."]},{"entry":["Recipient_Account_ID","Number","Yes","Unique identifier for the"]},{"entry":[{},{},{},"user that is receiving the"]},{"entry":[{},{},{},"information."]},{"entry":["Sharing_Record_ID","Number","Yes","Unique identifier for"]},{"entry":[{},{},{},"this record."]},{"entry":["Expiration_Date","Date\/Time","No ","Access to information"]},{"entry":[{},{},{},"expires on this date."]},{"entry":["Date_Granted","Date\/Time","No","Access to information"]},{"entry":[{},{},{},"was originally granted"]},{"entry":[{},{},{},"on this date."]},{"entry":["Date_Modified","Date\/Time","No","Access to information"]},{"entry":[{},{},{},"was last modified on"]},{"entry":[{},{},{},"this date."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"The Data_Sharing-Field_ID table structure for an exemplary embodiment is as follows:",{"@attributes":{"id":"p-0079","num":"0078"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 19"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":[{},{},"Primary",{}]},{"entry":["Column","Type","Key","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Account_ID","Number","Yes","Unique identifier for the"]},{"entry":[{},{},{},"user account that is"]},{"entry":[{},{},{},"sharing information."]},{"entry":["Recipient_Account_ID","Number","Yes","Unique identifier for the"]},{"entry":[{},{},{},"user that is receiving the"]},{"entry":[{},{},{},"information."]},{"entry":["Field_ID","Number","Yes","ID of the field that is being"]},{"entry":[{},{},{},"shared. See"]},{"entry":[{},{},{},"VOB_Field_Data::Field_ID."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"The Data_Sharing_Group_ID table structure for an exemplary embodiment is as follows:",{"@attributes":{"id":"p-0081","num":"0080"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"77pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 20"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":[{},{},"Primary",{}]},{"entry":["Column","Type","Key","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Account_ID","Number","Yes","Unique identifier for the"]},{"entry":[{},{},{},"user account that is"]},{"entry":[{},{},{},"sharing information."]},{"entry":["Recipient_Account_ID","Number","Yes","Unique identifier for the"]},{"entry":[{},{},{},"user that is receiving the"]},{"entry":[{},{},{},"information."]},{"entry":["Group_ID","Number","Yes","ID of the InfoCard that is"]},{"entry":[{},{},{},"being shared. See"]},{"entry":[{},{},{},"Field_Group::Group_ID."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"The encryption engine  provides to the VRM  and the DXE  the capability to save and access raw data that has been encrypted in the relational database . This feature is critical to ensuring the security of data that is saved by the system , for unencrypted data in a database is very vulnerable to attack, even within what is considered a secure network.","All data read and write requests to the database  are implemented through the encryption engine , making the task of encrypting and decrypting transparent to all other layers of the system  architecture. The encryption engine  supports a plurality of conventional encryption schemes on a per field basis. For example, one field in a record may be encrypted using 128-bit symmetric encryption, while another field in the same record may be saved with no encryption at all. The encryption engine  architecture also allows encryption keys to be stored physically separate from the database  server hosting the encrypted data. Employment of this feature makes it even more difficult to covertly obtain raw information from the database .","The database  comprises data  (user personal information) encrypted by the encryption engine , metadata  as described above primarily in reference to the VRM , and permissions information  as described above primarily in reference to the DXE . As described above, the VRM  and the DXE  interact with the database  any time a user's personal information is created, edited, or accessed.","Attention is directed to the interface layer , preferably comprising the WAP (wireless application protocol) interface server , the web clipping interface server , the sync interface server , the web interface server , and the B2B interface server . The interface layer  is configured to manage the user interaction with the system . The different interface servers - communicate with various client side devices or software across a network , preferably a WAN such as the Internet, and manage the user interaction with the system  utilizing the communication protocol that is appropriate for the client side device or client side software. The interface servers - invoke various internal components of the system , namely the account manager , the vault  and the DXE , to retrieve, edit, and store information.","The WAP interface server  is focused on interfacing with WAP devices  utilizing the wireless application protocol, such as Internet-enabled mobile phones or similar wireless communication devices. The web clipping interface server  is focused on interfacing with wireless handheld electronic devices , such as personal digital assistants (PDAs), communicating over a wireless medium utilizing the web clipping protocol. The web interface server  is focused on interfacing with users accessing the system  via a conventional web browser . The web interface server  preferably utilizes the secure hypertext transfer protocol (https).","The contact manager  manages the list of contacts of a user as described above. The sync interface server  provides the interface for synchronizing the contact information stored in the system  with other conventional client address books resident on various user handheld or desktop devices. The sync interface server  is configured to communicate with client synchronization software  residing on the various user handheld or desktop devices, via the network .","Finally, the B2B interface server  provides an application programming interface (API) for registered users to login to the system  and to query for their information or for information about their contacts. Additional exemplary operations include changing (add\/delete\/edit) their personal information, sharing their personal information with others, requesting others to share their information, and all the other functionality offered by the vault  and the contact manager  applications. The B2B interface server  communicates with client users utilizing https. Upon a client transmission of a request to do a certain action (e.g., manipulate information data  or permissions data ), the request is made to the system  using the POST command of http and, possibly, described using XML (extended Markup Language). The B2B interface server  processes the request and invokes the account manager , the vault , and the contact manager  to perform appropriate subtasks within the request. These three subsystems return information or completion status to the B2B interface server , which then appropriately replies to the client request using the language of XML. Through this XML request-reply mechanism, the user can exercise all the functionality of the system  described above.","The B2B interface client  depicts any software that can communicate over the https protocol and send requests and receive replies from the B2B interface server . The B2B interface client  application is intended to be written by users of the system , with the goal of integrating the information exchange service provided by the system  with other user databases containing personal or business information. For example, if a user of the system  maintains a list of customers and their contact information in an enterprise database, this user can write a B2B interface client  application to interface with the B2B interface server , and thus the system . Through communication between the proprietary B2B interface client  and the B2B interface server , the user can access contact information about his customers from the system  and store this contact information in the local enterprise database. This feature enables the user's customer information stored on the enterprise database to maintain synchronization with the information in the system .","In addition to the API provided for businesses to link to the system , a business model is contemplated that would utilize the system  to provide a myriad of information services to businesses for a fee. The services provided by the system  assist the business in minimizing their database maintenance costs, reducing customer service\/call center costs, and improving sales and marketing activities. Some exemplary services may include, but are not limited to, the following: (1) providing accurate, timely customer record updates, thus increasing the efficiency of marketing programs; (2) reducing customer service costs through minimization of call length by facilitating the identification of callers through their system  ID, thus providing instant access to the information necessary to resolve the customer complaint\/inquiry; (3) maintaining company employee and vendor information through the system , either in a distributed manner as described above in reference to the contact manager  or through an independent system  licensed to the company; (4) listing company information in a business directory maintained by the system , which could be used in lieu of or to augment conventional directories such as the white and yellow pages; (5) simplifying customer electronic purchases by enabling customers to register with their site and perform transactions utilizing their system  ID and associated information, thus increasing the volume of completed transactions; (6) displaying privacy policies to customers and matching those policies with privacy preferences of the customer maintained by the system ; (7) maintaining a digital certificate registry to search and track digital certificates of users so that the certificate authority can be automatically notified when a user changes relevant information; and (8) providing a data escrow service thereby escrowing credit card and other transaction information for on-line auction participants.","It will be recognized by those skilled in the art that while the invention has been described above in terms of preferred embodiments, it is not limited thereto. Various features and aspects of the above-described invention may be used individually or jointly. Further, although the invention has been described in the context of its implementation in a particular environment and for particular applications, those skilled in the art will recognize that its usefulness is not limited thereto and that it can be utilized in any number of environments and applications and that its scope is limited only by the claims appended hereto."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["In the accompanying drawing:",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"}]},"DETDESC":[{},{}]}
