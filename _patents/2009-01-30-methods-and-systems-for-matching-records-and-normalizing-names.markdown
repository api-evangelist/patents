---
title: Methods and systems for matching records and normalizing names
abstract: Methods and systems are provided for normalizing strings and for matching records. In one implementation, a string is tokenized into components. Sequences of tags are generated by assigning tags to the components. A sequence of states is determined based on the sequences of tags. A normalized string is generated by normalizing the sequence of the states. A key record including key fields is extracted from a first data source. A candidate record including candidate fields is extracted from a second data source. A numerical record including numerical fields is computed by comparing the key fields and the candidate fields using comparison functions. Matching functions determined by an additive logistic regression method are applied to the numerical fields. Whether the key record and the candidate record are a match is determined based on a sum of results of the matching functions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08190538&OS=08190538&RS=08190538
owner: LexisNexis Group
number: 08190538
owner_city: Miamisburg
owner_country: US
publication_date: 20090130
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["1. Technical Field","The present disclosure generally relates to record linkage techniques for identifying same entities in multiple information sources. More particularly, and without limitation, the present disclosure relates to methods and systems for normalizing names and matching records.","2. Background Information","Vast amounts of information are stored in heterogeneous distributed sources. For example, LexisNexis stores large and diverse content including non-structured data such as text-based news articles and legal cases, and structured data such as public records and attorney and judge attorney directories. Therefore, records (e.g., of organizations, persons, and addresses) that pertain to the same entity may be stored in various forms. These variations of the same entities pose a problem when comparing names or linking records, because an entity that has its name stored in two different forms may be determined as being two different entities when its varying names are compared or when its varying records are linked.","For example, law firm names vary greatly in format. For example, some law firm names include last names of partner attorneys, such as \u201cFinnegan, Henderson, Farabow, Garrett & Dunner, L.L.P.\u201d Other law firm names do not include any last names but may include an area of specialty such as \u201cThe Injury Lawyers, P.C.\u201d In addition, various different forms of the same law firm name may be used in different contexts. Often, long law firm names are shortened for convenience. For example, \u201cLaw Office of Smith, Johnson & Miller\u201d may be shortened to \u201cLaw Office of Smith et al.\u201d, and \u201cFinnegan, Henderson, Farabow, Garrett & Dunner, L.L.P.\u201d may be referred to as just \u201cFinnegan.\u201d Also, a law firm name that includes a middle initial of an attorney such as \u201cJohn D. Smith, Attorney at Law\u201d may be referenced without the middle initial \u201cD.\u201d","Due to the vast amounts of information distributed across multiple sources, there is a need and desire to resolve entity relationships and integrate distributed information together so that related information can be easily packaged and presented together. For example, in the context of legal information, an attorney's professional identification presented in a case law document may be linked with the attorney's entry in a structured authority directory that includes the attorney's biographical and employer information.","To resolve entity relationships and integrate distributed information, there is a need to develop a record matching method. Using a probabilistic classifier, such as a naive Bayes classifier, to match records may result in undesirable levels of precision error and recall error. Accordingly, there is a need for methods and systems that match records with high precision and recall.","Furthermore, in support of record matching, normalization may be necessary before the matching process begins for improved comparison results. Past normalization techniques have included pure rule-based approaches and pure probability-based approaches, which may be less effective than combined approaches.","In view of the foregoing, there is a need for improved methods and systems for matching records, and methods and systems for normalizing names.","Disclosed embodiments relate to methods and systems for normalizing names and matching records. Pursuant to certain embodiments, methods and systems are provided for normalizing names in preparation for comparing names, and for matching records from one source to records from another source. For example, disclosed methods and systems provide normalized law firm names for comparing law firm names and match attorney records from a legal document to attorney records from an attorney directory.","In accordance with one embodiment, a computer-implemented method is provided that normalizes strings. The method comprises tokenizing a string into a sequence of components. The method further comprises generating one or more sequences of tags by assigning tags to the components based on lookup tables. The method further comprises determining, using a processor, a sequence of states of the components based on the one or more sequences of tags. The method further comprises generating a normalized string by normalizing the sequence of the states.","In accordance with one embodiment, a system is provided for normalizing strings. The system comprises a processor. The system further comprises means for tokenizing a string into a sequence of components. The system further comprises means for generating one or more sequences of tags by assigning tags to the components based on lookup tables. The system further comprises means for determining a sequence of states of the components based on the one or more sequences of tags. The system further comprises means for generating a normalized string by normalizing the sequence of the states.","In accordance with one embodiment, a computer-readable storage medium is provided that includes instructions which, when executed by a processor, perform a method of normalizing strings. The method comprises tokenizing a string into a sequence of components. The method further comprises generating one or more sequences of tags by assigning tags to the components based on lookup tables. The method further comprises determining a sequence of states of the components based on the one or more sequences of tags. The method further comprises generating a normalized string by normalizing the sequence of the states.","In accordance with one embodiment, a computer-implemented method is provided that matches records. The method comprises extracting a key record including key fields from a first data source. The method further comprises retrieving a candidate record including candidate fields from a second data source. The candidate fields correspond to the key fields. The method further comprises computing, using a processor, a numerical record including numerical fields by comparing the key fields and the candidate fields using comparison functions. The numerical fields are result values of the comparison functions. The method further comprises applying matching functions to the numerical fields. The matching functions are determined by additive logistic regression. The method further comprises determining whether the key record and the candidate record are a match based on a sum of results of the matching functions.","In accordance with one embodiment, a system is provided for matching records. The system comprises a processor. The system further comprises means for extracting a key record including key fields from a first data source. The system further comprises means for retrieving a candidate record including candidate fields from a second data source. The candidate fields correspond to the key fields. The system further comprises means for computing a numerical record including numerical fields by comparing the key fields and the candidate fields using comparison functions. The numerical fields are result values of the comparison functions. The system further comprises means for applying matching functions to the numerical fields. The matching functions are determined by additive logistic regression. The system further comprises means for determining whether the key record and the candidate record are a match based on a sum of results of the matching functions.","In accordance with one embodiment, a computer-readable storage medium is provided that includes instructions which, when executed by a processor, perform a method of matching records. The method comprises extracting a key record including key fields from a first data source. The method further comprises retrieving a candidate record including candidate fields from a second data source. The candidate fields correspond to the key fields. The method further comprises computing a numerical record including numerical fields by comparing the key fields and the candidate fields using comparison functions. The numerical fields are result values of the comparison functions. The method further comprises applying matching functions to the numerical fields. The matching functions are determined by additive logistic regression. The method further comprises determining whether the key record and the candidate record are a match based on a sum of results of the matching functions.","It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only, and are not restrictive of the embodiments thereof, as claimed. Furthermore, features and variations may be provided in addition to those set forth herein. For example, embodiments may be directed to various combinations and sub-combinations of the features described in the detailed description.","The following detailed description refers to the accompanying drawings. Wherever possible, the same reference numbers are used in the drawings and the following description to refer to the same or similar parts. While several exemplary embodiments are described herein, modifications, adaptations, and other implementations are possible. For example, substitutions, additions, or modifications may be made to the components illustrated in the drawings, and the exemplary methods described herein may be modified by substituting, reordering, or adding steps to the disclosed methods. Accordingly, the following detailed description is not limiting of the disclosed embodiments. Instead, the proper scope is defined by the appended claims.","Methods and systems for normalizing names and for matching records will be described with respect to law firm names and attorney records, but one of ordinary skill in the art will recognize that these are examples and the disclosed methods and systems can apply to any strings or any records, such as people names, addresses, customer records in a company database, etc.","A record is information or data on a particular subject that can be collected and\/or stored. For example, an attorney record is information regarding an attorney. A record may be stored in a database in an electronic form. A record may represent an entity, such as a person, a corporation, a place, etc. A record may contain one or more fields. A field is an element of a record in which one piece of information is stored. For example, an attorney record may contain a name field and an address field.","Exemplary System Implementation of Record Matching and Name Normalization",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 1","b":["100","100"]},"In the example of , computer system  includes a processor  for executing instructions to perform processes related to normalizing names and matching records, consistent with the disclosed embodiments. Processor  may be connected to a data bus , which connects various components of computer system . Computer system  may include a storage device  for storing data related to name normalization and record matching. RAM  memory may be used by processor  as a placeholder for active data during the execution of instructions. Computer system  may also comprise one or more input devices , for example, a keyboard and a mouse. A network interface  may allow computer system  to be connected to a network such as intranet, extranet, local area network (LAN), wide area network (WAN), or the Internet. Computer system  may comprise a removable storage  such as a floppy drive, CD-ROM, DVD-ROM, and USB flash drive. Computer system  may also comprise a display , such as a monitor, and an output device , such as a printer or a fax machine. Program instructions for executing methods and implementing systems for normalizing names and matching records may be stored in storage device  or removable storage , or may be received via network interface . These program instructions may be executed by processor .","Record Matching Technique","Exemplary methods of record matching will be described with respect to attorney records, but the below described processes can be applied to any records.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 2","b":"200"},"The method  for matching records applies a supervised learning method, for example, additive logistic regression, to match records stored in two different data sources. An exemplary system for executing method  may include four components: record preprocessing, record comparison, record matching, and determining a matching function\/classifier through a learning process from training data that is labeled in advance.","In step , one or more fields of records are preprocessed by computer system . For example, for attorney records, a field storing variant law firm name is normalized into a standard format using a name normalization method, discussed below.","In step , a normalized record from one data source is compared by computer system  with another record from another data source by using a set of comparison functions, discussed below. As a result of the comparison of records, numerical records are generated. Numerical records may be represented in Rspace, where each dimension represents a comparison value from a corresponding feature of the two records.","In step , computer system  fits the numerical records into matching functions that are learned with a boosting method, such as additive logistic regression, with base machine learning method, such as a decision stump, from a training data set.","Hidden Markov Model (HMM) for Name Normalization","Exemplary methods of name normalization will be described with respect to law firm names, but the below described processes can be applied to any names or strings. A string may be a combination of alphanumeric characters and may include punctuations, symbols, and special characters.","Hidden Markov Model (HMM) is used for sequence-based pattern recognition such as information extraction. Unlike a rule-based approach that requires a tedious analysis to generate and maintain rules, HMM can dynamically handle unexpected input pattern sequences based on the probability distribution.","The methods and systems for normalizing names apply HMM and predefined lexicons to recognize a particular component of a law firm name and then transform a part of the component into a predefined standard format.","A HMM is a probabilistic finite state machine with a general form in five-tuples \u03bc=<S, V, \u03a0, A, B>, which includes a set of states S=(s, s, . . . , s), and the state is denoted by S(t) for time t; a set of visible symbols V=(v, v, . . . , v), which is emitted at states; \u03a0=(\u03c0) defining the probability of initial states; a transition probability matrix A=(a), where a=Prob(S(t+1)|S(t)) and",{"@attributes":{"id":"p-0045","num":"0044"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"munderover":{"mo":"\u2211","mi":"j","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},"mo":"\u2062","msub":{"mi":["a","ij"]}},"mo":"=","mn":"1"}}},"br":{},"sub":["ki","ki","k","i"]},{"@attributes":{"id":"p-0046","num":"0045"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"munderover":{"mo":"\u2211","mi":"k","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},"mo":"\u2062","msub":{"mi":["b","ki"]}},"mo":"=","mn":"1"}}},"br":{}},"Each probability in the state transition matrix and in the symbol matrix is time independent, that is, the matrices do not change in time as the system evolves.","With the HMM method, the set states are defined by analysis of data set such as law firm names. Three matrices are learned from a training data set, as explained below.","In the example of law firm names, a law firm name may consist of a combination of up to six component type categories: People, Initial, Organization, Specialty, Suffix, and Separator. The People component type may include names such as \u201cSmith\u201d and \u201cJohnson.\u201d The Initial component type may include a person's initials. The Organization component type may include descriptions that identify the organization such as \u201cLaw Office,\u201d \u201cAttorney at Law,\u201d and \u201cLawyer Group.\u201d The Specialty component type may include an identifier of occupational specialties such as \u201cAccident Lawyers,\u201d \u201cEstate Law,\u201d \u201cTax,\u201d \u201cImmigration,\u201d and \u201cVictims.\u201d The Suffix component type may include suffixes that usually appear near or at the end of law firm names such as \u201cP.C.\u201d, \u201c& Company\u201d, and \u201cL.L.P.\u201d The Separator component type may include functional words or punctuations such as \u201cthe\u201d, \u201cof\u201d, \u201cand\u201d, \u201c&\u201d, comma, and \u201cet al.\u201d The Separator component type may be used to identify boundaries between the other five components but may not be used in comparing records. Other types of components may be defined based on the type of string that is being normalized. For example, when normalizing postal addresses, a different set of component types may be defined, such as street number, cardinal direction, street name, apartment number, city, state, zip code, county, country, etc.","In one embodiment, a law firm name may consist of a sequence of words that belong to six component types. Component tables may be predefined as lookup tables in support of HMM process for state recognition and labeling. The component tables include lists of instances of components. Component lookup tables may contain words, phrases, or symbols that fall into each component type category. In the example of law firm names, Tables 1-4 below are examples of lookup tables for Organization, Specialty, Suffix, and Separator component types, respectively. In support of normalization, a component lookup table may include normal formats, for example, Tables 1 and 3.",{"@attributes":{"id":"p-0051","num":"0050"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Organization Component Lookup Table."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LOOKUP","NORMAL"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"ADVOCATE","ADVOC"]},{"entry":[{},"ARBITRATION OFFICES","ARB"]},{"entry":[{},"APPELLATE ASSOCIATES","ASSOCIATE"]},{"entry":[{},"ATTORNEY AT LAW","ATTY"]},{"entry":[{},"& ASSOC","ASSOC"]},{"entry":[{},"TRIAL LAWYERS","LAWYERS"]},{"entry":[{},"LAW OFFICES","OFFICE"]},{"entry":[{},"LAW OFFICE","OFFICE"]},{"entry":[{},"LAWYER GROUP","GROUP"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0052","num":"0051"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Specialty Component Lookup Table."},{"entry":"LOOKUP"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"AVIATION LAW"]},{"entry":[{},"ACCIDENT"]},{"entry":[{},"ADMIRALTY LAW"]},{"entry":[{},"ARRESTED"]},{"entry":[{},"BANK"]},{"entry":[{},"CIVIL RIGHTS"]},{"entry":[{},"COMPENSATION"]},{"entry":[{},"DRUNKEN DRIVING"]},{"entry":[{},"EDUCATION"]},{"entry":[{},"ELDER"]},{"entry":[{},"ESTATE LAW"]},{"entry":[{},"FARM LAW"]},{"entry":[{},"RIGHTS"]},{"entry":[{},"TAX"]},{"entry":[{},"TECHNOLOGY"]},{"entry":[{},"VICTIMS"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0053","num":"0052"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 3"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Suffix Component Lookup Table."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LOOKUP","NORMAL"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"CHTD","CHT"]},{"entry":[{},"& COMPANY","CO"]},{"entry":[{},"CORPORATION","CORP"]},{"entry":[{},"A LAW CORPORATION","LC"]},{"entry":[{},"LLC","LLC"]},{"entry":[{},"PROFESSIONAL ASSOCIATION","PA"]},{"entry":[{},"PROFESSIONAL LIMITED CO","PLC"]},{"entry":[{},"APLLC","PLLC"]},{"entry":[{},"SERVICE CORP","SC"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0054","num":"0053"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Separator Component Lookup Table."},{"entry":"LOOKUP"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"-"]},{"entry":[{},"&"]},{"entry":[{},"("]},{"entry":[{},")"]},{"entry":[{},"\/"]},{"entry":[{},"AND"]},{"entry":[{},"OF"]},{"entry":[{},"THE"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"In one embodiment, six states may be defined as People, Initial, Organization, Specialty, Suffix, and Separator. These states may represent the hidden states in the hidden Markov model.","Because each of the tokens of a law firm name belongs to one of the six component types, six transition states are defined based on the six components types, which are People, Initial, Organization, Specialty, Suffix, and Separator, plus one Start state. The transition states may be represented as a state vector S=(People, Initial, Organization, Specialty, Suffix, Separator, Start).",{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 3","b":["300","300","301","302","303","304","305","306","307","300","302","306","304","304","301","306","307","300","101","105"]},"Tag Tables and HMM Emission Symbols","Generally, in HMM process, the real states are hidden, and the recognition process uses observed symbols to find the hidden states. Such observed signals are called emission symbols. In the example of law firm names, each token of a law firm name can be considered as an emission symbol on a state, which is observed as tags. A token may be assigned more than one tag. Table 5 below is an example of a tag table.",{"@attributes":{"id":"p-0059","num":"0058"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 5"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Tag Table."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TOKEN","TAG"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"&","SEP"]},{"entry":[{},"\/","SEP"]},{"entry":[{},"ACCIDENT","SPE"]},{"entry":[{},"ADVISERS","ORG"]},{"entry":[{},"AND","SEP"]},{"entry":[{},"ATTORNEY","ORG, SPE"]},{"entry":[{},"CO","ORG, SUX"]},{"entry":[{},"IMMIGRATION","SPE"]},{"entry":[{},"LAWYER","ORG"]},{"entry":[{},"LAW","ORG, SPE"]},{"entry":[{},"OFFICES","ORG"]},{"entry":[{},"YOUTH","SPE"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Because some tokens can be classified under multiple component types, a tag table may have multiple tags for the same token. For example, \u201cLAW\u201d may indicate an organization when used as \u201cLaw Offices\u201d but may also indicate a specialty when used as \u201cImmigration Law.\u201d","In one embodiment, the states and the tags may be provided to computer system . Alternatively, computer system  may define the states and the tags based on the component types. The component types, the states, and the tags may be stored in storage device .","HMM Probability Matrix","In the example of law firm names, given transition states and emission symbols design, three probability matrices may be defined as below:\n\n",{"@attributes":{"id":"p-0063","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"7"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"35pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 6"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"6","align":"center","rowsep":"1"}}]},{"entry":[{},"People","Initial","Organization","Specialty","Suffix","Separator"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"6","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"7"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"35pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Start","\u03c0","\u03c0","\u03c0","\u03c0","\u03c0","\u03c0"]},{"entry":{"@attributes":{"namest":"1","nameend":"7","align":"center","rowsep":"1"}}}]}}]}},"ul":{"@attributes":{"id":"ul0002","list-style":"none"},"li":["State Transition Probability Matrix A=(P), where Pis the probability from state i to state j, where i=1 . . . 6 and j=1 . . . 6.","Emission Symbols Probability Matrix B=(b), where bis the probability of tag k appearing on state i, where i=1 . . . 6 and k=1 . . . 6."]}},"In order to use HMM to recognize the components, a training component is used to learn the above three matrices, as described below.","Components of Normalization Process","A law firm name can be viewed as a sequence of input tokens, where each token is one of the component types, which are hidden states. The hidden states can be recognized with the observed token tags.",{"@attributes":{"id":"p-0066","num":"0068"},"figref":"FIG. 4","b":"400"},"In step , a name is tokenized by computer system  into component tokens. For example, a law firm name \u201cThe law offices of Smith & Johnson, LLC\u201d may be capitalized and tokenized into a sequence of tokens \u201cTHE\u201d \u201cLAW\u201d \u201cOFFICES\u201d \u201cOF\u201d \u201cSMITH\u201d \u201c&\u201d \u201cJOHNSON\u201d \u201c,\u201d \u201cLLC\u201d.","In step , each token in the sequence is assigned corresponding tag or tags based on the tag table by computer system  to generate sequences of tags. Since the tag table includes tags for only four out of six possible tags, the two remaining tags, namely PNP and INI, may be determined by a set of rules. For example, any token that has not been tagged after using the tag table may be tagged with INI if the token has only one character or PNP if the token has multiple characters. Following the example above, tagging the sequence of tokens \u201cTHE\u201d \u201cLAW\u201d \u201cOFFICES\u201d \u201cOF\u201d \u201cSMITH\u201d \u201c&\u201d \u201cJOHNSON\u201d \u201c,\u201d \u201cLLC\u201d may generate three tag sequences as follows:\n\n","In this example, the tagging step produced three possible tag sequences because the token \u201cLAW\u201d (the second token) could potentially be an organization, specialty, or suffix component type.","In step , the Viterbi algorithm may be applied to the list of potential tag sequences and the hidden Markov model matrices by computer system  to determine the most probable tag sequence. In this example, the Viterbi algorithm is used to recursively find the most possible state path for each observed sequence, i.e., (SEP, ORG, ORG, SEP, PNP, SEP, PNP, SEP, SUX), and the final state path is the one that results in the highest probability among all state paths. Therefore, the hidden states of \u201cThe law offices of Smith & Johnson, LLC\u201d is (Separator, Organization, Organization, Separator, People, Separator, People, Separator, Suffix).","In step , computer system  may generate a normalized form of the name. This step involves first removing any Separator states, because these are not used for record matching. Following the above example, removing the Separator states would result in (Organization, Organization, People, People, Suffix). Then, same states in sequence may be combined as one. For example, the two consecutive Organization states and the two consecutive People states may be combined to result in the following:\n\n","Next, the resulting states are normalized using one or more lookup tables that include normalized forms. In this example, \u201cLAW OFFICES\u201d is included in Table 1 and its normal form is \u201cOFFICE.\u201d Furthermore, \u201cLLC\u201d is included in Table 3 and its normal form is \u201cLLC.\u201d Therefore, the normalized law firm name is:\n\n","The above steps  through  described an exemplary process of normalizing names.","Technique to Learn HMM Probability Matrices from Corpus of Law Firm Names",{"@attributes":{"id":"p-0074","num":"0085"},"figref":"FIG. 5","b":"500"},"In step , computer system  receives a training data set of law firm names. The training data set is transferred from a database containing law firm names, for example, an authority attorney directory database such as the LexisNexis Martindale-Hubbell\u00ae directory, to computer system  through a network via network interface . The authority attorney directory database contains a directory of attorneys and corresponding information such as addresses, positions, law firms, law schools, etc. Alternatively, the training data set may be inputted by a user through input device  or provided to computer system  by a user on removable storage . The training data set may be stored in storage device .","In step , law firm names in the training data set are tokenized into component tokens by computer system . For example, a law firm name \u201cThe law offices of Smith & Johnson, LLC\u201d may be tokenized into a sequence of tokens \u201cThe\u201d \u201claw\u201d \u201coffices\u201d \u201cof\u201d \u201cSmith\u201d \u201c&\u201d \u201cJohnson\u201d \u201c,\u201d \u201cLLC\u201d. Deterministic finite automata techniques may be used to tokenize law firm names.","optionally, any empty spaces at the left end and the right end of the law firm name may be trimmed. In addition, all the letters in the law firm name may be standardized (e.g., changed to all upper or lower case). Furthermore, tokens may be replaced with their normalized forms based on the component lookup tables.","In step , each token is assigned a pair of state and tag designation <state, tag> according to the lookup tables and tag tables by computer system  through programming based on SQL tools. In one embodiment, a subset of the tokens in the training data set may be assigned states and tags manually by a user through input device , and computer system  may automatically assign states and tags to the rest of the tokens. In some cases, as discussed above, one token may have multiple <state, tag> designations.","By performing the above steps, the training data set includes sequences of <state, tag>. The sequences may now be used to generate probability matrices of the hidden Markov model.","In step , the number of sequences in the training data set that start with each of the six states is counted by computer system , as explained below with respect to .",{"@attributes":{"id":"p-0081","num":"0092"},"figref":"FIG. 6","b":"600"},"In step , the following initialization is performed:\n\n","In step , the number of state i at the beginning of a sequence is counted for each sequence, the number of transitions in each sequence from one particular state to another state is counted for each combination of two states, and the number of a particular tag assigned to a particular state in the <state, tag> pair of each sequence is counted for each combination of tag and state pair by computer system .","Step  may be described as follows:\n\n","In step , the calculated values of start(i), state(i,j), and symbol(k,i) are used by computer  to generate an initial probably matrix, a state transition probability matrix, and an emission probability matrix of the hidden Markov model. These matrices may be calculated as follows:",{"@attributes":{"id":"p-0086","num":"0104"},"maths":[{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":["Initial","Probability","Matrix"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mtext":":"}],"mrow":{"mstyle":[{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mo":"\u2062"},"msub":{"mi":["\u03c0","i"]}},{"mrow":[{"mi":"start","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"i"}},{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"-","mn":"1"},"mn":"6"},"mo":"\u2062","mrow":{"mi":"start","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"i"}}}],"mo":"\/"}],"mo":"="}}},{"@attributes":{"id":"MATH-US-00003-2","num":"00003.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":["State","Transition","Probability","Matrix"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mtext":":"}],"msub":{"mi":["P","ij"]}},{"mrow":[{"mi":"state","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["i","j"],"mo":","}}},{"munderover":{"mo":"\u2211","mrow":{"mi":"j","mo":"=","mn":"1"},"mn":"6"},"mo":"\u2062","mrow":{"mi":"state","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["i","j"],"mo":","}}}}],"mo":"\/"}],"mo":"="}}},{"@attributes":{"id":"MATH-US-00003-3","num":"00003.3"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":["Emission","Probability","Matrix"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mtext":":"}],"msub":{"mi":["b","ki"]}},{"mrow":[{"mi":"symbol","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["k","i"],"mo":","}}},{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"mn":"6"},"mo":"\u2062","mrow":{"mi":"symbol","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["k","i"],"mo":","}}}}],"mo":"\/"}],"mo":"="}}}]},"Tables 7-9 below are examples of the probability matrices of the hidden Markov model learned from the training process.",{"@attributes":{"id":"p-0088","num":"0106"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 7"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Initial Probability Matrix."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"People","0.622"]},{"entry":[{},"Initial","0.008"]},{"entry":[{},"Organization","0.321"]},{"entry":[{},"Specialty","0.007"]},{"entry":[{},"Suffix","0.040"]},{"entry":[{},"Separator","0.000"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0089","num":"0107"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 8"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"State Transition Probability Matrix."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"7"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"35pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},"Organi-",{},{},{}]},{"entry":[{},"People","Initial","zation","Specialty","Suffix","Separator"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"6","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"7"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"35pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["People","0.4611","0.3966","0.0929","0.0053","0.0365","0.0076"]},{"entry":["Initial","0.9727","0.0203","0.0034","0.0024","0.0007","0.0004"]},{"entry":["Organi-","0.0041","0.0002","0.5355","0.0000","0.0066","0.4535"]},{"entry":"zation"},{"entry":["Specialty","0.0289","0.0000","0.5638","0.3511","0.0182","0.0380"]},{"entry":["Suffix","0.0059","0.0000","0.0560","0.0058","0.8732","0.0590"]},{"entry":["Separator","0.9111","0.0317","0.0546","0.0023","0.0003","0.0000"]},{"entry":{"@attributes":{"namest":"1","nameend":"7","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0090","num":"0108"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"thead":{"row":{"entry":"TABLE 9"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Emission Probability Matrix."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"7"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"42pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PNP","INI","ORG","SPE","SUX","SEP"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"6","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"7"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"char","char":"."}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"char","char":"."}},{"@attributes":{"colname":"5","colwidth":"42pt","align":"char","char":"."}},{"@attributes":{"colname":"6","colwidth":"42pt","align":"char","char":"."}},{"@attributes":{"colname":"7","colwidth":"42pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["People","0.999366","0.0","1.72901E\u22124","2.88168E\u22124","1.72901E\u22124","0.0"]},{"entry":["Initial","0.0","1.0","0.0","0.0","0.0","0.0"]},{"entry":["Organization","0.116878","0.0","0.6417074","0.12385142","0.1175627","0.0"]},{"entry":["Specialty","0.020765","0.0","0.0928962","0.86448087","0.0218579","0.0"]},{"entry":["Suffix","0.027047","0.0","0.04532164","0.028874269","0.88121345","0.01754386"]},{"entry":["Separator","0.0","0.0","0.0","0.0","0.17006047","0.829939532"]},{"entry":{"@attributes":{"namest":"1","nameend":"7","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"Next, the normalized forms of law firm names are compared using a comparison function by dynamically weighing components of the names according their presence in the names.","A normalized law firm name can be represented as a four-dimensional vector (c, c, c, c) in Rspace, where cis a root component which may represent People component or a combination of People and Initial components, cmay represent Specialty component, cmay represent Organization component, cmay represent Suffix component, and cthrough cmay be arranged in order of importance. The Separator component is not included in the normalized law firm name vector. This vector is exemplary only, and thus the vector may be defined to have different number of dimensions, different representations of component types, or different order of importance.",{"@attributes":{"id":"p-0093","num":"0111"},"figref":"FIG. 7","b":"700"},"In step , the number of different components includes in the two normalized names is calculated. For example, if a first normalized name has People, Organization, and Suffix components, and a second normalized name has People, Specialty, and Suffix components, then the number of different components in the two normalized names is four, i.e., People, Organization, Specialty, and Suffix. Accordingly, vector ffor the first normalized name may be (People, \u201c\u201d, Organization, Suffix) and vector ffor the second normalized name may be (People, Specialty, \u201c\u201d, Suffix).","In the above example, two law firm names fand fhave been normalized for comparison, where f=(x, x, x, x) and f=(y, y, y, y). In step , weights wmay be dynamically assigned to the individual components by computer system  based on the availability of each component such that w>w+1 and \u03a3w=1. That is, the sum of all the weights equals 1, but the number of weights depends on the number of components available, as not all law firm names have all of People, Specialty, Organization, and Suffix component types. The weights may be determined based on the importance of each component in comparing similarity of law firm names. For example, when comparing law firm names in various forms for matching or for distinguishing, people names may be more important than the type of organization or specialty.","Below are specific examples of assigning weights depending on the presence and absence of components in names.","If four components (x, x, x, x) are present in the names, four weights are defined. For example, w=0.4, w=0.3, w=0.2, and w=0.1 may represent weights for People, Specialty, Organization, and Suffix, respectively. Accordingly, the overall score f(X)=0.4x+0.3x+0.2x+0.1x.","If three components (x, x, x) are present in the names, three weights may be defined as follows:\n\n","If two components (x, x) are present in the names, two weights may be defined as follows:\n\n","If only one component is present, then w=1.0 and score f(X)=w.","In step , corresponding comparison functions are selected for each component. The similarity comparison function similarity(x,y) for component i may be based on either string comparison or vector space model, and returns a value between 0 for totally dissimilar and 1 for exactly similar. Different types of similarity comparison functions may be used for different components of the normalized law firm name. For the components with normal forms (e.g., Organization and Suffix components), a comparison has only two results: either 1 for equal value or 0 for different values.","In step , the two law firm names may be compared by computer system  using a similarity function. The name normalization similarity function may be defined as aggregated similarity of each component with weight w:",{"@attributes":{"id":"p-0103","num":"0127"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mrow":[{"mi":"Sim","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":"f","mn":"1"},{"mi":"f","mn":"2"}],"mo":","}}},{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"1"},"mi":"j"},"mo":"\u2062","mrow":{"msub":{"mi":["w","i"]},"mo":"\u00b7","mrow":{"mi":"similarity","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["x","i"]},{"mi":["y","i"]}],"mo":","}}}}}],"mo":"="},{"mrow":[{"mi":"where","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"msub":{"mi":"f","mn":"1"}},{"mo":["(",")"],"mrow":{"msub":[{"mi":"x","mn":"1"},{"mi":"x","mn":"2"},{"mi":"x","mn":"3"},{"mi":"x","mn":"4"}],"mo":[",",",",","]}}],"mo":"="},{"msub":{"mi":"f","mn":"2"},"mo":"=","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":"y","mn":"1"},{"mi":"y","mn":"2"},{"mi":"y","mn":"3"},{"mi":"y","mn":"4"}],"mo":[",",",",","]}}},{"mi":"j","mo":"\u2264","mn":"4"},{"mrow":{"mover":{"mo":"\u2211","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},"mo":"\u2062","msub":{"mi":["w","i"]}},"mo":"=","mn":"1"},{"mrow":[{"mi":"and","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"msub":{"mi":["w","i"]}},{"msub":{"mi":"w","mrow":{"mi":"i","mo":"+","mn":"1"}},"mo":"."}],"mo":">"}],"mo":[",","\u2062",",",",",",","\u2062",","],"mstyle":[{"mtext":{}},{"mtext":{}}]}}}},"The name normalization similarity function Sim(f, f) may return a value between 0 for totally dissimilar and 1 for exactly similar, because the sum of all the weights equals 1.","Technique for Record Comparison and Numerical Records",{"@attributes":{"id":"p-0105","num":"0129"},"figref":"FIG. 8","b":"800"},"A numerical record is the result of comparing a key record with a non-key record. The matching function\/classifier is learned based on a data set of numerical records and the matching process applies the matching function to a record pair to decide if the two records are a match.","A key record may be extracted from case law documents. Exemplary key attorney records may be represented by a nine-dimensional vector (aid, first name, middle name, last name, prefix, suffix, law firm, city, state), wherein aid is a unique identifier generated for the extracted attorney but is not used for comparison during record matching. An example of a key attorney record may be: (1036, John, J, Wasson, null, Jr., Wasson & Smith, null, OH). Attorney records may include null values if the attorney information is missing certain fields.","In step , numerical records are generated by computer system  by comparing the key attorney record with non-key attorney records using comparison functions. The first two fields of a numerical record may be populated by copying the aid and isln identifiers from the key attorney record and the non-key attorney record, respectively, without using any comparison functions. The next eight fields of the numerical record may be the results of comparing the corresponding fields in the key attorney record with the non-key attorney record using comparison functions.","Different types of comparison functions may be used for different fields. For example, first name in the key attorney record may be compared with first name in the non-key attorney record using a string comparison function, and law firm in the key attorney record may be compared with law firm in the non-key attorney record using a name normalization similarity function described above. Furthermore, any field that includes a null value in either the key attorney record or the non-key attorney record is not compared and a value of 0 is included the numerical record for that field. The result is a set of numerical records whose first two fields are identifiers and the rest of the fields are comparison function result values ranging from 0 to 1.","Optionally, in step , computer system  may add additional fields to the numerical records to provide additional dimensions and to improve record matching. For example, first name, middle name, and last name fields from the key attorney record and from the non-key attorney record may be combined and inputted into a string based comparison function for a result denoted as sfull, and inputted into a vector cosine comparison function for a result denoted as vfull. As yet another example, all the fields (excluding aid) in the key attorney record may be combined and all the fields (excluding isln) in the non-key attorney record may be combined to be inputted into a comparison function for a result denoted as fscore. The results, sfull, vfull, and fscore, may be added to the ends of the numerical records as additional fields to be used for matching. The above additional fields are exemplary only, and other combinations of fields and other various comparison functions could be used to create any number of additional dimensions to the numerical records.","In step , comparison results from steps  and  are used to generate numerical records. In addition, an additional field, class label, is included in the numerical records. The class label is 1 if the two records are a match or 0 if the two records are not a match. A numerical record may be represented by a vector r=(x, x, x, . . . , x, x), where xand xare aid and isln identifiers from the key record and the non-key record, xthrough xare the results from comparison functions, and the last field xis the class label. Initially, the class label is set to 0, and it is updated after going through a matching process.","Learn Match Function with Additive Logistic Regression with Support of Human Interaction",{"@attributes":{"id":"p-0112","num":"0136"},"figref":"FIG. 9","b":"900"},"In step , attorney records extracted from case law documents are labeled by manually finding their corresponding matches in the attorney authority directory, pulling the isln, and adding it to the case law records. In one embodiment, the attorney authority database may be queried for each labeled case law record, pulling potential candidate records by an optimized query design method. Then, by using the record comparison method described above, each of the candidates is compared with the case law records to create numerical records. When the isln in a case law record is the same as that in the authority record, the class label is set to 1, otherwise the class label is set to 0. The process resulted in a data set of records with class labels being 0 or 1.","In step , computer system  fits the numerical data set into a learning algorithm, e.g. an adaptive Newton algorithm for fitting an additive logistic regression model, described as below:\n\n",{"@attributes":{"id":"p-0115","num":"0142"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":["z","i"]},"mo":"=","mfrac":{"mrow":[{"msubsup":{"mi":["y","i"],"mo":"*"},"mo":"-","mrow":{"mi":"p","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["r","i"]}}}},{"mrow":[{"mi":"p","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["r","i"]}}},{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","mrow":{"mi":"p","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["r","i"]}}}}}],"mo":"\u2062"}]}}}},"ul":{"@attributes":{"id":"ul0020","list-style":"none"},"li":{"@attributes":{"id":"ul0020-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0021","list-style":"none"},"li":["\u2003and weights w=p(r)(1\u2212p(r)),","b. Fit the function f(r) by a weak learning method of zto rusing weights w,","c. Update F(r)\u2190F(r)+1\/2 *f(r) and"]}}}},{"@attributes":{"id":"p-0116","num":"0146"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":{"mi":"p","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"r"}},"mo":"\u2190","mfrac":{"msup":{"mi":"\u2147","mrow":{"mi":"F","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"r"}}},"mrow":{"msup":[{"mi":"\u2147","mrow":{"mi":"F","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"r"}}},{"mi":"\u2147","mrow":{"mo":"-","mrow":{"mi":"F","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"r"}}}}],"mo":"+"}}},"mo":","}}},"ul":{"@attributes":{"id":"ul0022","list-style":"none"},"li":"3. Output the classifier"}},{"@attributes":{"id":"p-0117","num":"0148"},"maths":{"@attributes":{"id":"MATH-US-00007","num":"00007"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":[{"mi":"sign","mo":"\u2061","mrow":{"mo":["[","]"],"mrow":{"mi":"F","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"r"}}}},{"mi":"sign","mo":"\u2061","mrow":{"mo":["[","]"],"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"m","mo":"=","mn":"1"},"mi":"M"},"mo":"\u2062","mrow":{"msub":{"mi":["f","m"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"r"}}}}}],"mo":"="},"mo":","}}},"br":{}},"The above algorithm outputs a decision function that helps make match decisions in the matching processes.","In the learning process, three basic learning algorithms are applied: additive logistic regression with base learning method, decision stump, simple linear regression, and general weighted linear regression. The decision stump method may classify according to probability distribution by choosing a single field with minimum entropy conditioned on rows of a contingency table. The simple linear regression may choose the best field that can result in minimum residual loss at each round of the iteration. The general weighted linear regression may choose more than one field in each round of iteration to construct a linear function, which results in minimum residual loss.","Furthermore, a 10-fold cross validation method may be used to evaluate the performance of three learned classifiers. Decision stump and simple linear regression may outperform general weighted linear regression, thus resulting in two matching functions for use in labeling more results in step .","In step , the two learned classifier from step  are used to label more key records with committee voting approach. The process outputs three files: matched file containing record pairs labeled as matched by both classifiers; half-matched file containing record pairs labeled differently by the two classifiers; and non-matched file containing record pairs labeled as non-matched by both classifiers.","In step , the results files may be manually evaluated. Because most of the record pairs in the matched file and the non-matched file are correct, the record pairs in the half-matched file are evaluated with more focus.","Through the above-described steps, more case law attorney records are labeled to obtain a larger training data set. The resulting numerical records may be separated into two data sets, one used for training and the other one used for testing. Two classifiers are learned with simple linear regression and decision stump algorithms from a first set of records (training data set) and evaluated with a second set of records (testing data set). Then, their overall accuracy, precision, recall, and matching score were compared. An evaluation showed decision stump is a better base learning method with additive logistic regression. Consequently, the final classifier is built from additive logistic regression with decision stump as the base learning method.","Record Matching",{"@attributes":{"id":"p-0124","num":"0155"},"figref":"FIG. 10","b":"1000"},"In step , attorney information is extracted from a case law document and packaged into a key attorney record by computer system . For example, an attorney's name, employer (law firm), address, etc. may be extracted from a case law document in LexisNexis and the extracted information may be packaged into an XML file stored in storage device . Computer system  may access the case law document stored in a remote server via network interface , or the case law document may be received on removable storage .","In step , for each key record from the case law document, attorneys are retrieved by computer system  from an authority attorney directory based on a rule and packaged into candidate attorney records (non-key records). The authority attorney directory may be stored in computer system  in storage device  or may be stored in a remote server and accessible via network interface . For example, attorneys' names, employers (e.g., law firms), addresses, etc. may be retrieved from LexisNexis's Martindale-Hubbell\u00ae authority attorney directory and the extracted information may be packaged into one or more XML files stored in storage device . The rule for retrieving candidate attorney records may be based on, for example, comparing last names in the key record and the authority attorney directory using a string comparison function to obtain similarity values, and then comparing the similarity values with a predefined threshold. Alternatively, the rule may be based on comparing both first and last names. Other rules for retrieving candidate attorney records are possible. Exemplary candidate attorney records may be represented by a nine-dimensional vector (isln, first name, middle name, last name, prefix, suffix, law firm, city, state), wherein isln is an International Standard Lawyer Number assigned to and stored with an attorney in the authority attorney directory, but is not used for comparison during record matching. For example, for a key record (1036, John, J. Wasson, null, Jr., Wasson & Smith, null, OH) that is extracted from a case law document, the following four candidate attorney records may be retrieved from the authority attorney directory:\n\n","In step , a key attorney record is compared with candidate records retrieved in step  with the comparison functions selected for each field. In the above example, the below four numerical records result from comparing the key record with four candidate records:\n\n","The last field in the numerical records is the class label, which is initially set to 0.","In step , each numerical record r is fit into decision function",{"@attributes":{"id":"p-0130","num":"0169"},"maths":{"@attributes":{"id":"MATH-US-00008","num":"00008"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"sign","mo":"\u2061","mrow":{"mo":["[","]"],"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"m","mo":"=","mn":"1"},"mi":"M"},"mo":"\u2062","mrow":{"msub":{"mi":["f","m"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"r"}}}}}}},"br":{},"sub":["m","m"]},"In step , a matching record is determined by computer system  based on the sign of the matching score. If only one numerical record results in a positive value, then that numerical record decides a match and the other numerical records that results in zero or negative values decide non-matches. If multiple numerical records result in positive values, then the numerical record with the greatest sum value decides a match and the rest of the numerical records decide non-matches. For example, suppose the four numerical records result in the following four matching scores: \u22121.5, \u22120.9, \u22120.33, and 0.1. Then, the numerical record with the positive value of 0.1 represents a match. Accordingly, the class label for the fourth numerical record is updated to 1 as follows: (1036, 802714197, 1.0, 1.0, 1.0, \u22122.0, \u22121.0, 0.99, 1.0, 1.0, \u22121.0, 1.0, 0.9, 1.0). This means that the key attorney record (1036, John, J, Wasson, null, Jr., Wasson & Smith, null, OH) extracted from a case law document has been matched with the candidate attorney record (802714197, John, J, Wasson, null, Jr., Wasson & Smith, null, OH) from the authority attorney directory database.","In step , the case law document is marked with the identifier of the matching candidate attorney record by computer system . In one embodiment, where the case law document is stored in a remote server, the computer system  communicates the matching candidate attorney record via network interface  to the remote server for marking the case law document. For example, the case law document from which (1036, John, J, Wasson, null, Jr., Wasson & Smith, null, OH) was extract may be marked with isln identifier 802714197 of the candidate attorney record that was determined to be the match. Therefore, any user or computer viewing the case law document may easily link and reference the attorney in the authority directory.","The foregoing description has been presented for purposes of illustration. It is not exhaustive and is not limiting to the precise forms or embodiments disclosed. Modifications and adaptations will be apparent to those skilled in the art from consideration of the specification and practice of the disclosed embodiments. For example, the described implementations include software, but systems and methods consistent with the disclosed embodiments be implemented as a combination of hardware and software or in hardware alone. Examples of hardware include computing or processing systems, including personal computers, servers, laptops, mainframes, micro-processors and the like. Additionally, although aspects of the disclosed embodiments are described as being stored in memory, one skilled in the art will appreciate that these aspects can also be stored on other types of computer-readable media, such as secondary storage devices, for example, hard disks, floppy disks, or CD-ROM, or other forms of RAM or ROM, USB media, DVD, or other optical drive media.","Computer programs based on the written description and disclosed methods are within the skill of an experienced developer. The various programs or program modules can be created using any of the techniques known to one skilled in the art or can be designed in connection with existing software. For example, program sections or program modules can be designed in or by means of .Net Framework, .Net Compact Framework (and related languages, such as Visual Basic, C, etc.), Java, C++, HTML, HTML\/AJAX combinations, XML, or HTML with included Java applets. One or more of such software sections or modules can be integrated into a computer system or existing e-mail or browser software.","Moreover, while illustrative embodiments have been described herein, the scope of any and all embodiments having equivalent elements, modifications, omissions, combinations (e.g., of aspects across various embodiments), adaptations and\/or alterations as would be appreciated by those in the art based on the present disclosure. The limitations in the claims are to be interpreted broadly based on the language employed in the claims and not limited to examples described in the present specification or during the prosecution of the application, which examples are to be construed as non-exclusive. Further, the blocks of the disclosed routines may be modified in any manner, including by reordering blocks and\/or inserting or deleting blocks. It is intended, therefore, that the specification and examples be considered as exemplary only, with a true scope and spirit being indicated by the following claims and their full scope of equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate various disclosed embodiments. In the drawings:",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
