---
title: Detecting and applying database schema changes to reports
abstract: A system and method to detect database schema changes are described. In various embodiments, a method of the embodiments detects database schema changes via triggers. In various embodiments, the changes are detected by comparing database schemas and determining modifications to database tables and database columns thereof. In various embodiments, the detected changes are applied to a report by generating a parse tree relevant for the modifications to database tables and columns; and traversing the tree to produce a statement to change the report to be relevant for the modifications to database tables and columns.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08204848&OS=08204848&RS=08204848
owner: Business Objects Software Limited
number: 08204848
owner_city: Dublin
owner_country: IE
publication_date: 20091117
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The invention relates generally to collecting database data via reports, and, more specifically, to detecting and applying database schema changes to reports.","An increasing number of organizations are adopting business intelligence solutions over relational databases. However, the schema of these relational databases may change and the changes may occur after a report has been created. When the schema of the underlying relational database changes, accessing or running the report will result in error.","A report collects database data from a database. To collect database data, a report relies on knowledge of the underlying database schema. The database schema represents the structure of the database, such as database table names, database column names, and other items, such as indexes, fields, relationships, and any other items that may be required to define how the data is stored in the database.","To obtain data from a database, a report requests the data via referencing database table names and columns. If the names change, or if any of the columns or tables are modified, the report will either result in an error, or will obtain incorrect data. If a report produces an error, the problem that caused the error may have to be analyzed and the report may have to be fixed manually.","These and other benefits and features of embodiments of the invention will be apparent upon consideration of the following detailed description of preferred embodiments thereof, presented in connection with the following drawings.","A method and system to detect and apply database schema changes to reports are described.","In various embodiments, a method of the embodiments detects database schema changes via comparing database states at various points in time.","In various embodiments, a method of the embodiments analyses the changes between database states to produce an instruction to apply to a report so that the report reflects the current database schema and state.","Embodiments of techniques for detecting and applying database schema changes to reports are described herein. In the following description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however, that the invention can be practiced without one or more of the specific details, or with other methods, components, materials, etc. In other instances, well-known structures, materials, or operations are not shown or described in detail to avoid obscuring aspects of the invention.","Reference throughout this specification to \u201cone embodiment\u201d, \u201cthis embodiment\u201d and similar phrases, means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.","Business Intelligence (BI) generally refers to a category of software systems and applications used to improve business enterprise decision-making and governance. These software tools provide techniques for analyzing and leveraging enterprise applications and data. These tools are commonly applied to financial, human resource, marketing, sales, service provision, and customer and supplier analyses. More specifically, these tools can include: reporting and analysis tools to analyze, forecast and present information, content delivery infrastructure systems for delivery, storage and management of reports and analytics, data warehousing systems for cleansing and consolidating information from disparate sources, and integration tools to analyze and generate workflows based on enterprise systems. Business Intelligence tools work with data management systems, such as relational databases or On Line Analytic Processing (OLAP) systems used to collect, store, and manage raw data and transactional enterprise systems that generate data.","A relational data source is a form of structured data. A relational data source comprises a set of one or more tables. A table contains data about a set of entities that can be described by the same attributes. Tables comprise columns, or attributes, and rows, or records. A table must contain at least one column. A column indicates an attribute that can be used to describe each of the entities. A column definition may include the attribute name, type, size restriction, default value, and in some cases all of its possible values. A row indicates the set of attribute values\u2014one attribute value for each column in the table\u2014which describe a single entity. An unspecified attribute value can be indicated by a null value. A table has a primary key comprising a set of one or more attributes where the associated attribute value combination for each entity uniquely identifies that entity. Relationships between entities are expressed by linking, or cross-referencing, tables. For example, a column in a table may require that its values be selected from the values existing in a similar column of another table. Entities that share the same attribute value are related. Linking can be restricted based on cardinality. Common examples of cardinality are one-to-one, one-to-many and many-to-many. The data may be accessed, edited or supplemented using a query language such as Structured Query Language (SQL). Accessing the data can be done more efficiently by creating indexes on attributes.","A database schema is a formal definition of the structure of the database in a language supported by an underlying database management system. For example, a database schema may be defined in SQL or in XML. A database schema may define tables, columns, fields, relationships, views, indexes, packages, procedures, functions, queues, triggers and other elements.","Relational database tools are a subset of business intelligence tools. A popular language used to query relational databases is SQL or \u201cstructured query language\u201d. It is used in queries to create, modify, retrieve and manipulate data from relational databases. SQL has syntax rules and commands particularly suited for retrieval and filtering operations. The primary command is SELECT. This is used to retrieve zero or more rows from a database. There are many ancillary commands. These include the \u201cFROM\u201d, \u201cWHERE\u201d, \u201cHAVING\u201d and \u201cON\u201d clauses. A \u201cFROM\u201d clause is used to indicate from where the data is to be taken. A \u201cWHERE\u201d clause identifies which rows to be retrieved. A \u201cHAVING\u201d clause is used to identify which of the grouped rows (e.g., grouped rows are produced by \u201cGROUP BY\u201d clause), are to be retrieved. A \u201cGROUP BY\u201d clause specifies the return of a list that is grouped by one or more columns.","In various embodiments, database schema changes may be detected, analyzed, and applied to a report.","In various embodiments, schema change detection may be performed utilizing a number of triggers provided by a database management system to detect the change. Such triggers may include, but are not limited to, data definition language (DDL) triggers and data manipulation language (DML) triggers.","In various embodiments, a change in the schema of a database may be detected by comparing a state of a database at a prior point in time to the state of a database at a later point in time.","In various embodiments, detecting changes in a database schema may be performed at regular or irregular time intervals.","In various embodiments, detecting changes in a database schema may be performed on demand.","In various embodiments, detecting changes in a database schema may be performed on demand after running a report has been unsuccessful and running the report has resulted in receiving an error message or error code.","In various embodiments, database schema changes may be analyzed to identify modifications to database tables and database table columns Such modifications may be stored for later use.","In various embodiments, database schema changes may be applied to reports so that when reports run, no errors are produced and reports generate accurate data.","In various embodiments, database schema changes may be applied to a report using Structured Query Language (SQL) statements such as, but not limited to, a \u201cselect\u201d statement. In various embodiments, a select statement may be generated to reflect the modifications relevant for a report to reflect a database schema accurately.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 1","FIG. 1"],"b":"102"},"At process block , changes between a first database state and a second database state are received. Such changes may include database tables being added to the schema, database tables being deleted from the schema, database tables being modified, or a combination of additions, deletions, and modifications to database tables. If modifications to database tables are received, such modifications may also involve additions, deletions, or modifications of database table columns.","At process block , the received changes are applied to the report. If the received changes include tables being added to the database schema, such changes may not be applied to the report because a report generated before the addition of the tables would not know of the tables and thus the addition of tables will not interfere with the report.","In various embodiments, if the received changes include deletions of tables, applying such changes may involve intervention by a database administrator to assure the report delivers data from the database as required.","If the changes include modifications of database tables and columns thereof, such modifications are applied to the report to ensure that the report retrieves data from the database as required. Applying received changes to a report ensures that end users of reports receive accurate data transparently. Thus, end users without technical knowledge of reports or underlying databases may obtain enterprise data as required, even if changes to underlying database schemas are made.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 2","FIG. 2"],"b":["202","204","206"]},"In various embodiments, a change in a database schema may be detected using a DDL trigger. DDL triggers respond to events corresponding to SQL statements using keywords such as \u201ccreate\u201d, \u201calter\u201d, and \u201cdrop.\u201d Information related to the event that causes the trigger to occur may be stored in a database table Table 1 below shows one exemplary table storing information about events that serve as triggers.",{"@attributes":{"id":"p-0041","num":"0040"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Name of Column","Type of information Stored in Column"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Timestamp","The timestamp column may store the time"]},{"entry":[{},{},"at which a change happened or was"]},{"entry":[{},{},"detected."]},{"entry":[{},"Operation","The Operation column may store the type"]},{"entry":[{},{},"of operation that caused the event, such as"]},{"entry":[{},{},"delete, rename, etc."]},{"entry":[{},"Target Type","The target type column may store the target"]},{"entry":[{},{},"of the operation, that is, a table or a column"]},{"entry":[{},{},"in a table."]},{"entry":[{},"Target Name","The target name column may store the"]},{"entry":[{},{},"name of the table or table column that was"]},{"entry":[{},{},"the target of the operation."]},{"entry":[{},"Details","The Details column may store further"]},{"entry":[{},{},"information about the operation that caused"]},{"entry":[{},{},"the event, such as, but not limited to, an"]},{"entry":[{},{},"SQL statement that caused a change in the"]},{"entry":[{},{},"database schema."]},{"entry":[{},"Detail Type","The Detail Type column may store the type"]},{"entry":[{},{},"of information stored in the Details column,"]},{"entry":[{},{},"such as SQL statement, data type, etc."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"In various embodiments, a DML trigger may be used to detect a change in a database schema. In an exemplary embodiment, a DML trigger is used to capture changes in the schema in the database by monitoring so-called \u2018system tables\u2019, which are tables used in the database for administrative purposes, and such tables store names of tables and columns. DML triggers may be used to collect information when an add, update, or delete operation is detected on such a system table.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 3","FIG. 3","FIG. 2","FIG. 3"],"b":["302","304","306","302","306"]},{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 4","FIG. 4","FIG. 2","FIG. 4"],"b":["402","404","406","402","406"]},"In various embodiments, the method as described in  through to  may be used to create a first set of tables for a first database state and a second set of tables for a second database state. A set of tables (e.g., one called \u201cOrigNames_Tbl\u201d, and another called \u201cOrigNames_Col\u201d) is created to store the state of database schema at a specified time. Either at periodic intervals, or on demand, another set of tables (e.g., one called \u201cCurrNames_Tbl\u201d, and another called \u201cCurrNames_Col\u201d) is created to store the state of the database schema. The second set is compared to the first set to obtain changes in the database schema between the two points in time. Such changes may include modifications of table names, column names, additions or deletions of tables and columns, and also modifications of data types for columns.","Table 2 below lists the tables for the comparison with the columns used to store information about the state of the database schema.",{"@attributes":{"id":"p-0047","num":"0046"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 2"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Table Name","Columns","Description of Column"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"OrigNames_Tbl","Name","The Name column stores the"]},{"entry":[{},{},{},"name of the table."]},{"entry":[{},"OrigNames_Col","Name","The Name column stores the"]},{"entry":[{},{},{},"fully qualified name of the"]},{"entry":[{},{},{},"column."]},{"entry":[{},{},"Data type","The Data type column stores"]},{"entry":[{},{},{},"the type of data of the column."]},{"entry":[{},"CurrNames_Tbl","Name","The Name column stores the"]},{"entry":[{},{},{},"name of the table."]},{"entry":[{},"CurrNames_Col","Name","The Name column stores the"]},{"entry":[{},{},{},"fully qualified name of the"]},{"entry":[{},{},{},"column."]},{"entry":[{},{},"Data type","The Data type column stores"]},{"entry":[{},{},{},"the type of data of the column."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 5","FIG. 5"],"b":["502","504","506","508","510","502","510"]},"In various embodiments, the process as described in blocks  through to  may be repeated for each change between a first database state and a second database state. The information collected about each change may be stored in a dedicated table in a database. In various embodiments, an exemplary table such as Table 3 below may store details about database operations changing a database schema.",{"@attributes":{"id":"p-0050","num":"0049"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"42pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}},{"entry":["This column","This column","This column lists",{},{},{}]},{"entry":["lists the time","lists the","the target of",{},"This"]},{"entry":["when the","operation","the operation","This column","column lists","This"]},{"entry":["change was","that has","that the","lists the","details","column lists"]},{"entry":["made (e.g.,","made the","change was","name of the","about the","the type of"]},{"entry":["timestamp)","change","made to","target","operation","detail"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0906220005","DROP","TABLE","Table1",{},{}]},{"entry":["0906220005","ADD","TABLE","Table10"]},{"entry":["0906220005","DROP","COLUMN","Table1.a","INT","Data Type"]},{"entry":["0906220005","DROP","COLUMN","Table1.b","VARCHAR","Data Type"]},{"entry":[{},{},{},{},"(20)"]},{"entry":["0906220005","DROP","COLUMN","Table1.c","CHAR(4)","Data Type"]},{"entry":["0906220005","DROP","COLUMN","Table2.x","INT","Data Type"]},{"entry":["0906220005","ADD","COLUMN","Table10.a","INT","Data Type"]},{"entry":["0906220005","ADD","COLUMN","Table10.b","VARCHAR","Data Type"]},{"entry":[{},{},{},{},"(20)"]},{"entry":["0906220005","ADD","COLUMN","Table10.c","CHAR(4)","Data Type"]},{"entry":["0906220005","ADD","COLUMN","Table3.x","VARCHAR","Data Type"]},{"entry":[{},{},{},{},"(10)"]},{"entry":["0904011256","DROP","TABLE","Table4"]},{"entry":["0904011256","DROP","COLUMN","Table4.p","INT","Data Type"]},{"entry":["0904011256","DROP","COLUMN","Table4.q","INT","Data Type"]},{"entry":["0904011256","DROP","COLUMN","Table4.r","CHAR(1)","Data Type"]},{"entry":["0904011256","DROP","COLUMN","Table4.s","CHAR(10)","Data Type"]},{"entry":["0904011256","DROP","COLUMN","Table6.a","CHAR(10)","Data Type"]},{"entry":["0904011256","ADD","COLUMN","Table6.b","CHAR(10)","Data Type"]},{"entry":["0903043124",". . .",". . .",". . .",". . .",". . ."]},{"entry":[". . .",". . .",". . .",". . .",". . .",". . ."]},{"entry":[". . .",". . .",". . .",". . .",". . .",". . ."]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]}}}}},"In various embodiments, heuristics may be applied to determine the exact change or changes on the database schema. In various embodiments, an algorithm to identify changes between database states may look for strings that identify database operations. For example, if an underlying database uses SQL, an algorithm may look for \u201cADD\u201d to specify that a table or column has been created in the database; and \u201cDROP\u201d to specify that a table or column has been deleted from the database. For example, if an exemplary Table called \u201cX\u201d with columns \u201ca,\u201d \u201cb,\u201d and \u201cc\u201d is deleted, it may be expected that a table containing the changes between a first database state and a second database state will have the following rows: one row with data (DROP, TABLE, X, \u201c,\u201d), and three rows with the following data (DROP, COLUMN, X.a, Type1, \u2018DATATYPE\u2019) (DROP, COLUMN, X.b, Type2, \u2018DATATYPE\u2019), and (DROP, COLUMN, X.c, Type3, \u2018DATATYPE\u2019).","In another embodiment, if an exemplary Table called \u201cX\u201d with columns \u201ca,\u201d \u201cb,\u201d and \u201cc\u201d is renamed to \u201cY\u201d, it may be expected that a table containing the changes between a first database state and a second database state will have the following rows: one row with data (DROP, TABLE, X, \u201c,\u201d); and one row with data (ADD, TABLE, Y, \u201c,\u201d). Further, there will be the following rows:\n\n","In another embodiment, if an exemplary Table called \u201cX\u201d with columns \u201ca,\u201d \u201cb,\u201d and \u201cc\u201d is added to the database, it may be expected that a table containing the changes between a first database state and a second database state will have the following rows, as listed below.\n\n","In another embodiment, if in an exemplary Table called \u201cT\u201d with columns \u201ca,\u201d \u201cb,\u201d and \u201cc\u201d, column \u201ca\u201d is deleted, it may be expected that in a table containing the changes between a first database state and a second database state there will be a row with the following data: (DROP, COLUMN, T.a, Type1, \u2018DATATYPE\u2019).","In another embodiment, if in an exemplary Table called \u201cT\u201d column \u201ca\u201d is renamed to \u201cb\u201d, it may be expected that in a table containing the changes between a first database state and a second database state there will be rows with the following data:\n\n","In another embodiment, if in an exemplary Table called \u201cT\u201d, column \u201ca\u201d is added to the table, it may be expected that in a table containing the changes between a first database state and a second database state there will be a row with the following data: (ADD, COLUMN, T.a, Type1, \u2018DATATYPE\u2019).",{"@attributes":{"id":"p-0057","num":"0068"},"figref":["FIG. 6","FIG. 6"],"b":["602","602"]},"At process block , the parse tree is modified with the changes between the first database state and the second database state. That is, the nodes and leaves of the parse are modified to reflect the second database state. For example, modifications to tables and columns will be reflected. At process block , the parse tree is traversed to generate the SQL SELECT statement to be applied to the report so that the report reflects the changes between the first database state and the second database state. By traversing the tree, each node and leaf is visited in a specific order to extract the information collected therein. As a result, all the pieces of information extracted from the tree produce the SQL SELECT statement to modify the report to reflect changes to the database schema.",{"@attributes":{"id":"p-0059","num":"0070"},"figref":["FIG. 7","FIG. 7"],"b":["700","714","702","716","700","706","702","702","706","702","706","702","704","704","702","708","702","702","710","708","712","712","714","716"]},"Some embodiments of the invention may include the above-described methods being written as one or more software components. These components, and the functionality associated with each, may be used by client, server, distributed, or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as, functional, declarative, procedural, object-oriented, lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively, the components maybe implemented in server and client applications. Further, these components may be linked together via various distributed programming protocols. Some example embodiments of the invention may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example, a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level (e.g., a graphical user interface). These first and second computer systems can be configured in a server-client, peer-to-peer, or some other configuration. The clients can vary in complexity from mobile and handheld devices, to thin clients and on to thick clients or even other servers.","The above-illustrated software components are tangibly stored on a computer readable medium as instructions. The term \u201ccomputer readable medium\u201d should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term \u201ccomputer readable medium\u201d should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store, encode, or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described, represented, or illustrated herein. Examples of computer-readable media include, but are not limited to: magnetic media, such as hard disks, floppy disks, and magnetic tape; optical media such as CD-ROMs, DVDs and holographic devices; magneto-optical media; and hardware devices that are specially configured to store and execute, such as application-specific integrated circuits (\u201cASICs\u201d), programmable logic devices (\u201cPLDs\u201d) and ROM and RAM devices. Examples of computer readable instructions include machine code, such as produced by a compiler, and files containing higher-level code that are executed by a computer using an interpreter. For example, an embodiment of the invention may be implemented using Java, C++, or other object-oriented programming language and development tools. Another embodiment of the invention may be implemented in hard-wired circuitry in place of, or in combination with machine readable software instructions.",{"@attributes":{"id":"p-0062","num":"0073"},"figref":"FIG. 8","b":["800","800","805","855","800","840","855","810","815","810","815","805","815","800","825","830","800","825","830","800","835","800","850","850","800","845","800","820","860","860","860","850","860"]},"A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases, such as, relational, transactional, hierarchical, multi-dimensional (e.g., OLAP), object oriented databases, and the like. Further data sources include tabular data (e.g., spreadsheets, delimited text files), data tagged with a markup language (e.g., XML data), transactional data, unstructured data (e.g., text files, screen scrapings), hierarchical data (e.g., data in a file system, XML data), files, one or more reports, and any other data source accessible through an established protocol, such as, Open DataBase Connectivity (ODBC), produced by an underlying software system (e.g., ERP system), and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams, broadcast data, and the like. These data sources can include associated data foundations, semantic layers, management systems, security systems and so on.","A semantic layer is an abstraction overlying one or more data sources. It removes the need for a user to master the various subtleties of existing query languages when writing queries. The provided abstraction includes metadata description of the data sources. The metadata can include terms meaningful for a user in place of the logical or physical descriptions used by the data source. For example, common business terms in place of table and column names. These terms can be localized and or domain specific. The layer may include logic associated with the underlying data allowing it to automatically formulate queries for execution against the underlying data sources. The logic includes connection to, structure for, and aspects of the data sources. Some semantic layers can be published, so that it can be shared by many clients and users. Some semantic layers implement security at a granularity corresponding to the underlying data sources' structure or at the semantic layer. The specific forms of semantic layers includes data model objects that describe the underlying data source and define dimensions, attributes and measures with the underlying data. The objects can represent relationships between dimension members, provides calculations associated with the underlying data.","The above descriptions and illustrations of embodiments of the invention, including what is described in the Abstract, is not intended to be exhaustive or to limit the invention to the precise forms disclosed. While specific embodiments of, and examples for, the invention are described herein for illustrative purposes, various equivalent modifications are possible within the scope of the invention, as those skilled in the relevant art will recognize. These modifications can be made to the invention in light of the above detailed description. Rather, the scope of the invention is to be determined by the following claims, which are to be interpreted in accordance with established doctrines of claim construction."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The claims set forth the embodiments of the invention with particularity. The invention is illustrated by way of example and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. The embodiments of the invention, together with its advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings.",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
