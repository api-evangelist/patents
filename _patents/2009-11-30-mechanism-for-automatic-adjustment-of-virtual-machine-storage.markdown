---
title: Mechanism for automatic adjustment of virtual machine storage
abstract: A mechanism for automatic adjustment of virtual machine (VM) storage is disclosed. A method of embodiments of the invention includes stopping, by a host computing device, a virtual machine (VM) hosted by the host computing device from running upon detecting a write error due to lack of storage on the VM, communicating, by the host computing device, an out-of-storage notification from a hypervisor of the host computing device to a host management agent, and sending, by the host computing device, data associated with the out-of storage notification and the VM to a host controller that manages the host computing device, wherein the host controller causes storage for the VM to be increased.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08244956&OS=08244956&RS=08244956
owner: Red Hat Israel, Ltd.
number: 08244956
owner_city: Raanana
owner_country: IL
publication_date: 20091130
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","DETAILED DESCRIPTION"],"p":["The embodiments of the invention relate generally to virtual machine systems and, more specifically, relate to a mechanism for automatic adjustment of virtual machine storage.","In computer science, a virtual machine (VM) is a portion of software that, when executed on appropriate hardware, creates an environment allowing the virtualization of an actual physical computer system. Each VM may function as a self-contained platform, running its own operating system (OS) and software applications (processes). Typically, a virtual machine monitor (VMM) manages allocation and virtualization of computer resources and performs context switching, as may be necessary, to cycle between various VMs.","A host machine (e.g., computer or server) is typically enabled to simultaneously run multiple VMs, where each VM may be used by a local or remote user. The host machine allocates a certain amount of the host's resources to each of the VMs. Each VM is then able to use the allocated resources to execute applications, including operating systems known as guest operating systems. The VMM virtualizes the underlying hardware of the host machine or emulates hardware devices, making the use of the VM transparent to the guest operating system or the the user of the VM.","Recently, solutions providing centralized hosting for VMs that run (virtual) desktops have been developed. Such solutions consist of centralized servers that are partitioned into multiple VMs that host the VMs, thereby providing a desktop for each user. The centralized hosting provides the manageability of sever-based computing, while the dedicated environment provides the flexibility and compatibility with applications that a desktop enables.","However, one problem that arises with centralized hosting of VMs is that it demands large allocation of storage for all of the VMs. Such large allocation of storage is especially painful when there are many VMs being hosted, a common scenario in desktop virtualization. In order to deal with this problem, sparse storage allocation solutions have been developed to address the problem.","With a sparse storage allocation solution, each VM is allocated some minimum storage space out of the shared pool of storage. The storage allocation per VM is usually a small amount that is allocated on-demand; rather than allocating to each VM the maximum amount of storage that the VM may use. Virtualization systems require storage allocation in this sparse manner in order to conserve disk space for use only by VM systems that require the storage.","During VM execution, more disk space is generally allocated on-the-fly as needed. However, under this system, a VM will most likely reach a certain point where it has utilized all available disk space that it has been allocated. At this point, conventional systems require some sort of human interaction to stop the VM, adjust the storage allocation to the VM, and may even require restarting the VM. Furthermore, if the VM is not stopped when it runs out of storage, then additional problems may occur, such as guest fs confusion\/recovery, high CPU usage, and so on. Such manual interaction and other resulting problems are costly in terms of overhead and time-consuming in terms of performance. As such, a mechanism for automatic adjustment of virtual machine storage without manual user intervention would be beneficial.","Embodiments of the invention provide a mechanism for automatic adjustment of virtual machine (VM) storage. A method of embodiments of the invention includes stopping, by a host computing device, a virtual machine (VM) hosted by the host computing device from running upon detecting a write error due to lack of storage on the VM, communicating, by the host computing device, an out-of-storage notification from a hypervisor of the host computing device to a host management agent, and sending, by the host computing device, data associated with the out-of storage notification and the VM to a host controller that manages the host computing device, wherein the host controller causes storage for the VM to be increased.","In the following description, numerous details are set forth. It will be apparent, however, to one skilled in the art, that the present invention may be practiced without these specific details. In some instances, well-known structures and devices are shown in block diagram form, rather than in detail, in order to avoid obscuring the present invention.","Some portions of the detailed descriptions which follow are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here, and generally, conceived to be a self-consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated. It has proven convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers, or the like.","It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise, as apparent from the following discussion, it is appreciated that throughout the description, discussions utilizing terms such as \u201csending\u201d, \u201creceiving\u201d, \u201cattaching\u201d, \u201cforwarding\u201d, \u201ccaching\u201d, or the like, refer to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system's registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage, transmission or display devices.","The present invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes, or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium, such as, but not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, and magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, or any type of media suitable for storing electronic instructions, each coupled to a computer system bus.","The algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein, or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear as set forth in the description below. In addition, the present invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein.","The present invention may be provided as a computer program product, or software, that may include a machine-readable medium having stored thereon instructions, which may be used to program a computer system (or other electronic devices) to perform a process according to the present invention. A machine-readable medium includes any mechanism for storing or transmitting information in a form readable by a machine (e.g., a computer). For example, a machine-readable (e.g., computer-readable) medium includes a machine (e.g., a computer) readable storage medium (e.g., read only memory (\u201cROM\u201d), random access memory (\u201cRAM\u201d), magnetic disk storage media, optical storage media, flash memory devices, etc.), a machine (e.g., computer) readable transmission medium (non-propagating electrical, optical, or acoustical signals), etc.","Embodiments of the invention provide a mechanism for automatic adjustment of virtual machine (VM) storage. Some virtualization systems allocate minimal storage to VMs in order to save storage space on the disk. Consequently, during VM execution, more disk space may be needed by a VM, which will be allocated to the VM on-the-fly as needed. Embodiments of the invention eliminate any human interaction previously required to provide this additional storage allotment to VMs. Specifically, embodiments of the invention determine when a VM has reached a threshold storage utilization, stop the VM, adjust storage allocation for the VM, and resume the VM, all in an automated manner which precludes manual user intervention.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1","b":["100","100","109","101","102","102","109","109","131","101","109","109"]},"The host machines  are also coupled to data storage . The data storage  includes one or more mass storage devices (e.g., disks), which form a storage pool shared by all of the host machines . In one embodiment, the data storage  is a network-based storage system, such as network attached storage (NAS), storage area networks (SANs), or other storage systems. In one embodiment, data storage  may be coupled to a storage manager  that performs managerial functions for the data storage . The storage manager  may reside on a dedicated machine or share the machine with other components of system .","The clients  may include computing devices that have a wide range of processing capabilities. Some of the clients  may be thin clients, which have limited processing and memory capacities. For example, a thin client may a laptop computer, cellular phone, personal digital assistant (PDA), a re-purposed desktop computer, etc. Some of the clients  may be thick (fat) clients, which have powerful CPUs and large memory. For example, a thick client may be a dual-core or multi-core computer, workstation, graphics workstation, etc. The client  may run client applications such as a Web browser and a graphic user interface (GUI). The client  may also run other client applications, which receive multimedia data streams or other data from one or more host computers  and re-direct the received data to a local display or other user interface.","As mentioned previously, each host machine  may run one or more VMs . Each VM  runs a guest operating system (OS) that may be different from one VM to another. The guest OS may include Microsoft Windows, Linux, Solaris, Mac OS, etc. Furthermore, each host machine  may include a hypervisor  that emulates the underlying hardware platform for the VMs  that it hosts. The hypervisor  may also be known as a virtual machine monitor (VMM) or a kernel-based hypervisor. In some embodiments, the hypervisor  is part of a host operating system.","Each VM  can be accessed by one or more of the clients  over the network . In one scenario, each VM  provides a virtual desktop for the client . From the user's point of view, the virtual desktop functions as a physical desktop (e.g., a personal computer) and is indistinguishable from a physical desktop.","The host machines  may be managed by a host controller . The host controller  may be a separate machine coupled to the host machines  directly or via a network. Alternatively, the host controller  may be part of one of the host machines . The host controller  may add a VM , delete a VM , balance the load on the cluster of host machines , provide directory service to the VMs , and perform other managerial functions. Additionally, each host machine  includes a host management agent . The host management agent is responsible for managing all of the activities related to VM maintenance, including resource allocation (e.g., storage, RAM, networking, etc.), VM initialization, VM monitoring, VM termination, controlling some dynamic capabilities of the VM, and so on.","According to one embodiment of the present invention, each VM , upon initialization, is allocated some minimum storage space out of the shared pool of storage . It should be noted that although embodiments of the invention are described in terms of a shared pool of storage, it is envisioned that embodiments of the invention may also be equally applied to local or remote non-shared storage architectures. The storage allocation per VM  is typically a sparse amount that is allocated on-demand. In such a system a VM  is not allocated the maximum amount of storage  that the VM may use. Virtualization systems require storage allocation in this sparse manner in order to conserve disk space for use only by VM systems that truly require the storage. During VM execution, more disk space is generally allocated from the shared storage pool  on-the-fly and as needed. However, previous techniques to handle this additional allotment of storage to a VM were not done automatically and consequently required some sort of manual intervention by a human.","In one embodiment of the invention, when a VM  fully utilizes its current storage allotment, a fault (write error) is generated due to the lack of storage space. An exit from the VM  is made upon the write request and resulting fault, and the write-error is then seen by the hypervisor . The hypervisor  examines an ID of the fault and determines that the fault was caused by the out-of-storage write error (in cases of an actual out-of-storage error). Subsequently, the hypervisor  sends an out-of-storage notification identifying the particular VM , and in some embodiments the faulting storage, to the host management agent  on the host machine . In one embodiment, the out-of-storage notification is provided to the host management agent  via an application programming interface (API).","At this point, the host management agent  sends the data received from the hypervisor , including the out-of-storage notification and the VM  identification, to the host controller . In turn, the host controller  generates a request to increase the storage allotment from the shared storage pool  to send to a storage manager of the shared storage pool . In one embodiment, the storage manager may be the central storage manager  previously described above, or it may be a storage pool manager enabled in one of the host machines  (not shown) or in the host controller . The storage manager will then allot additional storage for the VM  and send a message back to the host controller  that the VM  may resume operations. This message is propagated to the host management agent  that originated the request, which then notifies the hypervisor  and it causes the VM  to be re-activated. This notification between the host management agent  and the hypervisor  may take place utilizing another API.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 2","FIG. 1"],"b":["200","200","210","220","230","235","109","107","103","105"]},"Host machine  hosts a plurality of VMs  that are virtualized by hypervisor . Host machine  also includes a host management agent  connected to hypervisor  via a monitor channel . According to one embodiment of the present invention, upon initialization each VM  is allocated some minimum storage space out of the shared pool of storage . As the VM  is not allocated its maximum amount of storage that it may use, it will typically require additional storage allocation at a later time when it has used its current storage allotment. In one embodiment, when the VM  utilizes its current storage allotment, a write error occurs on the VM  due to the lack of space and is, in turn, detected by the hypervisor .","Subsequently, the hypervisor  sends an out-of-storage notification identifying the particular VM , and in some cases the faulting storage, to the host management agent . The out-of storage notification is sent to the host management agent  via a monitor channel  that communicably couples the hypervisor  and the host management agent . In one embodiment, the out-of-storage notification is provided via an API, as previously discussed.","At this point, the host management agent  sends the data received from the hypervisor , including the out-of-storage notification and the VM  identification (and possibly the identification of the faulting storage), to the host controller . In turn, the host controller  generates a request to increase the storage allocation for the VM  from the shared storage pool . The request is sent by the host controller  to a storage manager  of the shared storage pool . In one embodiment, the storage manager  may be a central storage manager associated with the data storage cluster  or a storage pool manager enabled in the host machine  (not shown).","The storage manager  then allocates additional storage for the VM  and sends a message back to the host controller  indicating that the VM  may be resumed. This message is propagated to the host management agent  that originated the request, which then notifies the hypervisor  via the monitor channel  that the VM  may be reactivated. This notification between the host management agent  and the hypervisor  may take place via another API.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 3","FIG. 2"],"b":["300","300","300","200"]},"Method  begins at block  where a hypervisor detects a write error due to a lack of storage on a VM that it hosts. At block , the hypervisor sends an out-of-storage notification to a host management agent via a monitor channel communicably coupling the two components. In one embodiment, an API is used to communication the out-of-storage notification between the hypervisor and the host management agent. The host management agent then sends data related to the received out-of-storage notification and associated VM to a host controller at block .","Subsequently, at block , the host controller generates and sends a request to increase the storage allotment for the VM to a storage manager of a shared storage pool. The storage pool may be shared amongst many VMs and VM host machines. As mentioned above, although embodiments of the invention are described in terms of a shared pool of storage, it is envisioned that embodiments of the invention may also be equally applied to local or remote non-shared storage architectures. In one embodiment, the storage manager utilizes the request sent from the host controller to allocate additional storage for the VM according to any number of storage allotment techniques, which are outside of the scope of embodiments of the invention. At block , the host controller receives confirmation of the increased storage allotment for the VM from the storage manager. The host controller then propagates this confirmation of the increased storage allotment for the VM to the host management agent at block .","The host management agent in turn notifies the hypervisor, via the monitor channel, that the VM can be resumed as the VM's storage allotment has been increased. In one embodiment, another API is used to communicate the increased storage notification between the hypervisor and the host management agent at block . Lastly, at block , the hypervisor causes the VM to be resumed, which now can operate correctly with its increased storage allotment. It is important to note that method  allows storage for a VM to be adjusted automatically without any manual user intervention.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 4","b":"400"},"The exemplary computer system  includes a processing device , a main memory  (e.g., read-only memory (ROM), flash memory, dynamic random access memory (DRAM) (such as synchronous DRAM (SDRAM) or Rambus DRAM (RDRAM), etc.), a static memory  (e.g., flash memory, static random access memory (SRAM), etc.), and a data storage device , which communicate with each other via a bus .","Processing device  represents one or more general-purpose processing devices such as a microprocessor, central processing unit, or the like. More particularly, the processing device may be complex instruction set computing (CISC) microprocessor, reduced instruction set computer (RISC) microprocessor, very long instruction word (VLIW) microprocessor, or processor implementing other instruction sets, or processors implementing a combination of instruction sets. Processing device  may also be one or more special-purpose processing devices such as an application specific integrated circuit (ASIC), a field programmable gate array (FPGA), a digital signal processor (DSP), network processor, or the like. The processing device  is configured to execute the processing logic  for performing the operations and steps discussed herein.","The computer system  may further include a network interface device . The computer system  also may include a video display unit  (e.g., a liquid crystal display (LCD) or a cathode ray tube (CRT)), an alphanumeric input device  (e.g., a keyboard), a cursor control device  (e.g., a mouse), and a signal generation device  (e.g., a speaker).","The data storage device  may include a machine-accessible storage medium  on which is stored one or more set of instructions (e.g., software ) embodying any one or more of the methodologies of functions described herein. The software  may also reside, completely or at least partially, within the main memory  and\/or within the processing device  during execution thereof by the computer system ; the main memory  and the processing device  also constituting machine-accessible storage media. The software  may further be transmitted or received over a network  via the network interface device .","The machine-readable storage medium  may also be used to stored instructions to perform automatic adjustment of VM storage, such as that performed by method  described with respect to , and\/or a software library containing methods that call the above applications. While the machine-accessible storage medium  is shown in an exemplary embodiment to be a single medium, the term \u201cmachine-accessible storage medium\u201d should be taken to include a single medium or multiple media (e.g., a centralized or distributed database, and\/or associated caches and servers) that store the one or more sets of instructions. The term \u201cmachine-accessible storage medium\u201d shall also be taken to include any medium that is capable of storing, encoding or carrying a set of instruction for execution by the machine and that cause the machine to perform any one or more of the methodologies of the present invention. The term \u201cmachine-accessible storage medium\u201d shall accordingly be taken to include, but not be limited to, solid-state memories, and optical and magnetic media.","Whereas many alterations and modifications of the present invention will no doubt become apparent to a person of ordinary skill in the art after having read the foregoing description, it is to be understood that any particular embodiment shown and described by way of illustration is in no way intended to be considered limiting. Therefore, references to details of various embodiments are not intended to limit the scope of the claims, which in themselves recite only those features regarded as the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The invention will be understood more fully from the detailed description given below and from the accompanying drawings of various embodiments of the invention. The drawings, however, should not be taken to limit the invention to the specific embodiments, but are for explanation and understanding only.",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
