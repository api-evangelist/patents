---
title: DLP-enforced loss scanning, sequestering, and content indexing
abstract: A system and method is disclosed for implementing a data loss prevention (DLP) system configured to protect sensitive data in conjunction with corresponding content indexing (CI) metadata. In response to detecting a data loss risk, such as to data at rest (e.g., stored on a file system) and/or to data in motion (e.g., data being transmitted across a network) the system may perform any number of data loss prevention actions, including sequestering the data. The system may utilize an interface to a content indexing system in order to discover CI metadata associated with the data and sequester the CI metadata associated with the data. One or more common sequestration rules may be applied to the sequestration of the data and of the metadata. For example, the data and metadata may be encrypted using the same key and/or sequestered in the same location.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08572758&OS=08572758&RS=08572758
owner: Symantec Corporation
number: 08572758
owner_city: Mountain View
owner_country: US
publication_date: 20090330
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY","DETAILED DESCRIPTION"],"p":["1. Field of the Invention","This invention relates to the operation of data loss prevention systems and more specifically, to the protection of content indexing metadata using data loss prevention systems.","2. Description of the Related Art","A content indexing (CI) system may enable indexing, discovery, and\/or search of data on a computer system or network. For example, a CI application may perform a background scan of one or more file systems, during which the CI system scans the contents of various files in the file system(s). After scanning the contents of a given file, the CI application may generate metadata describing the contents of the file and associate the metadata with the file. For example, the CI application may record the association in an indexing database. The particular format of the CI metadata itself may vary depending on the particular CI system implementation.","The content indexing database may be used to enable quick searches of the file system content. In order to perform the search, a search engine may consult the indexing database rather than perform the relatively time consuming and computationally expensive task of content scanning various files in the file system.","In various systems and networks, the files scanned by a CI system may contain sensitive information, such as personal and\/or proprietary information. Such data may be considered sensitive from a business and\/or legal standpoint. For example, some computer files may contain proprietary information that the organization does not wish to be leaked to outside parties. In other examples, various legal constraints may require that an organization track personal information on its network, such as credit card numbers and\/or social security numbers. An organization may be legally required to abide by various data privacy and\/or breach notification laws that require the organization to notify customers or other stakeholders when their information may have been exposed.","In order to identify, monitor, and protect sensitive data, an organization may employ a Data Loss Prevention (DLP) system. Such systems may also be known as Data Leak Prevention, Information Leak Detection and Prevention, Information Leak Prevention, Content Monitoring and Filtering, Extrusion Prevention System, among other names.","To identify a data loss risk, a DLP system may need to determine whether a given file contains sensitive data. For example, to protect data \u201cat rest\u201d (e.g., stored in a file system) a DLP system may scan the contents of each file in a file system, for example, by using a background scan of the files, such as is commonly done with virus scanning or content indexing. For example, a background scan may be scheduled to scan all the files in a file system for sensitive data every evening at a predetermined time, or at any other interval. A DLP system may protect data in motion (e.g., being transmitted via a network) by scanning files before they are transferred. For example, in response to detecting that a given user is attempting to email a file to an outside party, the DLP system may scan the contents of the file to determine if it contains sensitive information.","If the contents of a given file are deemed sensitive, often according to a set of configurable heuristics, the DLP system may determine that a data loss risk exists and perform any number of protective DLP actions according to one or more data loss prevention rules. For example, if during a background scan, a DLP system detects that a given file at rest contains sensitive data (e.g., social security numbers, credit card numbers, etc.), the DLP system may sequester the file according to various sequestration rules. Under various sequestration rules, sequestering the file may include encrypting the file using a given algorithm and\/or key. Other sequestration rules may include storing the file or encrypted file in a safe backup storage location (i.e., a sequestration area) under certain access permissions. Access permissions to a sequestration area may be more restrictive than those to the file's original storage location.","In various embodiments, a DLP system may be configured to protect sensitive data in conjunction with any content indexing (CI) metadata associated with the sensitive data. In some embodiments, a DLP system may be configured to detect a data loss risk and respond by discovering CI metadata associated with the data and sequestering the data and the CI metadata. The DLP system may identify a data loss risk to data at rest, for example, by performing a background content scan of one or more files. Instead or additionally, the DLP system may identify a data loss risk to data in motion, for example, by monitoring network traffic and performing content scans on files being transferred to intra or inter-network recipients.","According to various embodiments, in response to detecting a data loss risk, the DLP system may sequester the data and related CI metadata. Sequestering may include encrypting the data and\/or moving or copying it to a backup storage location (i.e., a sequestration area), which may have more restrictive access permissions than the original storage location. In various embodiments, the data and metadata may be sequestered according to one or more common sequestration rules. For example, the data and metadata may be encrypted using the same encryption algorithm and\/or encryption key. In another example, the data and metadata may be moved to the same sequestration area and\/or the same access permissions may be applied to both the data and metadata.","While the invention is susceptible to various modifications and alternative forms, specific embodiments thereof are shown by way of example in the drawings and will herein be described in detail. It should be understood, however, that the drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed, but on the contrary, the intention is to cover all modifications, equivalents, and alternatives falling within the spirit and scope of the present invention as defined by the appended claims. It is noted that the word \u201cmay\u201d is used throughout this application in a permissive sense (i.e., having the potential to, being able to), not a mandatory sense (i.e., must).","A Data Loss Prevention (DLP) system as described herein may allow an organization to identify, monitor, and protect sensitive data on its computer systems and network. For example, a DLP system may scan the contents of a given file during a background content scan and identify each file that contains sensitive information. If the DLP system determines that the data is sensitive (e.g., contains personal, proprietary, or other private information such as a credit card number), then a data loss risk may exist and the DLP system may therefore perform a pre-determined protective action, such as sequestering the file, according to various rules. Sequestering may include encrypting the file and moving or copying the encrypted file to a safe, backup location.","The DLP system may be configured to detect a data loss risk and respond by performing any number of actions, according to one or more rules. As used herein, the term data loss risk may refer to any situation wherein the DLP system determines a risk of exposing sensitive information to inappropriate parties. A data loss risk to data \u201cat rest\u201d may exist if sensitive data, such as files containing sensitive information, are stored in a manner that may potentially expose the data to inappropriate parties. For example, an unencrypted file containing social security numbers that is stored in directory with insufficient access restrictions may present a data loss risk to data at rest. A data loss risk to data \u201cin motion\u201d may exist if sensitive data is about to be transferred across or out of a network, where it may be exposed to an inappropriate party. As used herein, the term data loss risk may refer to risk to either data at rest or in motion.","A content indexing (CI) system as described herein may also perform content scans of data stored on a system or network of systems. For example, a CI system may perform a background scan of one or more file systems by scanning the contents of each file. After scanning the contents of any given file, the CI system may generate CI metadata describing the contents of the file and associate the metadata with the file. For example, the CI system may record the association in an indexing database. The indexing database may then be used to enable a user to perform quick searches of the file system content. In order to perform the search, a search engine may consult the indexing database rather than perform the relatively time consuming and computationally expensive task of scanning the content of multiple files in the file system.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 1","FIG. 1"],"b":["100","110","120","130","140","110","120","130","115","110","125","135","120","130","130","110","120"]},"In , workstations  and , as well as server , reside within a common network . Using this network, the endpoints may communicate data to each other and to entities in external networks . For example, network  may be a local Ethernet network while external networks  may include a wide area network (e.g., internet) and other networks reachable via the wide area network. Data transmitted by the endpoint systems may be sensitive and its flow may therefore be monitored and controlled by the respective DLP system running on each endpoint system. Communications among the endpoint systems (, , and ) and from each endpoint system to entities on external networks  may include network file transfers, emails, instant messages, updates to databases, and\/or any other data transfer.","Each host-based DLP\/CI system ,  and  may also monitor information transmitted via means other than a network. For example, if a user attempts to move sensitive information onto a removable drive, such as a flash drive, the DLP software may detect and disallow the transmission. In response to detecting that a given transmission is attempting to move sensitive data, the DLP software may disallow the transmission and\/or sequester the data (e.g., by encrypting it and storing it in a safe location).","In addition to the host-based DLP\/CI systems ,  and ,  also illustrates a network-based DLP\/CI system  that functions to form a network DLP. A network DLP, sometimes referred to as a gateway-based DLP system, may include dedicated hardware and\/or software, such as gateway , typically installed on the network for monitoring the flow of sensitive data across the network. For example, a network DLP may be installed on a gateway machine to monitor all ingress and egress traffic from a given network, such as network , to external networks, such as external networks . Thus, a network DLP may detect sensitive data leaks to outside sources. A network DLP may monitor network traffic across internal links of a network, such as internal emails and\/or file transfers among the endpoint systems. A network DLP may inspect a data stream of network packets in order to determine which ones contain sensitive information. In such examples, a network DLP may need to identify sensitive information while observing multiple packet flows from various origins and to various destinations.","As will be described in further detail below, each DLP\/CI system as illustrated in  may further be configured to coordinate the protection of a given file (or other data) along with CI metadata associated with that file. In various embodiments, a CI subsystem may provide an interface, such as an Application Programming Interface (API), to a DLP subsystem, by which the DLP subsystem may discover metadata associated with an at-risk file. In response to detecting that a given file presents a data loss risk, the DLP subsystem may sequester that file and its associated CI metadata. In some embodiments, the data and metadata may be sequestered according to one or more common sequestration rules. For example, the file and its CI metadata may be encrypted using the same encryption algorithm and\/or encryption key.","It is noted that although  illustrates a system in which both host-based DLP functionality (i.e., as implemented by DLP\/CI systems ,  and  on respective host machines) as well as network-based DLP functionality (i.e., as implemented by DLP\/CI system  on gateway ) are employed, other systems are also possible. For example, in various embodiments, the functionality of a DLP\/CI system as described herein may be provided solely within one or more host machines, or solely on a gateway device.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 2","FIG. 1","FIG. 2"],"b":["200","200","205","200","230","240","250","230"]},"According to the embodiment of , CI subsystem  may be configured to index files  on file system , and generate respective CI metadata, such as , for those files. In various embodiments, the CI metadata may be stored as one or more files on the files system and\/or on any number of other file systems accessible by CI subsystem  and DLP subsystem . In one embodiment, CI subsystem  may include a scan agent  configured to perform a content scan files on file system  at regular intervals (e.g., nightly), during which it may scan files  and generate\/update respective CI metadata in .","File system  may span one or more physical drives and\/or machines. CI metadata  may be stored in the form of a database, one or more files, or any other form searchable by the CI system and\/or search engine. In order to execute a content search, CI subsystem  or a search engine may utilize CI metadata . In some embodiments, CI subsystem  may comprise a search engine. In various embodiments, CI metadata created based on the content of files  may be generated according to one or more rules sets by CI subsystem  (or a search engine), as desired.","DLP subsystem  may be configured to detect a data loss risk to sensitive data in motion by monitoring one or more network connections, as described above in conjunction with . In response to detecting an attempt to transmit data, DLP subsystem  may scan the contents of the data to determine if the data contains sensitive information. According to some embodiments, in response to detecting that a given file contains sensitive information, DLP subsystem  may prevent the transmission and\/or sequester the file along with its associated CI metadata.","In response to detecting a data loss risk to a given file, DLP subsystem  may also be configured to discover CI metadata associated with the file and sequester the file along with its corresponding CI metadata according to one or more common sequestration rules. For example, sequestration of the file and corresponding CI metadata according to a common rule may include encrypting the file and CI metadata using the same encryption algorithm and\/or the same encryption key. In some embodiments, sequestration according to a common rule may include copying or moving the file and metadata (and\/or their encrypted versions) to a common backup location, such as to sequestration area  on backup storage  and\/or creating an association between the data and metadata in the DLP backup system.","In various embodiments, backup storage  may comprise a sequestration area . Backup storage  may include a separate storage device from that or those that host file system . In some embodiments, file system  may include sequestration area . For example sequestration area  may comprise one or more directories in file system . In such embodiments, access permissions to one or more directories associated with sequestration area  may be set to restrict access. For example, sequestration area  may be fully accessible only to a given administrative user or users. In various embodiments, users other than the given administrative user(s) may have read-only permissions or no access permissions at all in sequestration area .","In some embodiments, any number of backup storage areas (e.g., ) and sequestration areas (e.g., ) may be used. In some examples, a single at-risk file may be moved to multiple sequestration areas. In others, various at-risk files may be moved to different sequestration areas, dependent on various DLP policies.","According to some embodiments, the CI subsystem  may provide an interface , such as a query interface and\/or a programmatic application programming interface (API), by which DLP subsystem  may discover CI metadata associated with a given at-risk file. For example, DLP subsystem  may query CI system interface  using a unique identifier of a file that is at risk of a causing a data loss, such as the fully-qualified file system filename of the at-risk file. As used herein, the term fully-qualified filename may refer to a file system filename which includes directory information and\/or any other data necessary for locating the file in the file system. According to such embodiments, in response to a query request, CI subsystem  may return information identifying the corresponding portion of CI metadata  to DLP subsystem . DLP subsystem  may then sequester the data and its corresponding CI metadata according to one or more common sequestration rules.","It is noted that in various embodiments, DLP subsystem  and CI subsystem  may be autonomous systems. In other embodiments, DLP subsystem  and CI subsystem  may be integrated as portions of a single software application. In various embodiments, DLP subsystem  may discover CI metadata for a given file by accessing CI subsystem  via query and\/or API interface (e.g., through CI interface ). Additionally or alternatively, DLP subsystem  and CI subsystem  may share access to common variables and\/or data structures such that DLP subsystem  may determine CI metadata associated with a given file without a need to query or otherwise utilize CI interface .",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 3","FIG. 3"],"b":["205","300"]},"In response to detecting the transmission attempt, the DLP subsystem  may determine if the file contains sensitive information, as in . In some embodiments, this determination may include performing a content scan of the file. If the content scan reveals that the file contains no sensitive information, as indicated by the negative exit from , then the DLP subsystem  may conclude that no data loss risk exists and allow the transmission, as in . However, if the file is found to contain sensitive information, as indicated by the affirmative exit from , then the DLP subsystem  may determine that a data loss risk exists and disallow the transmission, as in . In some embodiments, DLP subsystem  may be configured to determine that a file contains sensitive information by accessing CI metadata created for the file during a previously conducted background scan performed by scan agent , as described in further detail below.","In addition to disallowing the transmission, the DLP subsystem  may further be configured to sequester the file, as in . As discussed above, sequestering the file may include copying or moving the data to one or more sequestration areas, which may have limited access rights. In some embodiments, the data may be encrypted. A strong encryption algorithm, (e.g., RSA, 3DES, AES, etc.), may be used to perform such encryption.","In conjunction with sequestering the sensitive file involved in the file transfer, in various embodiments, the DLP subsystem  may attempt to locate CI metadata associated with the file, as in , and sequester that metadata as well, as in . In some embodiments, the CI metadata for each file may be kept in one or more separate files. In such embodiments, the association between each file and the file(s) containing its respective CI metadata may be kept in one or more association databases or lookup table files.","In various embodiments, the DLP subsystem  may access the association databases or lookup table files directly for performing the CI metadata discovery of . In other embodiments, the CI subsystem  may maintain the association database and\/or lookup table files and provide access to the DLP subsystem  via CI interface . In one such embodiment, the CI system interface may be query-based. For example, the DLP subsystem  may query the CI system using an identifier corresponding to the sensitive file (e.g., the fully-qualified file name of the sensitive file). The CI system may respond with one or more identifiers (e.g., fully-qualified file names) of the files containing the CI metadata corresponding to the sensitive file. In other embodiments, the CI interface may be an API.","In some embodiments, a single database or file may hold CI metadata relevant to multiple files. In such embodiments, the DLP subsystem  may identify and sequester only the parts of the database or file that hold CI metadata relevant to the sensitive, at-risk file. For example, in , the DLP subsystem  may identify that only a portion of a given file holds CI metadata relevant to the sensitive file. In response, the DLP subsystem  may sequester only the part of the file identified in , as part of sequestration operations of .","In some embodiments, the DLP subsystem  may apply one or more common sequestration rules to both the file and its CI metadata. For example, in one embodiment, if the DLP subsystem  determines that the sequestration of a given sensitive file (e.g., ) should include encrypting it, then it may apply this same rule to the sequestration of the file's CI metadata by also encrypting the CI metadata. In further embodiments, the DLP subsystem  may use the same encryption algorithm and\/or encryption key for encrypting the sensitive file and its CI metadata.","In another example, the DLP subsystem  may apply a rule that sequestering the sensitive file, as in , should comprise moving it to a backup location (e.g., sequestration area  in backup storage ) and restricting access to the file so that users, such as the one that initiated the transmission attempt of , cannot readily access it. In such an embodiment, the DLP subsystem  may apply the same rule to the CI metadata associated with the file. Thus, sequestering the file's associated CI metadata, as in , may include moving the metadata to the same sequestration area, or directory of the sequestration area, as the one to which the sensitive file was moved. Many further examples are possible, such as applying the identical replication policies, sequestration time limit policies, etc.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 4","b":"225"},"According to various embodiments, scan agent  may be configured to perform a scan of contents of files according to rules dictated both by CI subsystem  to thereby generate CI metadata to facilitate CI index searching, as well as rules dictated by DLP subsystem  (e.g., and provided through CI interface ) to thereby generate metadata usable by DLP subsystem  to determine that a file is sensitive upon an attempt to transmit the data, as discussed above. For example, upon detection of an attempt to transmit a particular file, DLP subsystem  may be configured to access the CI metadata to determine the file contains sensitive information. Scan agent  may alternatively or additionally be configured to sequester sensitive data and respective metadata during a background scan based, for example, on rules provided by DPL subsystem .","Accordingly, the method of  begins when scan agent  scans a given file, as in . The scan agent  may then generate CI metadata for the scanned file, as in . In some embodiments, if CI metadata already exists for the scanned file, the scan agent  may update that metadata depending on the content scan. As discussed above, the CI metadata may be stored in one or more files, which may each store CI metadata pertaining to one or more other files in the system. For example, a central database file may store CI metadata for all files in a file system.","According to the illustrated embodiment, the scan agent  may then associate the generated or modified CI metadata with the scanned file, as in . In various embodiments, this association may be recorded in a database or one or more lookup files or data structures. This database may be the same as the one holding the CI metadata itself.","Once the file is associated with the most up-to-date CI metadata, the scan agent  may also be configured to determine whether a data loss risk exists, as in . If a data loss risk exists (e.g., the file contains a given header that is indicative of sensitive information and the file not protected with sufficient access controls), the scan agent  may be configured to sequester the file and its respective metadata, as in . As in , the sequestration of the file and metadata in  may proceed according to one or more common sequestration rules as set by DLP subsystem .","Once the file and metadata are sequestered (as in ) or the scan agent  determines that no data loss risk exists (as indicated by the negative exit from ), the content scan may continue by examining the next file in the file system, as indicated by the feedback loop to . The method of  may be used to scan and protect files and associated metadata at rest in a file system. For example, the method may be executed on a regular schedule as a background scan of the contents of a given file system.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 5","FIG. 2"],"b":"500"},"Computer system  may include one or more processors , each of which may include multiple cores, any of which may be single or multi-threaded. The computer system  may also include one or more persistent storage devices  (e.g. optical storage, magnetic storage, hard drive, tape drive, solid state memory, etc), which may store data implementing one or more file systems . File systems  may store sensitive data, such as files  and CI metadata  for indexing files . In some embodiments, file system  may contain one or more sequestration areas  for storing sequestered data as described herein.","Computer system  may include one or more memories  (e.g., one or more of cache, SRAM, DRAM, RDRAM, EDO RAM, DDR  RAM, SDRAM, Rambus RAM, EEPROM, etc.). Computer system  may include one or more network interfaces  for transmitting and receiving data, which may be monitored for sensitive data using a DLP system, as described herein. Various embodiments may include fewer or additional components not illustrated in  (e.g., video cards, audio cards, additional network interfaces, peripheral devices, a network interface such as an ATM interface, an Ethernet interface, a Frame Relay interface, etc.)","The one or more processors , storage device(s) , network interface  and system memories  may be coupled to system interconnect . One or more of the system memories  may contain program instructions . Program instructions  may be encoded in platform native binary, any interpreted language such as Java\u2122 byte-code, or in any other language such as C\/C++, Java\u2122, etc or in any combination thereof. Program instructions  may include program instructions executable by processors  that implement the DLP subsystem  with the capability to protect files and associated CI metadata, as described herein. Program instructions  may also be executable to implement CI subsystem  for performing content indexing of files  in file system . CI system  may include a discovery interface, such as CI interface , that may allow DLP subsystem  to discover metadata associated with a given file or a file associated with given metadata.","The DLP\/CI system as described herein for protecting files and their associated metadata may be provided as a computer program product, or software, that may include a computer-readable storage medium having stored thereon instructions, which may be used to program a computer system (or other electronic devices) to perform a process according to various embodiments. A computer-readable storage medium may include any mechanism for storing information in a form (e.g., software, processing application) readable by a machine (e.g., a computer). The machine-readable storage medium may include, but is not limited to, magnetic storage medium (e.g., floppy diskette); optical storage medium (e.g., CD-ROM); magneto-optical storage medium; read only memory (ROM); random access memory (RAM); erasable programmable memory (e.g., EPROM and EEPROM); flash memory; electrical, or other types of medium suitable for storing program instructions. In addition, program instructions may be communicated using optical, acoustical or other form of propagated signal (e.g., carrier waves, infrared signals, digital signals, etc.)","Although the embodiments above have been described in considerable detail, numerous variations and modifications will become apparent to those skilled in the art once the above disclosure is fully appreciated. It is intended that the following claims be interpreted to embrace all such variations and modifications."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
