---
title: System and method for transaction access control
abstract: A computer implemented system controls transaction access of requester applications running on end-user computers having network protocol addresses, to internal applications and their associated transactions running in internal transaction areas of host computer systems. Related to each network protocol address, a requester database contains information related to each network protocol address including end-user identification, possible username and password and instructions, possible priority levels of select transactions, and authorized transactions. A listener listens for a connect request from one of the end-user computers. A validator, using the requester database, determines whether the end-user computer has a valid network protocol address. An external communication module receives subsequent transaction requests from validated end-user computers and a validator in conjunction with a requester database determines among other things whether the transactions requested are authorized for particular end-user computers. Usernames and passwords are sent to an external security manager for authorized transactions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06980989&OS=06980989&RS=06980989
owner: Attachmate Corporation
number: 06980989
owner_city: Bellevue
owner_country: US
publication_date: 20011113
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCES TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application is a National Stage Application of International Application No. PCT\/US01\/47786, filed Nov. 13, 2001, which claims the benefit under 35 U.S.C. \u00a7119(e) of U.S. Provisional Patent Application No. 60\/248,240, filed Nov. 13, 2000, where this provisional application is incorporated by reference in its entirety.","1. Field of the Invention","The invention relates generally to computer applications, systems and methods, and more particularly to computer systems and methods for controlling access to transactions associated with an internal transaction area of a host computer.","2. Description of the Related Art","Conventional host computer systems provide services for typically large numbers of end-users using end-user computers such as terminals, personal computers, workstations, and computer servers. The services are furnished through internal applications running in internal transaction areas of the host computer systems, which allow for series of transactions to occur between the host computer systems and the end-user computers. Each transaction is typically a bounded unit of work or finite task associated with an internal transaction area. Any particular internal transaction area has numerous associated transactions, so the examples given herein are merely representative and exemplary in nature and not to be construed to be all-inclusive. For instance, a transaction could return data, or could put data, or could add data.","Access to the internal applications and their associated transactions is typically authorized based upon the sensitivity of the internal applications and their associated transactions compared with the degree of physical security precautions implemented in the particular locale in which the end-user computers are located. For instance, regarding internal application sensitivity, if the internal applications and their related transactions are associated with such data as financial data, inventory data, trade secret data, or management planning data, the applications and transactions would most likely be viewed as having a relatively high level of sensitivity. On the other hand, if the internal applications and their associated transactions are related to information readily obtained by the general public such as retail prices of particular items, general news, or other types of general interest data, the internal applications and their associated transactions would most likely be viewed as having a lesser level of sensitivity.","Regarding physical security, a relatively high degree of physical security, for instance, could involve end-user computers being located in buildings having physically controlled access, such as through manned checkpoints, barriers operated by badge reading devices, and locked doors. A relatively high degree of physical security could also involve end-user computers having communication nodes that were directly tied into the host computer system and were difficult to remove from their locale. A relatively low degree of physical security, for instance, could involve the end-user computers being located in areas accessible to the general public or using communication nodes that were shared with the general public.","If an internal application and its associated transactions are deemed to have a relatively high degree of sensitivity, oftentimes, if at least one or a few number of end-user computers have a relatively low degree of associated physical security, then correct input of usernames (user-identification) and passwords is required of all of the associated end-users using any end-user computer, regardless of the physical security of the end-user computer involved, in order to be given proper authorization to access the internal application and associated transactions. Other times, a particular internal application and its associated transactions could be deemed as having a relatively high enough degree of sensitivity that input of usernames and passwords would be required not only to access the particular internal application and its associated transactions, but also to access other internal applications running on the host computer system regardless of the physical security of any associated end-user computer.","It is unfortunate in these conventional approaches that if usernames and passwords are required by a host computer system of end-users of particular end-user computers to access an internal application of the host computer system, the requirement is generally imposed upon all end-users of any end-user computers, regardless of the physical security of the end-user computers. The inflexibility of these conventional approaches, at times, introduces unnecessary inconvenience to some, if not many of the end-users of a particular internal application. The end-user computer with the relatively lowest level of physical security is a decisive reason regarding the requirement for entry of usernames and passwords for an entire group of end-user computers accessing the particular internal application and its associated transactions.","To compound the inconvenience, oftentimes a particular internal application and its associated transactions with the relatively highest level of sensitivity is also another decisive reason for the requirement for entry of usernames and passwords. Consequently, even though some or most of a group of internal applications and their associated transactions running on a host computer system have a relatively low level of sensitivity that requires no entry of usernames and passwords regardless of the physical security of the end-user computer, entry of usernames and passwords is still required because of a relatively highly sensitive internal application and its associated transactions running on the host computer system.","Herein are described computer based systems and methods directed toward these and other issues. Other features and advantages will become apparent from the following detailed description, taken in conjunction with the accompanying drawings.","A transaction access control system is for use with an internal transaction area and an internal application running in the internal transaction area on a host computer connected to a network, for use with an external security manager configured to receive and authenticate a first plurality of pairs of usernames and passwords to permit or deny access to the internal transaction area, and for use with a first plurality of end-user computers communicatively linked to the host computer via the network, the end-user computers each having at least one of a first plurality of network protocol addresses and a requester application. Aspects include a requester database configured to contain for each of the first plurality of network protocol addresses of the first plurality of end-user computers, an associated one of the first plurality of pairs of usernames and passwords. A controller is configured to receive the first plurality of network protocol addresses sent from the first plurality of the end-user computers via the network and received by the host computer.","Further aspects include a validator configured to retrieve from the requester database each of the first plurality of username and password pairs associated with each of the first plurality of network protocol addresses based upon at least each of the first plurality of network protocol addresses. The controller is further configured to transmit each of the retrieved username and password pairs to be authenticated by the external security manager to permit access to the internal transaction area to each of the requester applications of the end-user computers having the first plurality of network protocol addresses which are associated with the retrieved username and password pairs.","Other features and advantages of the invention will become apparent from the following detailed description, taken in conjunction with the accompanying drawings.","Described herein are systems and methods for transaction access control of requester applications running on end-user terminal-emulator computers, client computers, and\/or server computers to control access to internal applications and their associated transactions running in internal transaction areas of host computer systems. The transaction access control systems are configured to operate cooperatively with external security managers that are conventionally provided to operate with the internal transaction areas and that are configured to receive and authenticate a plurality of pairs of usernames and passwords to permit or deny access to the internal transaction areas based upon username-password authentication. The transaction access control systems and methods use network protocol addresses, such as IP and IPX, of the end-user requester computers running the requester applications to identify particular end-user computers requesting access to particular internal applications and their associated transactions. A requester database contains fields including those identifying network protocol addresses (such as either individual addresses or ranges of addresses) of the end-user computers, and at least some of the following associated with each network protocol address: identification of the associated end-user, the username or other identifier of the end-user and password to be used if any, instructions regarding use of the username and password (such as whether the end-user should be challenged to submit their username and password and if a challenge is required, whether the submitted username and password should be verified with respect to the requester database before being sent to the external security manager), transaction execution priorities (for instance, containing designators possibly indicating priorities based upon transaction type, end-user involved, or a combination), and authorized transactions available.","The requester database allows an administrator to associate end-users with particular network protocol addresses. The administrator can customize how the transaction access control system will respond to transaction access requests by various end-users using end-user computers based upon the network protocol address of the particular end-user computer that is being used. For instance, the administrator can configure the transaction access control system so that for given network protocol addresses requesting certain transactions involving particular internal applications, usernames and passwords stored in the requester database are supplied to the external security manager of the host computer system to allow the end-user computers associated with the given network protocol addresses, access to the certain transactions involving particular internal applications.","Other end-user computers associated with other network protocol addresses can be denied access or challenges can be issued by the transaction access control system. For instance, a challenge can be issued requesting the username and password of the end-user using the particular end-user computer. The username and password furnished by the end-user can be optionally compared by the transaction access control system with the associated username and password stored in the requester database. The furnished username and password is sent to the external security manager of the host computer system if the optional comparison is not made or the optional comparison is made with a successful match occurring. The administrator has flexibility in assigning various priorities to different network protocol addresses so that transaction access requests by end-user computers are given different treatment regarding execution scheduling depending on the priorities assigned. The administrator can also identify which transactions are authorized for a particular network protocol address so that unauthorized transaction requests are denied before reaching the internal area access of the host computer system and its associated external security manager.","In these and other ways, the transaction access control system acts as a front end to the internal transaction area of the host computer system and its external security manager to offload initial security filtering of transaction requests such that in general only authorized transaction requests by validated end-user computers reach the internal transaction area of the host computer system and its associated external security manager. Also, potential exists for greater convenience to the end-users relative to conventional approaches since requirements for username and password entry can be identified to particular network protocol addresses and their associated end-user computers.","Further consequences of the transaction access control system can include generally eliminating the necessity for end-users to know mainframe usernames and passwords. Initial screening and front end security can be increased without over-burdening existing host security systems. Remote configuration of requester databases associated with the transaction control system need not require systems programming knowledge. Network protocol address ranges (such as IP or IPX address ranges) can be tailored to correspond to enterprise organizations, geographies, or job categories. Competing transaction requests can be prioritized through use of the requester database and network protocol addresses based upon attributes such as related to organization, geography, transaction type, or transaction runtime characteristics (such as being batch oriented, burst oriented, real-time interactive, associated with application systems type, or having externally imposed priorities). Redirection of transaction requests based upon their network protocol addresses to other host computer systems can be transparent to the end-user. Categories of transaction requests can be channeled to specific regions of the internal transaction area of the host computer system, to increase efficiencies, based upon the network protocol addresses of the transaction requests. Usernames and passwords can be provided by the transaction access control system based upon the network protocol addresses to facilitate access to internal transaction areas where no traditional logon was possible due to limitations of particular host internal area access systems (such as bridges) involved. Potential for challenged responses from the host internal area access system is possible to allow for real-time collection of usernames and passwords from the end-users.","In the following description, numerous specific details are provided to understand implementations. One skilled in the relevant art, however, will recognize that the invention can be practiced without one or more of these specific details, or with other equivalent elements and components, etc. In other instances, well-known components and elements are not shown, or not described in detail, to avoid obscuring aspects of the invention or for brevity. In other instances, the invention may still be practiced if steps of the various methods described could be combined, added to, removed, or rearranged.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 1"},"Referring to , a conventional personal computer, referred to herein as a client computer , includes a processing unit , a system memory  and a system bus  that couples various system components including the system memory to the processing unit. The client computer  will at times be referred to in the singular herein, but this is not intended to limit implementations to a single client computer since in typical implementations, there will be more than one client computer or other device involved. The processing unit  may be any logic processing unit, such as one or more central processing units (CPUs), digital signal processors (DSPs), application-specific integrated circuits (ASICs), etc. Unless described otherwise, the construction and operation of the various blocks shown in  are of conventional design. As a result, such blocks need not be described in further detail herein, as they will be understood by those skilled in the relevant art.","The system bus  can employ any known bus structures or architectures, including a memory bus with memory controller, a peripheral bus, and a local bus. The system memory  includes read-only memory (\u201cROM\u201d)  and random access memory (\u201cRAM\u201d) . A basic input\/output system (\u201cBIOS\u201d) , which can form part of the ROM , contains basic routines that help transfer information between elements within the client computer , such as during start-up.","The client computer  also includes a hard disk drive  for reading from and writing to a hard disk , and an optical disk drive  and a magnetic disk drive  for reading from and writing to removable optical disks  and magnetic disks , respectively. The optical disk  can be a CD-ROM, while the magnetic disk  can be a magnetic floppy disk or diskette. The hard disk drive , optical disk drive  and magnetic disk drive  communicate with the processing unit  via the bus . The hard disk drive , optical disk drive  and magnetic disk drive  may include interfaces or controllers (not shown) coupled between such drives and the bus , as is known by those skilled in the relevant art. The drives ,  and , and their associated computer-readable media, provide nonvolatile storage of computer readable instructions, data structures, program modules and other data for the client computer . Although the depicted client computer  employs hard disk , optical disk  and magnetic disk , those skilled in the relevant art will appreciate that other types of computer-readable media that can store data accessible by a computer may be employed, such as magnetic cassettes, flash memory cards, digital video disks (\u201cDVD\u201d), Bernoulli cartridges, RAMs, ROMs, smart cards, etc.","Program modules can be stored in the system memory , such as an operating system , one or more application programs , other programs or modules  and program data . The system memory  also includes a browser  for permitting the client computer  to access and exchange data with sources such as web sites of the Internet, corporate intranets, or other networks as described below, as well as other server applications on server computers such as those further discussed below. The browser  in the depicted implementation is markup language based, such as Hypertext Markup Language (HTML), Extensible Markup Language (XML) or Wireless Markup Language (WML), and operates with markup languages that use syntactically delimited characters added to the data of a document to represent the structure of the document. Although the depicted implementation shows the client computer  as a personal computer, in other implementations, the client computer is some other computer related device such as a personal data assistant (PDA) or a cell phone or other mobile device.","While shown in  as being stored in the system memory , the operating system , application programs , other programs\/modules , program data  and browser  can be stored on the hard disk  of the hard disk drive , the optical disk  of the optical disk drive  and\/or the magnetic disk  of the magnetic disk drive . Included with the application programs  and with the other programs\/modules , or terminal emulation programs. A user can enter commands and information into the client computer  through input devices such as a keyboard  and a pointing device such as a mouse . Other input devices can include a microphone, joystick, game pad, scanner, etc. (not shown). These and other input devices are connected to the processing unit  through an interface  such as a serial port interface that couples to the bus , although other interfaces such as a parallel port, a game port or a wireless interface or a universal serial bus (\u201cUSB\u201d) can be used. A monitor  or other display device is coupled to the bus  via a video interface , such as a video adapter. The client computer  can include other output devices, such as speakers, printers, etc.","The client computer  can operate in a networked environment using logical connections to one or more remote computers, such as a server computer . The server computer  can be another personal computer, a server, another type of computer, or a collection of more than one computer communicatively linked together and typically includes many or all of the elements described above for the client computer . The server computer  is logically connected to one or more of the client computers  under any known method of permitting computers to communicate, such as through a local area network (\u201cLAN\u201d) , or a wide area network (\u201cWAN\u201d) or the Internet  wherein the server computer  is communicatively linked by a conventional network connectivity . Such networking environments are well known in wired and wireless enterprise-wide computer networks, intranets, extranets, and the Internet. Other implementations include other types of communication networks including telecommunications networks, cellular networks, paging networks, and other mobile networks.","When used in a LAN networking environment, the client computer  is connected to the LAN  through an adapter or network interface  (communicatively linked to the bus ). When used in a WAN networking environment, the client computer  often includes a modem  or other device, such as the network interface , for establishing communications over the WAN\/Internet . The modem  is shown in  as communicatively linked between the interface  and the WAN\/Internet . In a networked environment, program modules, application programs, or data, or portions thereof, can be stored in the server computer . In the depicted implementation, the client computer  is communicatively linked to the server computer  through the LAN  or the WAN\/Internet  with TCP\/IP middle layer network protocols; however, other similar network protocol layers are used in other implementations. Those skilled in the relevant art will readily recognize that the network connections shown in  are only some examples of establishing communication links between computers, and other links may be used, including wireless links.","In some implementations, the server computer  is further communicatively linked to a legacy host data system  typically through the LAN  or the WAN\/Internet  or other networking configuration such as a direct asynchronous connection (not shown) wherein the legacy host data system  is communicatively linked by the network connectivity . With other implementations, the client computer  is further communicatively linked (not shown) to the legacy host data system  typically through the LAN  or the WAN\/Internet  or other networking configurations such as a direct asynchronous connection. Other implementations may support the server computer  and the legacy host data system  by one computer system by operating all server applications and legacy host data system on the one computer system. The legacy host data system  in an exemplary implementation is an International Business Machines (IBM) 390 mainframe computer configured to support IBM 3270 type terminals. Other exemplary implementations use other vintage host computers such as IBM AS\/400 series computers, UNISYS Corporation host computers, Digital Equipment Corporation VAX host computers and Asynchronous host computers as the legacy host data system . The legacy host data system  is configured to run host applications  such as in system memory and store host data  such as business related data.","An exemplary implementation uses Sun Microsystems Java programming language to take advantage of, among other things, the cross-platform capabilities found with the Java language. For instance, exemplary implementations include the server computer  running Windows NT, Win2000, Solaris, Apple MacIntosh OS (e.g. 9.x or X) or Linux operating systems. In exemplary implementations, the server computer  runs Apache Tomcat\/Tomcat Jakarta web server, Microsoft Internet Information Server (ISS) web server, or BEA Weblogic web server.","Apache is a freely available Web server that is distributed under an \u201copen source\u201d license and runs on most UNIX-based operating systems (such as Linux, Solaris, Digital UNIX, and AIX), on other UNIX\/POSIX-derived systems (such as Rhapsody, BeOs, and BS2000\/OSD), on ArnigaOS, and on Windows 2000\/NT\/95\/98\/ME. Windows-based systems with Web servers from companies such as Microsoft and Netscape are alternatives, but Apache web server seems suited for enterprises and server locations (such as universities) where UNIX-based systems are prevalent. Other implementations use other web servers and programming languages such as C, C++, and C#.","A transaction access control system  is illustrated in  as running on the legacy host data system . Included on the legacy host data system  of the transaction control system  is an internal transaction area  with internal applications . Also included is a communication protocol , a listener , and external communication module (ECM) , an access state controller , a requester database , an external security manager , and a validator . For some implementations, when needed, a host internal area access  is also included to provide access to the internal transaction area . The transaction control system  is connected by a network such as the LAN  or WAN\/Internet  to an end-user computer  being one of the client computers  as a personal computer\/workstation or as a terminal emulation program platform, or being one of the server computers .","The end-user computer  runs a requester application  and is connected to the LAN  or the WAN\/Internet  to use the communication protocol  to communicate with the legacy host data system  including the transaction control system . In some implementations, the requester application  typically includes an application program interface (API) written in the perspective of a high-level language such as High Level Language Application Programming Interface (HLLAPI), Server Enterprise Access Class Library (SEACL) (Attachmate Corp., Bellevue, Washington), etc. to indicate, for instance, row and column of a virtual computer terminal from or into which data is to be extracted or placed. In other implementations, one or more of the client computers  and\/or the server computers  can be running a terminal emulation to communicate with the legacy host data system  via the communication protocol . The transaction access control system  is connected by a network such as the LAN  or WAN\/Internet  to a configurator  being one of the client computers  as a personal computer\/workstation or as a terminal emulation program platform, or being one of the server computers . The configurator  allows an administrator to configure the requester database  remotely through graphical user interfaces without sophisticated systems level expertise required. In other implementations, the configurator  is located on the legacy host data system . In implementations, some components of the transaction access control system , such as the validator  and the requester database , can be located on computers other than the legacy host data system  receiving a particular transaction request from the end-user computer . Relocation of some components of the transaction access control system  may provide advantages such as related to performance efficiencies or resource allocation issues.","In some implementations, the access state controller  controls invocation of the host internal area access  across multiple internal applications  and maintains in-transaction and out-of-transaction states necessary to satisfy the host internal area access, the internal transaction area , and other areas of the legacy host data system  of the transaction access control system . In these implementations, the access state controller  maintains the state of the host internal area access , and interface components of the requester applications  while only requiring the requester applications to maintain transactions through conventional screen-scraping interfaces and other mechanisms familiar with developers of external applications. Furthermore, the access state controller  analyzes addresses of received communication from the requester applications  with respect to state information of associated internal applications  running in the designated internal transaction area . Based upon this analysis, the access state controller  either sends communication from the requester applications  in a format compliant with the internal transaction area  to one of the internal applications  in the internal transaction area via a host internal area access  or first send communication to a virtual host terminal (not shown) also running on the same legacy host data system  of the internal transaction area. The virtual host terminal reflects what a computer terminal handling communication compliant with the internal transaction area would display when operating on a network and is described in a co-pending application.","In implementations of the transaction access control system , the host internal area access  can be systems including host bridges, bridge exits, and program exits to allow communication with one or more of the internal applications  running in the internal transaction area  of the legacy host computer system . These implementations of the host internal area access  allow for one or more cycle points of the internal applications , which give control of the internal applications to applications external to the internal transaction area  including host and client applications and modules that run outside of the internal transaction area. This control of the internal applications  allows end-users of the external applications, such as the requester applications , to access internal application data, which would otherwise typically be accessed through antiquated legacy application systems. In order to access the internal applications  through the host internal area access , in some implementations, as described, languages oriented toward the internal transaction area  of the legacy host computer system  are used. In other implementations, the host internal area access  is configured such that the access state controller  is not required to the extent described, but is still used in conjunction with the validator  in the requester database  as described below.","Furthermore, host internal area access systems conventionally used without benefit of the transaction access control system  typically do not readily facilitate secured transactions such as when usernames and passwords are used. Consequently, those conventionally involved with applications external to the internal transaction area  must develop workarounds conventionally used to address requirements associated with secured transactions such as providing usernames and passwords. Unfortunately, these conventional workarounds tend only to be partially satisfactory. For instance, conventionally used applications external to the internal transaction area  have limited ability to communicate with the host internal area access  regarding aspects related to secure transactions, which results in the applications external to the internal transaction area having no feedback as to whether the usernames and passwords, which are sent, are correct. In cases when usernames and passwords are incorrectly provided by the external applications, the secured transactions with the host internal area access systems fail without indication of the failure provided to the external applications.","The host internal area access  generally does not provide prompts or sign-on screens when the internal transaction area  and the internal applications  require usernames and passwords for access by the external applications, such as when the internal transaction area involves International Business Systems (IBM) Customer Information Control System (CICS) with a sign-on transaction based security system. It is possible for conventional approaches to use external applications that themselves prompt and save usernames and passwords to insert into every transaction into the access state controller , however, these approaches only partially address the problems involved. If usernames and passwords are managed by the applications external to the internal transaction area to be provided with every transaction into the host internal area access , problems arise when a username or password is improperly entered by an end-user.","Given the configuration of the typical host internal area access  and how the applications external to the internal transaction area may implement management of usernames and passwords, if an improper username or password is entered by an end-user and forwarded to the host internal area access , the transaction would simply fail without a status message regarding the username or password ever being sent back to the external application. End-users of applications external to the internal transaction area would experience failure in communication with the internal transaction area  and the internal applications  without appreciating the source of their problems. They may naturally be led to believe that the source of the communication failures was somehow located in the internal transaction area  without realizing that the source of the communications problems was due to their improper entry by the end-users of usernames and\/or passwords. The transaction access control system  addresses these and other issues as described herein by assigning entry of the usernames and passwords into the requester database  to an administrator who most likely would be also assigned to enter the usernames and passwords in corresponding fashion into the database of the external security manager .","The external communication module , running on the legacy host data system  outside of the internal transaction area , is designed to receive from the requester applications , standardized high-level language based communication rather than computer terminal communication expected by the internal applications . The high-level languages include, but are not limited to, High-Level Language Application Programming Interface (HLLAPI), Server Enterprise Class Library (SEACL), Host Publishing Interfaces such as QACOM (a set of HLLAPI style interfaces by Attachmate Corp., Bellevue, Wash.), the OHIO specification (created jointly between IBM Corp. and Attachmate Corp., Bellevue, Wash.), and various playback\/record interfaces conventionally known as navigation, macros, and\/or scripting.","The external communication module  is also designed to receive from the requester applications , direct binary communication compliant with the particular internal transaction area , such as IBM CICS or one related to IBM AS\/ or UNISYS operating systems, on the legacy host data system  running the internal applications . The external communication module  is configured to route received communication from the requester applications  to the proper access state controller  or other appropriate processes. The external communication module  is also configured to convert external communication received from the requester applications  that is not in binary form compliant with the internal transaction area , such as markup languages including XML and HTML and other forms using protocols such as including HTTP. If needed, the external communication module  converts received communication into binary formatted data compliant with the internal transaction area .","The exemplary implementation of  also has the listener , which listens for initial connect messages from the requester applications  and helps establish transaction links between the requester applications and the external communication module . In some implementations, the operational combination of the access state controller  and the external communication module  results in communication, through the host internal area access , between requester applications  and the internal applications  running in the internal transaction area . Communication is provided without end-users of the requester applications  requiring expertise directed toward the host internal area access  and the internal transaction area , such as with programming languages, architectures, data structures, assembly languages, and other aspects. Examples of such expertise involves IBM CICS, IBM 3270 Bridge Exit, IBM CICS Front End Programming Interface (FEPI), or whatever mainframe integration technology developers of the external applications used to drive their legacy mainframe internal applications. This expertise typically includes knowledge of older programming and assembly languages and data structures involved with such languages as COBOL, PL\/1, 370 Assembler and other languages. The expertise also generally includes, but is not limited to, the internal architecture, pseudo-conversational transactions, and conversational transactions of the internal transaction area, associated quasi-reentrant programming models, asynchronously started transactions, and continuity of multiple instantiations of multiple internal applications to achieve some overall goal. In other implementations, the requester applications  are configured using expertise directed toward the host internal area access  such that less conversion and\/or less state tracking is necessary by the combination of the external communication module  and the access state controller . In some of these other implementations, the internal transaction area  and the host internal area access  have less demanding requirements for expertise thus allowing a configuration of the requester applications  more native to the internal transaction area.","A communication diagram showing an exemplary interaction between components of a representative implementation of the transaction access control system , other components of the legacy host data system , and one of the end-user computers  is illustrated in . As depicted in this communication diagram, the end-user computer  first sends a connect request  to the legacy host data system . The listener  receives the connect request  and passes socket identification, network protocol address information of the end-user computer  (such as the IP or IPX address), and other user request data  to the external communication module . The external communication module  then sends the network protocol address information  (such as an IP or IPX address) of the end-user computer  to the validator .","The validator  performs validation functions including verifying that the network protocol address information corresponds to a valid network protocol address in accordance with the requester database . Upon performing validation functions, the validator  then sends to the external communication module  a connect response  indicating whether the network protocol address  corresponds to a valid network protocol address. Based upon the connect response  received from the validator , the external communication module  will then send a connect response  to the end-user computer  indicating the outcome of the connect request  as either a successful or failed connection. If the connect request  is successful, the end-user computer  will then send a transaction request  to the external communication module . The external communication module  will then send appropriate transaction request data  to the access state controller .","Upon receipt of the transaction request data , the access state controller  then sends information including the end-user computer network protocol address  and designating code of the requested transaction in the form of a message  to the validator . In response to the receipt of the message , the validator  performs transaction validation functions based upon the end-user computer network protocol address  and the designating code of the requested transaction in accordance with the requester database . Implementations of the transaction access control system  can include the following transaction validation functions: verification that the requested transaction is authorized for the network protocol address  associated with requesting end-user computer , determination whether the requesting end-user computer should be issued a challenge to enter username and password, determination whether the username and password submitted by the challenged end-user computer should be compared with the username and password associated with the network protocol address of the challenged end-user computer found in the requester database , and determination whether the code associated with the requested transaction is valid.","After performing transaction validation functions, the validator  then sends a transaction response  to the access state controller  containing instructions either challenging the end-user computer , declining the transaction request , or accepting the transaction request. If the transaction response  contains instructions regarding a challenge or a decline, the access state controller  will then send a message  containing either a challenge or a decline to the external communication module . The message  would contain a challenge if the validator  has determined that the end-user computer  should be challenged to provide a username and password. On the other hand, the message  would contain a decline if the validator  has determined that the end-user computer  should be notified that the requested transaction for the network protocol address  is invalid. Upon receipt of the message , the external communication module  sends a message  to the end-user computer  indicating either a corresponding challenge or decline. If the message  is a challenge, the end-user computer  will send a challenge response  to the external communication module  containing a submitted username and password. The external communication module  will then send a challenge response  with the submitted username and password to the validator . The submitted username and password will then be checked by the validator  with respect to the requester database  and the validator will then send a challenge response  to the access state controller  indicating whether the submitted username and password was valid or not.","As a consequence of receiving a valid challenge response  or of receiving instructions in the transaction response  to accept the transaction request , the access state controller  will send transaction data  to a designated one of the internal applications  via the host internal area access  if the validator has determined that the transaction request is valid for the network protocol address  associated with the end-user computer  and that no challenge is necessary. The transaction data  can include the user name and password, in accordance with the requester database , associated with the network protocol address  if needed by the external security manager , which could be running as Resource Access Control Facility (RACF), ACF, TopSecret, or other security packages. If the username and password of the end-user of the end-user computer  is needed in the transaction data , the external security manager  first verifies the username and password before the transaction data is sent to the internal transaction area  to be subsequently received by the designated internal application . Although the implementation of the transaction access control system  includes the validator  having validation functions described above, in other implementations of the transaction access control system, the validation functions are performed by versions of the external communication module  and the access state controller  thereby eliminating the necessity for a separate component or module for the validator.","Upon receipt of the transaction data , the internal application  performs the requested transaction and sends resultant response data  to the access state controller . Upon receipt of the response data , the access state controller  sends a response data  to the external communication module . Upon receipt of the response data , the external communication module  sends a response data  to the end-user computer .","An illustration of a method  of a representative implementation for the listener  to receive initial external communication requests is shown in . The method  opens a socket for the listener  to listen for initial connect requests sent from one of the end-user computers  (step ) and sets the socket in a listen state (step ). When an initial connect request is heard by the listener , the method  then pends an accept of a socket connect from the associated requester application  (step ). Socket identification for the requester application  is then received (step ). The external communication module  is then started to communicate with the requester application  (step ) and the method  then goes back to step .","An illustration of a method  of a representative implementation for the external communication module  is shown in , B, and C. According to the method , the external communication module  receives a communication from one of the requester applications , a determination is made whether the communication is a connect request and if not (NO branch of decision step ), a determination is made whether the communication is a disconnect request and if not (NO branch of decision step ), a determination is made whether the communication is a transaction request and if not (NO branch of decision step ), an error message is set (step ) and the method  returns to the caller or ends.","If the communication is a connect request (YES branch of decision step ), a method , illustrated in , is executed starting by determining whether filtering is enabled and if so (YES branch of decision step ), the network protocol address (such as an IP or IPX address) associated with the origination of the communication is validated (step ) and the method goes to decision step . If the network protocol address (such as an IP or IPX address) is valid (YES branch of decision step ), resources are allocated (step ), a success message is sent (step ) and the method  returns to the caller or ends. If filtering is not enabled (NO branch of decision step ), resources are allocated (step ), a success message is sent (step ), and the method  returns to the caller or ends. If the network protocol address (such as an IP or IPX address) is not valid (NO branch of decision step ), a failure message is sent (step ), the socket connection associated with the communication is closed (step ), and the method  returns to the caller or ends. If the communication is a disconnect request (YES branch of decision step  of ), internal resources are freed (step ), a success message is sent (step ), and the method  returns to the caller or ends.","If the communication is a transaction request (YES branch of decision step ), a method  is executed, illustrated in , starting by determining whether validation has been enabled and if not (NO branch of decision step ), the access state controller  is called (step ), a response for the external application associated with the communication is formatted and sent (step ), and the method  returns to the caller or ends. Otherwise (YES branch of decision step ), a determination is made whether a response has been received and if so (YES branch of decision step ), a determination is made whether an identification check is required and if so (YES branch of decision step ), identification is verified in decision step . If an identification check is not required (NO branch of decision step ), the method  goes to step . If identification is not verified (NO branch of decision step ), an error message is set (step ), and the method  returns to the caller or ends. Otherwise (YES branch of decision step ), the method  goes to step . If a response has not been received (NO branch of decision step ), a determination is made whether the communication is a start of a request and if not (NO branch of decision step ), the method  goes to step . Otherwise (YES branch of decision step ), the transaction is validated (step ). If the transaction is not valid (NO branch of decision step ), an error message is set (step ) and the method  returns to the caller or ends. If the transaction is valid (YES branch of decision step ), determination is made whether identification is required and if so (YES branch of decision step ), a message is set to supply identification (step ) and the method  returns to the caller or ends. Otherwise (NO branch of decision step ), the method  goes to step .","An illustration of a method  associated with the transaction access control system  regarding preparation by the validator  is provided by . The method  has the requester database  read into a host memory table of the legacy host data system  (step ). The host memory table is then sorted by network protocol address (such as an IP or IPX address) (step ). The method  then returns to the caller or ends.","An illustration of a method  associated with the transaction access control system  regarding user validation performed by the validator  on a network protocol address (such as an IP or PX address) contained in one of the connect requests  sent by one of the end-user computers  is provided by . The method  performed by the validator  parses the network protocol address  (such as an IP or IPX address) sent to the validator in a validation request by the external communication module  (step ). If the network protocol address  is not in the host memory table containing the requester database  (NO branch of decision step ), the validator  indicates in the connect response  sent back to external communication module  that the network protocol address (such as an IP or IPX address) is not authorized (step ) and the method  returns to the caller or ends. Otherwise (YES branch of decision step ), the validator  indicates in the connect response  sent back to external communication module  that the network protocol address  (such as an IP or IPX address) is authorized (step ) and the method  returns to the caller or ends.","An illustration of a method  associated with the transaction access control system  regarding transaction validation performed by the validator  on transaction request data contained in one of the transaction requests  sent by one of the end-user computers  is provided by . The method  performed by the validator  parses the network protocol address  (such as an IP or IPX address) of the end-user computer  contained by one of the messages  and transaction request code sent to the validator within one of the messages  containing the network protocol address  (such as an IP or IPX address) of the end-user computer  by the access state controller  (step ). The validator  then determines, based upon the network protocol address  and the code of the transaction request found in the message , the appropriate response to send back to the access state controller . Based upon this determination, the validator  then sends one of the transaction responses  back to the access state controller  indicating whether the transaction request has been authorized, has been denied, or whether the end-user computer  must be challenged for a username and password (step ) and the method  returns to the caller or ends.","An illustration of a method  containing a more detailed representative example associated with the transaction access control system  regarding transaction validation performed by the validator  on a transaction request contained in one of the connect requests  sent by one of the end-user computers  is provided by . The method  performed by the validator  parses the network protocol address  (such as an IP or IPX address) of the end-user computer  contained by one of the messages  and transaction request code sent to the validator within one of the messages  containing the network protocol address  (such as an IP or IPX address) of the end-user computer  by the access state controller  (step ). The validator  then determines, based upon the network protocol address  and the code of the transaction request found in the message , the appropriate response to send back to the access state controller . Based upon this determination, the validator  then sends one of the transaction responses  back to the access state controller  indicating whether the transaction request has been authorized, has been denied, or whether the end-user computer  must be challenged for a username and password. For instance, if the validator  determines that the requested transaction is unknown to the internal transaction  (NO branch of decision step ), the validator returns the transaction response  to the access state controller  indicating that the transaction is invalid (step ) and the method  returns to the caller or ends. Otherwise (YES branch of decision step ), if the validator  determines that the network protocol address  is not authorized (NO branch of decision step ), the validator returns the transaction response  to the access state controller  indicating that the network protocol address is not authorized (step ) and the method  returns to the caller or ends. Otherwise (YES branch of decision step ), if the validator  determines that the end-user computer  should not be challenged for a usename and password (NO branch of decision step ), the validator returns the transaction response  to the access state controller  indicating that the transaction request is authorized and no challenges for username and password are necessary (step ) and the method  returns to the caller or ends. Otherwise (YES branch of decision step ), if the validator  determines that the username and password submitted by the end-user computer  in response to the challenge does not need to be compared with the requester database  before sending them to the external security manager  (NO branch of decision step ), the validator returns the transaction response  to the access state controller  indicating that the transaction request is authorized, the end-user computer should be challenged for username and password, and that the username and password submitted by the end-user computer does not need to be compared (step ) and the method  returns to the caller or ends. Otherwise (YES branch of decision step ), the validator returns the transaction response  to the access state controller  indicating that the transaction request is authorized, the end-user computer  should be challenged for username and password, and that the username and password submitted by the end-user computer is to be compared with the requester database  before sending them to the external security manager  (step ) and the method  returns to the caller or ends.","From the foregoing it will be appreciated that, although specific implementations of the invention have been described herein for purposes of illustration, various modifications may be made without deviating from the spirit and scope of the invention. Accordingly, the invention is not limited except as by the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 4","FIG. 2"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIGS. 5A","FIG. 2"],"b":["5","5"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 6","FIG. 2"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 7","FIG. 2"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 8","FIG. 2"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 9","FIG. 2"]}]},"DETDESC":[{},{}]}
