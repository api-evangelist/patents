---
title: Backing up at least one encrypted computer file
abstract: The present invention provides a method and system of backing up at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system and restoring at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system. In an exemplary embodiment, the method and system of backing up at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system include (1) receiving the filename of the encrypted computer file, (2) starting a backup process for the encrypted computer file, (3) disabling the encryption filter driver for the backup process, (4) backing up the encrypted computer file via the backup process, and (5) reenabling the encryption filter driver for the backup process.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07600133&OS=07600133&RS=07600133
owner: Lenovo Singapore Pte. Ltd
number: 07600133
owner_city: Singapore
owner_country: SG
publication_date: 20050224
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION","CONCLUSION"],"p":["The present invention relates to operating systems, and particularly relates to a method and system of backing up at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system and restoring at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system. A computer system may include an encryption filter driver which runs on the operating system of the computer system. For example, IBM Corporation (hereinafter \u201cIBM\u201d) has created an encryption filter driver called IBM File and Folder Encryption (hereinafter \u201cFFE\u201d) that runs on Microsoft Corporation's (hereinafter \u201cMicrosoft\u201d) Microsoft Windows (hereinafter \u201cWindows\u201d) operating system of a computer system. FFE utilizes an IBM Embedded Security Subsystem. FFE intercepts all computer file requests to the underlying computer filesystem of the computer system and allows for the encrypting of data in the computer files to disk.","With FFE, as the data in a computer file is being written to disk, for example in a computer file backup application, (1) the data is encrypted on disk and (2) additional encryption metadata is stored on disk as an invisible part of the filename of the computer file. The additional encryption metadata for the computer file can also be called an encryption seed for the computer file. Also, with FFE, as the data in a computer file is being read from disk, for example when the data is accessed by a typical user application (e.g. a word processing application or an electronic mail application), the data is decrypted from disk.","Backing Up Encrypted Files","Need for Backing Up Encrypted Files in their Encrypted State","However, FFE presents a problem for computer file backup applications or processes. In a computer file backup application, it is desirable for the backup application to be able to backup encrypted files in their encrypted state such that the data in the encrypted files is not compromised. In other words, it is desirable for a computer file backup system to be able to retrieve, for each encrypted computer file, (1) the encrypted data in the encrypted computer file and (2) the encryption metadata for the encrypted computer file, for a computer file backup application.","Prior Art Backup System","Unfortunately, as shown in prior art , in a typical prior art computer file backup system, the encryption filter driver does not have a provision for disabling itself just for a computer file backup application or process. In other words, as a default, the encryption filter driver is always enabled. As a result, the prior art computer file backup system is unable to backup encrypted files in their encrypted state.","As shown in prior art , another type of prior art computer file backup system requires the use of a full set of Application Programming Interface (API) routines that are specific to the operating system to get the encrypted data and the metadata from the computer system. For example, Microsoft's Encrypting File System (hereinafter \u201cEFS\u201d) requires the use of the following operating system-specific APIs:","1. OpenEncryptedFileRaw;","2. ReadEncryptedFileRaw; and","3. CloseEncryptedFileRaw.","Restoring Encrypted Files","Need for Restoring Encrypted Files in their Encrypted State","In addition, FFE presents a problem for computer file restore applications or processes. In a computer file restore application, it is desirable for the restore application to be able to restore encrypted files in their encrypted state such that the data in the encrypted files is not compromised. In other words, it is desirable for a computer file restore system to be able to retrieve, for each encrypted computer file, (1) the encrypted data in the encrypted computer file and (2) the encryption metadata for the encrypted computer file, for a computer file restore application.","Prior Art Restore System","Unfortunately, as shown in prior art , in a typical prior art computer file restore system, the encryption filter driver does not have a provision for disabling itself just for a computer file restore application or process. In other words, as a default, the encryption filter driver is always enabled. As a result, the prior art computer file restore system is unable to restore encrypted files in their encrypted state.","As shown in prior art , another type of prior art computer file restore system requires the use of a full set of Application Programming Interface (API) routines that are specific to the operating system to place the encrypted data and the metadata back into the computer system. For example, Microsoft's Encrypting File System (hereinafter \u201cEFS\u201d) requires the use of the following operating system-specific APIs:","1. OpenEncryptedFileRaw;","2. ReadEncryptedFileRaw; and","3. CloseEncryptedFileRaw.","Therefore, an improved method and system of backing up at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system and restoring at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system is needed.","The present invention provides a method and system of backing up at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system and restoring at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system. In an exemplary embodiment, the method and system of backing up at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system include (1) receiving the filename of the encrypted computer file, (2) starting a backup process for the encrypted computer file, (3) disabling the encryption filter driver for the backup process, (4) backing up the encrypted computer file via the backup process, and (5) reenabling the encryption filter driver for the backup process.","In an exemplary embodiment, the disabling includes sending an IOCTL request to the encryption filter driver for the backup process such that the encryption filter driver will not filter filesystem requests from the backup process. In a further embodiment, the disabling further includes (a) storing the process identifier of the backup process in a storage location and (b) allowing for the processing without filtering of filesystem requests to the encryption filter driver that have process identifiers matching entries stored in the storage location. In an exemplary embodiment, the backing up includes (a) retrieving encrypted data bytes in the encrypted computer file, (b) obtaining metadata stored in the filename of the encrypted computer file, and (c) storing the encrypted data bytes and the metadata to disk as a backup of the encrypted computer file.","In an exemplary embodiment, the reenabling includes making the encryption filter driver filter filesystem requests from the backup process. In a specific embodiment, the making includes closing the device handle of the encryption filter driver for the backup process. In a specific embodiment, the making includes sending an IOCTL request to the encryption filter driver for the backup process such that the encryption filter driver will filter filesystem requests from the backup process. In a further embodiment, the reenabling further includes (a) removing the process identifier of the backup process from a storage location and (b) allowing for the processing with filtering of all filesystem requests to the encryption filter driver.","The present invention also provides method and system of restoring at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system. In an exemplary embodiment, the method and system of restoring at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system include (1) receiving the filename of the encrypted computer file, (2) starting a restore process for the encrypted computer file, (3) if the encryption filter driver is not enabled, copying the encrypted computer file via the restore process, and (4) if the encryption filter driver is enabled, (a) disabling the encryption filter driver for the restore process, (b) restoring the encrypted computer file via the restore process, and (c) reenabling the encryption filter driver for the restore process.","In an exemplary embodiment, the disabling includes sending an IOCTL request to the encryption filter driver for the restore process such that the encryption filter driver will not filter filesystem requests from the restore process. In a further embodiment, the disabling further includes (a) storing the process identifier of the restore process in a storage location and (b) allowing for the processing without filtering of filesystem requests to the encryption filter driver that have process identifiers matching entries stored in the storage location. In an exemplary embodiment, the restoring includes (a) retrieving encrypted data bytes in the encrypted computer file from a backup of the encrypted computer file, (b) obtaining metadata stored in the filename of the backup of the encrypted computer file, and (c) copying the encrypted data bytes and the metadata to a target restore disk as a restore of the encrypted computer file.","In an exemplary embodiment, the reenabling includes making the encryption filter driver filter filesystem requests from the restore process. In a specific embodiment, the making includes closing the device handle of the encryption filter driver for the restore process. In a specific embodiment, the making includes sending an IOCTL request to the encryption filter driver for the restore process such that the encryption filter driver will filter filesystem requests from the restore process. In a further embodiment, the reenabling further includes (a) removing the process identifier of the restore process from a storage location and (b) allowing for the processing with filtering of all filesystem requests to the encryption filter driver.","The present invention also provides a computer program product usable with a programmable computer having readable program code embodied therein of backing up at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system. In an exemplary embodiment, the computer program product includes (1) computer readable code for receiving the filename of the encrypted computer file, (2) computer readable code for starting a backup process for the encrypted computer file, (3) computer readable code for disabling the encryption filter driver for the backup process, (4) computer readable code for backing up the encrypted computer file via the backup process, and (5) computer readable code for reenabling the encryption filter driver for the backup process.","The present invention also provides a method of providing a service to back up at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system. In an exemplary embodiment, the method includes (1) receiving the filename of the encrypted computer file, (2) starting a backup process for the encrypted computer file, (3) disabling the encryption filter driver for the backup process, (4) backing up the encrypted computer file via the backup process, and (5) reenabling the encryption filter driver for the backup process.","The present invention also provides a computer program product usable with a programmable computer having readable program code embodied therein of restoring at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system. In an exemplary embodiment, the computer program product includes (1) computer readable code for receiving the filename of the encrypted computer file, (2) computer readable code for starting a restore process for the encrypted computer file, (3) computer readable code for copying, if the encryption filter driver is not enabled, the encrypted computer file via the restore process, (4) computer readable code for disabling, if the encryption filter driver is enabled, the encryption filter driver for the restore process, (5) computer readable code for restoring, if the encryption filter driver is enabled, the encrypted computer file via the restore process, and (6) computer readable code for reenabling, if the encryption filter driver is enabled, the encryption filter driver for the restore process.","The present invention also provides a method of providing a service to restore at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system. In an exemplary embodiment, the method includes (1) receiving the filename of the encrypted computer file, (2) starting a restore process for the encrypted computer file, (3) if the encryption filter driver is not enabled, copying the encrypted computer file via the restore process, and (4) if the encryption filter driver is enabled, (a) disabling the encryption filter driver for the restore process, (b) restoring the encrypted computer file via the restore process, and (c) reenabling the encryption filter driver for the restore process.","The present invention provides method and system of backing up at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system and restoring at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system.","Backing Up Encrypted Computer Files","The present invention provides method and system of backing up at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system. In an exemplary embodiment, the encryption filter driver is FFE. In an exemplary embodiment, the operating system is the Windows operating system. In an exemplary embodiment, the method and system of backing up at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system include (1) receiving the filename of the encrypted computer file, (2) starting a backup process for the encrypted computer file, (3) disabling the encryption filter driver for the backup process, (4) backing up the encrypted computer file via the backup process, and (5) reenabling the encryption filter driver for the backup process.","Referring to , in an exemplary embodiment, the present invention includes a step  of receiving the filename of the encrypted computer file, a step  of starting a backup process for the encrypted computer file, a step  of disabling the encryption filter driver for the backup process, a step  of backing up the encrypted computer file via the backup process, and a step  of reenabling the encryption filter driver for the backup process. Referring next to , in an exemplary embodiment, the present invention includes a step  of receiving the filename of the encrypted computer file, a step  of starting a backup process for the encrypted computer file, a step  of disabling the FFE encryption filter driver for the backup process, a step  of backing up the encrypted computer file via the backup process, and a step  of reenabling the FFE encryption filter driver for the backup process.","Disabling the Encryption Filter Driver","Referring next to , in an exemplary embodiment, disabling step  includes a step  of sending an IOCTL request to the encryption filter driver for the backup process such that the encryption filter driver will not filter filesystem requests from the backup process. In a specific embodiment, the IOCTL is sent via Microsoft's DeviceIoControl API. In a specific embodiment, the IOCTL equals the following:","CTL_CODE(FILE_DEVICE_FFDRIVER, 0x0E, METHOD_BUFFERED, FILE_ANY_ACCESS).","In a specific embodiment, FILE_DEVICE_FFDRIVER equals 0x00008300.","In a further embodiment, as shown in , disabling step  further includes a step  of storing the process identifier of the backup process in a storage location and a step  of allowing for the processing without filtering of filesystem requests to the encryption filter driver that have process identifiers matching entries stored in the storage location.","Backing Up the Encrypted Computer File","Referring next to , in an exemplary embodiment, backing up step  includes a step  of retrieving encrypted data bytes in the encrypted computer file, a step  of obtaining metadata stored in the filename of the encrypted computer file, and a step  of storing the encrypted data bytes and the metadata to disk as a backup of the encrypted computer file.","Reenabling the Encryption Filter Driver","Referring next to , in an exemplary embodiment, reenabling step ","includes a step  of making the encryption filter driver filter filesystem requests from the backup process. In a specific embodiment, as shown in , making step  includes a step  of closing the device handle of the encryption filter driver for the backup process.","In a specific embodiment, as shown in , making step  includes a step  of sending an IOCTL request to the encryption filter driver for the backup process such that the encryption filter driver will filter filesystem requests from the backup process. In a specific embodiment, the IOCTL is sent via Microsoft's DeviceIoControl API. In a specific embodiment, the IOCTL equals the following:","CTL_CODE(FILE_DEVICE_FFDRIVER, 0x0D, METHOD_BUFFERED, FILE_ANY_ACCESS).","In a specific embodiment, FILE_DEVICE_FFDRIVER equals 0x00008300.","In a further embodiment, as shown in , reenabling step  further includes a step  of removing the process identifier of the backup process from a storage location and a step  of allowing for the processing with filtering of all filesystem requests to the encryption filter driver.","Restoring Encrypted Computer Files","The present invention also provides method and system of restoring at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system. In an exemplary embodiment, the encryption filter driver is FFE. In an exemplary embodiment, the operating system is the Windows operating system. In an exemplary embodiment, the method and system of restoring at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system include (1) receiving the filename of the encrypted computer file, (2) starting a restore process for the encrypted computer file, (3) if the encryption filter driver is not enabled, copying the encrypted computer file via the restore process, and (4) if the encryption filter driver is enabled, (a) disabling the encryption filter driver for the restore process, (b) restoring the encrypted computer file via the restore process, and (c) reenabling the encryption filter driver for the restore process.","Referring to , in an exemplary embodiment, the present invention includes a step  of receiving the filename of the encrypted computer file, a step  of starting a restore process for the encrypted computer file, and a step  of, if the encryption filter driver is enabled, (a) disabling the encryption filter driver for the restore process, (b) restoring the encrypted computer file via the restore process, and (c) reenabling the encryption filter driver for the restore process. In a further embodiment, as shown in , the present invention further includes a step  of, if the encryption filter driver is not enabled, copying the encrypted computer file via the restore process.","Referring next to , in an exemplary embodiment, the present invention includes a step  of receiving the filename of the encrypted computer file, a step  of starting a restore process for the encrypted computer file, and a step  of, if the FFE encryption filter driver is enabled, (a) disabling the FFE encryption filter driver for the restore process, (b) restoring the encrypted computer file via the restore process, and (c) reenabling the FFE encryption filter driver for the restore process. In a further embodiment, as shown in , the present invention further includes a step  of, if the FFE encryption filter driver is not enabled, copying the encrypted computer file via the restore process.","Disabling the Encryption Filter Driver","Referring next to , in an exemplary embodiment, the disabling includes a step  of sending an IOCTL request to the encryption filter driver for the restore process such that the encryption filter driver will not filter filesystem requests from the restore process. In a specific embodiment, the IOCTL is sent via Microsoft's DeviceIoControl API. In a specific embodiment, the IOCTL equals the following:","CTL_CODE(FILE_DEVICE_FFDRIVER, 0x0E, METHOD_BUFFERED, FILE_ANY_ACCESS).","In a specific embodiment, FILE_DEVICE_FFDRIVER equals 0x00008300.","In a further embodiment, as shown in , the disabling further includes a step  of storing the process identifier of the restore process in a storage location and a step  of allowing for the processing without filtering of filesystem requests to the encryption filter driver that have process identifiers matching entries stored in the storage location.","Restoring the Encrypted Computer File","Referring next to , in an exemplary embodiment, the restoring includes a step  of retrieving encrypted data bytes in the encrypted computer file from a backup of the encrypted computer file, a step  of obtaining metadata stored in the filename of the backup of the encrypted computer file, and a step  of copying the encrypted data bytes and the metadata to a target restore disk as a restore of the encrypted computer file.","Reenabling the Encryption Filter Driver","Referring next to , in an exemplary embodiment, the reenabling includes a step  of making the encryption filter driver filter filesystem requests from the restore process. In a specific embodiment, as shown in , making step  includes a step  of closing the device handle of the encryption filter driver for the restore process.","In a specific embodiment, as shown in , making step  includes a step  of sending an IOCTL request to the encryption filter driver for the restore process such that the encryption filter driver will filter filesystem requests from the restore process. In a specific embodiment, the IOCTL is sent via Microsoft's DeviceIoControl API. In a specific embodiment, the IOCTL equals the following:","CTL_CODE(FILE_DEVICE_FFDRIVER, 0x0D, METHOD_BUFFERED, FILE_ANY_ACCESS).","In a specific embodiment, FILE_DEVICE_FFDRIVER equals 0x00008300.","In a further embodiment, as shown in , the reenabling further includes a step  of removing the process identifier of the restore process from a storage location and a step  of allowing for the processing with filtering of all filesystem requests to the encryption filter driver.","Having fully described a preferred embodiment of the invention and various alternatives, those skilled in the art will recognize, given the teachings herein, that numerous alternatives and equivalents exist which do not depart from the invention. It is therefore intended that the invention not be limited by the foregoing description, but only by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"THE FIGURES","p":[{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 1C"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 1D"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 5C"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 5D"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 6B"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 6C"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 6D"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 7A"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 7B"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 9A"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 9B"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 9C"},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 9D"}]},"DETDESC":[{},{}]}
