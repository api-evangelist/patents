---
title: Techniques for defining, using and manipulating rights management data structures
abstract: A descriptive data structure provides an abstract representation of a rights management data structure such as a secure container. The abstract representation may describe, for example, the layout of the rights management data structure. It can also provide metadata describing or defining other characteristics of rights management data structure use and/or processing. For example, the descriptive data structure can provide integrity constraints that provide a way to state rules about associated information. The abstract representation can be used to create rights management data structures that are interoperable and compatible with one another. This arrangement preserves flexibility and ease of use without compromising security.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07062500&OS=07062500&RS=07062500
owner: Intertrust Technologies Corp.
number: 07062500
owner_city: Sunnyvale
owner_country: US
publication_date: 20000928
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application is a continuation of copending application Ser. No. 09\/300,778, filed Apr. 27, 1999, which is a continuation of application Ser. No. 08\/805,804, filed Feb. 25, 1997, now U.S. Pat. No. 5,920,861\u2014all of which are incorporated herein by reference.","This application is related to commonly assigned application Ser. No. 08\/388,107 of Ginter et al. entitled \u201cSYSTEMS AND METHODS FOR SECURE TRANSACTION MANAGEMENT AND ELECTRONIC RIGHTS PROTECTION,\u201d filed on Feb. 13, 1995; now abandoned and pending application Ser. No. 08\/699,712 of GINTER et al. entitled \u201cTRUSTED INFRASTRUCTURE SUPPORT SYSTEMS, METHODS AND TECHNIQUES FOR SECURE ELECTRONIC COMMERCE ELECTRONIC TRANSACTIONS AND RIGHTS MANAGEMENT\u201d filed on Aug. 12, 1999 now abandoned. The entire disclosures, including the drawings, of those prior filed specifications are incorporated by reference into this application.","This invention relates to techniques for defining, creating, and manipulating rights management data structures. More specifically, this invention provides systems and processes for defining and\/or describing at least some data characteristics within a secure electronic rights management container. The present invention also provides techniques for providing rights management data structure integrity, flexibility, interoperability, user and system transparency, and compatibility.","People are increasingly using secure digital containers to safely and securely store and transport digital content. One secure digital container model is the \u201cDigiBox\u2122\u201d container developed by InterTrust Technologies Corp. of Sunnyvale Calif. The Ginter et al. patent specification referenced above describes many characteristics of this DigiBox\u2122 container model\u2014a powerful, flexible, general construct that enables protected, efficient and interoperable electronic description and regulation of electronic commerce relationships of all kinds, including the secure transport, storage and rights management interface with objects and digital information within such containers.","Briefly, DigiBox containers are tamper-resistant digital containers that can be used to package any kind of digital information such as, for example, text, graphics, executable software, audio and\/or video. The rights management environment in which DigiBox\u2122 containers are used allows commerce participants to associate rules with the digital information (content). The rights management environment also allows rules (herein including rules and parameter data controls) to be securely associated with other rights management information, such as for example, rules, audit records created during use of the digital information, and administrative information associated with keeping the environment working properly, including ensuring rights and any agreements among parties. The DigiBox\u2122 electronic container can be used to store, transport and provide a rights management interface to digital information, related rules and other rights management information, as well as to other objects and\/or data within a distributed, rights management environment. This arrangement can be used to provide an electronically enforced chain of handling and control wherein rights management persists as a container moves from one entity to another. This capability helps support a digital rights management architecture that allows content rightsholders (including any parties who have system authorized interests related to such content, such as content republishers or even governmental authorities) to securely control and manage content, events, transactions, rules and usage consequences, including any required payment and\/or usage reporting. This secure control and management continues persistently, protecting rights as content is delivered to, used by, and passed among creators, distributors, repurposers, consumers, payment disagregators, and other value chain participants.","For example, a creator of content can package one or more pieces of digital information with a set of rules in a DigiBox secure container\u2014such rules may be variably located in one or more containers and\/or client control nodes\u2014and send the container to a distributor. The distributor can add to and\/or modify the rules in the container within the parameters allowed by the creator. The distributor can then distribute the container by any rule allowed (or not prohibited) means\u2014for example, by communicating it over an electronic network such as the Internet. A consumer can download the container, and use the content according to the rules within the container. The container is opened and the rules enforced on the local computer or other InterTrust-aware appliance by software InterTrust calls an InterTrust Commerce Node. The consumer can forward the container (or a copy of it) to other consumers, who can (if the rules allow) use the content according to the same, differing, or other included rules\u2014which rules apply being determined by user available rights, such as the users specific identification, including any class membership(s) (e.g., an automobile club or employment by a certain university). In accordance with such rules, usage and\/or payment information can be collected by the node and sent to one or more clearinghouses for payment settlement and to convey usage information to those with rights to receive it.","The node and container model described above and in the Ginter et al. patent specification (along with similar other DigiBox\/VDE (Virtual Distribution Environment) models) has nearly limitless flexibility. It can be applied to many different contexts and specific implementations. For example, looking at , a newspaper publisher can distribute a newspaper  within a container A. A publisher of fashion magazines  can distribute the fashion magazines within another container C. Similarly, for example, a wholesale banking environment may use yet a further container, an electronic trading system may use a still further container, and so on.","The InterTrust DigiBox container model allows and facilitates these and other different container uses. It facilitates detailed container customization for different uses, classes of use and\/or users in order to meet different needs and business models. This customization ability is very important, particularly when used in conjunction with a general purpose, distributed rights management environment such as described in Ginter, et al. Such an environment calls for a practical optimization of customizability, including customizability and transparency for container models. This customization flexibility has a number of advantages, such as allowing optimization (e.g., maximum efficiency, minimum overhead) of the detailed container design for each particular application or circumstance so as to allow many different container designs for many different purposes (e.g., business models) to exist at the same time and be used by the rights control client (node) on a user electronic appliance such as a computer or entertainment device.","While supporting a high degree of flexibility has great advantages, it can produce difficulties for the average user. For example, think of the process of creating a painting. A master painter creates a painting from a blank canvas. Because the canvas was blank at the beginning, the painter was completely unconstrained. The painting could have been a landscape, a portrait, a seascape, or any other image\u2014limited only by the painter's imagination. This flexibility allows a master painter to create a masterpiece such as the \u201cMona Lisa.\u201d However, great skill is required to create a pleasing image starting from a blank canvas. As a result, an inexperienced painter cannot be expected to create a good painting if he or she begins with a blank canvas.","Consider now an amateur painter just starting out. That person does not have the skill to transform a blank canvas to a pleasing image. Instead of spending years trying to acquire that skill, the amateur can go out and buy a \u201cpaint by numbers\u201d painting kit. Instead of using a blank canvas, the amateur painter begins with a preprinted canvas that defines the image to be painted. By following instructions (\u201call areas labeled \u201c\u201d should be painted with dark red,\u201d \u201call areas labeled with \u201c\u201d should be painted with light blue\u201d), the amateur can\u2014with relatively little skill\u2014paint a picture that is relatively pleasing to the eye. To do this, the amateur must rigidly adhere to the preprinted instructions on the canvas. Any deviations could cause the final image to come out badly.","Ease of use problems in the computer field can be analogized to the \u201cpaint by numbers\u201d situation. If it is important for untrained and\/or inexperienced users to use particular software, the system designers can predefine certain constructs and design them into the system. This technique allows inexperienced users to make use of potentially very complicated designs without having to fully understand them\u2014but this normally strictly defines, that is severely limits, the functionality and flexibility available by use of the program. As a result, creative solutions to problems are constrained in order to provide practical value. In addition, even the experienced user can find great advantage in using previously implemented designs. Because a user can program a complex program, for example, does not mean it is appropriate or efficient to create a program for a specific purpose, even if the previously implemented program is not ideal. If the creation of a new program \u201ccosts\u201d more to create, that is takes too much time or financial resources, the experienced user will normally use a previously implemented program, if available. Therefore, the greatest total amount of value to be realized, related to customization, is to be able to customize with great ease and efficiency so that the cost of customization will not exceed the benefits.","Uniformity, flexibility, compatibility and interoperability are other considerations that come into play in the computer field, particularly in regards to systems supporting customization. In the painting situation, the human eye can appreciate uniqueness\u2014and the \u201cone of a kind\u201d nature of a masterpiece such as the Mona Lisa is a big part of what makes a painting so valuable. In contrast, it is often desirable to make uniform at least the overall layout and format of things in the computer field. It is much more efficient for a computer to know beforehand how to treat and use objects. If the computer doesn't know beforehand how to read or handle an input object, for example, then the computer and the object are said to be \u201cincompatible\u201d, i.e., they cannot work together. Computers are said to be \u201cinteroperable\u201d if they can work together. Incompatibility and interoperability problems can prevent one computer from talking to another computer, and can prevent you from using computer data created by someone else.","For example, in the non-computer world, a Frenchman who knows only a little English as a second language, might find it far more meaningful and efficient to describe a complex problem in his native tongue, French. But if he is speaking to a second person, an Englishman, and the Englishman does not understand French, the two are not interoperable in French, and the Frenchman must resort to the far less efficient option of speaking in English to the Englishman. Of course, this is far better than if he was trying to speak to a German who understood neither English nor French. Then the two would be not be \u201cinteroperable\u201d in regards to discussing the problem. Similarly, because rights management containers may potentially be exchanged and used for a large number of different purposes by a large number of different users, groups, and organizations, it is very important to provide compatibility and interoperability if these different parties, each participating in one or more different rights management models, are to interoperate efficiently. For example, if a rights management container is used to distribute a newsletter and is optimized for this purpose, each reader of the newsletter must have a computer system or software that \u201cknows\u201d how to read the container and the newsletter it contains. Since commerce, such as distributing newsletters, needs to be as efficient and cost-effective as is feasible, it is important to optimize, that is customize, rights management containers to optimally reflect the requirements of their models and not to have unnecessary features for each respective application or class of application, since unnecessary features will require unnecessary computing overhead and\/or storage space.","Different newsletter publishers may use different container formats customized to their own particular newsletters and\/or content types and\/or formats. A newsletter reader interested in many different newsletters may need to be able to read a large number of different formats. It normally will not efficient (or, due to security issues, may not be appropriate) simply to analyze the different containers upon delivery and \u201ctry to figure out\u201d or otherwise discern the particular format in use.","Published standards may help achieve a level of interoperability and standards for given types of applications, but it generally takes a long time for any particular standard to achieve industry-wide acceptance and standards will need to vary widely between categories of applications. Moreover, data structure and other standards are often designed to the lowest common denominator\u2014that is, they will carry fields and requirements not needed by some, and miss others features optimal in certain cases. There will always be applications that cannot be optimized for efficiency and\/or operation if forced to use a specific standard.","Trade-offs between flexibility, ease of use and incompatibility and interoperability can be further complicated when security considerations come into play. To be effective in many electronic commerce applications, electronic container designs should be tamper-resistant and secure. One must assume that any tools widely used to create and\/or use containers will fall into the hands of those trying to break or crack open the containers or otherwise use digital information without authorization. Therefore, the container creation and usage tools must themselves be secure in the sense that they must protect certain details about the container design. This additional security requirement can make it even more difficult to make containers easy to use and to provide interoperability.","The above-referenced Ginter et al. patent specification describes, by way of non-exhaustive example, \u201ctemplates\u201d that can act as a set (or collection of sets) of control instructions and\/or data for object control software. See, for example, the \u201cObject Creation and Initial Control Structures,\u201d \u201cTemplates and Classes,\u201d and \u201cobject definition file,\u201d \u201cinformation\u201d method and \u201ccontent\u201d methods discussions in the Ginter et al. specification. The described templates are, in at least some examples, capable of creating (and\/or modifying) objects in a process that interacts with user instructions and provided content to create an object. Ginter et al. discloses that templates may be represented, for example, as text files defining specific structures and\/or component assemblies, and that such templates\u2014with their structures and\/or component assemblies\u2014may serve as object authoring and\/or object control applications. Ginter et al. says that templates can help to focus the flexible and configurable capabilities inherent within the context of specific industries and\/or businesses and\/or applications by providing a framework of operation and\/or structure to allow existing industries and\/or applications and\/or businesses to manipulate familiar concepts related to content types, distribution approaches, pricing mechanisms, user interactions with content and\/or related administrative activities, budgets, and the like. This is useful in the pursuit of optimized business models and value chains providing the right balance between efficiency, transparency, productivity, etc.","The present invention extends this technology by providing, among other features, a machine readable descriptive data structure for use in association with a rights management related (or other) data structure such as a secure container. In one example, the machine readable descriptive data structure may comprise a shorthand abstract representation of the format of the data within a rights management related data structure. This abstract data representation can be used to describe a single rights management data structure, or it may be generic to a family of data structures all following the format and\/or other characteristics the abstract representation defines. The abstract representation may be used to create rights management data structures, allow others (including \u201cother\u201d rights management nodes automatically) to read and understand such data structures, and to manipulate some or all of the data structures.","The descriptive data structure can be used as a \u201ctemplate\u201d to help create, and describe to other nodes, rights management data structures including being used to help understand and manipulate such rights management data structures.","In one particularly advantageous arrangement, the machine readable descriptive data structure may be associated with one or a family of corresponding rights management data structures\u2014and may thus be independent of any specific particular rights management data structure usage. For example, a copy of the descriptive data structure may be kept with such data structures. Alternatively, some or all of the descriptive data structure may be obtained from somewhere else (e.g., a clearinghouse or repository) and independently delivered on as-needed basis.","In accordance with one example, the machine readable descriptive data structure provides a description that reflects and\/or defines corresponding structure(s) within the rights management data structure. For example, the descriptive data structure may provide a recursive, hierarchical list that reflects and\/or defines a corresponding recursive, hierarchical structure within the rights management data structure. In other examples, the description(s) provided by the descriptive data structure may correspond to complex, multidimensional data structures having 2, 3 or n dimensions. The descriptive data structure may directly and\/or indirectly specify where, in an associated rights management data structure, corresponding defined data types may be found. The descriptive data structure may further provide metadata that describes one or more attributes of the corresponding rights management data and\/or the processes used to create and\/or use it. In one example, the entire descriptive data structure might be viewed as comprising such metadata.","The machine readable descriptive data structure may or may not be, in part or in whole, protected, depending on the particular application. Some machine readable descriptive data structures may be encrypted in whole or in part, while others might be maintained in \u201cclear\u201d form so that they are easily accessible. Some machine readable description data structures, whether encrypted or not, may be in part or wholly protected for integrity using a cryptographic hash algorithm in combination with a secrecy algorithm to form a cryptographic seal, and\/or through use of other protection techniques (including hardware, e.g., secure semiconductor and\/or hardware packaging protection means). The machine readable descriptive data structures may themselves be packaged within rights management data structures, and rules (e.g., permissions records) controlling their access and use may be associated with them.","In accordance with one aspect of how to advantageously use descriptive data structures in accordance with a preferred embodiment of this invention, a machine readable descriptive data structure may be created by a provider to describe the layout of the provider's particular rights management data structure(s) such as secure containers. These descriptive data structure (\u201cDDS\u201d) templates may be used to create containers. A choice among two or more possible DDSs may be based upon one or more classes and\/or one or more classes may be based on parameter data. The DDS may be loaded and used as the layout rules for secure containers being created. The provider can keep the DDS private, or publish it so that other providers may create compatible, interoperable containers based on the same DDS.","Descriptive data structures can also be used by a container viewer, browser, reader, or any other end user application designed to work with containers. Truly generic viewers or other applications can be written that can process a container in any format at least in part by making use of descriptive data structures. Thus, a descriptive data structure can be used to at least temporarily convert and\/or customize a generic viewer (or other application) into a specialized viewer (or other application) optimized around one or more classes of containers. Additionally, specialized readers may be provided to efficiently process descriptive data structures to locate key media elements (e.g., cover page, table of contents, advertiser's index, glossary, articles, unprotected preview, price, and\/or rights information regarding viewing, printing, saving electronically, redistributing, related budgets and\/or other parameter information, etc.).","Such specialized readers can then seamlessly, transparently, and automatically process to present the user with an easy-to-use interface (for example, an icon display for each of the key media elements) optimized for the specific application, container, and\/or user. Different and\/or differently presented, such elements may be displayed or otherwise employed based, for example, on the identity of the user and\/or user node, including, for example, taking into account one or more class attributes which can influence such automated processing.","Two or more DDSs may be associated with a container and\/or container contents, as well as, for example, one or more user and\/or node classes. A choice among two or more possible DDSs for a given container and\/or class of containers and\/or container contents may therefore be based upon one or more classes and\/or one or more classes based on parameter data. Overall, this ability to easily characterize, and\/or reuse stored, optimized, custom container models and subsequent transparency of translation from such customized containers (e.g. specific DDSs) to general purpose rights management use is particularly useful. For example, where such customized DDSs can be used as a basis for the creation of customized, optimized display of container content and\/or control information to substantially improve the ease of use, efficiency, transparency, and optimization of a distributed, generalized rights management environment. In such an environment, for example, user nodes can interact with different DDSs to automatically adjust to the requirements of the commercial or other rights models associated with such DDSs.","Some providers may spend considerable time designing sophisticated container descriptive data structures that describe the layout of their associated containers. With this type of investment in structure and format, the descriptive data structure will often have significant value in their reuse for the same or similar applications. Entities can use descriptive data structures in-house to ensure consistent and highly efficient creation of containers. Third party providers (i.e., a provider other than the one responsible for descriptive data structure creation) can use these descriptive data structures when they wish to create containers compatible with other entities. One example is where the publisher of a widely circulated newspaper develops a descriptive data structure for reading its newspaper. Other, smaller newspapers may want to leverage any viewers or other tools put in place for use with the widely circulated newspaper by adopting the same container format. Descriptive data structures can be copyrighted and\/or otherwise protectable by both law and by the rights management system itself. For example, they may also be protected by their own containers and associated controls to ensure that descriptive data structure creators, and\/or distributors and\/or other users of such DDSs, receive their fair, rights system managed, return on their descriptive data structure creation and\/or use related efforts.","In addition to the foregoing, the following is a list of features and advantages provided in accordance with aspects of this invention:\n\n",{"@attributes":{"id":"p-0044","num":"0062"},"figref":["FIGS. 2A and 2B","FIGS. 1A","FIG. 2A"],"b":["100","100","1","200","200","200","100","200","100","200","102","202","202","202","202","202","202","202"],"i":["a","c ","a","a","a","b","c","d","e","f","g"]},"The descriptive data structure definitions  in this example do not contain or specify the particular contents of corresponding portions of the newspaper , but instead define more abstractly, a generic format that a newspaper style publication could use. For example, the  example descriptive data structure headline definition does not specify a particular headline (e.g., \u201cYankees Win the Pennant!\u201d), but instead defines the location (for example, the logical or other offset address) within the container data structure (as well as certain other characteristics) in which such headline information may reside. Because descriptive data structure  is generic to a class or family of newspaper style content publications, it can be reused. For example, each daily issue of a newspaper might be created using and\/or associated with the same descriptive data structure . By abstractly defining the data format and other characteristics of newspaper style content , the descriptive data structure  allows easy creation, usage and manipulation of newspaper style content .","Referring to , a different descriptive data structure \u2032 may be used to define another class of content publications  such as fashion magazines. The descriptive data structure \u2032 for this content class reflects a different format (and possibly other characteristics) as compared to the descriptive data structure  shown in FIG. A. For example, since fashion magazines typically do not include headlines or breaking news, the example descriptive data structure \u2032 may not define such formatting. Instead, descriptive data structure \u2032 for defining a class of fashion magazine content may define issue date (descriptor ), a magazine title (descriptor ), the name of a photographer (descriptor ) and associated artwork designation (descriptor ).","The  examples show descriptive data structures , \u2032 being delivered within content object containers , along with associated content , . However, other forms of association may be used. For example, descriptive data structure  can be independently delivered in its own separate container along with associated rules controlling its access and\/or use. Alternatively, descriptive data structures  could be stored in a library and delivered on an as needed basis in secure or insecure form depending on particular requirements.","In addition, although  are printed publication content examples, the use of descriptive data structures  is not so limited. To the contrary, descriptive data structures  can be used to define the format and\/or other characteristics associated with a wide variety of different types of digital information including for example:\n\n",{"@attributes":{"id":"p-0049","num":"0081"},"figref":"FIG. 3","b":["200","300","200","300","200","302","302","400","100","200","304","200","400","306","200","400","200"]},{"@attributes":{"id":"p-0050","num":"0082"},"figref":"FIG. 4","b":["300","310","312","300","200","302","200","302","302","314","100","200","100","304","314","200","316","314","200"],"i":["a ","a ","a "]},{"@attributes":{"id":"p-0051","num":"0083"},"figref":"FIG. 5","b":["200","500","502","500","504","506","500","504","506","500","506","508","500","100","316","200","102","506","508","506","200","506","200"]},{"@attributes":{"id":"p-0052","num":"0084"},"figref":["FIG. 5A","FIG. 5"],"b":["506","500","200","100","550","500","200","316","200","506","552","506","508","200","554","508","506","200","556","506","508","558","506","2","506","508"]},"As another example, interpreter  may provide application  with an element identification (e.g., a hexadecimal value or other identifier) that corresponds to the headline information within the newspaper style content (block ). Application  may then ask electronic appliance  to provide it with the Headline (or other) content information  within container  by providing appropriate content information to electronic appliance  via API  (block ). For example, application  may pass the electronic appliance  the element ID that interpreter  provided to the application. Even though application  may have no direct knowledge of what is inside container  (and may only be able to access the container  through a secure VDE node provided by appliance ), interpreter  (by looking at descriptive data structure ) can tell application  enough information so that the application knows how to request the information it wants from the electronic appliance .","The electronic appliance may then access information  within container , and deliver (in accordance with the rules  within the container) the requested information to the application  (block ). The application  may then use the information electronic appliance  provides to it, based at least in part on what interpreter  has told it about the content information (block ). For example, the descriptive data structure  may provide characteristics about the way application  should handle the information . Descriptive data structure  can, for example, tell application  to always display a certain field (e.g., the author or copyright field) and to never display other information (e.g., information that should be hidden from most users). DDS  can also provide complete presentation or \u201cvisualization\u201d information so that an information provider can, for example, control the look and feel of the information when it is displayed or otherwise rendered. Descriptive data structure  may provide encodings of other characteristics in the form of metadata that can also be used by application  during a process of creating, using or manipulating container . The DDS  can be used to generate a software program to manipulate rights management structures. For example, a DDS  could serve as the \u2018instructions\u2019 that drive an automated packaging application for digital content or an automated reader of digital content.",{"@attributes":{"id":"p-0055","num":"0087"},"figref":"FIG. 6","b":["200","100","100","600","1","600","2","600","1","602","1","602","2","602","600","2","604","1","604","2","606","606","608","1","608","2","200","250","100","250","252","1","252","2","600","1","600","2","252","254","256","200"]},{"@attributes":{"id":"p-0056","num":"0088"},"figref":["FIG. 6A","FIG. 6A"],"b":["200","100","200","316","700","200","200","200","200","100","200","200"]},{"@attributes":{"id":"p-0057","num":"0089"},"figref":"FIG. 7","b":["200","200","260","1","260","2"],"ul":{"@attributes":{"id":"ul0005","list-style":"none"},"li":{"@attributes":{"id":"ul0005-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0006","list-style":"none"},"li":["an object name field ,","one or more metadata fields  (which may be part of and\/or referenced by the descriptive data structure); and","location information  (which may be used to help identify the corresponding information within the container data structure )."]}}}},"The object name field  may include a constant that may corresponds to or describes a type of information. For example, object name field  may act as a \u201chandle\u201d to the content or data; it may be an indirect reference to the content or data; and\/or it may be used to look up the content or data The following are examples of object names:\n\n","The DDS  may include or reference any type of data or metadata. In one example, the DDS  uses the object name field  to points or refers to metadata. This metadata can define certain characteristics associated with the object name. For example, such metadata may impose integrity or other constraints during the creation and\/or usage process (e.g., \u201cwhen you create an object, you must provide this information\u201d, or \u201cwhen you display the object, you must display this information\u201d). The metadata  may also further describe or otherwise qualify the associated object name.","In one preferred example, the DDS  uses object name  to refer to metadata stored elsewhere\u2014such as in a container . This referencing technique provides several advantages. For example, one situation where it may be useful to store the metadata in a secure container  separately from DDS  is in situations where it is desirable to make the DDS readily accessible to an outside application but to protect the associated metadata. For example, consider the case of handling web spider queries. A web spider may query the DDS  for a particular object name . If the object name is found, then the web spider may request the corresponding metadata. The web spider may have ready access to the metadata, but may only be able to access the associated metadata from the container  under appropriate conditions as controlled by a corresponding secure electronic appliance  based on associated rules . As another example, storing metadata separately from the DDS  may allow the same DDS to be used with different metadata in different contexts. Suppose for example that a DDS  contains an Object Name, for example KEYWORDS. When DDS  is associated with container A, then the DDS Object Name KEYWORDS refers to container A's KEYWORDS metadata. Conversely, if later this same DDS  is associated (e.g., packaged with) a different container C, then the DDS Object Name KEYWORDS refers to container B's KEYWORDS data.","Although it is preferred to use object name  to refer to metadata stored elsewhere, there may be other instances where there is a need or desire to explicitly include metadata within the DDS . For purposes of illustration,  shows an example DDS  that includes metadata field  and also refers to metadata within a container  using the object name . Either or both techniques may be used.","The DDS  thus allows value chain participants to protect the integrity of content, by enabling the specification of integrity constraints. DDS  integrity constraints provide a way to state rules about the content. For example, DDS  can specify that an article of a newspaper cannot be viewed without its headline being viewed. The corresponding integrity constraint can indicate the rule \u201cif there is an article, there must also be a headline\u201d. Another example is a photograph that is part of a magazine and the credit that goes with it. The integrity constraint rule provided by DDS  might be \u2018do not present this photograph without its associated credit\u2019.","DDS integrity constraints give value chain participants a tool for protecting the use of the DDS , ensuring that content represented by a particular DDS contains all the essential components\u2014that it is representative of the DDS. This gives providers a way to set up conventions and enforce standards of use. There are many possible integrity constraints. The following are a few examples:\n\n",{"@attributes":{"id":"p-0064","num":"0163"},"figref":["FIG. 8","FIG. 8"],"b":["312","312","312","264"],"ul":{"@attributes":{"id":"ul0016","list-style":"none"},"li":{"@attributes":{"id":"ul0016-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0017","list-style":"none"},"li":["\u201cconstruction type\u201d metadata (upon object construction, the information is required; upon object construction, the object creation tool is to always or never prompt for the information);","display metadata (e.g., always display the associated information (e.g., for copyright notices, author names and the like) or always or never make the information visible; and\/or","layout \u201chints\u201d and field definitions (e.g., text, text block, integer, file, image or other data type).\n\nThe above metadata descriptions are non-limiting examples. Other metadata characteristics and attributes may be used.\n"]}}}},{"@attributes":{"id":"p-0065","num":"0167"},"figref":["FIG. 9","FIG. 9"],"b":["200","600","200","200","600","200","200","200"]},{"@attributes":{"id":"p-0066","num":"0168"},"figref":"FIG. 9","b":["600","200","316","602","316","602","200","316","200","100","602","100","200","600","604","602","100"]},"Value chain participant  can use DDS  to author content . Participant  can package content  with associated controls A in a container A. Participant  may, if he desires, include DDS  and associated controls , with content  in the same container\u2014or depend on the provider  and\/or rights and permissions clearinghouse  to independently deliver the DDS and its controls to end users  in another container for example:","End users (), . . . , (n) use DDS  (in accordance with controls ) in conjunction with content  (for example, to read, browse or otherwise access the container content). Controls , A may require user appliances to provide usage data  to a usage clearinghouse . The usage clearinghouse  can provide usage data A related to access and\/or usage of DDS  to DDS provider , and may independently provide usage data B related to access and\/or usage of content  to value chain participant .","Descriptive data structures  provided in accordance with the present invention can provide a degree of interoperability between source and target rights management environments, and\/or to provide a bridge to achieve at least some degree of interoperatibility between a rights management environment and the outside world.","Different rights management environments may have substantially incompatible mechanisms for defining rights pertaining to an object. Descriptive data structures  can provide at least a partial bridge to achieve a degree of compatibility and interoperability. For example, a provider that defines an object within a source rights management environment may create a descriptive data structure for use by processes within one or more target rights management environments. For example, an object creator or other provider can specify, within a descriptive data structure , certain rules, integrity constraints and\/or other characteristics that can or should be applied to the object after it has been imported into a target rights management environment. The target rights management environment can choose to selectively enforce such rules, constraints and\/or other characteristics depending on the degree to which it can trust the source environment. For example, objects imported from an EDI system employing X.12 security may be more trustworthy than objects presented from environments with lesser (or no) security.","In another example, a provider that creates an object outside of any rights management environment can create a descriptive data structure  for use if and when the object is imported into one or more rights management environments. The target rights management environment(s) can use such descriptive data structure(s) to help efficiently understand and handle the object. Further, a descriptive data structure created within a rights management environment can be exported to one or more applications outside of the rights management environment and used to assist the application(s) in interpreting exported content or other information.",{"@attributes":{"id":"p-0072","num":"0174"},"figref":["FIG. 10A","FIG. 10A"],"b":["200","800","200","801","800","300","300","800","300","200","800"]},"Target data block  may provide information used to provide interoperability with a particular target environment . A single DDS  can, in one example, provide interoperability with N different target environments  by including N target data blocks (), . . . (N) each corresponding to a different target environment (), . . . (N).","In this example, each target data block  includes rule (control) information. Different target data blocks  can provide different rule information for different target environments . The rule information may, for example, relate to operations (events) and\/or consequences of application program functions  within the associated target environment  such as specifying:\n\n",{"@attributes":{"id":"p-0075","num":"0180"},"figref":"FIG. 10B","b":["200","800","805","807","805","809","801","200","811","801","1","200","812","812","200","812","200","801","200","807","813","815","817","819","821","813","801","815","801","817","801","200"]},"The optional creator seals B,  (and source seals) may be cryptographic seals that help to ensure that the DDS  and target records , respectively, have not be altered since they were created, and also the identity of the DDS 's creator and\/or source. The optional source messages C and  may be information that helps to ensure that a target environment knows which source environment created DDS .","Referring again to , DDS creation tool  may, upon creating the DDS , cryptographically seal it and each target data block  for integrity using appropriate cryptographic processes, for example by first running a cryptographic hash function (e.g., SHA, MD5, etc.) on the data and then encrypting the resulting hash value using a private key of the DDS creator associated with an asymmetric cryptosystem (e.g., RSA, El Gamal, etc.). If sealing is used, the DDS creator preferably should ensure that the public key associated with the encrypting private key is certified (e.g., encrypted with a private key of a certifying authority) and available for use by target environments to validate the seal (e.g., by including a certificate in DDS , publishing the certificate on a public network, etc.)","If source messages C,  are used, they should preferably represent information provided by the source environment that may help a target environment identify the source environment, and further may also help to ensure that the DDS  was actually created by the source environment (and therefore may, for example, be trusted to the extent that the source environment is trusted). For example, a source environment may have a protected processing environment (PPE) of the form described in the above referenced Ginter, et al. patent application. Certain of such PPEs may have cryptographic keys (e.g., a private key of a public key\/private key pair) available that may be used to encrypt a cryptographic hash taken of the DDS header  or target block header , as appropriate. In such an example, a target environment would need to acquire a corresponding cryptographic key (e.g., a public key of a public key\/private key pair) using trusted techniques (e.g., delivery in a certificate signed by a trusted certifying authority) in order to evaluate such a source message. In another example, DDS creation tool  may have been equipped with cryptographic keys when it was manufactured, and may use these cryptographic keys instead of keys from a PPE, although generally this technique would be more susceptible to tampering by an experienced computer hacker and might therefore be somewhat less trusted by target environments.","In addition, or alternatively (for example, if cryptographic techniques are not appropriate or desired), the source message may contain a unique identifier that corresponds to the source environment.","The DDS creation tool  (see ) may then package the resulting DDS  into a secure container  along with an associated object . In another example, DDS creation tool  may embed DDS  within, or otherwise associate the DDS with, an object \u2032 that provides a method for releasing the DDS to the target environment parser . The DDS  and its associated object  may then be delivered to one or more target environments  for processing.","Target environment parser  (and\/or translator ) may, for example, be part of an application program, part of an operating system, or part of a utility program used by, or in conjunction with, an application program and\/or an operating system. The target environment parser  receives the DDS  and parses it to locate the target data block () corresponding to the target environment (). Parser  may then determine, from the corresponding target data block , the rules the target data block contains. Parser  preferably understands enough about the structure of DDS  to find (e.g., using the header information shown in ) the appropriate target data block  corresponding to it, and also to understand the rules within the target data block. The target environment parser  doesn't need to understand any additional rules  that may be packaged within container  or otherwise delivered with object , but it may use any such additional rules if desired (e.g., when it finds no target data block  within DDS  for the particular target environment  (for example, if it is capable of understanding some other target data block  whose rules are based on a published specification and\/or standard)).","The target environment parser  may obtain applicable target rules from target data block  and provide these rules to application program functions . Application program functions  may define any operation pertaining to object  such as for example:\n\n","The target rules provided by parser  may be used, for example, to permit, require and\/or prevent certain operations; to define the extent to which certain operations can be performed (e.g., limit number of copies, define extent of cut, the rules that should be applied to cut information in subsequent use, etc.); and\/or to define the consequences of performing a particular operation (e.g., charge the user for printing or otherwise using and\/or accessing all or part of object , maintain records of the time and\/or number of such operations performed, etc.).","Parser  may also, or alternatively, provide some or all of the rules it obtains from target data block  to other arrangements for applying the rules such as, for example, the \u201cother rights management functions\u201d block . Block  may provide any kind of rights management functions. Translator  may be used if needed to allow the application program functions  and\/or the \u201cother rights management\u201d block  to understand the rules. As one example, translator  may be used to further elaborate, parameterize and\/or secure the rule information obtained from target data block  so they are more or fully compatible with the \u201cother rights management functions\u201d block .","A useful data structure definitional method and arrangement has been described in connection with its most practical and presently preferred example embodiments. The present invention is not to be limited to those embodiments, but on the contrary, is intended to encompass variations and equivalents as defined within the spirit and scope of the claims."],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND AND SUMMARY OF THE INVENTION(S)","DETAILED DESCRIPTION OF PRESENTLY PREFERRED EXAMPLE EMBODIMENTS","Example Process For Creating and Using Descriptive Data Structures","Example Architecture For Using Descriptive Data Structures","Example Description(s) Provided by Descriptive Data Structure","Example Descriptive Data Structure Formatting","Example Graphical Interface For Creating Descriptive Data Structures","Example Process Using Descriptive Data Structures","Descriptive Data Structures Can Be Used to Achieve A Degree of Interoperability Between Rights Management Environments"],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["These and other features and advantages of presently preferred example embodiments in accordance with the invention may be better and more completely understood by referring to the following detailed description along with the drawings, of which:",{"@attributes":{"id":"p-0031","num":"0049"},"figref":"FIGS. 1A and 1B"},{"@attributes":{"id":"p-0032","num":"0050"},"figref":"FIGS. 2A and 2B"},{"@attributes":{"id":"p-0033","num":"0051"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0034","num":"0052"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0035","num":"0053"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0036","num":"0054"},"figref":["FIG. 5A","FIG. 5"]},{"@attributes":{"id":"p-0037","num":"0055"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0038","num":"0056"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0039","num":"0057"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0040","num":"0058"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0041","num":"0059"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0042","num":"0060"},"figref":"FIG. 10A"},{"@attributes":{"id":"p-0043","num":"0061"},"figref":["FIG. 10B","FIG. 10A"]}]},"DETDESC":[{},{}]}
