---
title: Systems and methods for sharing dynamic content among a plurality of online co-users
abstract: Systems and methods for establishing a shared dynamic content experience are disclosed. A method for sharing a dynamic content experience according to the invention includes an inviter computer communicating, via a first communication path between an invitee computer and a network based communication server, an invitation to establish a shared dynamic content experience between the inviter computer and the invitee computer. If the invitation is accepted, a content sharing communication path is established between the inviter computer and the invitee computer. Information relating to a current dynamic content experience at the inviter computer is communicated, via the content sharing communication path, to the invitee computer. Information relating to a current dynamic content experience at the invitee computer is communicated, via the content sharing communication path, to the inviter computer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07426537&OS=07426537&RS=07426537
owner: Microsoft Corporation
number: 07426537
owner_city: Redmond
owner_country: US
publication_date: 20020531
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The subject matter disclosed herein is related to the subject matter disclosed in U.S. patent application Ser. No. 10\/160,848, filed May 31, 2002, entitled \u201cSystems And Methods For Shared Browsing Among A Plurality Of Online Co-Users,\u201d the contents of which are hereby incorporated herein by reference.","This invention relates to providing dynamic content in a network environment. More particularly, the invention relates to systems and methods for enabling a plurality of client computers to establish and share a common dynamic content experience.","Media players that reside on a client computer and allow a user to download and experience a variety of dynamic content are known in the art. For example, users can download media files associated with music and listen to the music via their media player. Systems and methods are known in the art that enable media content to be packaged and delivered, via a network, in a manner that can enhance the user experience by providing a user with not only media content, but additional content that adds value to the media content.","Network based communication services that track a plurality of online co-user accounts and provide communication pathways to interconnect two or more such online co-user accounts are also well known. Examples of such network based communication services include electronic mail (\u201cemail\u201d) and online messaging services such as instant message services. Such communication services can maintain lists of user accounts, and even track current status information about the user accounts, such as whether the accounts are active (i.e., the user is currently online).","Online messaging services, for example, typically provide and maintain user definable online co-user lists, which are more commonly referred to as \u201ccontacts\u201d lists. A number of companies operate host systems that include online message services that alert users when other pre-specified co-users (i.e., other users of the online message service that have been previously specified by the user as a contact) are online (i.e., concurrently accessing the online messaging service). Such online co-users can typically use the online messaging service to send \u201cinstant messages\u201d to one another via a communication path that the online messaging service provides.","There are certain situations in which it would be desirable for a plurality of online co-users to share a dynamic content experience. That is, the online co-users would benefit from being able to experience the same dynamic content at the same time. For example, two online co-users located at different computers in different parts of the world might want to listen to a song, or watch a video clip together. Each of the users would benefit from being able to share the other's experience, such that, when either user plays a song, for example, the media player at the other computer would play the same song automatically. Hence, there is a need in the art for systems and methods for enabling a plurality of co-users to establish and share a common dynamic content experience.","The invention provides systems and methods for enabling a plurality of online co-users at respective client computers to establish and share a common dynamic content experience. According to the invention, a plurality of online co-users share a dynamic content experience over the Internet using a shared playlist with tracks from each user's computer. The tracks are synchronized, to the extent possible, while playing. Thus, a number of users are enabled to share a dynamic content experience.","A method according to the invention for establishing a shared dynamic content experience includes receiving from an invitee computer, via a first communication path between an inviter computer and a network based communication server, an acceptance of an invitation to establish a shared dynamic content experience between the inviter computer and the invitee computer. A content sharing communication path is then established between the inviter computer and the invitee computer. Thereafter, the inviter and invitee clients communicate to each other, via the content sharing communication path, information relating to a shared dynamic content experience between the clients.","To establish the content sharing communication path, a connection message is communicated from the inviter computer to the invitee computer via the first communication path. The inviter computer determines whether a reply from the invitee computer has been received, and, if so, the content sharing communications path is thus established between the inviter computer and the invitee computer. If the reply is not received, the invitee computer communicates a connection message to the inviter computer via the first communication path. The inviter computer sends a reply to the invitee computer to thereby establish the content sharing communication path.","A method for providing dynamic content according to the invention may also include providing respective status displays at each of the client computers that provides current status of the dynamic content sharing experience at the other client computer. The status display at each client can include status relating to at least one of starting, playing, pausing, stopping, and skipping an audio track at the other client. The status displays can also include, for example, status relating to online messenger status, or a friendly name associated with a pre-specified online co-user account associated with the other client.","Exemplary Computing Device",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1"},"Although not required, the invention can be implemented via an application programming interface (API), for use by a developer, and\/or included within the network browsing software which will be described in the general context of computer-executable instructions, such as program modules, being executed by one or more computers, such as client workstations, servers, or other devices. Generally, program modules include routines, programs, objects, components, data structures and the like that perform particular tasks or implement particular abstract data types. Typically, the functionality of the program modules may be combined or distributed as desired in various embodiments. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations. Other well known computing systems, environments, and\/or configurations that may be suitable for use with the invention include, but are not limited to, personal computers (PCs), automated teller machines, server computers, hand-held or laptop devices, multi-processor systems, microprocessor-based systems, programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network or other data transmission medium. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1","b":["100","100","100","100"]},"With reference to , an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer  may include, but are not limited to, a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus (also known as Mezzanine bus).","Computer  typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer  and includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CDROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared, and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.","The system memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs , other program modules , and program data .","The computer  may also include other removable\/non-removable, volatile\/nonvolatile computer storage media. By way of example only,  illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk , such as a CD ROM or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive  is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media discussed above and illustrated in  provide storage of computer readable instructions, data structures, program modules and other data for the computer . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules , and program data . Operating system , application programs , other program modules , and program data  are given different numbers here to illustrate that, at a minimum, they are different copies. A user may enter commands and information into the computer  through input devices such as a keyboard  and pointing device , commonly referred to as a mouse, trackball or touch pad. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus , but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB).","A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface . A graphics interface , such as Northbridge, may also be connected to the system bus . Northbridge is a chipset that communicates with the CPU, or host processing unit , and assumes responsibility for accelerated graphics port (AGP) communications. One or more graphics processing units (GPUs)  may communicate with graphics interface . In this regard, GPUs  generally include on-chip memory storage, such as register storage and GPUs  communicate with a video memory . GPUs , however, are but one example of a coprocessor and thus a variety of coprocessing devices may be included in computer . A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface , which may in turn communicate with video memory . In addition to monitor , computers may also include other peripheral output devices such as speakers  and printer , which may be connected through an output peripheral interface .","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","One of ordinary skill in the art can appreciate that a computer  or other client device can be deployed as part of a computer network. In this regard, the present invention pertains to any computer system having any number of memory or storage units, and any number of applications and processes occurring across any number of storage units or volumes. The present invention may apply to an environment with server computers and client computers deployed in a network environment, having remote or local storage. The present invention may also apply to a standalone computing device, having programming language functionality, interpretation and execution capabilities.","Methods and Systems for Enabling Multiple Online Co-Users to Share Dynamic Content",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 2","FIG. 2"],"b":["10","10","20","20","60","60","60","60","60","20","20"],"i":["a ","b ","a","b ","a","b "]},"In a network environment in which the communication network  is the Internet, for example, the servers , can be Web servers with which the clients , communicate via any of a number of known protocols such as hypertext transfer protocol (HTTP). Communications may be wired or wireless, where appropriate. Client devices , may or may not communicate via communications network , and may have independent communications associated therewith. For example, in the case of a TV or VCR, there may or may not be a networked aspect to the control thereof. Each client computer , and server computer , may be equipped with various application program modules and with connections or access to various types of storage elements or objects, across which files may be stored or to which portion(s) of files may be downloaded or migrated. Any server , may be responsible for the maintenance and updating of a database or other storage element in accordance with the present invention, such as a database for storing contacts data according to the invention. Thus, the invention can be utilized in a computer network environment having client computers , that can access and interact with a computer network , and server computers , that may interact with client computers , and other such devices and databases.","According to the invention, each client computer , can interface with the communication network  via a respective browser , . The browser , enables the user at the client , to access certain material on the servers , . Currently, a number of browsers , are commercially available for personal computers and other types of client computers , (such as hand-held computers, palm-sized computers, or any other type of computer that can be used for browsing).","Each client computer , can also include a cookie file (not shown) that includes information the respective clients , need to access certain sites on the servers , . In particular, some Web sites require the client to provide a username and password, for example, before the corresponding server , will download content from the Web site onto the client , . Typically, these username and passwords, along with other access information, such as registration numbers, etc., are included in the client's cookie file. When the user enters a URL for a Web site that requires cookie data, the server , requests the cookie data from the client , . In response, the browser , gathers the required cookie data from the cookie file and provides the cookie data to the server , . Assuming the cookie data is correct, the server , then delivers the content from the Web site to the client , ","As shown in , each client computer , also includes a respective online messenger , via which the user of the computer can access an online message service provided via the communications server . In a preferred embodiment, the communications server is a messenger server includes a data store that contains contacts data used for providing the online message service. A separate contacts file can be maintained for each user that is a subscriber to the online message service. Each contacts file can include contacts data relating to the user's ID and password, the IDs and friendly names of the co-users (i.e., \u201ccontacts\u201d) that the user has pre-specified for the service. The online message service provides to the user at the inviter client, for example, a contacts list that indicates which, if any, of the pre-specified co-users is currently online. That is, the online message service determines which, if any, of the co-users accounts is currently active by determining whether the co-user has logged into the online message service. The message server also determines an IP address of the computer on which the co-user account is currently active. Typically, a messenger server can only \u201csee\u201d an externally-visible IP address of a client computer. For example, in the case where one user is behind a NAT (network address translator), that computer's actual IP address is different from the one that the messenger server sees. Thus, the online message service \u201cknows\u201d which co-users are currently online, and on what computer they are connected to the network. Accordingly, the online message service can provide this information to the client computers on which the co-user accounts are currently active. Any of the co-users can then initiate an instant message session with any other co-user(s) via the user interface that the online message service provides.","Each client computer , also includes a respective media player , that can be used to provide a dynamic content experience for the user of the computer on which the media player is installed. The term, dynamic content, as that term is used throughout this specification, means digital audio or video.","The media player can be used to play audio or video tracks, which are typically organized into a so-called \u201cplaylist\u201d that includes a link to each of the tracks. The tracks are digital files that reside on the computer on which the media player is installed. The user can modify a playlist by adding, sorting, or deleting tracks. The media player typically provides visually appealing displays, based on so-called \u201cskins,\u201d to enhance the dynamic content experience. \u201cSkins,\u201d as that term is used herein, enable static changes to the UI of the media player itself. The media player can also offer \u201cvisualizations,\u201d which are dynamic visual representations of the music itself (e.g., wavy lines or the like).","Client is referred to as an inviter client, and client is referred to as an invitee client. For purposes of this specification, the term \u201cinviter\u201d refers to the user that initiates a shared dynamic content experience by offering an invitation to an online co-user to establish the shared experience. The term \u201cinvitee\u201d refers to the user that accepts the invitation to establish a shared experience. The terms inviter computer and inviter client refer to the device via which the inviter is communicating with the network. The terms invitee computer and invitee client refer to the device via which the invitee is communicating with the network.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 3","b":["300","300"]},"As shown, the message window  can include a conversation window  wherein conversations between online co-users can be viewed. That is, as the user of the computer on which the message window  is displayed enters the text of a message, the message text appears in the conversation window . Similarly, when a message from a remote co-user (with whom the user is currently conversing) is received, the received message text is also displayed in the conversation window . Preferably, the message window  includes a co-user identification display  that can include a pictorial representation of the co-user, the co-user's \u201cfriendly name,\u201d the co-user's email address, and the like.","According to the invention, the message window  can also include a user interface component  for initiating a shared audio experience. Preferably, the user interface component  includes descriptive text such as \u201cStart Music Play,\u201d for example. The inviter can initiate a shared audio experience by selecting the user interface component , such as by clicking on the component  using the computer's mouse or keyboard.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 4","b":["300","304","304"]},"A message  can be displayed in the conversation window  that indicates that the inviter computer is waiting for the invitee computer to accept the invitation to establish a content sharing session. Meanwhile, if the media player is not already running, the browser can launch the media player in content sharing mode. If the media player is already running, the media player user interface is converted to content sharing mode, but any content that is already playing continues to play uninterrupted. Thus, the inviter can utilize the media player while he is waiting for the invitee to respond.","As shown, the media player can display a playlist  that includes a plurality of playlist entries  that correspond to respective audio tracks. To listen to a particular track, the user simply clicks on the playlist entry corresponding to that track. The media player then \u201cplays\u201d an audio file associated with the playlist entry. Preferably, the audio files are stored on the inviter computer, though it should be understood that the audio files can be stored remotely from the inviter computer, and retrieved when the user selects them to be played. In a preferred embodiment of the invention, the media player, in content sharing mode, supports the well-known .mp3 and .wma formats.","Preferably, if more than two users are chatting (or if an attempt is made to initiate a shared audio experience from a location other than the messenger window ), then the inviter computer can provide a user interface via which the inviter can select which of a plurality of pre-specified co-users to invite into a shared audio session.","For example, the inviter can initiate a shared audio session from the media player itself.  depicts a preferred embodiment of a user interface  for a media player from which an inviter can initiate a shared audio session. As shown in , the user interface  that includes a playlist display  via which a list of audio tracks  on a particular playlist can be displayed and via which the user can select individual tracks  for playing. The media player window  also includes user interface components - for starting the playing of a track, stopping the playing of a track, rewinding a track, fast forwarding a track, and pausing a track. The media player window also includes one or more volume buttons . The media player also includes a display area  wherein a visual experience can be provided to enhance the audio experience. The visual experience that is provided is based on one or more \u201cvisualizations\u201d that are associated with the playlist  or with the track  that is playing.","According to the invention, the media player can also include a user interface component  via which the inviter can initiate a shared audio session. As shown in , the user interface component  via which the inviter can initiate a shared audio session can include a \u201cStart\u201d button , or the like, and descriptive text  such as \u201cMusic Share.\u201d To initiate a shared audio session, the inviter can simply click on the \u201cStart\u201d button .","Preferably, clicking on the \u201cStart\u201d button  from the media player causes a contacts list to be displayed. An exemplary contacts list  is depicted in . The contacts list can include a pictorial representation  and a friendly name  for each of the co-users that the inviter has pre-specified via the online message service. The inviter can then select which of the contacts to invite to share in the audio experience by clicking on the friendly name  associated with the invitee contact, and then clicking on the \u201cStart\u201d button .","In a preferred embodiment of the invention, when the inviter initiates the shared audio session from the media player as described above, the media player causes the online messenger to be launched on the inviter client.  depicts a message window  after the inviter has attempted to initiate a shared audio session from the media player. The message window  appears, preferably in front of the media player window , with a message  displayed in the conversation window  that indicates that the inviter computer is waiting for the invitee computer to accept the invitation to establish a shared audio session. Meanwhile, as described above, the inviter can continue to utilize the media player while he is waiting for the invitee to respond.","As shown in , the media player can provide a user interface component  that indicates that the inviter computer is waiting for the invitee computer to accept the invitation to establish a shared audio session. Preferably, the user interface component  includes a text message  that indicates that the inviter computer is \u201cwaiting to connect\u201d or \u201cwaiting for invitation to be accepted.\u201d Preferably, the media player also provides a user interface component , such as a \u201cStop\u201d or \u201cCancel\u201d button, that the inviter can select to cancel the invitation (and thereby stop the connection process) before the invitee accepts.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 8","b":["800","800","802","802","804","804","800","806"]},{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 9","b":["900","902"]},"At step , the inviter computer retrieves a list of pre-specified online co-users (i.e., \u201ccontacts list\u201d) from the online message service. The online co-user list indicates which, if any, of the online co-user accounts that the invitee has pre-specified are currently active. That is, the online co-user list indicates which of the pre-specified co-users are currently online (i.e., also signed in to the online message service). The online co-user list can also include an address, such as an IP address, associated with the respective computers on which the pre-specified co-users are currently logged in. Alternatively, the message service can maintain this address information, but not necessarily provide it to the inviter computer. Thus, the inviter can then determine whether any of the pre-specified online co-user accounts is currently active on an invitee computer.","At step , the inviter selects an option to initiate a shared dynamic content session with one or more of the online co-users in the inviter's contacts list. In a preferred embodiment of the invention, clicking on a contact ID in the contacts list causes a conversation window with that contact to be provided at the inviter computer. As described above, the inviter can initiate a content sharing session by selecting a content sharing option from either a media player window or a messenger window.","In response to inviter's selection of the option to initiate a content sharing session with one or more of the pre-specified online co-users, the inviter computer sends to the invitee computer, via the online messenger communication path, an invitation to establish the content sharing experience between the inviter computer and the invitee computer. Preferably, a text-based formatting language that encapsulates data, such as XML, for example, is used for communications between the client computers over the online messenger path.","It is contemplated that a dynamic content sharing experience among a plurality of online co-users can be implemented as (or as part of) a paid subscription service. In such an embodiment, it would be desirable to enable only a paid subscriber to initiate a content sharing session. To encourage users who wish to use the content sharing service to become paid subscribers, a user interface can be provided to advise the inviter that the capability requested requires a paid subscription. A subscription user interface, via which the inviter can subscribe to the service, can then be offered. Preferably, the subscription user interface provides information about the service and is presented in a way that encourages the user to subscribe. According to the particular embodiment of the invention, a paid subscriber can be enabled to establish a content sharing experience with any online co-user (i.e., any other user that is currently signed into the online message service), or only to those pre-specified co-users that are on the user's contact list.","As described above, when the invitation is sent, a media player window is provided on the inviter's screen with a status area indicating that the invitation is pending, but content playing capability is otherwise fully enabled. If the invitee declines the invitation, the status area can be made to disappear from the media player window at the inviter computer, and the inviter can be notified (preferably, in the conversation window of the messenger window) that the invitation has been declined.","Preferably, the invitation is \u201cbrokered\u201d via existing session invite API included in the online message service. That is, the invitee sees the invitation just like any other session invite that the online message service provides. For example, the invitation can be provided via the messenger's conversation window. The invitee can then accept or decline the invitation, thereby causing the invitee computer to send to the inviter computer, via the online messenger communication path, an indication that indicates whether the invitee has accepted or declined the invitation.","If, at step , the inviter computer determines that the invitee has declined the invitation, then, at step , no content sharing session is established. However, if the inviter computer determines at step  that the invitee has accepted the invitation, then the inviter computer attempts to establish a content sharing session on a second, or \u201ccontent sharing,\u201dcommunication path  (see ), between the inviter computer and the invitee computer. Preferably, the content sharing communication path includes a peer-to-peer connection between the two clients, and can be based on any protocol that is mutually agreeable to the sharing clients, such as the well-known point-to-point tunneling protocol, for example.","In a first attempt to establish the content sharing communication path, the inviter computer, at step , communicates to the invitee computer, via the online messenger communications path, a connection message that identifies an available port of the inviter computer. Thus, the inviter computer can use the online messenger path to establish the content sharing communication path. In such an embodiment, the online message service can provide a relatively small amount of bandwidth for the computers to use in setting up the content sharing path. Additionally, because the clients are hosting online co-users, the online messenger path is a guaranteed path between the clients.","The inviter computer \u201clistens\u201d for a reply message to be received from the invitee computer via the identified port. If, at step , a reply is received via the identified port of the inviter computer, then, at step , a second communication path is defined between the identified port and the invitee computer, and a content sharing session can begin. Preferably, the reply identifies an available port of the invitee computer and the second communication path is defined between the identified port of the inviter computer and the identified port of the invitee computer. Thus, a content sharing session between the inviter computer and the invitee computer can be established.","If the invitee computer is unable to connect to the available port of the inviter computer at step  (because, for example, the inviter computer is behind a NAT or firewall that will not permit a connection based on an incoming request for one), then, at step , the invitee computer can send a connection message to the inviter computer via the first communication path. Preferably, the connection message identifies an available port of the invitee computer. In response, the inviter computer sends a reply message to the invitee computer via an available port of the inviter computer. If, at step , the invitee computer determines that a reply has been received, then, at step , the second communication path is defined between the identified port of the invitee computer and the available port of the inviter computer, and a content sharing session is established.","At step , an attempt is made to configure the NAT or firewall to establish a connection between the inviter client and the invitee client. Preferably, a generic protocol, such as Universal Plug and Play (UPNP) can be used. If a reply is received, at step , then, at step  the second communication path is defined between the identified port of the invitee computer and the available port of the inviter computer, and a content sharing session is established. Thus, a peer-to-peer connection can be made through NATs and firewalls. If, at step , a reply is not received, then, at step , the system concludes that it is unable to establish a second communication path, and, therefore, unable to establish a content sharing session. Preferably, both the inviter and the invitee are notified that the content sharing session has not been established.","In a preferred embodiment of the invention, a content sharing session can be established for any or all of the following classes of users: modem dial-up users, DSL, cable modem, satellite, multiple users on a home network (e.g., LAN, through a hub at home, etc.), users behind NATs, wireless 802.1x users, and the like.","Assuming that a content sharing communication path can be established between the inviter computer and the invitee computer, a content sharing session can begin. During the content sharing session, information relating to the content sharing experience is communicated between the inviter computer and the invitee computer via the content sharing communications path. That is, the inviter computer communicates to the invitee computer, via the second communication path, information relating to a dynamic content experience at the inviter computer, and receives from the invitee computer, via the second communication path, information relating to a dynamic content experience at the invitee computer. Similarly, the invitee computer communicates to the inviter computer, via the second communication path, information relating to a dynamic content experience at the invitee computer, and receives from the inviter computer, via the second communication path, information relating to a dynamic content experience at the inviter computer.","According to the invention, during a content sharing session, when a track is played, for example, at one co-user's computer, the same track should be played concurrently at the other co-user's computer. That is, when a song begins playing on one user's machine, it should begin playing almost immediately on the other user's machine as well; if one user pauses or skips a song, the same thing should happen on the other user's machine; the co-user's can build a shared playlist together; etc. To establish and maintain synchronization between the clients, a timer is started running on each client when the content sharing path is established. There is a constant absolute difference between the timers on the two clients. Any subsequent action that could potentially have a conflict (i.e., both clients request the same or conflicting actions at different times), gets time stamped before it is sent to the other client. Conflicts can be resolved, therefore, by accounting for the time stamp and difference between the timers.","The information relating to a content sharing experience that is communicated between the inviter computer and the invitee computer can include, without limitation, messages relating to skipping a track, playing, pausing, or stopping playback, inserting a track into the shared playlist, removing a track from the shared playlist, moving a track within the shared playlist, and ending the content sharing session. The information can also include the content itself, as well as any visualizations that are associated with the content and could be used to enhance the media experience. The media player at the computer that receives the information uses the received information to present a dynamic content experience that matches, to the extent possible, the experience at the computer that sent the information. Preferably, the messages between the clients are UTF-8 encoded. It is contemplated that the protocol may be implemented in an XML schema.","Preferably, the dynamic contact can be \u201ctranscoded\u201d prior to being sent to the receiving computer to optimize performance for a given bandwidth. The process of \u201ctranscoding\u201d can include converting the format and sampling rate of the media file into a format and sampling rate that is more efficient for transmission across the internet. For example, the content can be converted from .mp3 to .wma format, or the bit rate of the data stream can be reduced, or the content can be changed from stereo to mono.","Additionally, to improve the experience, the invention also allows for the media player to begin playing the dynamic media before it is completely downloaded using a process known as \u201cdynamic download.\u201d Preferably, the content is transmitted in blocks and stored in virtual memory on the receiving machine. The media player on the receiving machine determines when to begin playing the track. This determination is made based on how much of the track has been downloaded to the receiving machine, and how fast it is being downloaded, so that the media player does not start playing until it is relatively sure that it will be able to play the whole track. It should be understood that the media player could simply wait until the whole track is in its virtual memory to begin playing it. For aesthetic reasons, however, the media player in a preferred embodiment does not wait until the whole track is received to being playing.","It should also be understood that a typical media player receiving content from a network bases source does so according to a \u201cpull\u201d model. That is, the media player \u201cpulls\u201d the content from the network based source. In a system according to the invention, the sending client is \u201cpushing\u201d the data to the receiving client. Consequently, the data is stored in virtual memory on the receiving machine so that the media player on the receiving machine can \u201cpull\u201d the content from its virtual memory at whatever rate it determines it can pull the data.","A preferred implementation of a typical content sharing message that is communicated via the content sharing communication path between the inviter client and the invitee client can have the following structure: content-type:message\/sharedcontent\/<action>content-length:<length><payload>, where \u201caction\u201d specifies the type of message, \u201clength\u201d specifies the size (in bytes) of the payload, and \u201cpayload\u201d contains information specific to the action. Messages corresponding to the following actions can be communicated between sharing clients in a preferred embodiment of a system according to the invention.","A \u201crequest\u201d action can be sent before content is sent for a given file. This action is basically a header for the content itself. The payload for a request action can include: the size of the content file, the file name, a timestamp for the message, a unique identifier for the file, the duration of the file, and a flag that indicates whether the sending of the file should be \u201cforced.\u201d","In a preferred embodiment of the invention, content is cached in virtual memory on the receiving machine. To limit the amount of memory required for storing the content, and the amount of traffic between the machines, each machine \u201cknows\u201d which tracks are currently stored on the other machine. Consequently, if the co-users elect to replay, for example, a track that is currently in cache, the sending machine \u201crealizes\u201d that the track is stored in the receiving machine's cache, and that it need not retransmit the track. It is expected, however, that the state between machines will sometimes be inconsistent. That is, sometimes the sending machine will \u201cthink\u201d that a particular track is stored in the receiving machine's cache when it is not. In such a situation, the sending machine will not resend the track. In a preferred embodiment of the invention, however, the receiving machine is enabled to \u201cforce\u201d the sending machine to send the track again. To do so, the receiving machine sends a request action to the sending machine with the force flag set to indicate that the track should be sent regardless of the sending machine's \u201cbelief\u201d that the track is already in the receiving machine's cache.","A \u201cskip\u201d action can be sent whenever a track skip occurs. This can also precede sending of content. The payload for a skip action can include: the size of the content file, the file name, a timestamp for the message, a unique identifier for the file, the duration of the file, and a flag that indicates whether the sending of the file is forced.","A \u201cdata\u201d action can be used to send blocks of data. The receiving client can save such blocks in memory and pass them off to the media player. The payload for a data action can include binary content data. Preferably, the data file is a .wma file or .wmv file that contains an encoded, compressed version of the dynamic content.","A \u201clast\u201d action denotes the last block of content data. The receiving client can save these blocks in memory and pass them off to the media player. The payload for a last action can include binary content data.","A \u201cplay\u201d action can be sent whenever a notification is received that dynamic content has started playing. The payload for a play action can include: a unique identifier for the content to play, a file name, a flag that indicates whether to reset back to the beginning of the track when starting playback, and a timestamp of the action. Playback begins on the receiving client if the media player on the receiving client determines that the timestamp is valid.","A \u201cpause\u201d action can be sent whenever a notification is received that playback has been paused. The payload for a pause action can include a timestamp for the action. Playback is paused on the receiving client if the media player on the receiving client determines that the timestamp is valid.","A \u201cstop\u201d action can be sent whenever a notification is received that playback has been stopped. The payload for a stop action can include a timestamp for the action. Playback is stopped on the receiving client if the media player on the receiving client determines that the timestamp is valid.","A \u201cfirstinsert\u201d action can be sent whenever a notification is received that the first item in a playlist has been added. The payload for a \u201cfirstinsert\u201d action can include: the size of the content file, the file name, a timestamp for the action, a unique identifier for the file, the duration of the file, a unique identifier for the item that precedes the item inserted (<null>, if none), a unique identifier for the item that follows the item inserted (0, if none), and a file name for the content item that follows the item inserted (<null>, if none). If the media player on the receiving client determines that the timestamp is valid, the first item can be added into the playlist on the receiving client.","An \u201cinsert\u201d action can be sent whenever a notification is received that an item has been added to the playlist. The payload for an \u201cinsert\u201d action can include: the size of the content file, the file name, a timestamp for the action, a unique identifier for the file, the duration of the file, a unique identifier for the item that precedes the item inserted (0, if none), a file name for the content item that precedes the item inserted (<null>, if none), a unique identifier for the item that follows the item inserted (0, if none), and a file name for the content item that follows the item inserted (<null>, if none). If the media player on the receiving client determines that the timestamp is valid, the new track can be inserted into the playlist on the receiving client.","A \u201cremove\u201d action can be sent whenever a notification is received that an item has been removed from the playlist. The payload for a \u201cremove\u201d action can include: a unique identifier for the file, and the file name. If the media player on the receiving client determines that the timestamp is valid, the track can be removed from the playlist on the receiving client.","A \u201cmove\u201d action can be sent whenever a notification is received that the user has changed the position of an item in the playlist. The payload for a \u201cmove\u201d action can include: the size of the content file, the file name, a timestamp for the action, a unique identifier for the item, a unique identifier for the item that precedes the item inserted (0, if none), a file name for the content item that precedes the item in its new position (<null>, if none), a unique identifier for the item that follows the item in its new position (0, if none), and a file name for the content item that follows the item in its new position (<null>, if none). If the media player on the receiving client determines that the timestamp is valid, the track can be moved within the playlist on the receiving client.","An \u201cend\u201d action can be sent to end the content sharing session on the co-user's client computer. The payload for an end action can include a string that indicates why the session was ended.","Preferably, for the action messages described above, flags are either 0 or nonzero, timestamps are 32 bit numbers, the size of the content file is a 32 bit number (in the case of a network file, the size is 0), and the duration of the content file is sent as a 32 bit number representing the time in ms.","Preferably, the inviter can begin to build a shared playlist in the media player as soon as he initiates an invitation to the invitee. The shared playlist can be pre-filled with songs that are currently in the inviter's playlist. Additionally, if the inviter was listening to music, for example, at the time he initiated the invitation, the media player at the inviter computer should continue to play the music seamlessly until the invitee accepts the invitation. At that time, the playlist on the inviter client is replicated on the invitee client and the music that was playing on the inviter client stops so that progressive downloading and buffering can begin with the first song in the shared playlist. Preferably, if there is no current playlist, a playlist builder interface, via which the user can start to build a playlist, is opened automatically.","Preferably, when a content sharing experience is established, the media players at each of the inviter client and the invitee client run in \u201cshared mode.\u201d In a preferred embodiment, when the invitation to share dynamic content is accepted, the media player on the invitee client is stopped, if it is running, and replaced with a media player window in shared mode, with the shared playlist being displayed. If the media player is not running when the invitation is accepted, the media player is launched in shared mode. The invitee is then enabled to use the media player in shared mode.","In shared mode, the media players display the shared playlist. Additionally, the media player can include a status indicator that indicates the current sharing status (e.g., \u201cshared playlist with [online contact]\u201d). Throughout the content sharing session, each co-user can be provided with options to add, remove, and shuffle songs as soon as the respective media player is launched. Consequently, the inviter can start utilizing the media player in shared mode while waiting for the invitee to accept the invitation. When either user adds a song to the playlist, the media players at both clients update their respective shared playlists. Tracks can be listed in the shared playlist by title, length (e.g., minutes:seconds), and which co-user owns each track. The shared playlist within the media player can provide a display that indicates which tracks belonged to which co-user by using different colors for the text that represents the tracks in the playlist. The shared playlist can also provide user interface components that enable the user to add a song to the play list, remove a song from the playlist, and to sort the order of the songs in the playlist.",{"@attributes":{"id":"p-0094","num":"0093"},"figref":["FIGS. 10A and 10B","FIG. 10A"],"b":["1000","1002"]},"After the user selects the option to add a track, the media player can provide a user interface , as shown in , that includes a list of tracks  from which the user can select one or more tracks to add to the shared playlist. The user interface  can also include a selected tracks list  that provides a list of tracks that have been selected to be added to the shared playlist. The user can select the \u201cAdd\u201d button  to cause the tracks to be added to the shared playlist.","Preferably, either user can add a track to the shared playlist at any time. When one user adds a track, the track is added to the other user's playlist as well. In a preferred embodiment, each track can have a unique numerical identifier that is generated as a rolling index (which, in general, will be different on different clients). The rolling index enables the media player to determine if a user has added the same song to the playlist more than once.","The foregoing user interface is provided as an example of a user interace that can be provided according to the invention for enabling an online co-user to manipulate a shared playlist. It should be understood that user interfaces that enable the online co-users to use any functionality of the media players in a shared experience can similarly be provided. For example, in a preferred embodiment, a user interface can be provided that enables either user to re-order the songs on the shared playlist. Preferably, the order of songs on the shared playlist is maintained to be identical on both clients. Similarly, when either user skips a track, the media players at both clients skip the track.","If a user selects a different playlist, then the newly selected playlist becomes the shared playlist. The tracks that formed the old shared playlist can be replaced with the tracks that form the new shared playlist. The name that the media player displays for the playlist (e.g., \u201cShared playlist with [co-user's friendly name]\u201d) can remain. If a user tries to change the shared playlist, a warning dialog can be provided to determine whether the user would like to replace the entire current shared playlist and share the new one instead. The user can cancel or confirm the request to change the playlist. If the request is canceled, the current playlist remains, and the track that is currently playing continues to play. If the request is confirmed, the track that is currently playing is stopped, the shared playlist is replaced on each user's computer, and the first track in the new playlist is started.","Preferably, when a track is played, enough of the digital data corresponding to the track is buffered to ensure smooth playing of the content. Accordingly, when a track is played, an indication can be provided at each client computer that indicates which track is being played, along with its buffering status. As soon as a sufficient quantity of data is buffered on each co-user's computer, the track is played on both co-user's computers.","Preferably, remote content can be shared just like any other content, however, in a preferred embodiment, both clients can stream directly from the source. That is, the stream is not sent from one client to the other.","When the playlist is complete or empty (if a user has removed all of the songs, for example), then the media player stops playing. The co-users can remain connected via the content sharing communication path, however. That is, the content sharing session will remain active. If a user proceeds to add a song, the song will be added to both users' playlists. Similarly, a user could chose to start the shared playlist over, pick another playlist, etc.","To avoid violating any rights in the dynamic content, it is preferred that the shared playlist cannot be saved, nor any song received from a sharing client. Additionally, DRM music can be \u201chard-blocked.\u201d That is, a DRM song will not be played while the media player is in shared mode. If the media player in shared mode detects that a track corresponds to a DRM song, the media player can be made to automatically skip to the next playable song, and provide a dialog explaining why the track was skipped.",{"@attributes":{"id":"p-0103","num":"0102"},"figref":["FIG. 11","FIG. 11"],"b":["1100","1102","1104"]},"In addition to providing session status via the media player window, status can also be provided via the messenger conversation window. For example, the conversation window can display a text message that indicates which track is currently playing, that identifies the next track in the playlist, that indicates that a remote co-user has added a track to the shared playlist, or the like. A link from the messenger window to the media player can be provided to enable the user to jump to the media player to edit the shared playlist, for example.","In a preferred embodiment of the invention, only one content sharing session can be established on a particular computer at a time. Thus, if a user tries to initiate another invitation to share a dynamic content experience while he is already engaged in a content sharing experience (or has a prior invitation is pending), an error message is displayed to inform him that he already has a content sharing session with another co-user. The error message could enable him to end that session and start the new one. Similarly, if a user receives an invitation to share in a dynamic content experience while she is already engaged in a content sharing experience (or has a prior invitation pending), then the new invitation is not displayed at the user's computer. Rather, the invitation is automatically declined, and an error message is provided at the latter inviter's computer to explain that the would-be invitee is already participating in a content sharing session.","Either user can terminate a content sharing session by selecting an \u201cend session\u201d button, for example, in the media player window. Preferably, at the end of a content sharing session, the status bar disappears for the user who terminated the session. For the other user, the status bar preferably indicates that the first user has ended the content sharing session. The user who did not terminate the session can then be provided with several options. For example, the user can be enabled to \u201cre-invite\u201d the terminating co-user back into a content sharing session. If it is not possible to re-invite the terminating co-user (e.g., if the terminating co-user is no longer online), then this option need not appear.","When a co-user exits a content sharing session, that user's tracks disappear from the other users' playlist. The media player on the other users' computers, however, continue to play the content that remains in their playlists. For example, if User A ends a content sharing session with User B in the middle of a track that is stored on User A's computer, then the track will stop playing immediately on User B's computer, and the media player on User's B's computer will skip to the next track in User B's playlist that is stored on User B's computer. Preferably, the status area on User A's media player window disappears, and User B's computer displays a notification in the status area that indicates that the content sharing session has ended.","Preferably, if one of the co-users closes the media player, then the content sharing session is terminated. The status display at the other co-user's computer can provide an indication that the terminating co-user has terminated the content sharing session.","Thus, there have been described systems and methods for enabling a plurality of online co-user's to establish and share a common dynamic content experience. Those skilled in the art will appreciate that numerous changes and modifications can be made to the preferred embodiments of the invention, and that such changes and modifications can be made without departing from the spirit of the invention. It is intended, therefore, that the appended claims cover all such equivalent variations as fall within the true spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWING","p":["Other features of the invention are further apparent from the following detailed description of the embodiments of the present invention taken in conjunction with the accompanying drawing.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIGS. 10A and 10B"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
