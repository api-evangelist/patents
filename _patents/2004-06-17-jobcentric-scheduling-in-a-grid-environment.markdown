---
title: Job-centric scheduling in a grid environment
abstract: Systems and methods for scheduling jobs in a networked computing grid having job service components for creating jobs having certain resource requirements are described. One embodiment includes resource manager components communicatively linked with the job service components, each resource manager component being configured to manage a plurality of resources. Such a system further includes information components communicatively linked with the job service components and the resource manager components, the information components being configured to aggregate resource data obtained from the resource manager components. The jobs include a scheduling mechanism for querying the information components for resource data, comparing the resource data against the resource requirements and independently scheduling the job to the resource manager components. A resource reservation is also provided for reserving resources for the jobs.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07861246&OS=07861246&RS=07861246
owner: Platform Computing Corporation
number: 07861246
owner_city: Markham, Ontario
owner_country: CA
publication_date: 20040617
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION","Example A","Job-Centric Direct Scheduling","Example B","Job-Centric Scheduling Through a Reservation Service","Example C","Job-Centric Scheduling Through a Metascheduler"],"p":["This application is related to U.S. patent application Ser. No. 10\/871,502, entitled \u201cGoal-Oriented Predictive Scheduling in a Grid Environment\u201d (Inventors: David Bigagli, James Pang, and Shutao Yuan), and U.S. Pat. No. 7,340,654, entitled \u201cAutonomic Monitoring in a Grid Environment\u201d (Inventors: David Bigagli and Xiaohui Wei), each of which were filed on the same day as the present application and each of which are hereby incorporated by reference.","Disclosed embodiments herein relate generally to computing grid environments, and more particularly to improved systems and methods for scheduling jobs in such environments.","The increasing complexity of electronic tasks (e.g. executable programs such as computational tasks, command execution, and data collection) has increased the demand for resources used in accomplishing such tasks. Resources may include hardware that aids in completing electronic tasks, such as servers, clients, mainframe computers, networks, network storage, databases, memory, CPU time, and scientific instruments. Resources may also include software, available network services, and other non-hardware resources.","One response to the increased demand for resources has been the development of networked computing grid systems, which operate to integrate resources from otherwise independent grid participants. Computing grid systems generally include hardware and software infrastructure configured to form a virtual organization comprised of multiple resources associated with heterogeneous clusters in often geographically disperse locations.","Electronic tasks, often referred to as \u201cjobs,\u201d typically require certain amounts or types of resources for completion. Once a job is created, it must be assigned, or scheduled, to sufficient and compatible resources within the computing grid system. Job scheduling in grid systems has typically been accomplished with a centralized scheduling component deployed within resource management software associated with the grid. With centralized scheduling, jobs do not make any scheduling decisions; rather, scheduling decisions are left to the centralized scheduler, which matches jobs with resources.","Grid environments, and particularly the jobs and resources associated therewith, have become increasingly distributed and dynamic, which has lead to various problems with traditional resource management software. For example, it has been found that increased demand on centralized schedulers has led to the erroneous assignment of jobs to insufficient resources. Additionally, expansive grids may employ different types of resource management software, which can affect the compatibility of jobs with particular resources. In essence, centralized job scheduling mechanisms have become less scalable and less efficient.","Accordingly, improved systems and methods for scheduling jobs in a computing grid system are desired.","Disclosed herein are improved job-centric scheduling systems and related methods of improving job scheduling in computing grid environments. In one exemplary embodiment, a system for performing job-centric scheduling on a computing grid is described as having a job service component for creating a job based on an end-user's request. The job-centric scheduling system further includes a resource manager information component for aggregating resource data for the grid. The resource manager information component obtains resource information from resource managers, which manage the resources provided within clusters of the grid. The job-centric scheduling system allows the job to query the resource manager information component to locate compatible resources within the grid. A plurality of resource manager adapters are provided to enable communication between the job and the resource managers. The resource manager adapters allow the job to access the clusters, which are typically otherwise secured.","In another embodiment, a job-centric scheduling system is described having the aforementioned job service component, resource manager information component, resource managers, and resource manager adapters, and further having a metascheduler for aiding in the job-centric scheduling process. The metascheduler provides the job with scheduling suggestions.","In yet another embodiment, a job-centric scheduling system is described having the aforementioned job service component, resource manager information component, resource managers, and resource manager adapters, and further having a reservation service component for aiding in the job-centric scheduling process. The job may schedule itself to resources within the grid by asking the reservation service component to reserve the appropriate resources.","In other embodiments, any combination of the job service, resource manager information, resource manager, resource manager adapter, metascheduler, and reservation service components may be used in achieving job-centric scheduling.","In still further embodiments, related methods for performing job-centric scheduling in computing grid systems are described.","The present disclosure relates to a job-centric scheduling system that may be deployed into distributed resource management, or grid, systems.  illustrate an exemplary grid architecture and associated software modules that enable grid participation, whereas the remaining figures disclose the job-centric scheduling systems and related methods of the present disclosure.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1","b":["10","12","12","14","12","13","14","14","14","20","14","20","10"]},"Grid systems, such as the grid , are typically built by configuring each cluster  to facilitate resource sharing on the grid. Such configuration may occur by loading grid-enabling software onto the hosts  or other devices associated with the clusters . In doing so, the operating system services provided by the hosts  are extended to create a single system image for the cluster . The grid-enabling software of the present disclosure may be in the form of simple object access protocol (SOAP\/XML protocol) and may be configured to support operating systems such as Linux\u00ae, Windows\u00ae and Unix\u00ae by deploying software daemons that run on the preexisting operating systems provided for the cluster . The grid-enabling software may be broken down into various software modules, which include various processes for facilitating operation of the grid .","Referring now to , within the cluster  the grid-enabling software may be initially loaded onto a master host  selected for the cluster . The master host  may be a selected host  associated with the cluster , and is typically the host associated with an administrator of the cluster (hereinafter \u201csystem administrator\u201d). The software may be built in layers, beginning with a base system . The base system  generally provides dynamic load balancing and transparent access to resources available within the cluster . The base system  includes a load information manager (LIM) component , which collects resource information from slave hosts  within the cluster  as will be further described. As with the master host , the slave hosts  may be any hosts  within the cluster . The base system  further includes a process information manager (PIM) component , which gathers process information such as configuration data. Upon startup, the load information manager  may read configuration data compiled on the process information manager . The base system  also includes a remote execution server (RES) , which is responsible for executing jobs remotely and transparently within the cluster .","A batch system  is then loaded as a layer on top of the base system , and includes a slave batch daemon  and a master batch daemon . The slave batch daemon  includes processes for receiving and processing instructions provided by the master batch daemon . The master batch daemon  is a level higher than the slave batch daemon , and is configured to manage not only the slave batch daemon  of the master host , but each of the slave batch daemons associated with the plurality of slave hosts . Although only three slave hosts  are shown, the number of hosts associated with the cluster  can vary considerably.","Grid-enabling software is also deployed onto the slave hosts  to facilitate resource sharing on the grid . In particular, the base system  of the grid software is loaded onto the slave hosts . As such, the slave hosts  are configured with their own load information managers , process information managers  and remote execution servers . Additionally, the slave hosts  are provided with their own slave batch daemons , which receive instructions from the master batch daemon  and facilitate the execution of the jobs (via the remote execution server ) that are sent to the particular hosts.","Upon installation, the master batch daemon  can check the configuration of the cluster  and contact each of the slave batch daemons  of the slave hosts  to initiate host updates to the load information manager  of the master host . The host updates may be provided by the load information managers  of the slave hosts  and sent to the load information manager  of the master host , thereby aggregating resource data for the cluster .","Referring now to , the master batch daemon  includes processes for generally functioning as a cluster workload, or resource, manager . For example, the resource manager  may allocate the collection of resources associated with the cluster  and match such resources with the resource requirements associated with a particular job to be executed on the grid . Accordingly, the resource manager  implemented within the master batch daemon  can receive job submissions  and transmit such jobs to slave batch daemons , which execute the jobs. In this manner, the master batch daemon  effectively enforces scheduling policies associated with the grid  as will be further described. Scheduling policies are typically driven by the requirements of particular jobs to be executed on the grid .","In some embodiments, a scheduler  is associated with the master batch daemon  and is configured to facilitate job scheduling within the cluster . In particular, the scheduler  is provided to assign job to a host or hosts within the cluster  according to a scheduling decision made by the job as will be further described.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIGS. 4 and 5","b":["100","10","100"]},"Referring to , the system  is deployed into the grid , which is illustrated to include a plurality of clusters  (Clusters A, B, C, and D). A portion of the job-centric scheduling system  may be deployed into Cluster A to include a job service component , a resource manager information component , a metascheduler component , and a reservation service component , each of which may be deployed onto any machine associated with Cluster A, such as a PC  associated with an end-user . Additionally, Cluster A may include a persistent service component , which is generally configured as a fault tolerance mechanism, and in some embodiments, supports the job service component  to ensure that data is not lost during job execution. For example, during job execution, the persistent service component  may continually download job data to an associated database . Therefore, should a host  fail during job execution, job data can be recovered from the database . The database  may be any commercial database such as an XML database. Moreover, the persistent service component  generally provides backup services at the grid level. Accordingly, deployment of the persistent service component  is not limited to a particular cluster. Rather, additional persistent service components  may be deployed into other portions of the grid , including Clusters B, C, and D.","The job-centric scheduling system  may further include a plurality of resource manager adapters  and associated resource managers , which are deployed into the Clusters B, C, and D. Clusters B, C, and D also include a plurality of hosts  for providing resources. Although not shown, Cluster A may also include a resource manager adapter  and a resource manager . Additionally, the portion of the job-centric scheduling system  shown as deployed into Cluster A may also be deployed into Clusters B, C, and D.","Referring now to , the job-centric scheduling system  is illustrated in block diagram format to simplify the following explanation of the components of the system. The job service component  generally provides an interface for inputting jobs into the grid . The job service component  comprises software processes configured to receive input from the end-user  and create a job based on the end-user's request. The grid  may include one or several job service components , depending on the particular parameters of the grid. In some embodiments, jobs input into the grid  will have predetermined resource requirements, e.g., two Linux\u00ae servers with over 2 gigabytes of memory, and thus the job can immediately begin the scheduling process to find the proper resources for carrying out its task as will be further described. Additional resources may become available after the beginning of the scheduling process, and the job-centric scheduling system  may also be configured to adapt the job allocation according to those additional available resources.","The resource manager adapters  are provided to enable communication between the clusters (e.g. Clusters A, B, C, and D) associated with the grid . For example, the resource manager adapters  may be provided to enable communication between jobs created by the job service component  and the resource managers . To enable communication, the resource manager adapters  may include abstractions for mapping from the grid to a security model of a particular resource manager and\/or mapping the resource specification language of the job to the resource manager's resource requirement syntax. In some embodiments, the resource manager adapters  may comprise a Java\u00ae application programming interface (API) and a simple object access protocol (SOAP) interface, thereby permitting cross-cluster communication. However, generally speaking, the resource manager adapters  are adapted to receive job requests, translate the job requests into resource manager-specific requests, and send the requests to the corresponding resource manager . Although shown as being in a one-to-one ratio with the resource managers , several resource manager adapters  may be communicatively linked with a single resource manager  or a single resource manager adapter  may link to multiple resource managers .","The resource managers  of the job-centric scheduling system  submit resource information to the resource manager information component , which systematically aggregates the resource information provided by the resource managers. Resource information generally includes resource usage information and availability information. However, the content of the information provided to the resource manager information component  may be simple or comprehensive. For example, in some instances, resource information may simply include the name and location of each resource manager . Alternatively, the resource information provided to the resource manager information component  may include additional information such as the number and types of hosts in each cluster  and the speed, memory, swap and disk space associated with the hosts .","Resource information may additionally include job-related information such as the number of running jobs, pending jobs, and suspended jobs at the particular cluster . Moreover, average job turnaround time and the average job waiting time may also be provided. Job-related information may be provided in queues, which are often utilized by resource managers  for resource matching and scheduling policy customization.","Resource information can be stored in any format and in any suitable storage mechanism such as a plain file, an SQL database and an XML database. Moreover, one or several resource manager information components  may be incorporated into the grid  and communicatively linked with particular job service components  and resource managers .","The jobs created by the job service component  query the resource manager information component  to determine which resource managers  may be compatible with the job's resource requirements. The resource manager information component  may either extract resource information from the resource managers , or alternatively, the resource managers may periodically publish their resource information to the resource manager information component.","In addition, the resource managers  may define cluster-level access control policies, which define how end-users  can access resources in the clusters. Such policies may include limitations on which end-users can access the clusters , when end-users can access the clusters , and the number of jobs that can be executed on the clusters  by particular end-users. Accordingly, over-consumption of resources by particular end-users  may be avoided.","The job-centric scheduling system  may include additional components such as the metascheduler component  and the reservation service component . Jobs can query the metascheduler  and\/or the reservation service  when scheduling itself on the grid . When provided, the metascheduler  is communicatively linked with at least the job service component  and the resource manager information component , and provides an additional avenue for scheduling jobs by providing the jobs with scheduling suggestions. In particular, the metascheduler  can communicate with several resource manager information components  and base scheduling decisions on such communications. However, scheduling decisions reached by the metascheduler  can either be accepted or rejected by individual jobs. For example, jobs may have defined scheduling standards such as run time and queue time, which might affect whether or not the job accepts the scheduling decisions of the metascheduler .","The reservation service  provides yet another alternative option for job scheduling. In some situations, such as time-sensitive applications, it may be desired to reserve resources associated with certain resource managers  in order to guarantee that the resources will be available at a specified time and date. Reservations can be host-specific, or in other cases, more general in nature such as requiring a specific resource-type on a specific day. In some embodiments, the reservation service  does not limit a job from making multiple reservations. Additionally, multiple jobs may use the same reservation.","Having generally described the job-centric scheduling system , attention will now be given to a job-centric scheduling algorithm for job-centric scheduling according to the present disclosure.  illustrates a job-centric scheduling algorithm , which depicts an exemplary manner of carrying out job-centric scheduling. Prior to execution of the algorithm , an end-user submits a job request having specified resource requirements to the job service component , which then creates a corresponding job. For sake of clarity, the job created by the job service component  and subject to the algorithm  will be generally referred to as \u201cJob J.\u201d Upon creation, Job J begins scheduling itself as represented by algorithm .","In some instances, rather than leaving the resource assignment to the scheduling mechanism, the end-user may specify the preferred resource manager , the preferred resource manager adapter  or the preferred resource reservation service , thereby obviating the need for Job J to schedule itself. In such cases, Job J merely validates the user-specified resource manager , resource manager adapter  or resource reservation service , and dispatches itself to the corresponding resource manager adapter  for execution.","If no user resource preferences are specified, job scheduling is executed generally as follows:\n\n","Some of the above actions of the algorithm  may be eliminated, additional actions may be added, or the actions may be otherwise altered without departing from the scope of this disclosure. Exemplary manners of job-centric scheduling according to the present disclosure will now be described.",{"@attributes":{"id":"p-0049","num":"0060"},"figref":"FIG. 7","b":["300","1","312","318","300","2","314","1","2","3"]},"Job A determines that Resource Manager A has the appropriate resources to execute Job A. Accordingly, Job A schedules itself (action ) to Resource Manager A. Job A then dispatches itself (action ) to a resource manager adapter  (Resource Manager Adapter A) associated with Resource Manager A. Resource Manager Adapter A translates and sends Job A (action ) to Resource Manager A for execution.","As described above, Example 1 relates to scheduling jobs in a grid environment without the use of a centralized scheduler, a metascheduler or a reservation service.",{"@attributes":{"id":"p-0052","num":"0063"},"figref":"FIG. 8","b":["400","1","412","418","2","400","414","1","2","3"]},"Job B schedules itself (action ) based on information collected from the resource manager information component . In particular, Job B determines that Resource Managers B and B each include the appropriate type of processors, but not the requisite number of processors. However, combining the resources of Resource Managers B and B will yield a sufficient amount of processors. Accordingly, Job B sends a reservation request (action ) to a reservation service  in the system . The reservation service , in turn, sends the reservation request (actions . and .) to a pair of resource manager adapters  (Resource Manager Adapters B and B) corresponding to Resource Managers B and B. The Resource Manager Adapters B and B respond as having reserved the following resources\u201480 Linux\u00ae processors from Resource Manager B and 48 Linux\u00ae processors from Resource Manager B. The reservation service  then notifies Job B that the requisite processors have been successfully booked.","Job B then dispatches itself (action ) to the Resource Manager Adapters B and B, which translates and sends Job B (action ) to the corresponding Resource Managers B and B for execution.","Example 2 does not require a centralized scheduler or a metascheduler for the scheduling of jobs in the system .",{"@attributes":{"id":"p-0056","num":"0067"},"figref":"FIG. 9","b":["500","1","512","518","2","500","514","518","1","3","518","1"]},"Job C submits itself to a metascheduler  (action ) associated with the system  in order to seek scheduling suggestions. The metascheduler  proceeds to collect resource information (action ) from Resource Manager C and an additional resource manager , particularly Resource Manager C. As shown, the metascheduler  may query an additional resource manager information component  (Resource Managers Information ) to collect resource information on Resource Manager C. The metascheduler  finds that Resource Manager C has two Cray\u00ae machines and notifies Job C that Resource Manager C has the requisite resources for executing Job C. Job C then dispatches itself (action ) to a resource manager adapter  (Resource Manager Adapter C), which translates and sends Job C to Resource Manager C for execution (action ). Job scheduling in Example C does not require a centralized scheduler or a reservation service.","Each of the above three examples demonstrate that job-centric scheduling according to the present disclosure is self-driven, or job-centric, in that individual jobs seek to locate resources within a particular grid, rather than assigning such a task to a centralized scheduler. Moreover, job scheduling according to the present disclosure may be accomplished in any combination of direct scheduling (example A), scheduling through a reservation request (example B), or scheduling through a metascheduler (example C). As such, job-centric scheduling processes combining various features of direct scheduling, reservation scheduling and\/or metascheduler scheduling are intended as being within the scope of the present disclosure.","Moreover, job-centric scheduling according to the present disclosure may be utilized in any type of computing grid system, including simple grids having homogeneous systems and more complex grids having heterogeneous systems. Furthermore, job-centric scheduling may incorporate various aspects of parallel job execution, such as breaking the job into a plurality of sub-jobs each having an independent scheduling mechanism. Still further, a variety of communication systems may be implemented into a computing grid system having job-centric scheduling. For example, it may be necessary for sub-jobs to communicate with one another. In such instances, the open standard Message Passing Interface (MPI) and any variation thereof may be provided to facilitate such communication.","While various embodiments of job-centric scheduling systems according to the principles disclosed herein, and related methods of performing job-centric scheduling, have been described above, it should be understood that they have been presented by way of example only, and not limitation. Thus, the breadth and scope of the invention(s) should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents. Moreover, the above advantages and features are provided in described embodiments, but shall not limit the application of the claims to processes and structures accomplishing any or all of the above advantages.","Additionally, the section headings herein are provided for consistency with the suggestions under 37 CFR 1.77 or otherwise to provide organizational cues. These headings shall not limit or characterize the invention(s) set out in any claims that may issue from this disclosure. Specifically and by way of example, although the headings refer to a \u201cTechnical Field,\u201d the claims should not be limited by the language chosen under this heading to describe the so-called technical field. Further, a description of a technology in the \u201cBackground\u201d is not to be construed as an admission that technology is prior art to any invention(s) in this disclosure. Neither is the \u201cBrief Summary\u201d to be considered as a characterization of the invention(s) set forth in the claims found herein. Furthermore, any reference in this disclosure to \u201cinvention\u201d in the singular should not be used to argue that there is only a single point of novelty claimed in this disclosure. Multiple inventions may be set forth according to the limitations of the multiple claims associated with this disclosure, and the claims accordingly define the invention(s), and their equivalents, that are protected thereby. In all instances, the scope of the claims shall be considered on their own merits in light of the specification, but should not be constrained by the headings set forth herein."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Reference is now made to the following descriptions taken in conjunction with the accompanying drawings.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 4","FIG. 1"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
