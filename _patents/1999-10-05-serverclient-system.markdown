---
title: Server/client system
abstract: The server/client system comprises a server and at least one client which is connected to said server via a communication line and is provided with at least one I/O port, and is so configured that said server is provided with a device driver for controlling said I/O port, and a virtual I/O port for providing an interface having the same function as said I/O port for said device driver, for transmitting an input/output control signal from said device driver to said client, and for receiving an event from said client to indicate said event to said device driver, and said client is provided with a device handler which is connected to said virtual I/O port via said communication line and controls said I/O port.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07464133&OS=07464133&RS=07464133
owner: Fujitsu Limited
number: 07464133
owner_city: Kawasaki
owner_country: JP
publication_date: 19991005
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","DISCLOSURE OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENTS","EFFECT OF THE INVENTION"],"p":["This application is a National Stage entry of International Application No. PCT\/JP99\/05497, filed Oct. 5, 1999, the entire specification claims and drawings of which are incorporated herewith by reference.","The present invention relates to a server\/client system and, particularly, to a server\/client system wherein the quantity of the hardware resources of the client is small.",{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1","b":["100","200","300","200","400","500"]},"The server  of the conventional server\/client system includes a CPU , a memory , hard disks and , and a line control unit . The hard disks in the server are usually duplicated (mirrored) so that in the case of a failure of one of the hard disks, the other one may take its place.","The client  includes a CPU , a memory , a hard disk , a line control unit , and an I\/O port . In the hard disk , software , including various kinds of applications and device drivers, and an operating system (OS) for controlling the operation of the client , are installed.","The conventional server\/client system is so configured, as shown in the figure, that the applications are operated on the client . For this reason, due to considerable increase in the size of the operating system and applications, and an increase in the number of device drivers, in recent years, the client is required to have high processing-ability, large hardware resources and large-capacity storage devices.","However, a hard disk often used as a hardware resource increases in cost with increasing in capacity and often breaks down. Thus, an increase in capacity of hardware resources is undesirable from the viewpoints of manufacturing cost as well as operational system cost. For this reason, it is required to reduce the burden on the processor of the client, and to reduce the hardware\/software requirements of the client, with effective use of conventional applications and device drivers.","For this purpose, if the applications are operated on the server , and the screen and key-input data are transferred between the client  and server , the burden on the processor of the client  may be reduced, and the requirements of the hardware may be reduced accordingly. Since an I\/O device is usually connected to the client near the user, a device driver is installed in the client.","If the applications are installed in the server and the device driver is operated on the client as mentioned above, there are the following problems in terms of the control of the I\/O device.","(1) As the device driver in the client often depends on the O\/S having a large code size, the device driver installed in the client increases the burden on the processor of the client, and a storage device for the O\/S necessary for operating the device driver is required.","(2) As the interface between the application installed in the server and the device driver installed in the client is different from the one between the application and device driver installed in the client, the device driver must be recreated.","(3) If there are multiple kinds of I\/O device, each driver must be recreated for the above reason (2).","(4) The version number of the device driver may be known only at the place where the client is installed.","(5) Diagnosis of the I\/O device for the client may be performed only at the place where the client is installed.","(6) The device driver must be recreated every time the platform of the client is modified.","As mentioned above, if the application is operated on the server, and the device driver is operated on the client, decreasing the hardware\/software requirements of the client and effective use of resources such as the conventional applications and device drivers are difficult for the above reasons (1), (2), and (3). In addition, efficient operation of the system is difficult as mentioned in the above (4), (5), and (6).","It is therefore the main object of the present invention to provide a server\/client system by which an effective use of resources such as conventional applications and device drivers, and a considerable reduction in the quantity of hardware resources in a client are available.","An embodiment of the present invention for achieving the above object provides a server\/client system comprising a server and at least one client which is connected to said server via a communication line and is provided with at least one I\/O port, wherein said server is provided with a device driver for controlling said I\/O port, and a virtual I\/O port for providing an interface having the same function as said I\/O port for said device driver, for transmitting an input\/output control signal from said device driver to said client, and for receiving an event from said client to indicate said event to said device driver, and said client is provided with a device handler which is connected to said virtual I\/O port via said communication line and controls said I\/O port.","In this server\/client system, as the same interface as the interface between the device driver and the I\/O port of the conventional server\/client system is realized in the server, all of the applications and device drivers used on the conventional client may be operated on the server. For this reason, a considerable reduction in the quantity of the hardware resources in the client may be possible, and the resources of the conventional applications and device drivers may be used in the server as they are and without any modification.","Furthermore, in the server\/client system as configured above, by adding the function of identifying the address on the communication line of the client and each I\/O port, to the virtual I\/O port, a plurality of thin clients may be controlled by one server.","Furthermore, by adding the function of diagnosing the hardware of the clients to the virtual I\/O port, the server which controls a plurality of clients may perform the hardware diagnosis of each client under one umbrella.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 2","FIG. 2"],"b":["1","11","12","13","13","14","13","3","15"],"i":["a ","b","a ","b"]},"The client  comprises a CPU , storage devices such as a memory  and a ROM , a line control unit , and an I\/O port . In this system, since applications and device drivers are installed in and operated on the server, the ROM  stores the software  which includes the software, i.e., a device handler, for converting the signals transmitted from the device drivers in the server  through the communication line  to the signals which can be input to the I\/O port , and a built-in O\/S for controlling the whole of client . Details of the function of the device handler will be described later.","In this embodiment, as the applications must not be operated on the client , the size of the software including the device handler and O\/S is much smaller than a conventional system, and thus the software may be stored in the ROM. For this reason, a hard disk is not required in the client.","A hard disk is mainly responsible for the failure of a client in an server\/client system, and a server\/client system according to the present invention does not require any hard disk, thereby improving the system reliability significantly.","The communication line is, for example, a LAN (Local Area Network), etc.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 3","FIG. 2"],"b":["16","17","4","18","3","17","1","19","2"]},"The client  includes the device handler  for converting the signals which have been input thereto via the communication line  to the signals which can be recognized by the I\/O port , and for converting the signals from the I\/O port  to the signals which can be transmitted through the communication line . In this embodiment, as the client  does not include any application and device driver which are large in size, and includes only the device handler which is small in size, the O\/S  for controlling them may be a built-in O\/S having a very simple configuration.","The virtual I\/O port  in the server has basically the following functions.","It has an interface which functions as the I\/O port  of the client , for the higher device driver .","It transmits the input\/output control signal transmitted from the higher device driver  to the device handler  in the client, and receiving the event from the device handler  to notice it to the higher device driver .","The minimum function necessary for the device handler  of the client  is as follows.","It receives the input\/output control signal transmitted from the virtual I\/O port  of the server , performs the input\/output control of the I\/O port , and transmits the event transmitted from the I\/O port to the virtual I\/O port  of the server .","In the server\/client system of this embodiment, as the virtual I\/O port  is provided in the server  and the device handler  is provided in the client , conventional applications and device drivers may be operated on the server  without any modification, and thereby the hardware\/software requirements of the hardware resources of the client  may be reduced considerably.","Below are described more detail configurations of this system and the operation thereof, referring  which shows the data flow between the application  in the server  and the I\/O device .","The data input to and output from the I\/O device  by the applications  are as follows.","(1) The application  sends an input\/output processing request () including data to be input\/output, to the device driver .","(2) The device driver  performs the input\/output control of the virtual I\/O port according to input\/output processing request ().","(3) The virtual I\/O port  converts input\/output control signal () to the data to be sent out to the communication line , and transmits the data to the device handler  in the clients  in the form of input\/output control packet ().","(4) When the device handler  receives the input\/output control packet (), it interprets the contents of input\/output control packet () and performs the input\/output control () of the I\/O port .","(5) The I\/O port  converts input\/output control signal () to data () to be sent out to the connecting line , transmits data () to the external I\/O device , and controls it.","According to the above operations, the data input to and output from the I\/O device  by the application  are performed.","Next, notice of an event from the I\/O device  to the application  will be described.","(6) At first, the I\/O device  outputs event () (such as the change of the control signal line) to the connecting line .","(7) The device handler  converts event () from the I\/O port  to the data to be sent out to the communication line , and transmits the data to the virtual I\/O port  in the form of event packet ().","(8) When the virtual I\/O port  receives event packet (), it interprets the contents of event packet (), and sends event () to the device driver .","(9) The device driver  sends event () to the application .","Above is described the data flow between the application  and the I\/O device  in the server\/client system of this embodiment.","Next, the operation sequence of the server\/client system of this embodiment will be described referring .","When the power is supplied to the server  and client , at first the connection between the virtual I\/O port  and the device handler  is established. The establishment of this connection is performed with the negotiation between the virtual I\/O port  and the device handler . That is, when the power is supplied to the client , the device handler  transmits a connection request () (broadcast) to request the establishment of the connection on the communication line to the virtual I\/O port . If the power has been supplied to the server  and the virtual I\/O port  has started, a response () to this is output from the virtual I\/O port  to the device handler . Response () includes the mapping information about the address of the client  on the communication line, which has been predetermined with the setting function of the virtual I\/O port , and about the class and number of the physical I\/O port of the client . When the device handler  receives this response (), it establishes the connection on the communication line, and performs the mapping of the physical I\/O port according to the mapping information, and when the mapping has been completed, the device handler  transmits a mapping completion notice () to the virtual I\/O port . When the virtual I\/O port  receives this notice (), it transmits a response () to this notice () to the device handler . At this time, the virtual I\/O port  can accept the control from the device driver . If the control signal is transmitted to the virtual I\/O port  before this time, the virtual I\/O port  transmits the error signal to the device driver .","Next, the sequence of data input to and output from the I\/O devices  by the application  will be described. The data flow in this case is as shown in .","At first, an input\/output request () is accepted by the device driver , which performs the input\/output control () of the virtual I\/O port . The virtual I\/O port  converts the input\/output control () to the data to be sent out to the communication line, and transmits the data to the device handler  in the form of input\/output control packet (). When the device handler  receives input\/output control packet (), it interprets the contents of input\/output control packet (), and performs the input\/output control () of the I\/O port . The I\/O port  outputs data () to the connecting line .","Next, the notice of an event from the I\/O device  to the application  will be described.","When the I\/O device  outputs an event () (such as the change of the control signal line) to the connecting line, the device handler  converts event () from the I\/O port  to the data to be sent out to the communication line , and transmits the data to the virtual I\/O port  in the form of event packet (). When the virtual I\/O port  receives event packet (), it interprets the contents of event packet (), and sends event () to the device driver . The device driver  sends event () to the application .",{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 6","b":["18","18"]},"The following states are assumed as the internal states of the virtual I\/O port .","(1) Standby: the state of waiting to receive the connection request from the client .","(2) Waiting for completion notice: the state of waiting for the notice of the completion of the mapping for the physical I\/O port of the client .","(3) Connection: the state of being able to accept the control from the device driver  after receiving the notice of the completion of the mapping for the physical I\/O port of the client .","For the above each state of the virtual I\/O port, the following events are assumed.","(4) Receiving connection request: the event of receiving the connection request from the client ","(5) Receiving completion notice: the event of receiving the notice of the completion of the mapping for the physical I\/O port of the client .","(6) Request of input\/output control: the event of requesting the input\/output control from the device driver .","(7) Receiving event packet: the event of receiving an event packet from the client .","Referring the above states and events, the function of the virtual I\/O port  is described below.","At step S, in , the initialization process is performed, and then the virtual I\/O port  is set to the \u201cstandby\u201d state. Next, an event is received at step S. At this time, if the state of the virtual I\/O port  is the \u201cstandby\u201d state (Yes at step S), it is determined at step S whether the event is the \u201creceiving connection request\u201d. If the event is the \u201creceiving connection request\u201d (Yes at step S), the response is transmitted to the device handler at step S, and the state is changed to the \u201cwaiting for completion notice\u201d at step S. If the event is not the \u201creceiving connection request\u201d at step S (No at step S), it is determined at step S whether the event to be input next is the request of finishing, and if the event is the request of finishing (Yes at step S), the operation of the virtual I\/O port  is finished. If the event is not the request of finishing, the process is returned to step S, and an event is received again, and then the later steps are executed.","If the state is not the \u201cstandby\u201d at step S (No at step S), it is determined whether the state is the \u201cwaiting for completion notice\u201d at step S. If the state is the \u201cwaiting for completion notice\u201d (Yes at step S), it is determined whether the event is the \u201creceiving completion notice\u201d at step S. If the event is the \u201creceiving completion notice\u201d (Yes at step S), the response is transmitted to the device handler  at step S, and then the state is changed to the \u201cconnection\u201d state (step S). If the event is not the \u201creceiving completion notice\u201d at step S (No at step S), the process goes to step S to receive an event again except that the event is a request to finish.","If the state is not the \u201cwaiting for completion notice\u201d at step S (No at step S), it is determined whether the state of the virtual I\/O port  is \u201cconnection\u201d state at step S. If the state is the \u201cconnection\u201d state (Yes at step S), it is determined whether the event is the \u201crequest of input\/output control\u201d at step S. In case of yes at step S, the input\/output control packet is transmitted to the device handler  at step S. If the event is not the \u201crequest of input\/output control\u201d at step S (No at step S), it is determined whether the event is the \u201creceiving event packet\u201d at step S. In case of yes at step S, the received packet is sent to the device driver . If the event is not the \u201creceiving event packet\u201d at step S (No at step S), it is determined whether the event is the request of finishing at step S. In case of yes at step S, the process is finished, but in case of no, the process goes to step S to execute the later steps.",{"@attributes":{"id":"p-0083","num":"0082"},"figref":"FIG. 7","b":["27","27"]},"The following states (1) to (3) are assumed as the internal states of the device handler .","(1) Standby: the state just after the start of the client .","(2) Waiting for response to connection request: the state of waiting for a response from the server after transmitting the connection request is transmitted.","(3) Connection: the state of being able to accept an input\/output control packet from the virtual I\/O port  after transmitting the notice of completion of the mapping for the physical I\/O port.","Furthermore, for the each state of the device handler , the following events (4) to (7) are assumed.","(4) No event: there is no event.","(5) Receiving response to connection request: the event of receiving a response from the server after transmitting the connection request.","(6) Receiving input\/output control packet: the event of receiving an input\/output control packet from the server.","(7) I\/O port event: the event from the I\/O port.","Next, referring , the processing procedure of the device handler  will be described.","At first, at step S, the initialization process is performed, and the state is set to the \u201cstandby\u201d, and then an event is received at step S. Next, it is determined whether the event is the \u201cstandby\u201d at step S. In case of yes, it is determined whether there is no event at step S. If there is no event at step S (Yes at step S), the connection request is transmitted to the virtual I\/O port  of the server  (step S), and the state is changed to the \u201cwaiting for response to connection request\u201d (step S). Next, it is determined whether the event is the request to finish (step S), and if the event is not the request to finish, the process returns to step S and the later steps are executed again.","If the state of the device handler  is not the \u201cstandby\u201d at step S (No at step S), it is determined whether the state is the \u201cwaiting for response to connection request\u201d at step S. In case of yes, it is determined whether the event is the \u201creceiving response to connection request\u201d at step S. In case of yes at step S, the notice of completion of the mapping for the physical I\/O port is transmitted to the virtual I\/O port , and then the state of the device handler  is changed to the \u201cconnection\u201d (step S).","If the state of the device handler  is not the \u201cwaiting for response to connection request\u201d at step S (No at step S), it is determined whether the state is the \u201cconnection\u201d at step S. In case of yes at step S, it is determined whether the event is the \u201creceiving input\/output control packet\u201d at step S. In case of yes at step S, the input\/output control is performed for the I\/O port  at step S.","If the event is not the \u201creceiving input\/output control packet\u201d at step S, it is determined whether the event is the \u201cI\/O port event\u201d at step S. In case of yes, this event packet is transmitted to the virtual I\/O port at step S. If the event is not the \u201cI\/O port event\u201d at step S, it is determined whether the event is the request of finishing at step S. In case of yes at step S, the process is finished, but in case of no, the process returns to step S and the later steps are executed again.","As described above, the first embodiment of the server\/client system according to the present invention is so configured that: the virtual I\/O port  is provided in the server; the device handler  is provided in the client; the process from the device driver on the upper layer of the virtual I\/O port  is transferred to the device handler ; the control of the I\/O port  is performed by the device handler ; and the event from the I\/O port  is transferred to the virtual I\/O port  and, thereby, the applications and device drivers which are operated conventionally on a client may be operated on the server  without any modification. For this reason, the burden on process of the client  may be extremely reduced, and thereby it is not required to mount a large capacity storage device such as a hard disk on the client .","Further, in the server\/client system of this embodiment shown in  and , an interface used in the conventional server\/client system having a device driver in the client is adopted as the interface between the virtual I\/O port  and the device driver .",{"@attributes":{"id":"p-0100","num":"0099"},"figref":"FIG. 8","i":"a ","b":["210","205","211","210","205","210","205","30","211","31","205","30","32","205","33","210"]},"In the server\/client system of this embodiment shown in  and , the virtual I\/O port  is configured, as shown in , so as to have the interfaces for the command  and process result  shown in for the device driver . For this reason, the API (Application Programming Interface) environment for the device driver  provided by the O\/S of the conventional server\/client system may also be provided for the device driver  by the O\/S of this embodiment. As a result, it is possible, in this embodiment, to control the I\/O device  by using the device driver  as with the conventional device driver .","As mentioned above, in the server\/client system of this embodiment, conventional device drivers may be used in the server as they are, and thus existing resources may be used effectively.",{"@attributes":{"id":"p-0103","num":"0102"},"figref":"FIG. 9","b":["2","2","1"],"i":["a ","b"]},"In the embodiment shown in the figure, the client is provided with a device handler and an I\/O port , and connected to an I\/O device via the I\/O port ","The client is provided with a device handler , and two I\/O ports, I\/O port () and I\/O port (), which are connected to an I\/O device and I\/O device respectively.","In the server , the application includes application () used by the client and application () used by the client . The device driver includes device driver () for driving the I\/O device connected to the client , device driver () for driving the I\/O device connected to the client , and device driver () for driving the I\/O device connected to the client ","In this embodiment, the virtual I\/O port has a function to set the virtual I\/O port numbers in the virtual I\/O port , the addresses on the communication line of the clients and , and the classes and numbers of physical I\/O ports of the clients and , in order to distinguish the clients and connected to the server  via the communication line , and to distinguish the I\/O ports , and ",{"@attributes":{"id":"p-0108","num":"0107"},"figref":["FIG. 10","FIG. 9","FIG. 5"],"b":"12"},"According to the set information shown in , client () is designated with address  on a communication line, and client () is designated with address  on a communication line. The I\/O port of client () is designated with physical I\/O port class COM and physical I\/O port number . Two I\/O ports and of client () are designated with physical I\/O port numbers  and  respectively. The mapping information allows a one-to-one correspondence between the physical I\/O port class and number of the client, and the number which is set as virtual I\/O port number. For example, in the example in , physical I\/O port class and number COM for client ()  corresponds to virtual I\/O port number . Further, COM and COM for client () are in one-to-one correspondence with virtual I\/O port numbers  and  respectively.","In the system in , when the power is supplied to client () , the device handler is started, and connection between address  (server ) and address  (client ) on the communication line is established via the virtual I\/O port . After that, data transmission between the virtual I\/O port and the device handler is performed on this connection. The process from the device driver to the I\/O port is accepted as a process to the I\/O port by the virtual I\/O port , and COM designating the I\/O port is added to the process message to be transmitted to the device handler . In the device handler , the I\/O port is distinguished from the information COM added to the process message, and the process for the I\/O port is performed.","On the other hand, for the event which has occurred at the I\/O port ,  is added to the process message by the device handler , and then the event is transmitted to the virtual I\/O port in the form of packet. Thus, virtual I\/O port number  is recognized by the virtual I\/O port , and the occurrence of the event is noticed to device driver () corresponding to virtual I\/O port number .","The process for the client is also performed on the connection between address  and address  on the communication line. That is, between the virtual I\/O port and I\/O port , virtual I\/O port number  is in one-to-one correspondence with COM, and virtual I\/O port number  is in one-to-one correspondence with COM. Thus, to the process message which travels on the connection between address  and address , virtual I\/O port  and COM, or, virtual I\/O port  and COM are added, and the I\/O port or I\/O port is designated.","In the server\/client system of this embodiment, a plurality of clients having a plurality of I\/O ports may be controlled under one umbrella by one server in the way as mentioned above. In this case, as the device drivers for the conventional system may be used as the device drivers for two or more kinds of I\/O devices connected to a plurality of clients, and may be operated on the server without any modification, all versions of the device drivers may be confirmed and controlled at the server.","In the server\/client system in , adding a diagnosis indicating function and a result displaying function to the virtual I\/O port allows all clients to be diagnosed under one umbrella by the server. That is, with start of the diagnosis by the user, the virtual I\/O port transmits the diagnosis command to the designated client, e.g., client () , and allows the device handler in the client to execute the diagnosis of the I\/O port , the I\/O device , and the client hardware. Result of the diagnosis is transmitted to the virtual I\/O port , and displayed as a diagnosis result.",{"@attributes":{"id":"p-0115","num":"0114"},"figref":"FIG. 11","b":["18","18","18","2","18","18","2","2","1"],"i":["a ","a","a ","a","a","a ","a "]},"When the device handler receives the diagnosis command, it interprets the contents of the command and, in case that the command means the diagnosis of, for example, the I\/O device , the device handler performs the diagnosis supported by it, and transmits the result of the diagnosis to the virtual I\/O port . For example, in case that the I\/O port is a serial port, an internal loop-back diagnosis, etc. is performed, and the result of the diagnosis is transmitted to the virtual I\/O port . When the virtual I\/O port receives the result of the diagnosis, the result is indicated, for example, on the display of the server.","In the above diagnosis process, as the virtual I\/O port is able to distinguish each client and each I\/O port on an individual basis, diagnoses of all the clients may be executed under one umbrella by the server.","In the embodiment shown in , when the platform (hardware, O\/S, etc.) of any one of the clients is modified, the device handler thereof must be newly recreated, but the procedure of establishing the connection on the virtual I\/O port and the communication line, the method of receiving the process message from the virtual I\/O port , the format of the process result message including I\/O port numbers and classes to the virtual I\/O port , and the format of the event message are not modified. In addition, also in the system having aforementioned diagnosis function, the method of receiving the diagnosis command, the format of the response message, and the format of diagnosis result message are also not modified. Consequently, even if the platform of any one of the clients is modified, the server is not modified, and thereby modifications of the platform of any one of the clients may be accommodated with flexibility.","As described above, according to the present invention, the applications and device drivers used in the client of the conventional server\/client system may be transferred to the server without any modification. Thus, the burden on the client may be reduced, and consequently the requirements for hardware resources may be considerably reduced. For this reason, it is possible to construct a server\/client system having a thin client in the conventional API environment.","Furthermore, since the server is not modified even if the platform of the client is modified, the modification of the platform may be accommodated with flexibility.","If the server\/client system according to the present invention as mentioned above is applied to a POS system, etc. in which several clients are controlled by one server, as each client is reduced in the hardware\/software requirements considerably, the cost for constructing the whole system as well as the cost for operating the system may be considerably reduced. Furthermore, since the modifications of each platform may be accommodated with flexibility, the burden of cost at design change of the POS system may be considerably reduced."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The above mentioned and other objects, features, advantages, etc. of the present invention are described in detail below, together with the accompanying drawings showing embodiments of the present invention, wherein:",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 4","FIG. 2","FIG. 3"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 5","FIG. 2","FIG. 3"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 6","FIG. 2","FIG. 3"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 7","FIG. 2","FIG. 3"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 8","i":"a "},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 8","FIG. 2","FIG. 3"],"i":"b "},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 10","FIG. 9"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 11","FIG. 9"]}]},"DETDESC":[{},{}]}
