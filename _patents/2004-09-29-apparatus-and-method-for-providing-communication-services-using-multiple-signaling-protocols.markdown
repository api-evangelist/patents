---
title: Apparatus and method for providing communication services using multiple signaling protocols
abstract: An apparatus includes a plurality of call controllers that are capable of establishing a plurality of communication sessions over a packet network using a plurality of signaling protocols. The apparatus also includes an application controller that is capable of supporting one or more supplementary services during each of the communication sessions. As particular examples, the application controller and at least one of the call controllers are capable of at least one of: placing at least one of the communication sessions on hold so a user may initiate another of the communication sessions, placing at least one of the communication sessions on hold so the user may accept another of the communication sessions, and establishing a conference using at least two of the communication sessions. The communication sessions may use a common signaling protocol or different signaling protocols.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08218457&OS=08218457&RS=08218457
owner: STMicroelectronics Asia Pacific Pte. Ltd.
number: 08218457
owner_city: Singapore
owner_country: SG
publication_date: 20040929
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This patent application claims priority under 35 U.S.C. \u00a7119(e) to U.S. Provisional Patent Application No. 60\/583,657 filed on Jun. 29, 2004, which is hereby incorporated by reference.","This disclosure is generally directed to communication systems and more specifically to an apparatus and method for providing communication services using multiple signaling protocols.","Packet-based voice communication services are becoming more and more popular in the United States and around the world. Packet-based voice services, often referred to as voice-over-Internet Protocol (VoIP) services, allow voice communications to occur over packet networks. This typically allows packet networks to provide both voice and data services to customers.","Many different signaling protocols have become standard for VoIP services. The H.323 protocol, the Session Initiation Protocol (SIP), and the Media Gateway Control Protocol (MGCP) are several examples. While it would be highly desirable for all networks to use the same protocol, many different networks supporting different protocols are already in use.","The availability of multiple protocols presents various problems for businesses and other organizations. For example, integrating networks that use different protocols may require the use of protocol translators. However, protocol translation often lacks established and accepted standards, so protocol translators often operate in different ways. Other approaches, such as Time Division Multiplexing (TDM) techniques, could be used to interconnect networks, but this typically introduces latency. Also, an organization could move all of its products and services to a single protocol, but this would limit connectivity to other networks. Finally, product manufacturers are often forced to develop products that function in single-protocol and multi-protocol environments, which increases the cost and time needed to develop the products.","This disclosure provides an apparatus and method for providing communication services using multiple signaling protocols.","In one aspect, an apparatus includes a plurality of call controllers that are capable of establishing a plurality of communication sessions over a packet network using a plurality of signaling protocols. The apparatus also includes an application controller that is capable of supporting one or more supplementary services during each of the communication sessions.","In particular aspects, the application controller and at least one of the call controllers are capable of at least one of: placing at least one of the communication sessions on hold so a user may initiate another of the communication sessions, placing at least one of the communication sessions on hold so the user may accept another of the communication sessions, and establishing a conference using at least two of the communication sessions.","Other technical features may be readily apparent to one skilled in the art from the following figures, descriptions, and claims.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","100"]},"In this example, the system  includes an endpoint . The endpoint  provides voice and\/or other communication services to a user in the system . For example, the endpoint  may allow a user to use a telephone  to communicate over a packet network. The endpoint  includes any hardware, software, firmware, or combination thereof for facilitating communications over a packet network. Also, the telephone  includes any hardware, software, firmware, or combination thereof for transmitting and receiving audio information, such as a fixed or wireless telephone or a computing device with a microphone and speaker. In addition, the endpoint  and the telephone  could be integrated into a single unit, such as an Internet Protocol (IP) telephone.","The endpoint  supports communication services using multiple signaling protocols. In this example, the endpoint  supports the H.323, SIP, and MGCP signaling protocols. Other or additional protocols could also be supported by the endpoint . In some embodiments, the endpoint  provides only a single channel into a packet network, and communications using all protocols are transported over that channel. Because the endpoint  supports multiple signaling protocols, the endpoint  may be described as support a multi-signaling protocol architecture.","In the illustrated example, the system  also includes various H.323 endpoints (EPs) -, SIP user agents (UAs) -, and a media gateway (MG) . The H.323 endpoints -, SIP user agents -, and media gateway  represent additional endpoints in the system . For example, these endpoints could be used by parties who place telephone calls to the endpoint  or who receive telephone calls from the endpoint . The parties using these endpoints may be referred to as remote parties and\/or calling or called parties (depending on the situation). Each of these endpoints includes any hardware, software, firmware, or combination thereof for supporting communication services. In this example, each of the H.323 endpoints -, SIP user agents -, and media gateway  is capable of providing communication services using a single protocol. However, any number of endpoints in the system  could support multiple signaling protocols, whether or not those endpoints operate in the same manner as the endpoint .","In this example, the system  further includes H.323 gatekeepers (GKs) -, SIP servers -, a media gateway controller (MGC) , a SIP proxy , and an H.323 gateway (GW) . The H.323 gatekeepers -facilitate communication with the H.323 endpoints -. For example, the H.323 endpoints -may each register with one of the H.323 gatekeepers -before receiving service. The SIP servers -facilitate communication with the SIP user agents -. The media gateway controller  facilitates communication with the media gateway . The SIP proxy  and the H.323 gateway facilitate communication between the media gateway controller  and the H.323 gatekeeper and the SIP server . This represents one example of the topology of the system . Other topologies could be used in the system .","The various components shown in  may communicate with one another over one or more packet networks. The one or more packet networks may communicate Internet Protocol (IP) packets, frame relay frames, Asynchronous Transfer Mode (ATM) cells, or other suitable information between network addresses. Also, the one or more packet networks may include one or more local area networks (LANs), metropolitan area networks (MANs), wide area networks (WANs), all or a portion of a global network such as the Internet, or any other communication system or systems at one or more locations. In addition, the one or more packet networks may operate according to any appropriate type of protocol or protocols, such as Ethernet, IP, X.25, frame relay, or any other protocol.","The following represents one example implementation of the system . This implementation is for illustration only. Other implementations of the system  may be used without departing from the scope of this disclosure. In the example implementation, the H.323 endpoints -use NetMeeting, and the SIP user agents -represent Pingtel xpressa software evaluation versions. The H.323 gatekeepers -represent Cisco 2600 series devices. The SIP servers -and the media gateway controller  are implemented using Linux. The telephone  represents a normal four-wire analog phone.","In one aspect of operation, the endpoint  is registered with the H.323 gatekeeper , the SIP server , and the media gateway controller  at the same time. This allows the endpoint  to receive service using all three protocols (H.323, SIP, and MGCP). For example, the endpoint  could simultaneously handle telephone calls from multiple endpoints that support different signaling protocols.","As particular examples, the endpoint  could establish a telephone call with one of the endpoints, such as the SIP user agent . The endpoint  could place the SIP user agent on hold and place or receive a telephone call from a media gateway . The endpoint  could also establish a conference call involving endpoints using one or multiple signaling protocols, such as when the endpoint  establishes a conference call involving the SIP user agent and the media gateway . In addition, if the endpoint  is currently receiving service using one of the protocols, other endpoints may attempt to call the endpoint  using the same or different signaling protocol. When this happens, the endpoint  may produce a call waiting tone, and the user decides whether to accept the incoming call. In this way, the other endpoints placing the incoming calls may call the endpoint  and are not simply denied service with a busy signal. In this way, the endpoint  may receive various services using any suitable signaling protocol.","By operating in this way, calls involving endpoints that use different protocols may be established with less delay. For example, if an H.323 endpoint calls a SIP user agent, an interworking unit (IWU) is typically needed to implement a bridge between the H.323 and SIP call setup signaling. The interworking unit often needs to implement an ASN.1 encoder\/decoder as well as an augmented Backus-Naur form (ABNF) encoder\/decoder. For SIP messages, the interworking unit decodes ABNF messages and encodes them as ASN.1 messages for transmission to the H.323 endpoint. Similarly, for H.323 messages, the interworking unit decodes ASN.1messages and encodes them as ABNF messages for transmission to the SIP user agent. Apart from this processing delay, there could be network delay depending on the physical location of the interworking unit, and call setup itself depends on the availability of the interworking unit. The use of the endpoint  in the system  may reduce or eliminate the need for an interworking unit.","Moreover, even if one of the services in the system  becomes inoperable, the endpoint  may still operate using the other services. For example, if the media gateway controller  becomes inoperable, the endpoint  could still communicate using the SIP and H.323 protocols. Further, the endpoint  provides supplementary or value-added services (such as call waiting, call hold, and call conferencing) to the user. These services could be provided regardless of the protocol or protocols supported by other endpoints in the system . In addition, protocol translators may not be needed in the system .","While the above description has described the endpoint  as establishing or receiving telephone calls using multiple protocols, the endpoint  could also establish or receive multiple telephone calls using the same protocol. For example, the endpoint  could establish and\/or receive multiple H.323 telephone calls. Also, while this document may describe the use of a \u201ctelephone\u201d involved in \u201ctelephone calls\u201d or \u201ccalls,\u201d any communication device could be used in the system  to initiate or receive any suitable type of communication session. The communication session could involve voice, data, video, or any other or additional content. Because of this, the endpoint  and\/or telephone  could be replaced by and\/or incorporated into other devices, such as a computing device or a videophone.","Although  illustrates one example of a communication system , various changes may be made to . For example, the system  could include any number of endpoints, telephones, gatekeepers, servers, gateways, and proxies. Also, the system  could include components that support other or additional signaling protocols. In addition, each of the various other endpoints in the system  could support a single protocol or multiple protocols.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 2","FIG. 2","FIG. 1"],"b":["102","102","102","102","100","102"]},"In this example, the endpoint  includes a line interface . The line interface  acts as an interface to one or more communication lines. For example, the line interface  could act as an interface to one or more analog communication lines coupled to one or more telephones . In this document, the term \u201ccouple\u201d and its derivatives refer to any direct or indirect communication between two or more elements, whether or not those elements are in physical contact with one another. The line interface  includes any suitable structure for coupling the endpoint  and one or more communication lines.","A digital signal processor (DSP)  is coupled to the line interface . The DSP  supports various functions in the endpoint . For example, the DSP  may perform dual-tone multi-frequency (DTMF) detection to detect when a user presses buttons on the telephone . The DSP  could also generate dial tones, call waiting warning signals, and other audible signals perceptible to the user of the telephone . The DSP  could further support one or more voice codecs used to compress and decompress voice data. The DSP  represents any suitable processing device.","As shown in , the endpoint  also includes core software , application control software , phone manager software , and telephony control software . The various software - represents any suitable instructions capable of being executed by one or more processors.","A task manager  represents the main controller of the endpoint . The task manager  is capable of triggering execution of and otherwise controlling the other software - in the endpoint . For example, the task manager  could launch various subtask managers (SubTMs) in the endpoint , which are used to control the software - of the endpoint . As a particular example, the task manager  could launch an application control (AC) subtask manager , a telephony control (TC) subtask manager , and a phone subtask manager . The task manager  could also initialize and start various drivers needed to communicate over a packet network, such as Ethernet drivers .","The application control subtask manager  is capable of launching a display manager , a keypad manager , and a user interface (UI) control module . The display manager  controls the operation of a display of the endpoint , such as a liquid crystal display (LCD)  or other display. The keypad manager  controls the operation of an input device of the endpoint , such as a keypad  or other device. As a particular example, the keypad manager  may manage DTMF events detected by the phone manager software  and request that the phone manager software  detect DTMF tones. The user interface control module  controls the operation of the display manager  and the keypad manager .","The telephony control subtask manager  is capable of launching various call control modules that support different signaling protocols in the endpoint . In this example, the call control modules include an H.323 call control module , a SIP call control module , and a MGCP call control module . The telephony control subtask manager  is also capable of launching a voice manager . The call control modules - may represent separate threads initiated by the telephony control subtask manager . The call control modules - support communication sessions that are established and controlled using different signaling protocols. In this example, the protocols include H.323, SIP, and MGCP, although any other or additional protocols could also be used.","The call control modules - also interact with various stacks -. The stacks - represent any suitable mechanism for facilitating the transfer of information, such as memory registers, queues, and other memory arrangements. In this example, the stacks include a Q.931\/H.245 stack , a Remote Access Service (RAS) stack , a SIP\/Session Description Protocol (SDP) stack , a MGCP\/SDP stack , and a Realtime Transfer Protocol (RTP)\/Real-Time Control Protocol (RTCP) stack . The stacks - are used by the H.323 call control module , the stack  is used by the SIP call control module , and the stack  is used by the MGCP call control module . The stack  is used to transport voice data. The stacks - facilitate communication over a communication link, such as an Ethernet link, through various drivers .","In some embodiments, the user interface control module  includes a message queue that checks for messages from the call control modules - and from a message decoder . The call control modules - implement their respective signaling protocols (H.323, SIP, and MGCP) using one or more Application Programming Interfaces (APIs) provided by the stacks -. Also, any messages received by the stacks - may be provided to the call control modules - using a callback function. A callback function pointer is registered to a corresponding stack at the time of initializing and starting an instance of the stack. This callback function may be implemented in the call control module of the respective stack. In addition, the endpoint  may include buttons (such as on a keypad ) that allow the user to select whether to place an H.323, SIP, or MGCP call. The user selects one of these buttons, and the user interface control module  uses this selection to identify the call control module - to handle the call.","The phone subtask manager  launches the message decoder  and a codec manager . The phone subtask manager  also tests an interface to the DSP . The message decoder  has an interface to the user interface control module  and to the call control modules -. The message decoder  dispatches messages either to the DSP  or to the codec manager . The codec manager  passes commands to the line interface  to perform specific functions, such as ringing a telephone , start voice processing, play DTMF tones, tune a gain (voice volume) of the telephone , and identify codec events such as hook movements. The message decoder  also provides messages from the DSP  to the corresponding software modules in the endpoint . For example, when receiving voice data for delivery over a network, the message decoder  could facilitate communication of the voice data from the DSP  to the telephony control software  for communication through the RTP stack .","The voice manager  in the telephony control software  initiates a jitter control module , a voice transmit (Voice TX) module , and a voice receive (Voice RX) module . The jitter control module  controls the operation of a jitter buffer . The jitter buffer  places received RTP packets in order, such as an order based on a time stamp and a sequence number of the RTP packets, before passing the packets to the DSP  for decoding. The voice transmit module  is capable of waking the RTP stack  each time a voice packet is received from the DSP  and schedule transmission of the voice packets. The voice receive module  is capable of waking the RTP stack  at specified intervals, such as every 10 ms, and schedule reception of voice packets. This allows the endpoint  to handle voice packets up to the rate of one RTP packet every 10 ms, although other time interval(s) could be used.","The operation of the user interface control module  and the call control modules - are shown in , which are described below. The following description represents one possible implementation of the endpoint . This example implementation is for illustration only. Other embodiments of the endpoint  could be used without departing from the scope of this disclosure.","In an example implementation, the endpoint  includes an ARM7TDMI core and a DSP core. Voice vocoders are implemented on the DSP . The stacks - represent reentrant stacks implemented on an ARM7 microcontroller. The RTP stack  supports multiple instances using the same task.","The stacks - register to a fixed or discovered gatekeeper and listen for incoming H.323 calls (SETUP messages) on port number . The stack  uses the Transmission Control Protocol (TCP) and\/or the User Datagram Protocol (UDP). The stack  registers with the SIP server at port number  and listens for incoming SIP calls (INVITE messages) at port number . The stack  registers with the media gateway controller  at port number  and listens for signals from the media gateway controller  at port number .","An IP address of the endpoint  is same for the registrations to the H.323 gatekeeper , the SIP server , and the media gateway controller . An H.323 alias, SIP phone name, or media gateway endpoint name is set to aaln\/1. An E164 alias can be set to any number, and the same number could be used to register with the H.323 gatekeeper , the SIP server , and the media gateway controller . If the same number is used, when the endpoint  registers with the H.323 gatekeeper and the SIP server , the endpoint  uses the number assigned by the media gateway controller . This number should be accepted by the H.323 gatekeeper and the SIP server . If it is not, the endpoint  may have to use three different numbers for the three protocols. The endpoint  also ensures that there is no clash between the port numbers used by the stacks -.","The call control modules - call the stack APIs and start the instances of their associated stacks with appropriate initializations. The stacks - are implemented such that when a call control module starts an instance of a stack, a pointer to a callback function is passed to the stack. These callback functions receive all the messages and callback data from the associated stack. The callback messages for the stacks are kept as similar as possible so that the implementation of the callback function is simpler.","As a particular example of implementing the endpoint , the endpoint  could initially represent a single-protocol device, such as an H.323 device. To provide the multi-protocol functionality described above, the stacks - and the call control modules - could be implemented in the device. These could be implemented in software on the device. In this particular example, other components such as the RTP stack  and the functionality of the DSP  may need no or minimal changes. As a result, the hardware of the device may remain the same. The only cost increase may be due to the increased memory needed for the additional software.","Although  illustrates one example of an endpoint  supporting multiple signaling protocols, various changes may be made to . For example, the functional division within the software - shown in  is for illustration only. Various modules of the software - could be combined or omitted and additional modules could be added according to particular needs. Also, although the endpoint  is described as using various software -, the functions provided by the software - could also be implemented using any hardware, software, firmware, or combination thereof.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIGS. 3A and 3B","FIGS. 3A and 3B","FIG. 2","FIGS. 3A and 3B","FIG. 2"],"b":["300","300","222","102","300","300","300","102","300"]},"In a Standby state , a user may press a button indicating whether an outgoing call is an H.323, SIP, or MGCP call. When the user goes off-hook (picks up the telephone ) for the outgoing call, the user interface control module  checks if there is a call available. For example, the endpoint  could allow one or multiple calls to exist simultaneously, and the user interface control module  determines if the number of existing calls is less than a maximum number of calls.","If there is a call available, the user interface control module  sends an M_OFF_HOOK message to the appropriate call control module -. The \u201cappropriate\u201d call control module represents the call control module associated with the selected type of outgoing call. The user interface control module  then checks if the call being made is an H.323 or a SIP call. If it is, the user interface control module  sends a M_CB_DIALTONE message, and the endpoint  plays a dial tone and enables DTMF detection. This causes a state change from the Standby state  to a Dialing state , where the user may dial a telephone number.","If the call being made is an MGCP call, a dial tone is not immediately played. The MGCP call control module  waits for messages in its message queue. On reception of the M_OFF_HOOK message from the user interface control module , the MGCP call control module  sends an OFF_HOOK event (EVENT_HD) to the media gateway controller  and waits for a response from the media gateway controller . On receiving the EVENT_HD event from the endpoint , the media gateway controller  responds by playing a dial tone signal (SIGNAL_DL). A callback function implemented in the MGCP call control module , upon detecting the SIGNAL_DL (ON) from the media gateway controller  through the stack , sends a M_CB_DIALTONE message to the user interface control module . That message is sent to the message decoder  and then to the DSP , which causes the DSP  to play a dial tone and enable DTMF detection. Again, the state changes from the Standby state  to the Dialing state .","At this stage, the user dials a telephone number of a called party using the keypad . DTMF tones are detected by the DSP  and sent to the message decoder  and then to the user interface control module  (if DTMF detection is enabled). In some embodiments, dialing may be completed when the user enters the telephone number, followed by the pound sign (\u201c#\u201d).","If this call represents an H.323 or SIP call and the user cancels dialing or takes an unusually long time to dial the telephone number, the state  times out and changes to a Busy Tone state . In the Busy Tone state , a busy tone is played to the user. If the call is an MGCP call, the timeout is ignored since the playing of busy tone is governed by commands from the media gateway controller . Once in the Busy Tone state  and after a timeout, the busy tone is stopped, and the state changes to a Wait On Hook state . In the Wait On Hook state , the endpoint  waits for the user to go on-hook (puts the telephone  down). When the user goes on-hook, the state machine  resets to the Standby state .","Once dialing is complete, the state changes to a Call state , where the outgoing call is placed. A PLACE_CALL message is sent to the appropriate call control module - with the telephone number to be called. The user interface control module  receives an indication that the called party's endpoint is ringing. For example, the user interface control module  may receive a CallEvent(A,rem_ringing) message or a <PROTOCOL>_CBKMSG_RINGING message indicating that the called party's endpoint is ringing. At this point, ring back tone is played for the user.","If the called party answers, the endpoint  receives a far end connect message, the ring back tone is stopped, the state remains in the Call state , and the user starts talking to the called party. If the called party's endpoint is busy, the endpoint  enters the Busy Tone state . A busy tone is played until a timeout, after which the state machine  enters the Wait On Hook state . This could also happen if the called party's endpoint disconnects.","In the case of an incoming call (such as when an H.323 SETUP message, SIP INVITE message, or MGCP Create Connection (CRCX)+Ringer Signal ON message is received), a <PROTOCOL>_CBKMSG_INCOMING is sent to the callback function in the appropriate call control module -. An Incoming Call message is forwarded to the user interface control module . If there is any free call available, ring tone is generated, the number of free calls available is decremented (or set to zero if only one call is allowed), and the state changes from the Standby state  to a Ringing state . Also, the endpoint  displays any available caller identification information on the display . If the number of available calls available is already zero, the endpoint  remains in the Standby state . A TC_EVENT(cancelled) message is sent to the appropriate call control module - to cancel the call.","If the incoming call is an H.323 or SIP call, an M_OFF_HOOK_OTHER_CALL message is sent to the MGCP call control module . In some embodiments, the endpoint  can handle only one call at a time, and this message informs the MGCP call control module  that a call using another protocol is being established.","From the Ringing state , the state may change to the Standby state  after ringing is stopped due to a timeout (call is not accepted) or a remote call rejection (calling party hangs up). If the user goes off-hook, an ACCEPT_CALL message is sent to the appropriate call control module -. On receiving a M_CB_RINGING_OFF, the ringing is stopped, media channels are opened for voice conversation, and the state is changed to the Call state . If the calling party hangs up first, the state machine  enters the Busy Tone state , followed by the Wait On Hook state  and the Standby state .","When at least one incoming or outgoing call has been established and the state machine  is in the Call state , the endpoint  may receive a new incoming call. When this occurs, the endpoint  determines if a call is available. If not, the endpoint  remains in the Call state , and the new call cannot be answered by the user.","If a call is available, the endpoint  plays a call-waiting warning tone to the user and enters a Warning state . If the user fails to answer the new call, a timeout occurs, or the new call is terminated by the calling party, the state machine  returns to the Call state . Otherwise, if the user answers the new call, the endpoint  stops generating the warning tone, and the state machine  enters a Holding state .","In the Holding state , the original call is placed on hold while the user answers the new incoming call. The user interface control module  sends a M_HOLD_CALL to the appropriate call control module - and receives a M_HOLD_CALL_ACK response from the call control module. This places the original call on hold. The new call is connected, and the state machine  enters the Call state  for the new call.","A call could also be placed on hold by the user pressing a \u201cHold\u201d button on the endpoint . When the user presses the \u201cHold\u201d button during a call, the state machine  changes from the Call state  to a Holding state . After placing one call on hold, the endpoint  determines if there are any other calls that have been placed on hold. If so, the state machine  enters a Restoring state  and restores the other call, at which point the state machine  enters the Call state . For example, the user interface control module  may send a M_RESTORE_CALL message to the appropriate call control module - and receive a M_RESTORE_CALL_ACK response once the other call is restored. If no other calls exist when the user presses the \u201cHold\u201d button, the state machine  enters the Dialing state . This allows the user to dial a new telephone number and establish a new call.","Although  illustrate one example of a user interface control state machine , various changes may be made to . For example, other or additional states could be supported in the state machine . Also, other or additional triggers could be used to transition between the states in the state machine .",{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIGS. 4A and 4B","FIGS. 4A and 4B","FIG. 2","FIGS. 4A and 4B","FIG. 2"],"b":["400","400","230","232","102","400","400","400","102","400"]},"The state machine  is initially in a Standby state . When there is an incoming call, the state changes to a Wait Call Accept state . An Incoming Call message is sent to the message queue in the user interface control module . The message includes any caller identification information (if available) associated with the incoming call.","A TC_EVENT(cancelled) message could be received from the user interface control module . This means that there is no free call available, and there is already an existing call. If this occurs, the state machine  reenters the Standby state .","If the call can be accepted, the appropriate call control module - receives an ACCEPT_CALL message. For example, the AcceptCall API of the appropriate call control module - could be called to perform the signaling needed to accept the call. As particular examples, a SIP OK message or an H.323 ALERTING\/CONNECT message could be provided to the call control module -. The state then changes from the Wait Call Accept state  to a Wait Media Start state .","In the Wait Media Start state , the state machine  may receive a callback message for starting media transmit and\/or media receive. When media starts for both transmit and receive have been detected, the state machine  enters a Wait Open RTP Channel state . The media start callback transmit and receive messages may contain parameters such as an IP address of the remote destination, a media type (audio\/video), a type of vocoder negotiated, and a packet size. These parameters are passed to the voice manager , which calls the relevant APIs to start instances of the RTP stack . On successful starting of the RTP instances, the voice manager  sends an acknowledgement to the call control module -, and the state changes to a Wait Open Voice Channel state . On successful opening of voice channels, the state then changes to a Communication state . At this point, the voice call is established.","If a remote disconnect or a cancel call message (endpoint  goes on-hook) is received, the state returns to the Standby state  after closing the RTP channels. Also, the state machine  returns to the Standby state  if there are any errors in opening the RTP channels or the voice channels results in the destruction of the RTP stack instances.","When the user places an outgoing telephone call (such as by pressing an H.323 button or a SIP button) using the endpoint , the appropriate call control module - receives a PLACE_CALL message with the called party's telephone number. A CallPlace API in the call control module - is used to place the outgoing call, and the state changes from the Standby state  to a Call Establishment state . Ring back tone is played when the called party's endpoint starts ringing, and the state machine  enters a Ring Back state . Upon reception of the media start callback messages for transmit and receive as explained above, the ring back tone is stopped, and the state changes to the Communication state  through the states -. The voice call is then established.","During an established incoming or outgoing call, the user of the endpoint  may place the call on hold. This may occur, for example, when the user presses a \u201cHold\u201d button on the endpoint . This causes the state machine  to enter a Holding state . In the Holding state , the endpoint  attempts to place the call on hold by closing a voice channel from the remote party. If the endpoint  fails to place the call on hold, the state machine  returns to the Communication state . Otherwise, the state machine  enters a Held state . At this point, the user may attempt to receive an incoming call or place an outgoing call using a different call control module.","Eventually, the user may attempt to restore the held call. If this is possible, the state machine  enters a Restoring state , where the endpoint  attempts to restore the call that had been placed on hold by reopening the voice channel from the remote party. If successfully restored, the state machine  enters the Communication state , and the previously held call may continue.","Although  illustrate one example of an H.323\/SIP call control state machine , various changes may be made to . For example, other or additional states could be supported in the state machine . Also, other or additional triggers could be used to transition between the states in the state machine .",{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIGS. 5A and 5B","FIGS. 5A and 5B","FIG. 2","FIGS. 5A and 5B","FIG. 2"],"b":["500","500","234","102","500","500","500","102","500"]},"The state machine  is initially in a Standby state . An incoming call may be represented as a Create Connection (CRCX) and Ringer (RG) ON message from the media gateway controller . An Incoming Call message is sent to the user interface control module , and ring tone is played. The state changes from the Standby state  to a Wait Call Accept state .","If the user goes off-hook to accept the call, an off-hook event (EVENT_HD) is sent to the media gateway controller , and the state changes to the Wait Media start state . After that, the state machine  cycles through states - by receiving media start callback messages for both transmit and receive and successfully opening instances of the RTP stacks  and the voice channels.","When the user wishes to place an outgoing call (such as by pressing a MGCP button) using the endpoint , the endpoint  goes off-hook. A M_OFF_HOOK event is sent by the user interface control module  to the MGCP call control module . On reception of the M_OFF_HOOK message, the call control module  sends an off-hook event (EVENT_HD) to the media gateway controller  and waits for a response.","On receiving the EVENT_HD event from the endpoint , the media gateway controller  responds by sending a command to play a dial tone signal (SIGNAL_DL) and enabling DTMF detection. The callback function implemented in the MGCP call control module , on detecting the SIGNAL_DL (ON) from the stack , sends a M_CB_DIALTONE message to the user interface control module . The user interface control module  provides this message to the DSP  through the message decoder . The DSP  plays the dial tone and enables DTMF detection. The call control module  then receives a PLACE_CALL message along with the telephone number when the user completes dialing, and the state changes to a Call Establishment state .","Each digit in the telephone number is sent to the media gateway controller  as a DTMF event. Once a match for the called party is found at the media gateway controller , a Create Connection (CRCX) message is sent to the endpoint .","After the called party's endpoint starts ringing, a ring back tone signal (SIGNAL_RT) is sent, which causes ring back tone to be played at the endpoint  in a Ring Back state . On receiving a media start callback message for transmit and receive, the ring back tone is stopped, and instances of the RTP stack  and the voice channels are opened. On successful opening, the state changes to the Communication state , and a voice call is established.","After going off-hook to place an outgoing call or after accepting an incoming call, the user can go on-hook in any of the states. As a result, upon receiving a M_ON_HOOK message from the user interface control module , the call control module  sends an EVENT_HU message to the media gateway controller  to reset the state machine at the media gateway controller . Also, after establishing a call, if a Delete Connection message is received from the media gateway controller , the called party has disconnected, a MGCPCBReject or MGCPCBDisconnect message is sent to the user interface control module , and the state machine  is reset to the Standby state .","As explained above, in some embodiments, the endpoint  is capable of supporting only a single call at any given time. If the call control module  receives a M_OFF_HOOK_OTHER_CALL message while in any of the states, this means that there is an incoming call callback message received by one of the other call control modules -. Upon receiving this message, the state machine  enters into a Busy state  and sends an off-hook event (EVENT_HD) to make the media gateway controller  believe that the endpoint  is busy. For any further MGCP calls destined for the endpoint , the media gateway controller  responds with a busy signal. When the other call control module - finishes with the call, a M_ON_HOOK_OTHER_CALL message is sent to the call control module . The call control module  sends an on-hook event (EVENT_HU) to the media gateway controller  so that MGCP calls destined for the endpoint  are provided to the endpoint . The state then changes back to the Standby state .","During an established incoming or outgoing call, the user of the endpoint  may place the call on hold. This may occur, for example, when the user presses a \u201cHold\u201d button on the endpoint . This causes the state machine  to enter a Holding state . In the Holding state , the endpoint  attempts to place the call on hold. If the endpoint  fails to place the call on hold, the state machine  returns to the Communication state . Otherwise, the state machine  enters a Held state . At this point, the user may attempt to receive an incoming call or place an outgoing call using a different call control module.","Eventually, the user may attempt to restore the held call. If it is possible, this causes the state machine  to enter a Restoring state , where the endpoint  attempts to restore the call that had been placed on hold. If successfully restored, the state machine  reenters the Communication state .","Although  illustrate one example of a MGCP call control state machine , various changes may be made to . For example, other or additional states could be supported in the state machine . Also, other or additional triggers could be used to transition between the states in the state machine .","Using the various state machines - shown in , a call can be established, whether incoming or outgoing, using any protocol (H.323\/SIP\/MGCP). If there is a second call incoming from an endpoint using a different protocol, the endpoint  is able to handle it appropriately. In particular, the endpoint  allows the user to place the first call on hold and attend to the second call. Also, the user is able to place the second call on hold and restore the first call, and vice versa. In addition, the user is free to place the first call on hold, initiate or accept a second call, and then put all of the parties in a conference. This represents several examples of the functionality of the endpoint . Other actions and services could also be provided to the user of the endpoint .","While  have separately illustrated the state machines - for various components in the endpoint , the following description describes how the various state machines - interact with one another and exchange messages. As an example, assume there is an outgoing call from the endpoint  to the H.323 endpoint ","To initiate the call at the endpoint , the user may press an H.323 button on the endpoint  and go off-hook. When the endpoint  goes off-hook, the line interface  detects the off-hook event and informs the codec manager . The codec manager  sends an off-hook message to the user interface control module . The user interface control module , on receiving the off-hook event, checks the call availability status. If there is a free call available, a M_OFF_HOOK message is sent to the H.323 call control module , and the number of free calls available is decremented. Also, since this is an H.323 call, dial tone is played immediately to the user, and the state machine  enters the Dialing state .","In the Dialing state , the user interface control module  waits for the collection of the called party's telephone number from the user. The user hears the dial tone and starts keying in the telephone number. DTMF events are detected by the DSP  and are sent via the message decoder  to the user interface control module . When the user finishes dialing the telephone number (may be indicated by the \u201c#\u201d key), a PLACE_CALL message is sent to the H.323 call control module , and the state machine  enters the Call state . On receiving the PLACE_CALL message, the state machine  of the call control module  enters the Call Establishment state . If the called party starts ringing (when an H.323 ALERTING message is received from the called party's endpoint), the call control module  receives a <PROTOCOL>_CBKMSG_RINGING callback message from the H.323 stacks -.","On receiving this message, the state machine  changes to the Ring Back state , and a CallEvent(rem_ringing) message is sent to the user interface control module . The user interface control module , on receiving this message, plays ring back tone. When the media negotiation is over using H.245, media start callback messages for transmit and receive are sent, along with the called party's IP address, port number for the RTP\/RTCP session, the encoder\/decoder vocoder type, and the packetization size, to open the DSP channels.","On receiving the callback messages for the media, a CallEvent(rem_connect) message is sent to the user interface control module  so that the ring back tone can be stopped. The voice manager  starts RTP stack instances, and a message is sent to open the DSP channels for particular encoder\/decoder type. On receiving the acknowledgement from the DSP  for successful opening of the channels, an ACK message is sent to the call control  module. Upon receiving the ACK, the call control module  changes state, in sequence, to the Communication state , and the voice call is established.","During the call, if there is an incoming call from a media gateway, the MGCP protocol stack  decodes the CRCX message and any caller identification information. The MGCP call control module  receives a MGCP_CBKMSG_INCOMING callback message and changes state to the Wait Call Accept state . The MGCP call control module  sends an INCOMING_CALL message to the user interface control state machine . The user interface control state machine , which is in the Call state  because of the H.323 call, checks if there is any free call available for the particular channel. If so, the user interface control state machine  decrements the number of free calls available. The user interface control state machine  also requests the DSP  to play a call-waiting warning tone to the user to indicate the reception of a new incoming call. The user interface control state machine  changes from the Call state  to the Warning state .","Upon hearing the warning tone, the user can either ignore it or press a particular button or combination of buttons to accept the new incoming call. If the user ignores the call, the DSP  continues to play the warning tone to the user until the calling party cancels or disconnects the call. When the calling party cancels the call, the user interface control state machine  returns to the Call state , and the warning tone is stopped.","If the user decides to accept the new incoming call, the DSP  detects this and informs the user interface control state machine . The user interface control state machine , on receiving this message, stops the warning tone and sends a M_HOLD_CALL message to the active call control module (which in this example is the H.323 call control module ). The user interface control state machine  also changes from the Warning state  to the Holding state . When the H.323 call control module  receives the M_HOLD_CALL message in the Communication state , the call control module  sends a M_VOICE_HOLD_CHANNEL message to the voice manager  and changes to the Holding state .","The voice manager , upon receiving this message, closes the jitter buffer  for the current call. The voice manager  also changes a voicestatus flag to VOICE_STOPPED and a RTPChannelStatus flag to CHANNEL_HELD. In some embodiments, these flags are maintained on a per call basis. Upon successfully closing the jitter buffer , the voice manager  sends a M_VOICE_HOLD_CHANNEL_ACK message to the H.323 call control module . The H.323 call control module  receives this message in the Holding state  and closes the DSP channel for the current call. The H.323 call control module  also changes from the Holding state  to the Held state  and sends a M_HOLD_CALL_ACK message to the user interface control module .","The user interface control module , on receiving this message, puts the current call in a \u201chold call\u201d list, moves the new call to an \u201cactive call\u201d list, and sets a temporary call to \u201cNO_CALL.\u201d The user interface control module  also sends a M_ACCEPT_CALL message to the MGCP call control module  for the new call. The MGCP call control module  calls the MGCP stack API to send an \u201chd\u201d event (EVENT_HD) to the media gateway controller . The MGCP stack , on receiving remote side SDP information from the media gateway controller , sends MEDIA_START_TX and MEDIA_START_RX callback messages to the MGCP call control module . The MGCP call control module , on reception of these messages, opens the RTP stack instances and the DSP channel and changes to the Communication state . For this particular MGCP call, the endpoint  changes the voicestatus flag to VOICE_START and the RTPChannelStatus flag to CHANNEL_OPEN. At this point, the MGCP call is established, and the H.323 call is on hold. The speech codecs used for the held call and for the active call can be different, and capabilities matching between the calling and the called party may be used.","In some embodiments, each time a new call comes in, different RTP ports are assigned to the call. For example, port numbers ,  may be assigned for the H.323 call, and port numbers , may be assigned for the MGCP call. Also, UDP sockets for a \u201cheld\u201d call may remain open. Any packets received at those sockets may be discarded and not sent to the DSP  for processing. In particular embodiments, H.323 uses H.450.4 for the call hold feature. The H.450.4 standard discloses both consulting and without consulting call hold features, and either of these two techniques could be used by the endpoint . If a \u201cheld\u201d remote party continues to send RTP packets to the channel, the packets may be discarded as the voice status for that particular call is VOICE_STOPPED.","Returning to the above example, the H.323 call is on hold, and the MGCP call is active. When the user wants to restore the H.323 call, the user presses the \u201cHold\u201d button on the endpoint . The DSP  detects this and informs the user interface control module . The user interface control module  receives the message from the DSP  in the Call state  and changes to the Holding state . The user interface control module  also sends a M_HOLD_CALL message to the current call's call control module (in this example, the MGCP call control module ). The MGCP call control module  closes the DSP channels for the active call, sends a M_HOLD_CALL_ACK message to the user interface call control module , and changes from the Communication state  to the Held state .","The user interface control module , on receiving the M_HOLD_CALL_ACK message, checks if there are any calls on hold. In this example, the H.323 call is on hold. The user interface control module  puts the current MGCP call in the \u201chold call\u201d list and puts the held call in the \u201cactive call\u201d list. If there are no calls on hold, the user interface control module  puts the current MGCP call in the \u201chold call\u201d list, puts \u201cNO_CALL\u201d in the \u201cactive call\u201d list, and changes state to the Dialing state  to dial a new outgoing call.","In this example, since an H.323 call was put on hold, the user interface control module  enters the Restoring state . A M_RESTORE_CALL message is sent to the H.323 call control module  to restore the H.323 call. On receiving this message in the Held state , the H.323 call control module  sends a VOICE_RESTORE_CHANNEL message to the voice manager  and changes state to the Restoring state . The voice manager , on successfully restoring the voice channel, sends a VOICE_RESTORE_CHANNEL_ACK message to the H.323 call control module . The H.323 call control module  requests the DSP  to open the voice channels, changes state to the Wait Open Voice Channel state , and sends a M_RESTORE_CALL_ACK message to the user interface control module . On receiving a DSP_OPEN_ACK message from the DSP  for successfully opening the channels, the voicestatus flag is changed to VOICE_START and the RTPChannelStatus flag is changed to CHANNEL_OPEN. Also, the state of the H.323 call control module  changes from the Wait Open Voice Channel state  to the Communication state .","When the user interface control module  receives the M_RESTORE_CALL_ACK message from the H.323 call control module , the user interface control module  changes from the Restoring state  to the Call state . At this point, the held H.323 call is restored, and the MGCP call is put on hold. To restore the held MGCP call, the same procedure as explained above is done.","If no other call is on hold when the user presses the \u201cHold\u201d button to place a first call on hold, the user interface control module  changes from the Call state  to the Dialing state . This allows the user to establish a second call. To establish a new call, the user selects the type of outgoing call and then enters the telephone number. The DTMF tones are detected by the DSP  and, depending upon the type of outgoing call, the corresponding stack API is called to place the new call. For example, the user may be talking on an H.323 call and decide to put a SIP terminal in a three-party conference. To do so, the user presses the \u201cSIP\u201d button and then dials a SIP user agent -","In some embodiments, since this is a second call, during media negotiation, different RTP\/RTCP port numbers are offered for voice communications. In particular embodiments, the RTP\/RTCP port numbers are allocated on a per channel and per call basis, such as when RTP\/RTCP port numbers are reserved in a double dimensional array like RTPPort[Channel][Call]. Thus, the SIP communications take place on RTPPort[Channel=0][Call=1] and for the held H.323 call on RTPPort[Channel=0][Call=0]. For the held H.323 call, the received RTP packets may be discarded as the voicestatus flag is marked as VOICE_STOPPED.","At this moment, the user may press a \u201cthree-party\u201d function button or sequence of buttons to initiate multi-party conferencing. When the user does so, the held H.323 call is restored in a similar manner as explained above, and RTP packets received for both calls are sent to the DSP  for decoding and playback. One example mechanism for handling a conference call in the DSP  is shown in , which is described below.","As described above, when the user interface control module  receives an Incoming Call message, the user interface control module  checks the availability of a free call. In some embodiments, the user can configure the number of available maximum calls per channel or per protocol.","If there is no free call available, a TC_EVENT (cancelled) message is sent to the appropriate call control module -. On receiving this message, the state machine of the call control module is reset to the Standby state, and the <Protocol>CallReject API is invoked. This API sends, for example, an H.323 RELEASE COMPLETE message or a SIP CANCEL message with a reason of \u201cBusy\u201d.","When an MGCP call ends (such as when a remote party disconnects), the MGCP call control module  receives a Delete Connection (DLCX) message along with a play busy signal (SIGNAL_BZ) command from the media gateway controller , and the RTP instances are stopped. The DSP channels are also closed, and the state machine  is changed to the Standby state . This remote disconnect message is forwarded to the user interface control module , which changes state to the Busy Tone state  and plays busy tone to the user. After a timeout, the state is changed to the Wait On Hook state . When the user goes on-hook, the state changes to the Standby state .","By performing the various functions described above, an Interworking Gateway or switch is not needed to perform the bridging between the different signaling messages. Also, the remote endpoints need no special implementation other than the call establishment mechanism as defined in one or more of the H.323, SIP, and MGCP standards. The use of a three-party conference is used above as an example. The same principle could be extended to any number of participants and may be limited only by available computing resources.",{"@attributes":{"id":"p-0111","num":"0110"},"figref":["FIG. 6","FIG. 6","FIG. 6","FIG. 2"],"b":["204","204","204","204","204","102","204"]},"In this example, the endpoint  includes a microphone  and a speaker . The microphone  captures audio information at the endpoint , such as words spoken by a user of the endpoint . The speaker  provides audio information to the user of the endpoint , such as audio information received from other parties involved in a conference call.","As shown in , the DSP  receives two input streams Rx and Rx and produces two output streams Tx and Tx. Each of the input streams represents audio information from another endpoint in the system . For example, the first input stream Rx could represent a stream provided by the H.323 endpoint , and the second input stream Rx could represent a stream provided by the media gateway . Also, each of the input streams may use different or common speech codecs or compression algorithms. Similarly, each of the output streams represents audio information provided to another endpoint in the system . For example, the output streams Tx and Tx could represent streams provided to the H.323 endpoint and the media gateway , respectively.","In this example, the DSP  includes an audio mixer . The audio mixer  mixes the input streams and provides a mixed signal to the speaker  for presentation to the user. For example, in the endpoint  of , the DSP  may decode the payload of RTP packets received from two or more remote endpoints using the appropriate speech decoder, use the audio mixer  to mix decoded Pulse-Code Modulation (PCM) samples, and provide the mixed samples to the speaker . In this way, the user of the endpoint  will hear each of the parties using the remote endpoints during a conference call.","Depending on the implementation of the remote endpoints, the remote endpoints in a conference call may lack the ability to communicate directly with one another. For example, the H.323 endpoint and the media gateway  may lack the ability to communicate directly with one another and exchange voice information. To allow a party using one of the remote endpoints to hear a party using another of the remote endpoints during a conference call, the DSP  includes combiners -.","In this example, the combiners - combine the audio information in an audio stream from the microphone  with the audio information from one of the input streams. For example, the combiner  produces the first output stream Tx by combining the audio stream from the microphone  with the second input stream Rx. Similarly, the combiner  produces the second output stream Tx by combining the audio stream from the microphone  with the first input stream Rx.","By doing this, a first remote endpoint that receives the first output stream Tx is actually receiving audio information from the endpoint  and audio information from a second remote endpoint (the Rx stream). The second remote endpoint receives the second output stream Tx, which is actually audio information from the endpoint  and audio information from the first remote endpoint (the Rx) stream. This allows the DSP  to provide each remote endpoint with the audio information from another remote endpoint. As a result, the remote endpoints may participate in a conference call even if they cannot communicate with one another or when a multipoint conferencing unit (which usually performs the mixing for multi-party conferencing in a packet-based network) is absent.","As an example, assume that the endpoint  is engaged in a conference call with the H.323 endpoint and the media gateway . The H.323 endpoint and the media gateway  may not be able to exchange voice information during the conference call. To support the conference call, the endpoint  provides the H.323 endpoint with audio information from the endpoint  and from the media gateway . The endpoint  also provides the media gateway  with audio information from the endpoint  and from the H.323 endpoint . In this way, each party to the conference call may hear all other parties to the conference call, even when the endpoints in the conference call use different protocols and different speech codecs.","Although  illustrates one example of a digital signal processor  for handling call conferencing using multiple protocols and different speech codecs, various changes may be made to . For example, in , the functionality of a telephone  is incorporated into the endpoint . In other embodiments, the microphone  and the speaker  may reside outside the endpoint . Also, the number of input streams, output streams, and combiners is for illustration only. Any suitable number of input streams, output streams, and\/or combiners may be used in the DSP .",{"@attributes":{"id":"p-0120","num":"0119"},"figref":["FIG. 7","FIG. 2","FIG. 1"],"b":["700","700","102","100","700"]},"The endpoint  registers with multiple devices using multiple signaling protocols at step . This may include, for example, the endpoint  registering with an H.323 gatekeeper , a SIP server , and a media gateway controller . The endpoint  could register with any other or additional devices using any other or additional protocols.","The endpoint  determines if the user wishes to initiate or accept a first call at step . This may include, for example, the endpoint  receiving an incoming call, ringing a telephone , and detecting the user answering the telephone . This may also include the endpoint  detecting the user using the telephone  to place an outgoing call. As a particular example, this may include the endpoint  detecting the user pressing a button identifying the protocol to be used, followed by a telephone number and the \u201c#\u201d sign. In other embodiments, the protocol to be used may be detected automatically. Also, in other embodiments, no buttons need to be pressed to identify the end of the telephone number.","The endpoint  establishes a first telephone call at step . This may include, for example, the endpoint  communicating any suitable signaling messages needed to establish the first call. The first telephone call may use any suitable protocol, such as H.323, SIP, or MGCP.","The endpoint  determines whether the user wishes to place a second telephone call at step . This may include, for example, the endpoint  detecting the user attempting to place the first telephone call on hold. At this point, there is no incoming second telephone call, so placing the first call on hold likely indicates that the user wishes to place a second call.","The endpoint  places the first telephone call on hold at step . This may include, for example, the endpoint  stopping the transmission of packets containing outgoing voice data and discarding any packets containing incoming voice data for the first telephone call.","The endpoint  establishes a second call using a second protocol at step . This may include, for example, the endpoint  detecting the user pressing a button identifying a protocol to be used, followed by a telephone number and the \u201c#\u201d sign. The second protocol may or may not be the same as the first protocol.","If the user does not initiate a second call at step , the endpoint  determines if a second incoming call using a second protocol is received at step . This may include, for example, the endpoint  determining if a message is received indicating that a second telephone call has been placed to the endpoint . The type of message received depends on the protocol used by the calling party to place the second telephone call.","If there is an incoming telephone call, the endpoint  determines if the user accepts the second telephone call at step . This may include, for example, the endpoint  providing a call waiting warning to the user. This may also include the endpoint  determining if the user presses a button on the telephone  to accept the incoming second telephone call. If the user accepts the second call, the endpoint  places the first telephone call on hold at step , and the endpoint  then establishes the second telephone call using the second protocol at step .","At some point, the endpoint  determines if the user wishes to initiate a conference call at step . This may include, for example, the endpoint  determining if the user presses a button or button sequence on the telephone  identifying the conference function. If the user wishes to establish a conference call, the endpoint  establishes a conference call at step . This may include, for example, the endpoint  establishing a conference call involving the user and all parties associated with the current call and any calls on hold. This may also include the DSP  operating as shown in  to provide conferencing functionality to remote endpoints that cannot communicate directly with one another or when a multipoint conferencing unit is not available.","The endpoint  allows the current call and\/or any calls on hold to complete at step . This may include, for example, the endpoint  allowing a single telephone call to conclude when one of the parties places a telephone on-hook. This may also include the endpoint  allowing a conference call to conclude when multiple parties place their telephones on-hook. In addition, this may include the endpoint  allowing the user of the endpoint  to restore one or more telephone calls on hold and then terminating the restored calls.","Although  illustrates one example of a method  for providing communication services using multiple signaling protocols, various changes may be made to . For example, the endpoint  could allow more than two telephone calls involving the endpoint  to exist at the same time. Also, as described above, it is possible for multiple telephone calls to use the same protocol. Further, while  illustrates the endpoint  providing call waiting, call hold, and call conferencing services, any other or additional services or a subset of these services could be provided by the endpoint . In addition, while  illustrates multiple \u201ctelephone calls\u201d involving the endpoint , any other or additional communication session(s) may be attempted, established, maintained, and completed as part of the method .","It may be advantageous to set forth definitions of certain words and phrases used in this patent document. The terms \u201cinclude\u201d and \u201ccomprise,\u201d as well as derivatives thereof, mean inclusion without limitation. The term \u201cor\u201d is inclusive, meaning and\/or. The phrases \u201cassociated with\u201d and \u201cassociated therewith,\u201d as well as derivatives thereof, may mean to include, be included within, interconnect with, contain, be contained within, connect to or with, couple to or with, be communicable with, cooperate with, interleave, juxtapose, be proximate to, be bound to or with, have, have a property of, or the like. The term \u201ccontroller\u201d means any device, system, or part thereof that controls at least one operation. A controller may be implemented in hardware, firmware, or software, or a combination of at least two of the same. It should be noted that the functionality associated with any particular controller may be centralized or distributed, whether locally or remotely.","While this disclosure has described certain embodiments and generally associated methods, alterations and permutations of these embodiments and methods will be apparent to those skilled in the art. Accordingly, the above description of example embodiments does not define or constrain this disclosure. Other changes, substitutions, and alterations are also possible without departing from the spirit and scope of this disclosure, as defined by the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["For a more complete understanding of this disclosure and its features, reference is now made to the following description, taken in conjunction with the accompanying drawings, in which:",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIGS. 3A and 3B"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIGS. 4A and 4B"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIGS. 5A and 5B"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
