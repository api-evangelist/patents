---
title: Indexing of partitioned external data sources
abstract: A computing system hosts a plurality of websites, a plurality of external data sources, and a search service. External resources in each of the external data sources are partitioned among a plurality of external partitions. The search service automatically generates an index comprising index entries. The index entries are partitioned among a plurality of index partitions, each associated with one or more of the websites. For each given index partition, the index entries in the given index partition map terms to resources in the given set of resources that contain the terms. The given set of resources includes web pages in a given set of websites associated with the given index partition and external resources in external partitions used by the given set of websites. The search service uses the index entries in given index partition to identify resources in the given set of resources containing query terms.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08224804&OS=08224804&RS=08224804
owner: Microsoft Corporation
number: 08224804
owner_city: Redmond
owner_country: US
publication_date: 20090722
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["As information technology (IT) has grown more complex, some enterprises have found that the cost of maintaining their own IT infrastructure is too high. To reduce expenses associated with maintaining their information technology infrastructure, such enterprises are shifting to a hosted computing model. In a hosted computing model, a web services provider operates IT infrastructure on behalf of multiple enterprises. In other words, the task of maintaining IT infrastructure is outsourced to the web services provider. The enterprises that use IT infrastructure operated by the web services provider are referred to as tenants.","Tenants may use the IT infrastructure operated by the web services provider for a variety of purposes. For example, tenants may use the IT infrastructure operated by the web service provider to host websites. In a second example, tenants may use the IT infrastructure operated by the third party to host databases.","A web services provider may be required to store a large amount of data for each tenant of the web services provider. For instances, a web services provider may be required to store inventory data for each tenant of the web services provider. Furthermore, a web services provider may be required to store the data for tenants in such a way that each tenant only has access to their own data. That is, the web services provider cannot allow a first tenant to have access to a second tenant's data without the second tenant's permission. At the same time, due to the computational overhead associated with maintaining separate databases, it may not be efficient for the web services provider to store each of the tenants' data in separate databases.","A computing system hosts a plurality of websites, a plurality of external data sources, and a search service. External resources in each of the external data sources are partitioned among a plurality of external partitions. The search service automatically generates an index comprising index entries. The index entries are partitioned among a plurality of index partitions, each associated with one or more of the websites. For each given index partition, the index entries in a given index partition map terms in a given set of resources to resources in the given set of resources. The given set of resources includes web pages in a given set of websites associated with the given index partition and external resources in external partitions used by the given set of websites. The search service uses the index entries in the given index partition to identify resources in the given set of resources containing query terms.","This summary is provided to introduce a selection of concepts in a simplified form. These concepts are further described below in the Detailed Description. This summary is not intended to identify key features or essential features of the claimed subject matter, nor is this summary intended as an aid in determining the scope of the claimed subject matter.","As briefly described above, a system for indexing and searching for resources is described. The techniques of this disclosure are described with reference to the attached figures. In the following description, reference numbers refer to like reference numbers in the attached figures. It should be understood that the attached figures are examples and are provided for purposes of explanation only.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 1","FIG. 1"],"b":["100","100"]},"As illustrated in the example of , the system  includes a server computing system . The server computing system  is a computing system. As used in this disclosure, a computing system is a set of one or more physical electronic computing devices. A physical electronic computing device is a physical computing device comprising physical electronic components that interact to perform computing tasks. A physical computing device is a device that performs computing tasks. Physical electronic components are physical entities that affect electrons or fields of electrons in a predictable manner. Example types of electronic components include capacitors, resistors, diodes, transistors, and other types of physical entities that affect electrons or fields of electrons in a manner consistent with the intended function of an electronic computing device. An example physical electronic computing device is described below with reference to .","It should further be noted that, in some implementations, the server computing system  hosts one or more virtual computing devices. As used in this disclosure, a virtual machine is a software application that emulates a physical computing device. Consequently, a single one of the physical computing devices in the server farm  may behave like two or more separate physical computing devices. As used in this disclosure, the term \u201ccomputing device\u201d encompasses physical computing devices and virtual machines.","In some instances, a web services provider operates the server computing system . As used in this disclosure, a web services provider is an entity that operates information technology infrastructure to provide one or more web services to a plurality of tenants. A tenant is an entity that uses web services provided by a web services provider.","In addition, the system  includes a client device . The client device  may be a wide variety of different types of computing systems. For example, the client device  may be a personal computer, a lap top computer, a cellular telephone, a smartphone, a watch, a video game console, a netbook, a personal media player, a device integrated into a vehicle, a television set top box, a network appliance, a server device, a supercomputer, a mainframe computer, or another type of computing system.","A network  facilitates communication between the server computing system  and the client device . The network  may be a wide variety of different types of electronic communication networks. For example, the network  may be a wide-area network, such as the Internet, a local-area network, a metropolitan-area network, or another type of electronic communication network. The network  may include wired and\/or wireless data links. A variety of communications protocols may be used in the network  including, but not limited to, Ethernet, Transport Control Protocol (TCP), Internet Protocol (IP), Hypertext Transfer Protocol (HTTP), SOAP, remote procedure call protocols, and\/or other types of communications protocols.","As used in this disclosure, a computing device provides a service when the computing device performs an action specified by a service definition of the service for each allowable input to the service. In other words, a service is provided by a computing device when the computing device performs actions specified by the service definition of the service for each allowable input to the service. Furthermore, as used in this disclosure, a service definition is a set of allowable inputs and a set of mappings from each of the allowable inputs to particular actions.","Furthermore, as used in this disclosure, an endpoint of a service is an identifiable conceptual object that provides the service. A computing device includes an endpoint of a service when the computing device has been configured to receive input directed by one or more software processes to a conceptual object and has been configured to perform actions specified by the service definition of the service in response to the input. As used in this disclosure, a software process is an instance of a computer program, consisting of one or more threads, that is being sequentially executed by a computer system. In some instances, a single computing device includes a plurality of endpoints of the same service. In various instances, endpoints of services are identified in different ways. For instance, in some instances, endpoints of services are identified by Uniform Resource Identifiers (URIs). In other instances, endpoints of services are identified by Globally Unique Identifiers (GUIDs).","As illustrated in the example of , one or more computing devices at the server computing system  host a plurality of website proxies A-N (collectively, \u201cwebsite proxies \u201d). Each of the website proxies  is an endpoint of a website service. Each of the website proxies  is associated with a website in a plurality of websites. Each website in the plurality of websites is hosted by the server computing system . As used in this disclosure, a website proxy is associated with a website when the website proxy provides access to the website. As used in this disclosure, a website is a set of web pages that is managed as a unit. As used in this disclosure, a web page is a document rendered by a web browser application.","Each website in the plurality of websites is associated with at least one tenant of the server computing system . In some instances, two or more of the websites may be associated with a single tenant. For example, an enterprise may manage a first website for internal use (i.e., an intranet site) and a second website for public use (i.e., a World Wide Web site). A tenant is able to manage at least some aspects of the contents of a website with which the tenant is associated. For example, a tenant associated with a website may be able to change the content of individual web pages in the website, add web pages to the website, delete web pages from the website, and\/or perform other activities to manage the website. In general, a tenant is not allowed to manage a website with which the tenant is not associated.","Each of the website proxies  is capable of receiving service requests. In different implementations, the website proxies  receive service requests in different ways. In a first example implementation, each of the website proxies  implements an application programming interface (API) comprising one or more methods. In this first example implementation, the website proxies  receive service requests when software processes invoke methods of the API. In a second example implementation, each of the website proxies  receives service requests by reading the service requests from a file, port, slot, or other data structure. In this second example, the service requests are deposited in the data structure asynchronously.","In different implementations, the website proxies  may receive service requests from different sources. In a first example, the website proxies  may receive service requests in the form of HTTP request from the client device  via the network . In a second example, the website proxies  may receive service requests from other service endpoints at the server computing system .","As illustrated in the example of , the server computing system  stores website data . The website data  comprises a plurality of website resources. As used in this disclosure, a resource is an identifiable set of data. The website data  includes various types of website resources. For example, the website data  may include HTML files, extensible markup language (XML) files, database records, image files, video files, audio files, portable document format (PDF) files, common gateway interface (CGI) files, Perl files, Active Server Page (ASP) files, and many other types of resources. Furthermore, the website data  may include multiple types of resources.","The plurality of website resources in the website data  is partitioned among a plurality of website partitions. In other words, each website resource in the plurality of website resources is in exactly one website partition in the plurality of website partitions. In different implementations, the website resources are partitioned in different ways. In one example implementation, the website data  comprises a database table having an entry for each of the website resources. In this first example implementation, the entries in the database table include a field that specifies an identifier of one of the website partitions. In another example implementation, the website resources are stored in folders associated with the website partitions.","Each of the website proxies  is associated with a different website partition in the plurality of website partitions. For example, the website proxy A is associated with a first website partition in the plurality of website partitions and the website proxy N is associated with a second website partition in the plurality of website partitions.","Each of the website proxies  only uses website resources in the website partitions associated with the website proxies to process service requests received by the website proxies. For instance, where the website proxy A is associated with a first website partition, the website proxy A only uses website resources in the first website partition to process service requests received by the website proxy A.","In different implementations, the server computing system  stores the website data  in different ways. In a first example implementation, the server computing system  stores the website data  in a file system. In a second example implementation, the server computing system  stores the website data  as a single database. In this second example implementation, storing the website data  as a single database may be more efficient than storing website resources used by different ones of the website proxies  in separate databases. In this second example, more computational overhead may be required to maintain separate databases storing parts of the website data  than to maintain a single database storing all of the website data .","As illustrated in the example of , the server computing system  stores a plurality of external data sets A-N (collectively, \u201cexternal data sets \u201d). In different implementations, the server computing system  stores the external data sets  in different ways. In a first example, the server computing system  stores one or more of the external data sets  as relational databases. In another example, the server computing system  stores one or more of the external data sets  in file systems.","Each of the external data sets  comprises a plurality of external resources. The external resources in the external data sets  are external to the website data  in the sense that the external resources are not managed as part of any of the websites. Furthermore, the external resources in the external data sets  are external to the website data  in the sense that the external resources are not directly accessible to the website proxies . For instance, the server computing system  may store the website data  in a first relational database and may store each of the external data sets  may be in separate relational databases. The external resources may be a wide variety of different types of resources. For example, one or more of the external data sets  may comprise database records. In another example, one or more of the external data sets  comprises XML files.","The external resources in the external data sets  may contain a wide variety of different types of data. For example, the external resources in the external data set A could be database records that store temperature readings for cities around the world. In this example, the external resources in the external data set A may be maintained by a meteorological agency. In another example, the external resources in the external data set B (not shown) are inventory records for a plurality of enterprises. In a third example, the external resources in the external data set C (not shown) contain contact information for employees of one or more enterprises.","The external resources within each of the external data sets  are partitioned into a plurality of external partitions. In other words, for each of the external data sets , the external resources within the external data set are partitioned among a plurality of external partitions. Depending on how the external resources in each of the external data sets  are structured, the external resources may be partitioned among the plurality of external partitions in different ways. For example, if the external resources are records in a database, each of the records may include a field that specifies a value that identifies a partition that contains the record. In another example, if the external resources are files, a separate file may contain a table having entries that associate the files with external partitions.","In some instances, each of the external partitions in each of the external data sets  is associated with a different tenant. For example, each of the tenants may be an enterprise. In this example, each of the external resources in the external data set A contains employee contact information for employees of each of the tenants. In this example, it may be more efficient to store the employee contact information for each of the tenants in a single relational database than storing the employee contact information of the tenants in separate relational databases. Furthermore, in this example, a given tenant should only be able to access the employee contact information of employees for the given tenant. In this example, each given tenant is associated with an external partition containing only employee contact information for the given tenant.","One or more computing devices at the server computing system  host a plurality of external data sources A-N (collectively, \u201cexternal data sources \u201d). The external data sources  are endpoints of one or more external data services. Each of the external data sources  is associated with one of the external data sets . As used in this disclosure, an external data source is associated with an external data set when the external data source provides access to external resources in the external data source. As illustrated in the example of , the external data source A is associated with the external data set A, the external data source N is associated with the external data set N, and so on.","Each of the external data sources  is associated with a different base external data source identifier. A base external data source identifier is associated with an external data source when the base external data source identifier identifies the external data source. Furthermore, each external partition of the external data sets  is associated with an external partition identifier. An external partition identifier is associated with an external partition when the external partition identifies the external partition. The external partition identifiers are relative to the base external data resource identifiers that identify ones of the external data sources  through which the external partitions are accessible. For example, \u201chttp:\/\/external-data-source-1\u201d may be the base external data source identifier of the external data source A. In this example, \u201chttp:\/\/external-data-source-1\/partition1\u201d identifies a first external partition of the external data source A and \u201chttp:\/\/external-data-source-1\/partition2\u201d identifies a second external partition of the external data source A. Furthermore in this example, \u201chttp:\/\/external-data-source-2\u201d is a base external data source identifier that identifies external data source N and \u201chttp:\/\/external-data-source-2\/partition1\u201d is an external partition identifier that identifies a first partition of the external data set N. In different implementations, the external partition identifiers are formatted in different ways. For instance, in a first example implementation, the resource identifiers are formatted as uniform resource identifiers (URIs). In this first example, an external partition identifier may comprises a URI that identifies an external data source and that has a parameter that specifies an index partition of the external data source. In a second example implementation, the resource identifiers are formatted as file system paths.","To process some service requests, the website proxies  use external resources in one or more of the external data sets . Different ones of the website proxies  may process service requests using external resources in different ones of the external data sets . For example, the website proxy A may process service requests using external resources in the external data sets A and B (not shown). Furthermore, in this example, the website proxy N may process service requests using external resources in external data sets B (not shown), C (not shown), and N.","The website proxies  may use external resources in a wide variety of ways. In a first example, the website proxy A uses external resources to store data submitted to the website proxy A through a web page in the website associated with the website proxy A. In a second example, the website proxy A receives a service request that requests a web page. In this second example, the website data  does not store a file that a web browser application can render to present the web page (i.e., a web page file). However, in this second example, the website data  stores a web page definition file that specifies how to generate the web page file. In this second example, the web page definition file specifies that the website proxy A is to generate the web page file using an external resource in external data set A. Thus, in this second example, the website proxy A retrieves the web page definition file from the website data  and interprets the web page definition file. In this second example, the website proxy A, in response to interpreting the web page definition file, sends an external data service request to the external data source A requesting the external resource. Subsequently, in this second example, the website proxy A receives the external resource from the external data source A and uses the external resource to generate the web page file. Finally, in this second example, the website proxy A responds to the service request by sending the web page file to a sender of the service request.","Furthermore, as illustrated in the example of , the server computing system  stores an index . The index  comprises a plurality of index entries. Each of the index entries comprises mapping data that maps a term to a resource in an overall set of resources. The overall set of resources includes website resources in the website data  and external resources in the external data sets . In different implementations, index entries in the index  specify resources in the overall set of resources in different ways. For instance, in a first example implementation, index entries in the index  specify URIs of resources in the overall set of resources. In a second example implementation, index entries in the index  specify GUIDs and\/or file system paths of resources in the overall set of resources.","In different implementations, the server computing system  may store the index  in different ways. For instance, in a first example implementation, the server computing system  stores the index  as a plurality of relational databases. In this first example, each of the index partitions is stored in a separate one of the relational databases. In a second example implementation, the server computing system  stores the index  as a single relational database. In this second example, storing the index  as a single relational database may incur less computational overhead than storing the index  as a plurality of relational databases.","The index entries in the index  are partitioned among a plurality of index partitions. In different implementations, the index entries in the index  are partitioned among the plurality of index partitions in different ways. For instance, in a first example implementation, each of the index entries in the index  is an entry in a relational database. In this first example implementation, each of the index entries includes a field that specifies an index partition to which the index entry belongs. In a second example implementation, index entries in different partitions are stored in different file system folders. In a third example implementation, each of the index entries in the index  is an entry in a relational database. In this third example implementation, the index entries belonging to different index partitions are stored in different tables of the relational database.","Each of the index partitions is associated with one or more of the websites. For instance, a first index partition may be associated with a first website and a second index partition may be associated with a second website and a third website. The index entries in an index partition specify resources in the websites associated with the index partition and in ones of the external data sources  used by the websites associated with the index partition. In other words, no index entry in a given index partition specifies a resource that is not in a website associated with the given index partition or in an external data source used by a website associated with the given index partition.","The index partitions can be associated with websites in different ways. In a first example, an index partition is associated with each website managed by a given tenant. In a second example, an index partition is associated with a single website managed by a given tenant who manages several of the website proxies . In a third example, an index partition is associated with websites managed by a plurality of tenants. In some implementations, the tenants who manage the websites have the power to determine which index partitions are associated with the websites. For instance, a tenant who manages a first website and a second website may choose to associate the first website with a first index partition and the second website with a second index partition or may choose to associate the first website and the second website with a single index partition.","Furthermore, as illustrated in the example of , one or more computing devices at the server computing system  host a search proxy . The search proxy  uses the index  to process query requests received from the website proxies . A query request is a service request for a list of resources that contain at least some query terms. For example, a query request may request a list of resources that contain the query terms \u201csnow\u201d and \u201cshovel.\u201d","In different instances, the website proxies  send the query requests to the search proxy  in response to different types of service requests. For example, the website proxy A is associated with a website containing a web page having a feature that allows users to search for web pages in the website that contain at least some query terms. In this example, the user enters query terms in to the feature and submits the query terms as parameter to a form processing resource in the website. Furthermore, in this example, when the website proxy A receives the query terms, the website proxy A sends a query request to the search proxy .","As described below in detail with reference to , when the search proxy  receives a query request from a given one of the website proxies , the search proxy  identifies a target index partition among the plurality of index partitions in the index . The target index partition is associated with a given website. The given website is associated with the given one of the website proxies . The search proxy  then uses the index entries in the target index partition to identify a relevant set of resources. The relevant set of resources comprises resources that include at least some of the query terms in the query request. After identifying the relevant set of resources, the search proxy  provides a list of relevant resource identifiers to the given website proxy. The list of relevant resource identifiers includes resource identifiers that identify each resource in the relevant set of resources. In some instances, the given one of the websites proxies  may then use the list of relevant resource identifiers to automatically generate a web page containing references to resources in the relevant set of resources.","The index entries in the target index partition only specify resources in the website proxies associated with the target index partition and external data sources used by the website proxies associated with the target index partition. Consequently, the relevant set of resources only contains resources in the websites associated with the target index partition and the external data sources used by the website proxies associated with the target index partition. In other words, the relevant set of resources does not contain any resources in websites not associated with the target index partition and does not contain any external resources in external data sources not used by the website associated with the target index partition.","In addition to processing query requests, the search proxy  automatically generates the index . To generate the index , the search proxy  systematically retrieves each of the web pages in the websites. When the search proxy  retrieves a web page in a website, the search proxy  updates the index  such that an index partition associated with the website includes index entries that map terms in the web page to the web page. The search proxy  may generate new index entries or modify existing index entries to update the index  such that an index partition associated with the website includes index entries.","Furthermore, for each of the websites, the search proxy  obtains a set of external partition identifiers for the website. In one example implementation, the search proxy  obtains the set of external partition identifiers for a website by invoking a method in an application programming interface (API) implemented by a website proxy that represents the website. Each external partition identifier in the set of external partition identifiers identifies an external partition used by the website. As used in this disclosure, a website is said to use an external partition when a website proxy associated with the website uses external resources in the external partition to process service requests received by the website proxy.","Next, the search proxy  selects a given un-indexed external partition identifier from the set of external partition identifiers. The given un-indexed external partition identifier identifies an external partition comprising a given set of external resources. An index partition associated with the website does not contain index entries that map terms to external resources in the given set of external resources. After selecting the given un-indexed external partition identifier, the search proxy  receives each of the external resources in the given set of external resources. For each of the external resources in the given set of external resources, the search proxy  updates the index  such that the index partition associated with the website includes index entries that map terms in the external resource to the external resource.","In some instances, multiple websites use the same external partitions. Furthermore, in some instances, multiple websites are associated with a single index partition. The search proxy  only retrieves the external resources in external partitions identified by un-indexed external partition identifiers. Consequently, when two or more websites use the same external partition and the two or more websites are associated with the same index partition, the search proxy  does not generate duplicate index entries in the index  specifying external resources in the external partition for each of the websites. In other words, the search proxy  does not need to index a given external partition more than once per index partition.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 2","FIG. 1","FIG. 1"],"b":["200","108","118","200","118","200","200","118"]},"As illustrated in the example of , the operation  begins when the search proxy  automatically selects a given website from among the plurality of websites (). In different implementations, the search proxy  selects the given website from among the plurality of websites in different ways. For instance, in a first example implementation, the search proxy  selects the given website from among the plurality of websites in a random fashion. In a second example implementation, the search proxy  selects the least recently selected website in the plurality of websites as the given website.","After selecting the given website from among the plurality of websites, the search proxy  automatically obtains a set of external partition identifiers for the given website (). Each external partition identifier in the set of external partition identifiers identifying an external partition of an external data source used by the given website.","In different implementations, the search proxy  automatically obtains the set of external partition identifiers in different ways. In a first example implementation, the search proxy  invokes a method of a given website proxy associated with the given website. In this first example implementation, the method, when invoked, returns to the search proxy  a set of external partition identifiers. Each external partition identifier in the set of external partition identifiers identifies an external partition of an external data source used by the given website.","After obtaining the set of external partition identifiers, the search proxy  automatically identifies an index partition identifier among the set of external partition identifiers (). The index partition identifier identifies the search service and identifies a given index partition in the index  used by the given website. The set of external partition identifiers includes the index partition identifier because the given website uses the search service as a source of external data. For instance, the given website uses the index  to generate web pages containing lists of resources that satisfy query requests submitted through the given website.","Next, the search proxy  automatically requests each web page in the given website (). In different implementations, the search proxy  requests each web page in the given website in different ways. For instance, in a first example implementation, the website proxy associated with the given website implements an API that includes a first method that, when invoked, returns a list of references to each of the web pages in the given website. In this first example, the API also includes a second method that, when invoked, returns a copy of a web page in the given website. In this first example implementation, the search proxy  invokes the first method and receives the list. Furthermore, in this first example implementation, the search proxy  requests each web page in the given website by invoking the second method for each web page indicated in the list. In a second example implementation, the search proxy  follows hyperlinks in web pages in the given website to retrieve each web page in the given website.","After the search proxy  has requested each web page in the given website, the search proxy  receives each web page in the given website (). It should be appreciated that in different implementations, the search proxy  may receive the web pages in the given website in response to separate requests for the web pages or in response to a single request for each of the web pages in the given website.","When the search proxy  receives the web pages in the given website, the search proxy  automatically updates the index  based on the web pages in the given website (). The search proxy  updates the index  such that the given index partition includes index entries that map a set of terms in the web pages to web pages in the given website that contain the set of terms. Otherwise stated, for each term in each given web page in the given website, the search proxy  updates the index  such that the given index partition includes a given index entry, the given index entry mapping a term in the given web page to the given web page.","After updating the index  based on the web pages in the given website, the search proxy  automatically determines whether the set of external partition identifiers includes one or more un-indexed external partition identifiers (). The index partition identifier is not considered to be an un-indexed data source partition identifier. In different implementations, the search proxy  determines whether the set of external data source identifiers includes an un-indexed external partition identifier in a variety of ways. For example, the search proxy  may scan through the index  to determine whether the index  includes index entries associated with each external partition identifier in the set of external partition identifiers. In another example, the search proxy  maintains a table containing each external partition identifier.","In response to determining that the set of external partition identifiers includes one or more un-indexed external partition identifiers (\u201cYES\u201d of ), the search proxy  automatically selects a given un-indexed external partition identifier from among the set of external partition identifiers (). In different implementations, the search proxy  selects a given un-indexed external partition identifier from among the set of external partition identifiers in different ways. For example, the search proxy  may select the given un-indexed external partition identifier at random from among the set of external partition identifiers. In another example, the search proxy  selects the given un-indexed external partition identifier from among the set of external partition identifiers based on whether the search proxy  already has an open connection to the external data source identified by the given external partition identifier.","After selecting the given un-indexed external partition identifier from among the set of un-indexed external partition identifiers, the search proxy  automatically sends an external data service request to a given external data source (). The given external data source is the external data source identified by the given un-indexed external partition identifier. In different implementations, the search proxy  sends the external data service request to the given external data source in different ways. In a first example, the search proxy  sends the external data service request to the given external data source using a remote procedure call protocol. In a second example, the search proxy  sends the external data service request to the given external data source using inter-process communication. In a third example, the search proxy  sends the external data service request to the given external data source using an asynchronous message-passing protocol.","Subsequently, the search proxy  receives a set of external resources (). The set of external resources are external resources that are in a given external partition of the given external data source. The given un-indexed external partition identifier identifies the given external partition of the given external data source.","In different implementations, the search proxy  receives the set of external resources in different ways. In a first example implementation, the search proxy  receives the set of external resources in an external data service response responsive to the service request. In a second example implementation, the search proxy  receives a set of external resource identifiers in an external data service response responsive to the service request. In this second example implementation, the set of external resource identifiers identify each external resource in the set of external resources. Subsequently, in this second example implementation, the search proxy  sends one or more subsidiary service requests to the given external data source. Each of these subsidiary service requests is a request for an external resource identified by one or more of the external resource identifiers. The given external data source responds to the subsidiary service requests by sending copies of the external resources to the search proxy . Thus, in this second example implementation, the search proxy  receives the set of external resources in response to sending the one or more subsidiary service requests to the given external data source.","After receiving the set of external resources, the search proxy  automatically updates the index  based on the set of external resources (). The search proxy  updates the index  such that the given index partition includes index entries that map a set of terms to ones of the external resources that contain the set of terms. Otherwise stated, for each given external resource in the set of external resources, the search proxy  updates the index  such that the index  includes a given index entry, the given index entry in the index partition identified by the index partition identifier, the given index entry mapping a given term in the given external resource to the given data item. For example, the given external resource includes the term \u201csnowshoe.\u201d In this example, the search proxy  updates the index  such that the index  includes an index entry that is associated with the given partition of the given external data source and that maps the term \u201csnowshoe\u201d to the given external resource.","When the search proxy  updates the index , the search proxy  may generate one or more new index entries and\/or modify one or more existing index entries. For example, a first data item includes the terms \u201csnowshoe\u201d and \u201cskis.\u201d In this example, an index partition in the index  already contains a first index entry that maps the term \u201cskis\u201d to a second data item, but does not contain an index entry that maps the term \u201csnowshoe\u201d to any data item. In this example, the search proxy  modifies the first index entry such that the first index entry maps the term \u201cskis\u201d to the first data item and the second data item. Furthermore, in this example, the search proxy  generates in the index partition a new index entry that maps the term \u201csnowshoe\u201d to the first data item.","It should be appreciated that in some implementations, the search proxy  does not receive each external resource in the set of external resources before updating the index . For example, the search proxy  sends individual subsidiary service requests to the given external data source requesting individual external resources identified by the set of external resource identifiers. In this example, the search proxy  updates the index  based on an individual external resource before sending a next one of the subsidiary service requests. After the search proxy  has updated the index  for each external resource in the set of external resources, the given un-indexed external partition identifier is deemed to be an indexed external partition identifier.","When the search proxy  has updated the index  for each external resource in the set of external resources, the search proxy  loops back and again determines whether the set of external partition identifiers includes one or more un-indexed external partition identifiers (). The search proxy  continues to perform the steps - as long as the set of external partition identifiers includes one or more un-indexed external partition identifiers.","On the other hand, if the search proxy  determines that the set of external partition identifiers does not include any un-indexed external partition identifiers (\u201cNO\u201d of ), the search proxy  has completed indexing the external data sources of the website. Accordingly, if the search proxy  determines that the set of external partition identifiers does not include any un-indexed external partition identifiers (\u201cNO\u201d of ), the search proxy  loops back and again automatically selects a website in the plurality of websites (). In this way, the search proxy  repeats the operation  for a different website in the plurality of websites. In a first example implementation, the search proxy  continuously performs the operation  and may thereby ensure that the index  is current. In a second example implementation, the search proxy  only performs the operation  once for each website in the plurality of websites. In this second example implementation, the search proxy  then incrementally updates the index  as changes are made to the websites and the external data sources.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 3","FIG. 1","FIG. 1"],"b":["300","108","300","300","300"]},"As illustrated in the example of , the operation  starts when the search proxy  receives a query request from a client (). In different implementations, the search proxy  receives the query request in different ways. In a first example implementation, the search proxy  receives the query request through a remote procedure call protocol. In a second example implementation, the search proxy  receives the query request through inter-process communication.","The query request specifies one or more query terms. The query request is a request for data items that contain at least some of the query terms. In other words, a data item satisfies the query request when the data item includes at least some of the one or more query terms. For example, if the query request specifies the query term \u201csnowshoe,\u201d a data item satisfies the query request when the data item includes the term \u201csnowshoe.\u201d In some implementations, a data item satisfies the query request when the data item does not include all of the query terms. For instance, if the query request specifies the query terms \u201csnowboard\u201d and \u201calpine,\u201d a data item may satisfy the query request when the data item includes the term \u201csnowboard,\u201d but not the term \u201calpine.\u201d","In addition to specifying one or more query terms, the query request includes data that indicates a given website. In different implementations, the query request includes different types of data that indicate the given website. In a first example implementation, the query request includes a resource identifier that identifies the given website. In a second example implementation, the query request data includes a GUID that identifies the given website. In a third example implementation, the query request includes a tenant identifier that identifies a tenant. In this third example implementation, the search proxy  may include a mapping from tenant identifiers to websites.","Furthermore, in different implementations, the search proxy  may receive the query request from different types of clients. In a first example implementation, the search proxy  receives the query request from the given website proxy. The given website proxy uses data in the given partition of the website data  to provide access a given website. In this first example, the given website proxy may send the query request to the search proxy in response to receiving a service request from the client device . In a second example implementation, the search proxy  receives the query request directly from the client device .","In response to receiving the query request, the search proxy  automatically identifies a target index partition (). The target index partition is an index partition of the index . The target index partition is associated with the given website. In different implementations, the search proxy  identifies the target partition in different ways. In a first example implementation, the search proxy  stores a table containing entries that map website to partitions of the index . In a second example implementation, the search proxy  sends a service request to a proxy for a partition mapping service. The service request includes an identifier that identifies the given website. In this second example, the partition mapping service sends a service response to the search proxy . The service response, in this second example implementation, specifies an identifier of the target index partition.","After identifying the target index partition, the search proxy  automatically uses index entries in the target index partition to identify a relevant set of resources (). The relevant set of resources comprises resources that satisfy the query request. In other words, each of the relevant resources contains at least some of the query terms. The resources may include external resources or resources in the given website.","In different implementations, the search proxy  uses index entries in the target index partition to identify the relevant set of resources in different ways. In a first example implementation, the search proxy  first identifies index entries in the target index partition that specify individual ones of the query terms. The search proxy  does not identify index entries that specify the query terms, but that are not in the target index partition. For instance, the query terms may include the term \u201cbobsled.\u201d Furthermore, in this instance, the index  includes a first index entry in the target index partition that maps the term \u201cbobsled\u201d to a first set of data items and includes a second index entry not in the target index partition that maps the term \u201cbobsled\u201d to a second set of data item. In this example, the search proxy  identifies the first index entry, but not the second index entry. In this first example implementation, after identifying index entries in the target index partition that specify individual ones of the query terms, the search proxy  identifies the relevant set of resources as the intersection of each of the sets of resources specified by the identified index entries. For example, if a first identified index entry maps a query term to resources A, B, and C and a second identified index entry maps the query term to resources B, C, and D, the relevant set of resources includes resources B and C.","The relevant set of resources may contain zero or more resources. For instance, where the target index partition does not contain any index entries that map the query terms to data items, the relevant set of resources contains zero resources. In another instances, the target index partition may contain a plurality of index entries that map query terms to resources, but none of the resources are specified by each index entry in the plurality of index entries.","After identifying the relevant set of resources, the search proxy  automatically provides relevant resource identifiers to the client as a response to the query request (). The relevant resource identifiers identify the resources in the relevant set of resources. In different implementations, the search proxy  provides the relevant resource identifiers to the sender of the query request in different ways. In a first example implementation, the search proxy  provides the relevant resource identifiers to the sender of the query request in a SOAP response document. In a second example implementation, the search proxy  provides the relevant resource identifiers to the sender of the query request as a memory pointer to a data structure.",{"@attributes":{"id":"p-0079","num":"0078"},"figref":["FIG. 4","FIG. 4","FIG. 4"],"b":["400","102","104"]},"As illustrated in the example of , the physical computing device  comprises a memory unit . The memory unit  is a computer-readable data storage medium capable of storing data and\/or instructions. The memory unit  may be a variety of different types of computer-readable storage media including, but not limited to, dynamic random access memory (DRAM), double data rate synchronous dynamic random access memory (DDR SDRAM), reduced latency DRAM, DDR2 SDRAM, DDR3 SDRAM, Rambus RAM, or other types of computer-readable storage media.","In addition, the physical computing device  comprises a processing unit . As mentioned above, a processing unit is a set of one or more physical electronic integrated circuits that are capable of executing instructions. In a first example, the processing unit  may execute software instructions that cause the physical computing device  to provide specific functionality. In this first example, the processing unit  may be implemented as one or more processing cores and\/or as one or more separate microprocessors. For instance, in this first example, the processing unit  may be implemented as one or more Intel Core 2 microprocessors. The processing unit  may be capable of executing instructions in an instruction set, such as the x86 instruction set, the POWER instruction set, a RISC instruction set, the SPARC instruction set, the IA-64 instruction set, the MIPS instruction set, or another instruction set. In a second example, the processing unit  may be implemented as an ASIC that provides specific functionality. In a third example, the processing unit  may provide specific functionality by using an ASIC and by executing software instructions.","The physical computing device  also comprises a video interface . The video interface  enables the physical computing device  to output video information to a display device . The display device  may be a variety of different types of display devices. For instance, the display device  may be a cathode-ray tube display, an LCD display panel, a plasma screen display panel, a touch-sensitive display panel, a LED array, or another type of display device.","In addition, the physical computing device  includes a non-volatile storage device . The non-volatile storage device  is a computer-readable data storage medium that is capable of storing data and\/or instructions. The non-volatile storage device  may be a variety of different types of non-volatile storage devices. For example, the non-volatile storage device  may be one or more hard disk drives, magnetic tape drives, CD-ROM drives, DVD-ROM drives, Blu-Ray disc drives, or other types of non-volatile storage devices.","The physical computing device  also includes an external component interface  that enables the physical computing device  to communicate with external components. As illustrated in the example of , the external component interface  enables the physical computing device  to communicate with an input device  and an external storage device . In one implementation of the physical computing device , the external component interface  is a Universal Serial Bus (USB) interface. In other implementations of the physical computing device , the physical computing device  may include another type of interface that enables the physical computing device  to communicate with input devices and\/or output devices. For instance, the physical computing device  may include a PS\/2 interface. The input device  may be a variety of different types of devices including, but not limited to, keyboards, mice, trackballs, stylus input devices, touch pads, touch-sensitive display screens, or other types of input devices. The external storage device  may be a variety of different types of computer-readable data storage media including magnetic tape, flash memory modules, magnetic disk drives, optical disc drives, and other computer-readable data storage media.","In addition, the physical computing device  includes a network interface card  that enables the physical computing device  to send data to and receive data from an electronic communication network. The network interface card  may be a variety of different types of network interface. For example, the network interface card  may be an Ethernet interface, a token-ring network interface, a fiber optic network interface, a wireless network interface (e.g., WiFi, WiMax, etc.), or another type of network interface.","The physical computing device  also includes a communications medium . The communications medium  facilitates communication among the various components of the physical computing device . The communications medium  may comprise one or more different types of communications media including, but not limited to, a PCI bus, a PCI Express bus, an accelerated graphics port (AGP) bus, an Infiniband interconnect, a serial Advanced Technology Attachment (ATA) interconnect, a parallel ATA interconnect, a Fiber Channel interconnect, a USB bus, a Small Computer System Interface (SCSI) interface, or another type of communications medium.","The physical computing device  includes several computer-readable data storage media (i.e., the memory unit , the non-volatile storage device , and the external storage device ). Together, these computer-readable storage media may constitute a single data storage system. As discussed above, a data storage system is a set of one or more computer-readable data storage mediums. This data storage system may store instructions executable by the processing unit . Activities described in the above description may result from the execution of the instructions stored on this data storage system. Thus, when this description says that a particular logical module performs a particular activity, such a statement may be interpreted to mean that instructions of the logical module, when executed by the processing unit , cause the physical computing device  to perform the activity. In other words, when this description says that a particular logical module performs a particular activity, a reader may interpret such a statement to mean that the instructions configure the physical computing device  such that the physical computing device  performs the particular activity.","The techniques of this disclosure may be realized in many ways. For example, the techniques of this disclosure may be realized as a method for indexing and searching for resources. The method comprises storing, by a computing system, an index comprising a plurality of index entries. The index entries are partitioned among a plurality of index partitions. Each index partition in the plurality of index partitions is associated with a website in a plurality of websites. Furthermore, for each given website in the plurality of websites, the method comprises:\n\n","In another example, the techniques of this disclosure may be realized as a computing system comprising a data storage system. The data storage system storing an index comprising a plurality of index entries. The index entries are partitioned among a plurality of index partitions. Each index partition in the plurality of index partitions is associated with a website in a plurality of websites. The data storage system also stores a plurality of external data sets. Each external data set in the plurality of external data sets comprises external resources. The external resources within each of the external data sets are partitioned among pluralities of external partitions. Furthermore, the data storage system stores a set of computer-executable instructions. The computing system also comprises a processing unit. The set of computer-executable instructions, when executed by the processing unit, causes the computing system to host a plurality of website proxies. Each website proxy in the plurality of website proxies is associated with a website in the plurality of websites. The computer executable instructions, when executed by the processing unit, also cause the computing system to host a plurality of external data sources. Each external data source in the plurality of external data sources is associated with a different external data set in the plurality of external data sets. Furthermore, the computer executable instructions, when executed by the processing unit, cause the computing system to host a search proxy that for each given website in the plurality of websites:\n\n","In another example, the techniques of this disclosure may be realized as a data storage system comprising at least one computer-readable data storage medium. The at least one computer-readable data storage medium stores an index comprising a plurality of index entries, the index entries partitioned among a plurality of index partitions. Each index partition in the plurality of index partitions is associated with a website in a plurality of websites. The at least one computer-readable data storage medium also storing a website database comprising a plurality of website resources. The website resources partitioned among a plurality of website partitions. Furthermore, the at least one computer-readable data storage medium also storing a plurality of external data sets. Each external data set in the plurality of external data sets comprising external resources. The external resources within each of the external data sets partitioned among a plurality of external partitions. In addition, the at least one computer-readable data storage medium storing a set of computer-executable instructions that, when executed by a processing unit of a computing system, cause the computing system to host a plurality of website proxies. Each website proxy in the plurality of website proxies providing access to a different website in a plurality of websites. Each website proxy in the plurality of website proxies implementing an API that includes a method. The computer-executable instructions, when executed by the processing unit, cause the computing system to host a plurality of external data sources. Each external data source in the plurality of external data sources provides access to a different external data set in the plurality of external data sets. In addition, the computer-executable instructions, when executed by the processing unit, cause the computing system to host a search proxy that for each given website in the plurality of websites:\n\n","Although the subject matter has been described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather, the specific features and acts described above are disclosed as example forms of implementing the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
