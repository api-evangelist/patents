---
title: One-way bus bridge
abstract: A one-way bus bridge pair that transfers secure data in one direction, the bus bridge pair including a transmitting bus bridge, a receiving bus bridge, and a link. The link can connect the transmitting bus bridge and receiving bus bridge. The transmitting bus bridge may be arranged not to receive any data from the receiving bus bridge, and the receiving bus bridge may be arranged not to send any data to the transmitting bus bridge.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09237126&OS=09237126&RS=09237126
owner: 
number: 09237126
owner_city: 
owner_country: 
publication_date: 20110909
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE EXEMPLARY EMBODIMENTS OF THE PRESENT INVENTION"],"p":["The present invention claims the benefit of U.S. Provisional Application No. 61\/381,440, filed Sep. 9, 2010, and entitled \u201cONE-WAY BUS BRIDGE\u201d, the entire contents of which are incorporated herein by reference.","The present invention relates to a one-way bus bridge, and more specifically, to a one-way bus bridge that securely transfers data in one direction without the capability to transfer or connect in the opposite direction.","One-Way data communication transfer systems have been available for quite some time. Typically, they are used to securely transport data from one network domain to a second network domain using a one-way network transport. The typical \u201cnetwork layer\u201d protocols that are utilized for one-way secure data are either User Datagram Protocol (UDP) over Ethernet or Asynchronous Transfer Mode (ATM).  illustrates an example of a conventional one-way data communication network.","In the one-way data communication transfer system illustrated in , two computing platforms  and  are connected to an unsecured (source) network  and a secure (destination) network . Source network  can be attached to workstation , server  and computing platform . Further, destination network  can be connected to workstation , server  and computing platform . Computing platforms  and  can be connected via a unidirectional data link . The unidirectional data link  can be implemented to ensure that data is only transferred in one direction such that it is physically impossible to transfer data of any kind in the reverse direction.","Traditionally, unidirectional data transfer systems will convert a file from its native format into data packets in order to transfer it across a one-way network. Once the data is transmitted across the one-way network, it must be reassembled on the receiving system in order to piece the file together back into its original format (prior to writing it to the native device it was intended to go). This makes it very difficult to pass non-file-based data and limits the flexibility of these traditional one-way transfer methods. Furthermore, processing (segmentation and reassembly) of these data packets is typically performed by a network interface card.  illustrates a block diagram of conventional computing platforms  and .  shows that computing platform  has a network interface card  and computing platform  has a network interface card . Each of the network interface cards  and  interface with busses  and . Further, network interface card  includes an interface circuit\/chip  and network interface card  includes an interface circuit\/chip . The interface circuit\/chip  and  process (segmentation and reassembly) data packets. Therefore, the overall system speed is lowered from the additional data overhead and additional processing employed from each of the network interface cards. Although network speeds are advancing, they are still not fast enough for certain applications and for higher volumes of data. There is currently no capability within the traditional network-based one-way transfer implementation to directly communicate cross-domain to a device on another computer.","While there are numerous vendors that have built customized fiber optic capable boards as well as utilized standard twisted-pair using media converters to achieve a unidirectional capability, these traditional methods will become obsolete as technology advances and the need for greater flexibility, higher speeds and greater capacity increases.","The present invention recognizes that a need exists for a method of securely transporting data in native format, across network domains at significantly faster speeds. Further, the present invention recognizes that a need exists for a new level of functionality and capability that currently does not exist with these unidirectional network systems. The present invention recognizes that yet another need exists for a method of transferring data across a one-way link by utilizing the bus architecture of the system yielding better data transfer speeds across the one-way link.","The aforementioned problems and others are addressed by the present invention, a first exemplary embodiment of which includes a one-way bus bridge pair that transfers data securely in one direction. The bus bridge pair can include a transmitting bus bridge, a receiving bus bridge, and a link. The link can connect the transmitting bus bridge and receiving bus bridge. The transmitting bus bridge may be arranged not to receive any data from the receiving bus bridge, and the receiving bus bridge may be arranged not to send any data to the transmitting bus bridge.","Another embodiment may also include a transmitting bus bridge that includes a transmitter and the receiving bus bridge can include a receiver. The transmitter may be connected to a first bus via a first interface and the receiver can be connected to a second bus via a second interface. The transmitter can include a controlling device that can control the link. The receiver can include a controlling device that can control the link. The controlling device can include a logic device. The logic device can include a field programmable gate array (FPGA).","In yet another embodiment, the transmitter may receive an input data from the first bus of a first computing device, and may send the input data to the receiver via the link. The receiver may receive the input data from the link, and may send the input data to the second bus of a second computing device. The link can include a single direction fiber optic connection, a copper cable connection and\/or a wireless connection.","Another embodiment may include input data that includes a command from a device driver. The device driver can support a UNIX-based operating system, a Linux-based operating system, a Microsoft Windows-based operating system, and an Apple-based operating system. The device driver can include a pseudo-device. The pseudo-device can include a disk drive, a memory device, an audio device, a video device, a network device, and a memory mapping device.","Another embodiment may also include a Peripheral Component Interconnect (PCI) interface, a Peripheral Component Interconnect Express (PCIe) interface, a mini-Peripheral Component Interconnect Express (PCIe) interface, or an InfiniBand interface. The device driver supports a UNIX-based operating system, a Linux-based operating system, a Microsoft Windows-based operating system, and an Apple-based operating system.","Another embodiment may also include a one-way bus bridge pair that transfers secure data in one direction. The bus bridge pair can include a transmitting bus bridge, a receiving bus bridge, and a first link. The first link can connect the transmitting bus bridge and receiving bus bridge. The transmitting bus bridge may be arranged not to receive any data from the receiving bus bridge via the first link, and the receiving bus bridge may be arranged not to send any data to the transmitting bus bridge via the first link. The bus bridge pair can also include a second link. The second link can connect the transmitting bus bridge and receiving bus bridge. The receiving bus bridge can be arranged not to receive any data from the transmitting bus bridge via the second link, and the transmitting bus bridge can be arranged not to send any data via the second link to the receiving bus bridge. The second link can carry an acknowledgement data type and\/or an error code data type. The acknowledgement data type and the error code data type can cause a retransmission of data across the first link. The acknowledgement data type and the error code data type can include a single byte of data.","Yet in another embodiment, a secure one-way bus bridge system can include a transmitting bus bridge, a receiving bus bridge, and a link. The link can connect the transmitting bus bridge and receiving bus bridge. The transmitting bus bridge may be arranged not to receive any data from the receiving bus bridge, and the receiving bus bridge may be arranged not to send any data to the transmitting bus bridge.","Another embodiment may also include a transmitting bus bridge that includes a transmitter and the receiving bus bridge can include a receiver. The transmitter may be connected to a first bus via a first interface and the receiver can be connected to a second bus via a second interface. The transmitter can include a controlling device that can control the link. The receiver can include a controlling device that can control the link. The controlling device can include a logic device. The logic device can include a field programmable gate array (FPGA).","Another embodiment can include a method of securely transporting data in native format one-way across two or more computing systems, including providing a transmitting bus bridge, providing a receiving bus bridge, providing a link, wherein the link can connect the transmitting bus bridge and receiving bus bridge, and configuring the link. The transmitting bus bridge can be arranged not to receive any data from the receiving bus bridge, and the receiving bus bridge can be arranged not to send any data to the transmitting bus bridge. The transmitting bus bridge can include a transmitter, and the receiving bus bridge can include a receiver.","In another embodiment, the method can also include connecting the transmitter to a first bus via a first interface, and connecting the receiver to a second bus via a second interface.","In yet another embodiment, the method can also include receiving an input data from the first bus of a first part of a computing device, sending the input data to the receiver via the link, receiving the input data from the link, and sending the input data to the second bus of a second part of the computing device.","In another embodiment, the method can also include receiving an input data from the first bus of a first computing device, sending the input data to the receiver via the link, receiving the input data from the link, and sending the input data to the second bus of a second computing device.","According to the exemplary embodiments, the present invention can provide a method of securely transporting data in native format at significantly faster speeds. Further, the present invention can provide a new level of functionality and capability that currently does not exist with the conventional unidirectional network systems. The present invention can provide a method of transferring data across a one-way link (e.g., a universal bus link or one-way bus link) by utilizing the bus architecture of the system yielding better data transfer speeds across the one-way link. The present invention can communicate across multiple platforms via a one way bus between non-protected and protected systems (which may or may not reside on separate network domains).","In an embodiment, a simple memory write on a first computing system can transfer raw data across a unidirectional link from the first computing system to another computing system. Further, memory writes can occur at tremendous speeds and an exemplary device may only be slowed by the rest of the hardware on the computing system.","In another embodiment, operating system-level control can be provided from one computing system to another computing system via the one-way bus bridge.","In yet another embodiment, an application (located on one computing system) can provide data, commands or control to another application, a driver or operating system (residing on a separate computing system) through the use of the one-way bus bridge.","In an embodiment, the one-way bus bridge can create pseudo-devices, located on one computing system, which map to real devices located on a completely separate computing system. In another embodiment, the one-way bus bridge can create pseudo-devices including a one-way hard drive, a one-way video card, a one-way sound card, a one-way printer and one-way memory.","Furthermore, the exemplary embodiments disclosed herein can be used to protect Personally Identifiable Information (PII) data, credit card numbers, identifiable information for business transactions, monetary transactions or any transaction that needs to be protected from one system or network.","The exemplary embodiments disclosed herein can also be used for continuance of operation (COOP), disaster recovery or one-way data replication.","The exemplary embodiments disclosed herein can be used for various applications, including Government, SCADA, Financial, and\/or Large Corporations.","The exemplary embodiments disclosed herein can provide, for example, Secure Information Sharing, Security and Separation, Data Backups, and\/or Database Replication.","The exemplary embodiments disclosed herein can depend from the system bus and not network technology like conventional network-level devices.","For purposes of this disclosure, a unidirectional data link can include, for example, a unidirectional bus link and\/or unidirectional link.","Other features and advantages of the present invention will become apparent to those of ordinary skill in the art upon review of the following detailed description and drawings.","The present invention now is described more fully hereinafter with reference to the accompanying drawings, in which embodiments of the invention are shown. This invention may, however, be embodied in many different forms and should not be construed as limited to the embodiments set forth herein; rather, these embodiments are provided so that this disclosure will be thorough and complete, and will fully convey the scope of the invention to those skilled in the art. Additionally, well-known elements of the invention will not be described in detail or will be omitted so as not to obscure the relevant details of the invention.","The word \u201cexemplary\u201d is used herein to mean \u201cserving as an example, instance, or illustration.\u201d Any embodiment described herein as \u201cexemplary\u201d is not necessarily to be construed as preferred or advantageous over other embodiments. Likewise, the term \u201cembodiments of the invention\u201d does not require that all embodiments of the invention include the discussed feature, advantage or mode of operation.","Further, many embodiments are described in terms of sequences of actions to be performed by, for example, elements of a computing device. It will be recognized that various actions described herein can be performed by specific circuits (e.g., application specific integrated circuits (ASICs)), by program instructions being executed by one or more processors, or by a combination of both. Additionally, these sequence of actions described herein can be considered to be embodied entirely within any form of computer readable storage medium having stored therein a corresponding set of computer instructions that upon execution would cause an associated processor to perform the functionality described herein. Thus, the various aspects of the invention may be embodied in a number of different forms, all of which have been contemplated to be within the scope of the claimed subject matter. In addition, for each of the embodiments described herein, the corresponding form of any such embodiments may be described herein as, for example, \u201clogic configured to\u201d perform the described action.","Referring now to the drawings,  illustrate exemplary aspects of a one-way bus bridge in accordance with at least one embodiment of the invention.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 3A","b":["300","300"]},"Referring to , source network  can be attached to workstation , server  and computing system . Further, destination network  can be connected to workstation , server  and computing system . Computing system  and  can be connected via a unidirectional data link . The unidirectional data link  can be implemented to ensure that data is only transferred in one direction such that it is physically impossible to transfer data of any kind in the reverse direction. The source network  can be connected to the destination network  via the unidirectional link . In some applications, the destination network  can be located on a secure or isolated network in order to ensure that any data located on the secure side is protected from any sort of threats that may be located external to the destination network  (for example on the source network  side). The transferred data may be in native format with minimal processing and overhead added to ensure maximum throughput.","The unidirectional data link  (e.g., a unidirectional bus link) may use any transmission medium type; e.g. fiber optic cabling, any wired cabling, and any wireless link type(s). Furthermore, the unidirectional data link  may also use any shielded twisted-pair cabling, any copper cabling, and\/or encrypted wireless data links.","For example, the unidirectional data link  may be based on different wireless technologies, such as code division multiple access (CDMA), WCDMA, time division multiple access (TDMA), frequency division multiple access (FDMA), Orthogonal Frequency Division Multiplexing (OFDM), Bluetooth, Infrared (IR), or the like, or other protocols that may be used in a wireless communications network or a data communications network. In an embodiment, the unidirectional link can be implemented to physically connect the busses of two separate computing systems (e.g., computing system  and ). Accordingly, the exemplary illustrations provided herein are not intended to limit the embodiments of the invention and are merely to aid in the description of aspects of the exemplary embodiments of the invention.","Referring back to , the components of the unidirectional secure data transfer system  and interrelation of the elements of the exemplary embodiments of the invention are not limited to the configuration illustrated. System  is merely exemplary and can include any system that allows any computing devices, such as computing systems  and , to communicate between and among each other and\/or between and among components connected via the unidirectional data link . Further, the source network  and\/or destination network  may include any number of networks and\/or any number of devices attached to each network and\/or any other type of computing devices. For example, the unidirectional link  may include a plurality of unidirectional data links (e.g., unidirectional bus links) connecting one or more transmitting bus bridges  and\/or one or more receiving bus bridges , in one or more devices and\/or systems.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 3B","FIG. 3A"],"b":["301","302"]},"Referring to , a user and\/or software program of computing system  can transfer data from computing system  to computing system  via the unidirectional link ; however, computing system  cannot receive data from computing system  via the unidirectional link .","Computing system  can include a transmitting bus bridge , a bus  and pseudo device\/drivers . Computing system  can include a receiving bus bridge , a bus , pseudo device\/drivers  and a real device . The transmitting bus bridge  can be used to connect to the receiving bus bridge  yielding a connection between computing system  and computing system  across link .","In an embodiment, the transmitting bus bridge  may be configured to be a transmit-only device and\/or the receiving bus bridge  may be configured to be a receive-only device. In another embodiment, the transmitting bus bridge  may be configured to be a transmit\/receive device and\/or the receiving bus bridge  may be configured to be a transmit\/receive device such that data may be sent from the transmitting bus bridge  to the receiving bus bridge , and a small quantity of data (i.e. an acknowledgement) may be sent from the receiving bus bridge  to the transmitting bus bridge  via link  or via another unidirectional link (shown in  as ).","The transmitting bus bridge  can connect to computing system  via the bus . In an embodiment, the transmitting bus bridge  can include a commercial off-the-shelf (COTS) circuit board. In another embodiment, the transmitting bus bridge  can include a custom-made circuit board.","The bus  can provide bus data transmissions for the (unsecure) computing system . The bus  can also be isolated from the (secure) computing system  including bus . Further, the bus  can provide an unsecure computing environment for computing system  and any devices attached to bus .","Pseudo-device\/drivers  may allow an application to interact with any devices\/systems attached to the bus . In an embodiment, pseudo-device\/drivers  may allow an application to interact with the transmitting bus bridge  via bus . Pseudo-device\/drivers  may include custom written software drivers for system . Pseudo-device\/drivers  can include a single pseudo-device\/driver and\/or a multiple number of pseudo-devices\/drivers. Further, pseudo-device\/drivers  can interact with a single transmitting bus bridge  or a plurality of transmitting bus bridges . Pseudo-device\/drivers  can be stored\/executed within processor , memory  and\/or mass storage  (Shown in ).","The transmitting bus bridge  can include a transmitting bus bridge (TBB) transmitter , an interface  and a TBB receiver . The interface  can provide a direct or indirect connection between the bus  and the transmitting bus bridge . The interface  can also provide a direct or indirect connection between the bus  and the TBB transmitter . The interface  can include any standard bus connection such as, for example, Peripheral Component Interconnect (PCI), PCI Express, mini-PCI Express, Infiniband, and\/or Field Programmable Gate Array (FPGA).","Pinouts can be utilized in order to provide electrical contact between one or more electrical devices. In an embodiment, pinouts can be located in\/on the transmitting bus bridge  (within the interface , TBB transmitter  and\/or TBB receiver ) and\/or in\/on the bus . In an example embodiment, the physical receive pin-outs on the transmit bus may not be connected such that no data can be received on the transmit board and that the physical transmit pin-outs on the receive bus are not connected such that no data can be transmitted.","The TBB transmitter  can include any optical, wired and wireless transmitters. The TBB receiver  can include any optical, wired and wireless receivers.","In an embodiment, the unidirectional data link  can be implemented to ensure that data is only transferred in one direction such that it is physically impossible to transfer data of any kind in the reverse direction. For example, the transmitting bus bridge  can be arranged not to receive any data from the receiving bus bridge . In an embodiment, the TBB receiver  may not be connected to any pinouts or may not be connected to a sufficient number of pinouts to provide proper electrical contact. In another embodiment, the TBB receiver  may not contain any pinouts or may not contain a sufficient number of pinouts to provide proper electrical contact. In yet another embodiment, the transmitting bus bridge  may not contain a receiver. In another embodiment, the TBB receiver  may have its pinouts disabled.","Computing system  can include a receiving bus bridge , a bus , pseudo device\/drivers  and a real device . The receiving bus bridge  can connect to computing system  via the bus . In an embodiment, the receiving bus bridge  can include a COTS circuit board. In another embodiment, the receiving bus bridge  can include a custom-made circuit board.","The bus  can provide bus data transmissions for the (secure) computing system . The bus  can also be isolated from the (unsecure) computing system  including bus . Further, the bus  can provide a secure computing environment for computing system  and any devices attached to bus .","Pseudo-device\/drivers  may allow application(s) to interact with any devices\/systems attached to the bus . In an embodiment, pseudo-device\/drivers  may allow application(s) to interact with the receiving bus bridge  via bus . In an embodiment, pseudo-device\/drivers  may also allow application(s) to interact with any real devices  via bus . For example, the real devices  may include video cards, sound cards, network cards, memory cards, and\/or disks. Pseudo-device\/drivers  may include custom written software drivers for system . Pseudo-device\/drivers  can include a single pseudo-device\/driver and\/or a multiple number of pseudo-device\/drivers. Further, pseudo-device\/drivers  can interact with a single receiving bus bridge  or a plurality of receiving bus bridges . In an embodiment, pseudo-device\/drivers  may also allow real devices  to interact with the receiving bus bridge  via bus . Pseudo-device\/drivers  can be stored\/executed within processor , memory  and\/or mass storage  (Shown in ).","In an embodiment, any applications on the receiving side can interface with any of the real devices  via the local bus . Real devices  can be mapped by a mapper to any number of pseudo-device\/drivers . The applications can communicate with the real devices  and can create a transparent user experience even though any data delivered from the real devices  to the applications came from a totally different computing system  or bus  via transmitting bus bridge  and receiving bus bridge .","The receiving bus bridge  can include a receiving bus bridge (RBB) receiver , an interface  and a RBB transmitter . The interface  can provide a direct or indirect connection between the bus  and the receiving bus bridge . The interface  can also provide a direct or indirect connection between the bus  and the RBB receiver . The interface  can include any standard bus connection such as, for example, PCI, PCI Express, mini-PCI Express, Infiniband, and\/or FPGA.","Pinouts can be utilized in order to provide electrical contact between one or more electrical devices. In an embodiment, pinouts can be located in\/on the receiving bus bridge  (within the interface , RBB receiver  and\/or RBB transmitter ) and\/or in\/on the bus . In an example embodiment, the physical receive pin-outs on the transmit bus may not be connected such that no data can be received on the transmit board and that the physical transmit pin-outs on the receive bus are not connected such that no data can be transmitted.","The RBB receiver  can include any optical, wired and wireless receivers. The RBB transmitter  can include any optical, wired and wireless transmitters.","In an embodiment, the unidirectional data link  can be implemented to ensure that data is only transferred in one direction such that it is physically impossible to transfer data of any kind in the reverse direction. For example, the receiving bus bridge  can be arranged not to transmit any data to the transmitting bus bridge . In an embodiment, the RBB transmitter  may not be connected to any pinouts or may not be connected to a sufficient number of pinouts to provide proper electrical contact. In another embodiment, the RBB transmitter  may not contain any pinouts or may not contain a sufficient number of pinouts to provide proper electrical contact. In yet another embodiment, the receiving bus bridge  may not contain a transmitter. In another embodiment, the RBB transmitter  may have its pinouts disabled.",{"@attributes":{"id":"p-0080","num":"0079"},"figref":["FIG. 3C","FIGS. 3A-3B"]},"Referring to , the computing system  may include a processor , a system bus , a mass storage unit , an Input\/Output (I\/O) interface , a memory unit , a network interface , and a power unit . The processor  may interface with memory  and the mass storage unit  via the system bus . The memory  and\/or the mass storage unit  may contain executable instructions and data for implementing various operations for performing the operation of computing system  described herein. The network interface  may interface with the processor  over the system bus , and can provide an interface for communication with any available external networks. Transmitting bus bridge  may be connected to system bus  such that the system bus  may provide access to other areas of computing system . The I\/O interface  may be provided to permit a user to interface with any external buttons of computing system  such as a standard QWERTY keyboard\/keypad and\/or control stick\/mouse. For example, the processor  may be an x86 based CPU, and utilize any operating system which may include varieties of the Windows, Unix and\/or Linux operating systems. Computing system  may also use high-level analysis software packages and\/or custom software written in any programming and\/or scripting languages.","The memory  can include an application specific integrated circuit (\u201cASIC\u201d), or other processor, microprocessor, logic circuit, or other data processing device. The ASIC or other processor can execute an application programming interface (\u201cAPI\u201d) layer that interfaces with any resident programs in the memory  of the device. The memory  can be comprised of read-only or random-access memory (RAM and ROM), EEPROM, flash cards, or any memory common to computer platforms.","Computing system  may include a processor , a system bus , a mass storage unit , an I\/O interface , a memory unit , a network interface , and a power unit . The processor  may interface with memory  and the mass storage unit  via the system bus . The memory  and\/or the mass storage unit  may contain executable instructions and data for implementing various operations for performing the operation of computing system  described herein. The network interface  may interface with the processor  over the system bus , and can provide an interface for communication with any available external networks. Receiving bus bridge  may be connected to system bus  such that the system bus  may provide access to other areas of computing system . The I\/O interface  may be provided to permit a user to interface with any external buttons of computing system  such as a standard QWERTY keyboard\/keypad and\/or control stick\/mouse. For example, the processor  may be an x86 based CPU, and utilize any operating system which may include varieties of the Windows, Unix and\/or Linux operating systems. Computing system  may also use high-level analysis software packages and\/or custom software written in any programming and\/or scripting languages.","The memory  can include an ASIC, or other processor, microprocessor, logic circuit, or other data processing device. The ASIC or other processor can execute an API layer that interfaces with any resident programs in the memory  of the device. The memory  can be comprised of read-only or random-access memory (RAM and ROM), EEPROM, flash cards, or any memory common to computer platforms.","Further, the features of computing system  and\/or computing system  shown in  are to be considered merely illustrative and the invention is not limited to the illustrated features or arrangement.",{"@attributes":{"id":"p-0086","num":"0085"},"figref":"FIG. 4A","b":["400","400"]},"Referring to , source network  can be attached to workstation , server  and computing system . Further, destination network  can be connected to workstation , server  and computing system . Unidirectional link  can be used to connect (unsecure) source network  and (secure) destination network . In this embodiment, computing system  can be partitioned to provide both an unsecure computing environment to source network  and a secure computing environment to destination network . Computing system  can have a single 1 U enclosure or a 2 U enclosure system.","The unidirectional data link  can be implemented to ensure that data is only transferred in one direction such that it is physically impossible to transfer data of any kind in the reverse direction. The source network  can be connected to the destination network  via the unidirectional link  and\/or computing system . In an embodiment, the destination network  can be located on a secure or isolated network in order to ensure that any data located on the secure side is protected from any sort of threats that may be located external to the destination network  (for example on the source network  side).","The unidirectional data link  may use any transmission medium type; e.g. fiber optic cabling, any wired cabling, and any wireless link type(s). Furthermore, the unidirectional data link  may also use any shielded twisted-pair cabling, any copper cabling, and\/or encrypted wireless data links.","For example, the unidirectional data link  may be based on different wireless technologies, such as CDMA, WCDMA, TDMA, FDMA, OFDM, Bluetooth, IR, or the like, or other protocols that may be used in a wireless communications network or a data communications network. In an embodiment, the unidirectional link can be implemented to physically connect the busses of two separate partitions of the same computing system (e.g. computing system ). Accordingly, the illustrations provided herein are not intended to limit the embodiments of the invention and are merely to aid in the description of aspects of embodiments of the invention.","Referring back to , the components of the unidirectional secure data transfer system  and interrelation of the elements of the exemplary embodiments of the invention are not limited to the configuration illustrated. System  is merely exemplary and can include any system that allows any computing devices, such as computing system , to communicate between and among each other and\/or between and among components connected via the unidirectional data link . Further, the source network  and\/or destination network  may include any number of networks and\/or any number of devices attached to each network and\/or any other type of computing devices. For example, the unidirectional link  may include a plurality of unidirectional data links (e.g., unidirectional bus links) connecting one or more transmitting bus bridges  and\/or one or more receiving bus bridges , in one or more devices and\/or systems.",{"@attributes":{"id":"p-0092","num":"0091"},"figref":["FIG. 4B","FIG. 4A"],"b":"301"},"Referring to , a user and\/or software program of computing system  can transfer data from an unsecure partition of computing system  via the unidirectional link  to any device attached to the destination network ; however, the unsecure partition of computing system  cannot receive data from the destination network  via the unidirectional link .","Computing system  can include a transmitting bus bridge , a bus , pseudo device\/drivers , a receiving bus bridge , a bus , pseudo\/drivers device  and a real device . The transmitting bus bridge  can be used to connect to the receiving bus bridge  yielding a connection between one partition (unsecure) of computing system  and another partition (secure) of computing system  across link .","In an embodiment, the transmitting bus bridge  may be configured to be a transmit-only device and\/or the receiving bus bridge  may be configured to be a receive-only device. In another embodiment, the transmitting bus bridge  may be configured to be a transmit\/receive device and\/or the receiving bus bridge  may be configured to be a transmit\/receive device such that data may be sent from the transmitting bus bridge  to the receiving bus bridge , and a small quantity of data (i.e. an acknowledgement) may be sent from the receiving bus bridge  to the transmitting bus bridge  via link  or via another unidirectional link (shown in  as ).","The transmitting bus bridge  can connect to computing system  via the bus . In an embodiment, the transmitting bus bridge  can include a COTS circuit board. In another embodiment, the transmitting bus bridge  can include a custom-made circuit board.","The bus  can provide bus data transmissions for the unsecure partition of computing system . The bus  can also be isolated from the secure partition of computing system  including bus . Further, the bus  can provide an unsecure computing environment for computing system  and any devices attached to bus .","Pseudo-device\/drivers  may allow an application to interact with any devices\/systems attached to the bus . In an embodiment, pseudo-device\/drivers  may allow an application to interact with the transmitting bus bridge  via bus . Pseudo-device\/drivers  may include custom written software drivers for system . Pseudo-device\/drivers  can include a single pseudo-device\/driver and\/or a multiple number of pseudo-devices\/drivers. Further, pseudo-device\/drivers  can interact with a single transmitting bus bridge  or a plurality of transmitting bus bridges . Pseudo-device\/drivers  can be stored\/executed within processor , memory  and\/or mass storage  (Shown in ).","The transmitting bus bridge  can include a transmitting bus bridge (TBB) transmitter , an interface  and a TBB receiver . The interface  can provide a direct or indirect connection between the bus  and the transmitting bus bridge . The interface  can also provide a direct or indirect connection between the bus  and the TBB transmitter . The interface  can include any standard bus connection such as, for example, PCI, PCI Express, mini-PCI Express, Infiniband, and\/or FPGA.","Pinouts can be utilized in order to provide electrical contact between one or more electrical devices. In an embodiment, pinouts can be located in\/on the transmitting bus bridge  (within the interface , TBB transmitter  and\/or TBB receiver ) and\/or in\/on the bus . In an example embodiment, the physical receive pin-outs on the transmit bus may not be connected such that no data can be received on the transmit board and that the physical transmit pin-outs on the receive bus are not connected such that no data can be transmitted.","The TBB transmitter  can include any optical, wired and wireless transmitters. The TBB receiver  can include any optical, wired and wireless receivers.","In an embodiment, the unidirectional data link  can be implemented to ensure that data is only transferred in one direction such that it is physically impossible to transfer data of any kind in the reverse direction. For example, the transmitting bus bridge  can be arranged not to receive any data from the receiving bus bridge . In an embodiment, the TBB receiver  may not be connected to any pinouts or may not be connected to a sufficient number of pinouts to provide proper electrical contact. In another embodiment, the TBB receiver  may not contain any pinouts or may not contain a sufficient number of pinouts to provide proper electrical contact. In yet another embodiment, the transmitting bus bridge  may not contain a receiver. In another embodiment, the TBB receiver  may have its pinouts disabled.","Computing system  can also include a receiving bus bridge , a bus , a pseudo device  and a real device . The receiving bus bridge  can connect to computing system  via the bus . In an embodiment, the receiving bus bridge  can include a COTS circuit board. In another embodiment, the receiving bus bridge  can include a custom-made circuit board.","The bus  can provide bus data transmissions for the secure partition of computing system . The bus  can also be isolated from the unsecure partition of computing system  including bus . Further, the bus  can provide a secure computing environment for computing system  and any devices attached to bus .","Pseudo-device\/drivers  may allow application(s) to interact with any devices\/systems attached to the bus . In an embodiment, pseudo-device\/drivers  may allow application(s) to interact with the receiving bus bridge  via bus . In an embodiment, pseudo-device\/drivers  may also allow application(s) to interact with any real devices  via bus . For example, the real devices  may include video cards, sound cards, network cards, memory cards, and\/or disks. Pseudo-device\/drivers  may include custom written software drivers for system . Pseudo-device\/drivers  can include a single pseudo-device\/driver and\/or a multiple number of pseudo-device\/drivers. Further, pseudo-device\/drivers  can interact with a single receiving bus bridge  or a plurality of receiving bus bridges . In an embodiment, pseudo-device\/drivers  may also allow real devices  to interact with the receiving bus bridge  via bus . Pseudo-device\/drivers  can be executed within processor , memory  and\/or mass storage  (shown in ).","In an embodiment, any applications on the receiving side can interface with any of the real devices  via the local bus . Real devices  can be mapped by a mapper to any number of pseudo-device\/drivers . The applications can communicate with the real devices  and can create a transparent user experience even though any data delivered from the real devices  to the applications came from a totally different partition of computing system  or bus  via transmitting bus bridge  and receiving bus bridge .","The receiving bus bridge  can include a receiving bus bridge (RBB) receiver , an interface  and a RBB transmitter . The interface  can provide a direct or indirect connection between the bus  and the receiving bus bridge . The interface  can also provide a direct or indirect connection between the bus  and the RBB receiver . The interface  can include any standard bus connection such as, for example, PCI, PCI Express, mini-PCI Express, Infiniband, and\/or FPGA.","Pinouts can be utilized in order to provide electrical contact between one or more electrical devices. In an embodiment, pinouts can be located in\/on the receiving bus bridge  (within the interface , RBB receiver  and\/or RBB transmitter ) and\/or in\/on the bus .","The RBB receiver  can include any optical, wired and wireless receivers. The RBB transmitter  can include any optical, wired and wireless transmitters.","In an embodiment, the unidirectional data link  can be implemented to ensure that data is only transferred in one direction such that it is physically impossible to transfer data of any kind in the reverse direction. For example, the receiving bus bridge  can be arranged not to transmit any data to the transmitting bus bridge . In an embodiment, the RBB transmitter  may not be connected to any pinouts or may not be connected to a sufficient number of pinouts to provide proper electrical contact. In another embodiment, the RBB transmitter  may not contain any pinouts or may not contain a sufficient number of pinouts to provide proper electrical contact. In yet another embodiment, the receiving bus bridge  may not contain a transmitter. In another embodiment, the RBB transmitter  may have its pinouts disabled.",{"@attributes":{"id":"p-0111","num":"0110"},"figref":["FIG. 4C","FIGS. 4A-4B"]},"Referring to , the computing system  may include a first (unsecure) partition that can include a processor , a system bus , a mass storage unit , an Input\/Output (I\/O) interface , a memory unit , a network interface , and a power unit . The processor  may interface with memory  and the mass storage unit  via the system bus . The memory  and\/or the mass storage unit  may contain executable instructions and data for implementing various operations for performing the operation of computing system  described herein. The network interface  may interface with the processor  over the system bus , and can provide an interface for communication with any available external networks. Transmitting bus bridge  may be connected to system bus  such that the system bus  may provide access to other unsecure areas of computing system . The I\/O interface  may be provided to permit a user to interface with any external buttons of the unsecure partition of computing system  such as a standard QWERTY keyboard\/keypad and\/or control stick\/mouse. For example, the processor  may be an x86 based CPU, and utilize any operating system which may include varieties of the Windows, Unix and\/or Linux operating systems. Computing system  may also use high-level analysis software packages and\/or custom software written in any programming and\/or scripting languages.","The memory  can include an application specific integrated circuit (\u201cASIC\u201d), or other processor, microprocessor, logic circuit, or other data processing device. The ASIC or other processor can execute an application programming interface (\u201cAPI\u2019) layer that interfaces with any resident programs in the memory  of the device. The memory  can be comprised of read-only or random-access memory (RAM and ROM), EEPROM, flash cards, or any memory common to computer platforms.","Computing system  may also include a second (secure) partition that can include a processor , a system bus , a mass storage unit , an I\/O interface , a memory unit , a network interface , and a power unit . The processor  may interface with memory  and the mass storage unit  via the system bus . The memory  and\/or the mass storage unit  may contain executable instructions and data for implementing various operations for performing the operation of computing system  described herein. The network interface  may interface with the processor  over the system bus , and can provide an interface for communication with any available external networks. Receiving bus bridge  may be connected to system bus  such that the system bus  may provide access to other secure areas of computing system . The I\/O interface  may be provided to permit a user to interface with any external buttons of the secure partition of computing system  such as a standard QWERTY keyboard\/keypad and\/or control stick\/mouse. For example, the processor  may be an x86 based CPU, and utilize any operating system which may include varieties of the Windows, Unix and\/or Linux operating systems. Computing system  may also use high-level analysis software packages and\/or custom software written in any programming and\/or scripting languages.","The memory  can include an ASIC, or other processor, microprocessor, logic circuit, or other data processing device. The ASIC or other processor can execute an API layer that interfaces with any resident programs in the memory  of the device. The memory  can be comprised of read-only or random-access memory (RAM and ROM), EEPROM, flash cards, or any memory common to computer platforms.","Further, the features of computing system  shown in  are to be considered merely illustrative and the invention is not limited to the illustrated features or arrangement.",{"@attributes":{"id":"p-0117","num":"0116"},"figref":["FIG. 5","FIGS. 3B-3C"],"b":["321","4","4"]},"Referring to , an embodiment of the transmitting bus bridge  attaching to bus  via interface and is illustrated. The interface and can include any standard bus connector such as, for example, PCI, PCI Express, mini-PCI Express, Infiniband, and\/or FPGA. Interface can be attached to transmitting bus bridge  and interface can be attached to the bus . The transmitting bus bridge  can be supported by a pluggable design for modularity.","In an embodiment, the transmitting bus bridge  may be configured to be a transmit-only device and\/or the receiving bus bridge  may be configured to be a receive-only device. For example, when the transmitting bus bridge  may be configured to be a transmit-only device, then the TBB receiver  (if present) may not be connected to interface , but the TBB transmitter  may be attached to interface ","The TBB transmitter  can include control logic  and Tx transmitter . Control logic  can be used to perform any physical layer data processing to ensure compliance with the aforementioned bus connector standards. In an embodiment, control logic  can be used to convert the electrical signal received from the interface into an optical signal (if Tx transmitter  is implemented as an optical transmitter).","Control logic  can be connected directly or indirectly to interface and Tx transmitter . Tx transmitter  can perform any transmitter functions regardless of the medium utilized for unidirectional link . For example, Tx transmitter  can include at least one optical, wired and\/or wireless transmitters.","Further, the features shown in  are to be considered merely illustrative and the invention is not limited to the illustrated features or arrangement.",{"@attributes":{"id":"p-0123","num":"0122"},"figref":["FIG. 6","FIGS. 3B-3C"],"b":["331","4","4"]},"Referring to , an embodiment of the receiving bus bridge  attaching to bus  via interface and is illustrated. The interface and can include any standard bus connector such as, for example, PCI, PCI Express, mini-PCI Express, Infiniband, and\/or FPGA. Interface can be attached to receiving bus bridge  and interface can be attached to the bus . The receiving bus bridge  can be supported by a pluggable design for modularity.","In an embodiment, the transmitting bus bridge  may be configured to be a transmit-only device and\/or the receiving bus bridge  may be configured (e.g., will be configured) to be a receive-only device. For example, when the receiving bus bridge  may be configured to be a receive-only device, then the RBB transmitter  (if present) may not be connected to interface , but the RBB receiver  may be attached to interface ","The RBB receiver  can include control logic  and Rx receiver . Control logic  can be used to perform any physical layer data processing to ensure compliance with the aforementioned bus connector standards. In an embodiment, control logic  can be used to convert the optical signal received from Rx Receiver  into an electrical signal (if Rx receiver  is implemented as an optical receiver).","Control logic  can be connected directly or indirectly to interface and Rx receiver . Rx receiver  can perform any receiver functions regardless of the medium utilized for unidirectional link . For example, Rx receiver  can include at least one optical, wired and\/or wireless transmitters.","Further, the features shown in  are to be considered merely illustrative and the invention is not limited to the illustrated features or arrangement.",{"@attributes":{"id":"p-0129","num":"0128"},"figref":["FIG. 7","FIGS. 3B-3C"],"b":["331","4","4"]},"Referring to , an embodiment of the receiving bus bridge  attaching to bus  via interface and is illustrated. The interface and can include any standard bus connector such as, for example, PCI, PCI Express, mini-PCI Express, Infiniband, and\/or FPGA. Interface can be attached to receiving bus bridge  and interface can be attached to the bus . The receiving bus bridge  can be supported by a pluggable design for modularity.","In an embodiment, the transmitting bus bridge  may be configured to be a transmit-only device and\/or the receiving bus bridge  may be configured (e.g., will be configured) to be a receive-only device. For example, when the receiving bus bridge  may be configured to be a receive-only device, then the RBB transmitter  (if present) may not be connected to interface , but the RBB receiver  may be attached to interface ","The RBB receiver  can include control logic , Rx receiver  and buffer cache . Control logic  can be used to perform any physical layer data processing to ensure compliance with the aforementioned bus connector standards. In an embodiment, control logic  can be used to convert the optical signal received from Rx Receiver  into an electrical signal (if Rx receiver  is implemented as an optical receiver).","Control logic  can be connected directly or indirectly to interface and buffer cache . Rx receiver  can be connected directly or indirectly to buffer cache . Rx receiver  can perform any receiver functions regardless of the medium utilized for unidirectional link . For example, Rx receiver  can include at least one optical, wired and\/or wireless transmitters.","The buffer cache  can store any received data from the Rx receiver . Further, the buffer cache  can also store any data received by receiving bus bridge . In an embodiment, RBB receiver  may receive a plurality of signals from any number of TBB transmitter(s) . For example, a switch (not shown) can be used to support a point-to-multi-point embodiment where a buffer cache  can be used to store any received data in order to increase speed and capacity processing. The buffer cache  can be used to keep up with the many transmit systems. In an embodiment, PCI Express can allow up to 256 busses in a configuration, such that each PCI express bus can connect to a PCI express bus switch located either internal or external to the computing system  and\/or computing system  yielding a connection up to 256 systems.","The buffer cache  may also allow a pseudo-memory device (shown in  as ) to be mapped directly to an area of buffer cache  specifically for an application or function.","Further, the features shown in  are to be considered merely illustrative and the invention is not limited to the illustrated features or arrangement.",{"@attributes":{"id":"p-0137","num":"0136"},"figref":["FIG. 8","FIGS. 3A-3C"],"b":["300","400","301","302","4","4"]},"Referring to , an application  may interface with any number of local devices  (including disk, video, sound, network or memory). When a user of application  attempts to use local devices  (e.g. to store data in a disk drive), custom pseudo-device drivers can create pseudo-devices . Each of the local devices  (e.g. disk, video, sound, network or memory) can be associated with one or more pseudo-devices (e.g. a pseudo-disk, pseudo-video, pseudo-sound, pseudo-network or pseudo-memory). Further, the association or mapping of local devices  to pseudo-devices can be altered based upon the pseudo-devices driver configuration.","The application  may now interface with the pseudo-devices \/pseudo-device drivers in utilizing the transmitting bus bridge  and receiving bus bridge  to transfer data across unidirectional link . The data may be in native format with minimal processing and overhead added to ensure maximum throughput.","Custom pseudo-devices\/drivers  may create pseudo-device mapping drivers  on local computing system . The pseudo-devices\/drivers  can be mapped to real devices  attached to computing system  via mapper . For example, each of the pseudo-devices  (e.g. a pseudo-disk, pseudo-video, pseudo-sound, pseudo-network or pseudo-memory) can be associated with one or more real devices  (e.g. disk, video, sound, network or memory). Further, the association or mapping of pseudo-devices  to real devices  can be altered based upon the pseudo-device drivers  configuration.","The data transferred from application  can be stored in real device  and any applications  located on computing system  may access the data stored in real devices  as if it was originated on computing system . Thus, transparency is provided for the user and\/or any applications using system  and .","Further, the features shown in  are to be considered merely illustrative and the invention is not limited to the illustrated features or arrangement.",{"@attributes":{"id":"p-0143","num":"0142"},"figref":["FIG. 9A","FIGS. 3A-3C"],"b":["300","400","321","331","4","4","8"]},"Referring to , application  may transfer data from computing system  to . In another embodiment, application  may transfer data from an unsecured partition of computing system  to a secure partition of computing system . Yet in another embodiment, at least one computing system  may transfer data to at least one computing system . For example, in another embodiment, at least transmitting bus bridge  may transfer data to at least one receiving bus bridge . The exemplary embodiments are not limited to a one-to-one relationship and can provide the potential interaction of 1 to N sending devices on a computing system with 1 to N devices\/pseudo devices on a receiving computing platform. For example, in this manner, an exemplary embodiment can provide the capability to chain, split or duplicate device channels that can use the one way bus and create a desired application affect.","Application  may interface with any number of pseudo-device\/drivers  configured on the system  and\/or  via the source bus .","In an embodiment, transmitting bus bridge  can be connected to bus . Pseudo-device\/drivers  may allow application  to interact with any devices\/systems attached to the bus . In an embodiment, pseudo-device\/drivers  may allow application  to interact with the transmitting bus bridge  via bus . Pseudo-device\/drivers  may be custom written software drivers for system  and\/or . Pseudo-device\/drivers  can include a single pseudo-device\/driver and\/or a multiple number of pseudo-device\/drivers. Further, pseudo-device\/drivers  can interact with a single transmitting bus bridge  or a plurality of transmitting bus bridges .","The transmitting bus bridge  can be connected to the receiving bus bridge  via unidirectional link . The receiving bus bridge  may be connected to bus  and the real devices  may also be attached to bus .","Pseudo-device\/drivers  may allow application(s)  to interact with any devices\/systems attached to the bus . In an embodiment, pseudo-device\/drivers  may allow application(s)  to interact with the receiving bus bridge  via bus . In an embodiment, pseudo-device\/drivers  may also allow application(s)  to interact with any real devices  via bus . For example, the real devices  may include video cards, sound cards, network cards, memory cards, and\/or disks. Pseudo-device\/drivers  may be custom written software drivers for system  and\/or . Pseudo-device\/drivers  can include a single pseudo-device\/driver and\/or a multiple number of pseudo-device\/drivers. Further, pseudo-device\/drivers  can interact with a single receiving bus bridge  or a plurality of receiving bus bridges . In an embodiment, pseudo-device\/drivers  may also allow real devices  to interact with the receiving bus bridge  via bus .","The applications  on the receiving side can interface with the real devices  on the local bus . Real devices  can be mapped by mapper  to any number of pseudo-device\/drivers .","The applications  can communicate with the real devices  and can create a transparent user experience even though the data delivered from the real devices  came from a totally different computing system  or bus  via transmitting bus bridge  and receiving bus bridge .","In another embodiment, pseudo-device\/drivers  may be chained together or even split-up to create simultaneous, different application environments. For example, a pseudo-device\/driver  on the transmitting bus bridge  side can split a video feed to the local video driver as well as a second pseudo-device\/driver  that represents the real device  on the receiving bus bridge , thereby simultaneously displaying video to both systems (shown as unsecure computing system  and secure computing system  in ). In other embodiments, pseudo-device\/drivers  may be chained together or even split-up to create simultaneous, different application environments for audio, disk drive duplication or other functions that are necessary within the application. This type of chaining and splitting presents configuration capabilities that are not available in current network based one-way transfer technology.","Further, the features shown in  are to be considered merely illustrative and the invention is not limited to the illustrated features or arrangement.",{"@attributes":{"id":"p-0153","num":"0152"},"figref":["FIG. 10A","FIGS. 3B-3C"],"b":["321","331","4","4"]},"Referring to , an embodiment of the transmitting bus bridge  attached to bus  via interface  is illustrated along with the receiving bus bridge  attached to bus  via interface . The transmitting bus bridge  and the receiving bus bridge  can be attached via a unidirectional link . However, the receiving bus bridge  can also be connected to the transmitting bus bridge  via a unidirectional data link .","In an embodiment, the transmitting bus bridge  may be configured to be a transmit\/receive device and\/or the receiving bus bridge  may be configured to be a transmit\/receive device such that data may be sent from the transmitting bus bridge  to the receiving bus bridge . The exemplary embodiment can include self-contained acknowledgement logic such that a small quantity of return data (i.e. an acknowledgement) may be sent from the receiving bus bridge  to the transmitting bus bridge  via a link  or via another unidirectional link . For example, the return data may include the passing of a status code or error byte (described below) from the receiving bus bridge  to the transmitting bus bridge , functioning as an acknowledgement or status update of successful data transmission. For example, as illustrated in the exemplary embodiment of , an error code or acknowledgement may be transmitted via a unidirectional link  using self-contained (i.e. no interface off board) retransmit or acknowledgement process logic (e.g., , ).","In an embodiment, the transmitting bus bridge  can include a TBB transmitter , an interface  and a TBB receiver . The TBB receiver  can include control logic  and Rx receiver .","Control logic  can be used to perform any physical layer data processing to ensure compliance with the aforementioned bus connector standards. In an embodiment, control logic  can be used to convert an optical signal received from Rx Receiver  into an electrical signal (if Rx receiver  is implemented as an optical receiver). Control logic  and\/or Rx receiver  can also be used to determine\/interpret\/implement the status codes (described below) and whether or not retransmission occurs.","Control logic  can be connected directly or indirectly to interface  and Rx receiver . Rx receiver  can perform any receiver functions regardless of the medium utilized for unidirectional link . For example, Rx receiver  can include at least one optical, wired and\/or wireless transmitters. In another embodiment, control logic  can be connected directly or indirectly to Rx receiver , but may be self-contained and may not be connected to an interface.","In an embodiment, the receiving bus bridge  can include a receiving bus bridge (RBB) receiver , an interface  and a RBB transmitter . The RBB transmitter  can include control logic  and Tx transmitter .","Control logic  can be used to perform any physical layer data processing to ensure compliance with the aforementioned bus connector standards. In an embodiment, control logic  can be used to convert the electrical signal received from the interface  into an optical signal (if Tx transmitter  is implemented as an optical transmitter). Control logic  and\/or Tx transmitter  can be used to determine\/set\/implement the status codes (described below).","Control logic  can be connected directly or indirectly to interface  and Tx transmitter . Tx transmitter  can perform any transmitter functions regardless of the medium utilized for unidirectional link . For example, Tx transmitter  can include at least one optical, wired and\/or wireless transmitters. In another embodiment, control logic  can be connected directly or indirectly to Tx transmitter , but may be self-contained and may not be connected to an interface.","In an embodiment, computing system  and  can have basic redundancy features which can ensure the safe delivery of data over unidirectional link . For example, a status code can be utilized by the system to cause data retransmission. When a user of system  and  has data to send, the data may be delivered to the transmitting bus bridge , and the transmitting bus bridge  can transmit the data over unidirectional link . Also, when data is sent to the transmitting bus bridge , one or more logic gates (e.g. logic gate  within TBB transmitter  and\/or logic gate  within TBB receiver ) can be tripped which can allow the TBB receiver  to receive data. In an exemplary embodiment, TBB receiver  can contain an acknowledgement\/error code processor. The acknowledgement\/error code processor can be located within logic gate  and\/or receiver Rx . After data is received by the receiving bus bridge , one or more logic gates (e.g. logic gate  within RBB receiver  and\/or logic gate  within RBB transmitter ) can be tripped which can allow the RBB transmitter  to transmit data. In an exemplary embodiment, RBB transmitter  can contain an acknowledgement\/error code generator. The acknowledgement\/error code generator can be located within logic gate  and\/or transmitter Tx . Also, after data is received by the receiving bus bridge , the receiving bus bridge  can transmit a status code to the transmitting bus bridge  via unidirectional link . The status code can be a \u201c0\u201d or a \u201cnon-zero\u201d. The acknowledgement\/error code generator can be used to determine\/set\/implement the status codes. After data is sent by the receiving bus bridge , a logic gate (logic gate  within RBB receiver ) can be tripped which can allow the RBB receiver  to receive more data.","A status code of \u201c0\u201d can signify that the data transmitted by the transmitting bus bridge  was successfully received by the receiving bus bridge . When a status code of \u201c0\u201d is received by the transmitting bus bridge , the transmitting bus bridge  may not retransmit data to the receiving bus bridge  via unidirectional link , but may transmit new data. For example, when a status code of \u201c0\u201d is received by the transmitting bus bridge , one or more logic gates (e.g. logic gate  within TBB receiver  and\/or logic gate  within TBB transmitter ) can be tripped which can allow the TBB transmitter  to transmit more data. Control logic  (which can include an acknowledgement\/error code generator) can be used to determine\/interpret\/implement the status codes and whether or not retransmission occurs.","A status code of \u201cnon-zero\u201d can signify that the data transmitted by the transmitting bus bridge  was not successfully received by the receiving bus bridge  and\/or an error occurred. When a status code of \u201cnon-zero\u201d is received by the transmitting bus bridge , the transmitting bus bridge  can retransmit the data a number of times dependent upon the system configuration. For example, when a status code of \u201cnon-zero\u201d is received by the transmitting bus bridge , one or more logic gates (e.g. logic gate  within TBB receiver  and\/or logic gate  within TBB transmitter ) can be tripped which can allow the TBB transmitter  to retransmit the data a number of times dependent upon the system configuration. However, if the number of retransmits exceeds the maximum allowed configuration, then an error message may be generated on the transmitting bus bridge  indicating that there is a problem with the system and it may be delivered to the system administrator of computing system  and . The configurable number of retransmits can be set, monitored and\/or changed by a system administrator of computing system  and . Control logic  (which can include an acknowledgement\/error code generator) can be used to determine\/interpret\/implement the status codes and whether or not retransmission occurs. Control logic  can also provide a status update to the pseudo-device driver ","In another embodiment, the status codes can rely on on-board logic contained within control logic  and  in order to keep the signals self-contained within the transmitting bus bridge  and receiving bus bridge .","Further, the features shown in  are to be considered merely illustrative and the invention is not limited to the illustrated features or arrangement.",{"@attributes":{"id":"p-0167","num":"0166"},"figref":["FIG. 11","FIGS. 8 and 9"],"b":["300","400","301","302"]},"Typically, interprocess communications will only occur between applications running on the same platform; however, with the use of the one-way bus bridge system  and , interprocess communications such as message queues, semaphores or shared memory segments can be implemented across applications running on two different computing platforms. For example, computing system  can have an application  currently running, and may write to a shared memory location, semaphore or message queue utilizing a pseudo-device  (e.g. pseudo-memory device  in this embodiment). By utilizing the pseudo-memory device , an automatic data transfer can occur via the unidirectional link  to computing system  (where other applications  may be located). Computing system  may have a pseudo-device\/driver  and\/or memory mapper  (e.g. pseudo-memory device mapper  in this embodiment) that may provide the memory mapping to real device  (e.g. memory  in this embodiment) residing on computing system . Thus, the interprocess communications may be located\/stored within memory .","Further, the applications  running on computing system  may also have interprocess communications through the use of message queues, semaphores or shared memory defined within applications . The applications  may read from memory , which may contain any one of the interprocess communications from computing system . Applications  may also be able to process the data stored in memory  as interprocess communications from computing system . Therefore, a first application  on one computing system  can either control or unidirectionally communicate with a second application  located on a separate computing system .","In an embodiment, a simple memory write on a first computing system can transfer raw data across a unidirectional link from the first computing system to another computing system. Further, memory writes can occur at tremendous speeds and an exemplary device may only be slowed by the rest of the hardware on the computing system.","In another embodiment, operating system-level control can be provided from one computing system to another computing system via the one-way bus bridge.","In yet another embodiment, an application (located on one computing system) can provide data, commands or control to another application, a driver or operating system (residing on a separate computing system) through the use of the one-way bus bridge.","In an embodiment, the one-way bus bridge can create pseudo-devices, located on one computing system, which map to real devices located on a completely separate computing system. In another embodiment, the one-way bus bridge can create pseudo-devices including a one-way hard drive, a one-way video card, a one-way sound card, a one-way printer and one-way memory.","Furthermore, the exemplary embodiments disclosed herein can be used to protect Personally Identifiable Information (PII) data, credit card numbers, identifiable information for business transactions, monetary transactions or any transaction that needs to be protected from one system or network.","The exemplary embodiments disclosed herein can also be used for continuance of operation (COOP), disaster recovery or one-way data replication.","The exemplary embodiments disclosed herein can be used for various applications, including Government, SCADA, Financial, and\/or Large Corporations.","The exemplary embodiments disclosed herein can provide, for example, Secure Information Sharing, Security and Separation, Data Backups, and\/or Database Replication.","The exemplary embodiments disclosed herein can depend from the system bus and not network technology like conventional network-level devices.","Further, the features shown in  are to be considered merely illustrative and the invention is not limited to the illustrated features or arrangement.","The present invention has been described herein in terms of several preferred embodiments. However, modifications and additions to these embodiments will become apparent to those of ordinary skill in the art upon a reading of the foregoing description. It is intended that all such modifications and additions comprise a part of the present invention to the extent that they fall within the scope of the several claims appended hereto.","Like numbers refer to like elements throughout. In the figures, the thickness of certain lines, layers, components, elements or features may be exaggerated for clarity.","The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. Unless otherwise defined, all terms (including technical and scientific terms) used herein have the same meaning as commonly understood by one of ordinary skill in the art to which this invention belongs. It will be further understood that terms, such as those defined in commonly used dictionaries, should be interpreted as having a meaning that is consistent with their meaning in the context of the specification and relevant art and should not be interpreted in an idealized or overly formal sense unless expressly so defined herein. Well-known functions or constructions may not be described in detail for brevity and\/or clarity.","As used herein, the singular forms \u201ca\u201d, \u201can\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms \u201ccomprises\u201d and\/or \u201ccomprising,\u201d when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and\/or groups thereof. As used herein, the term \u201cand\/or\u201d includes any and all combinations of one or more of the associated listed items. As used herein, phrases such as \u201cbetween X and Y\u201d and \u201cbetween about X and Y\u201d should be interpreted to include X and Y. As used herein, phrases such as \u201cbetween about X and Y\u201d mean \u201cbetween about X and about Y.\u201d As used herein, phrases such as \u201cfrom about X to Y\u201d mean \u201cfrom about X to about Y.\u201d","It will be understood that when an element is referred to as being \u201con\u201d, \u201cattached\u201d to, \u201cconnected\u201d to, \u201ccoupled\u201d with, \u201ccontacting\u201d, etc., another element, it can be directly on, attached to, connected to, coupled with or contacting the other element or intervening elements may also be present. In contrast, when an element is referred to as being, for example, \u201cdirectly on\u201d, \u201cdirectly attached\u201d to, \u201cdirectly connected\u201d to, \u201cdirectly coupled\u201d with or \u201cdirectly contacting\u201d another element, there are no intervening elements present. It will also be appreciated by those of skill in the art that references to a structure or feature that is disposed \u201cadjacent\u201d another feature may have portions that overlap or underlie the adjacent feature.","Spatially relative terms, such as \u201cunder\u201d, \u201cbelow\u201d, \u201clower\u201d, \u201cover\u201d, \u201cupper\u201d, \u201clateral\u201d, \u201cleft\u201d, \u201cright\u201d and the like, may be used herein for ease of description to describe one element or feature's relationship to another element(s) or feature(s) as illustrated in the figures. It will be understood that the spatially relative terms are intended to encompass different orientations of the device in use or operation in addition to the orientation depicted in the figures. For example, if the device in the figures is inverted, elements described as \u201cunder\u201d or \u201cbeneath\u201d other elements or features would then be oriented \u201cover\u201d the other elements or features. The device may be otherwise oriented (rotated 90 degrees or at other orientations) and the descriptors of relative spatial relationships used herein interpreted accordingly.","The various illustrative logical blocks, modules, and circuits described in connection with the embodiments disclosed herein may be implemented or performed with a general purpose processor, a digital signal processor (DSP), an application specific integrated circuit (ASIC), a field programmable gate array (FPGA) or other programmable logic device, discrete gate or transistor logic, discrete hardware components, or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor, but in the alternative, the processor may be any conventional processor, controller, microcontroller, or state machine. A processor may also be implemented as a combination of computing devices, e.g., a combination of a DSP and a microprocessor, a plurality of microprocessors, one or more microprocessors in conjunction with a DSP core, or any other such configuration.","The methods, sequences and\/or algorithms described in connection with the embodiments disclosed herein may be embodied directly in hardware, in a software module executed by a processor, or in a combination of the two. A software module may reside in RAM memory, flash memory, ROM memory, EPROM memory, EEPROM memory, registers, hard disk, a removable disk, a CD-ROM, or any other form of storage medium known in the art. An exemplary storage medium is coupled to the processor such that the processor can read information from, and write information to, the storage medium. In the alternative, the storage medium may be integral to the processor. The processor and the storage medium may reside in an ASIC. The ASIC may reside in a terminal. In the alternative, the processor and the storage medium may reside as discrete components in a terminal.","In one or more exemplary embodiments, the functions described may be implemented in hardware, software, firmware, or any combination thereof. If implemented in software, the functions may be stored on or transmitted over as one or more instructions or code on a computer-readable medium. Computer-readable media includes both computer storage media and communication media including any medium that facilitates transfer of a computer program from one place to another. A storage media may be any available media that can be accessed by a computer. By way of example, and not limitation, such computer-readable media can comprise RAM, ROM, EEPROM, CD-ROM or other optical disk storage, magnetic disk storage or other magnetic storage devices, or any other medium that can be used to carry or store desired program code in the form of instructions or data structures and that can be accessed by a computer. Also, any connection is properly termed a computer-readable medium. For example, if the software is transmitted from a website, server, or other remote source using a coaxial cable, fiber optic cable, twisted pair, digital subscriber line (DSL), or wireless technologies such as infrared, radio, and microwave, then the coaxial cable, fiber optic cable, twisted pair, DSL, or wireless technologies such as infrared, radio, and microwave are included in the definition of medium. Disk and disc, as used herein, includes compact disc (CD), laser disc, optical disc, digital versatile disc (DVD), floppy disk and blu-ray disc where disks usually reproduce data magnetically, while discs reproduce data optically with lasers. Combinations of the above should also be included within the scope of computer-readable media.","While the foregoing disclosure shows illustrative embodiments of the invention, it should be noted that various changes and modifications could be made herein without departing from the scope of the invention as defined by the appended claims. The functions, steps and\/or actions of the method claims in accordance with the embodiments of the invention described herein need not be performed in any particular order. Furthermore, although elements of the invention may be described or claimed in the singular, the plural is contemplated unless limitation to the singular is explicitly stated."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Other features and advantages of the present invention will become apparent to those skilled in the art upon review of the following detailed description and drawings.","These and other aspects and features of embodiments of the present invention will be better understood after a reading of the following detailed description, together with the attached drawings, wherein:",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 2","FIG. 1"],"b":["101","102"]},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 3A","b":"300"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 3B","FIG. 3A"],"b":["301","302"]},{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 3C","FIGS. 3A-3B"]},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 4A","b":"400"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 4B","FIG. 4A"],"b":"301"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 4C","FIGS. 4A-4B"]},{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 5","FIGS. 3B-3C"],"b":["321","4","4"]},{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 6","FIGS. 3B-3C"],"b":["331","4","4"]},{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 7","FIGS. 3B-3C"],"b":["331","4","4"]},{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 8","FIGS. 3A-3C"],"b":["300","400","301","302","4","4"]},{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 9A","FIGS. 3A-3C"],"b":["300","400","321","331","4","4","8"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 9B","FIGS. 3A-3C"],"b":["300","400","321","331","4","4","8"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 10A","FIGS. 3B-3C"],"b":["321","331","4","4"]},{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 10B","FIGS. 3B-3C"],"b":["321","331","4","4"]},{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 11","FIGS. 8 and 9"],"b":["300","400","301","302"]}]},"DETDESC":[{},{}]}
