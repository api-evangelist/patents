---
title: Open gateway framework
abstract: An open gateway framework addresses the need for efficient modularization, extension, and adaptation of device functionality, such as gateway or set top box functionally. The open gateway framework facilitates rapid third party application development on customer electronic devices, particularly for telecommunications service providers. The open gateway framework provides: portability between different devices; rapid development based on extended platform features with a custom Application Programming Interface (API); and deployment with little or no impact on device base software.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08392933&OS=08392933&RS=08392933
owner: Accenture Global Services Limited
number: 08392933
owner_city: Dublin
owner_country: IE
publication_date: 20100430
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["This application takes priority to EPO application serial number 104 250 34.5, filed Feb. 15, 2010, which is incorporated herein by reference in its entirety.","1. Technical Field","This disclosure relates to an architecture for telecommunications service platforms that facilitates efficient modularization, control, and adaptation of services running on the platforms.","2. Related Art","The digital home and office continue to evolve, incorporate a wider range of sophisticated devices, and become more complex. Customer equipment vendors continue to market new connected consumer electronic devices and advanced and pervasive value-added services for the home and office, integrated with many different consumer electronic devices. However, the digital connected home and office is a complex ecosystem of service platforms in which each device has a closed monolithic design that blocks rapid and efficient development and deployment of new services.","More specifically, the current application development model is a closed and custom one. Under the current model, the customer equipment vendor designs the application, develops it, and embeds it in the device, typically engineered specifically for that particular vendor's device architecture. In particular, this is true for access gateways that provide the point of access to telecommunication services. The telecommunications service providers have no control over the software application lifecycle, as all the development tends to be the sole province of the device vendor. The monolithic design of access gateways makes it difficult to develop and deploy new services with a short time to market, even for the vendor itself.","Therefore, a need exists for enhanced architectures for service creation, execution, and provisioning.","An open gateway framework addresses the need for efficient modularization, extension, and adaptation of device (e.g., telecommunication gateway) functionality. The open gateway framework may be implemented on other devices, such as set top boxes or other customer premises equipment (CPE). The open gateway framework facilitates rapid application development on customer electronic devices, particularly for telecommunications service providers. The open gateway framework provides portability between different devices, including access gateways and set top boxes; rapid development by leveraging an extended platform features and a consistent Application Programming Interface (API) defined by helper functions; and deployment with little or no impact on device base software, thereby greatly facilitating third party development.","The open gateway framework may be deployed as a complete architecture for application lifecycle management. The open gateway framework may include one or more of: a customized core interface layer leveraging the OSGi Alliance\u2122 Framework for service creation and execution; a management platform fully integrable with telecommunications service provider Operational Support Systems (OSS)\/Business Support Systems (BSS) systems; an application repository; and an API for application development. The open gateway framework is remotely manageable to facilitate effective customer support. Once the telecommunications service provider has integrated the open gateway framework in its devices, the telecommunications service provider is free to develop (and let others develop) new services on those devices.","Other systems, methods, features and advantages will be, or will become, apparent to one with skill in the art upon examination of the following figures and detailed description. It is intended that all such additional systems, methods, features and advantages be included within this description, be within the scope of the invention, and be protected by the following claims.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 1","FIG. 1"],"b":["100","102","103","102","104","106","108","103","110","103","105","105","102","112"]},"The gateways may include systems that interface to cellular phones, smartphones, personal data assistants or other telecommunications devices. The set top boxes may include devices provided by cable television service providers to deliver television, VoIP, or other services to consumers in their homes or offices. In general, the management system  may manage, as described in more detail below, any device that delivers services to subscribers.","The endpoints  may represent any consumer of telecommunications services. One example of an endpoint  is a cellular phone that subscribes to a Short Message Service (SMS) hosted at the telecommunications gateway . Another example of an endpoint is a digital video recorder that subscribes to a television programming information service delivered by the set top box .","The BSS  facilitates transaction processing for the management system . To that end, the BSS  may include, as examples, a billing system  and an electronic transaction processing system . The BSS  may communicate with the management system  to accept payment information (e.g., credit or debit card information), process payments, credit or debit pre-paid or post-paid accounts, return account balance information, payment authorizations, or take other actions as requested by the management system .","The BSS  supports, as one example, the third party purchase of additional services. The service store server  may host the purchase interfaces, service catalogs, and other purchase infrastructure. The content server  may store the services for delivery to the devices . The architecture  may be implemented in many different ways, however. For example, the functionality of any of the systems , , , ,  may be implemented in fewer discrete systems (e.g., the management system  may perform all of the functionality), or further distributed among additional systems. The networks  provide the communication infrastructure through which the various systems and endpoints communicate, and may include any combination of wireline or wireless local or wide area networks, including the Internet.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 2","b":["102","202","204","206","208","210","208","210","102"]},"The service management logic  coordinates the overall function of the management system . Specific examples of functionality that the service management logic  may implement are discussed below. In support of the service management logic , the communication protocol  provides a message handler and interpreter for messages received at the communication interface . In one implementation, the communication protocol  may be the TR-069 communication protocol for remote management of devices, extended to support the functionality noted below.","As noted above, there may be implementations where the management system  also provides the service store functionality. To that end, the management system  may include service store logic . The service store logic  may process a platform manifest  or other information to determine which services are available for the device that provided the platform manifest.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 3","b":["302","304","304","306","308","310","312","314","312","302","314","314"]},"In support of the open gateway framework , the communication protocol  provides a message handler and interpreter for messages received at the communication interface . In one implementation, the communication protocol  may be the TR-069 communication protocol for remote management of devices, extended to support the functionality noted below. To that end, the communication protocol  may route incoming messages from the management system  to the management service , and may facilitate transmission of outgoing messages from the management service  to the management system .","An operating system  provides basic functionality for the device . In particular, the operating system , including specific drivers (e.g., the driver ), provides access to the system resources . Native services  written specifically for the device  may make calls to known functions and drivers present in the operative system . However, such native services  are not readily portable between different device architectures, and must be re-written if they need to be installed on different devices.","The open gateway framework  provides a technical solution to the technical problem of service portability and compatibility, as well as to remote management of such services. The open gateway framework  acts as an abstraction layer to isolate specific hardware from the exposed functions that all services will have access to, across open gateway frameworks installed on very different devices. In one implementation, the open gateway framework  includes a core dynamic module system , optionally extended with custom core extensions (e.g., the core extension ), to implement core functions specifically tailored to the hardware\/software configuration of the device . The core  may be, for example, the OGSi framework that provides a dynamic module system for executing bundles of machine independent code, such as JAVA code. In addition, the open gateway framework  further includes a function package  that provides helper functions .","The helper functions  and core , including the core extensions  (if any), include pre-designed, pre-packaged code that implements a wide range of functions. The functions are accessed through function calls defined by the helper functions  and the core  and are made available (i.e., \u201cexposed\u201d) for access by other entities (e.g., the services ). The set of function calls that is available typically does not change between open gateway frameworks, although there may be some function calls that are not available on all devices because of hardware or software limitations of the device. On the other hand, the way that the function calls translate to specific underlying system services does change to match the specific device and its hardware configuration. As a result, the set of function calls that is common across multiple devices provides a consistent application programming interface (API), across the multiple devices, that services  employ to implement their functionality. In , the set of functions that compose the API are referred to with numeral , i.e., the API .","The helper functions  and the core  translate API function calls made by the services  into (possibly proprietary and unique) operating system, driver, or system resource specific calls for the device. Thus, each device  may have a specific open gateway framework , but the services  written for the open gateway framework  need not change and need not be re-written as they are installed on various devices with differing hardware. Instead, the services  plugin directly through the consistent API  to the open gateway framework  regardless of the specific hardware implementation of a device. The services , which are external to the open gateway framework  in that they are not included with or part of the open gateway framework  itself, may implement any desired processing that the device desires to offer to the endpoints , such as, SMS or MMS service, text to speech translation, video and voice conferencing, VoIP or cable television recording services, or other services.","The core extensions  (if any) and the function package  together form an open and custom service platform structure  on top of the operating system . The custom service platform structure  is part of the open gateway framework , and supports custom services that are highly portable between different hardware as an extension to base functionality in the core .  shows several examples of such services . In particular, one of the services  is a management service . As will be explained in more detail below, the management service  coordinates interaction of the device  with the management system  so that the management system  may perform centralized and remote control over the services running in the devices . A datamodel  may store service parameters for any of the services , including the management service. The management service  may monitor, change, report, or otherwise manipulate service parameters in the database as directed by the management system .","The open gateway framework exposes functions that are available to services. A service developer rapidly develops a service, leveraging the pre-designed exposed functions implemented by the helper functions . The helper functions  use, in turn, the core and core extensions to implement their functions. The core  and core extensions  may call specific device drivers or operating system functions to carry out the required processing.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 4","b":["400","402","402","404","406","408","410","412","414","406"]},{"@attributes":{"id":"p-0047","num":"0046"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"thead":{"row":{"entry":"TABLE"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Helpers and Extensions"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FIG. 4 Ref.","Name","Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["416","Home\/Office","Apps Helper","It provides functions for"]},{"entry":[{},"Automation",{},"controlling domestic"]},{"entry":[{},"Manager",{},"applications, such as:"]},{"entry":[{},{},{},"Select Object"]},{"entry":[{},{},{},"Start"]},{"entry":[{},{},{},"Stop"]},{"entry":[{},{},{},"Intensity Control"]},{"entry":[{},{},{},"Set Timer"]},{"entry":[{},{},{},"Object State Control"]},{"entry":[{},{},{},"and others."]},{"entry":["418","UPnP (Universal","Apps Helper","It provides functions for"]},{"entry":[{},"Plug n' Play)",{},"controlling and managing"]},{"entry":[{},{},{},"services that use the UPnP"]},{"entry":[{},{},{},"protocol, such as:"]},{"entry":[{},{},{},"Device Discovery"]},{"entry":[{},{},{},"Device Select"]},{"entry":[{},{},{},"and others."]},{"entry":["420","SIP (Session","Apps Helper","It provides functions for"]},{"entry":[{},"Initiation Protocol)",{},"controlling and managing"]},{"entry":[{},{},{},"services that use the SIP"]},{"entry":[{},{},{},"protocol, such as:"]},{"entry":[{},{},{},"Name Mapping and"]},{"entry":[{},{},{},"redirection"]},{"entry":[{},{},{},"Capability Negotiation"]},{"entry":[{},{},{},"Capabilities Management"]},{"entry":[{},{},{},"Participant Management"]},{"entry":[{},{},{},"and others."]},{"entry":["422","App Store","Apps Helper","It provides functions for"]},{"entry":[{},"Integration",{},"making purchases and"]},{"entry":[{},{},{},"managing content on the"]},{"entry":[{},{},{},"online portal:"]},{"entry":[{},{},{},"Buy"]},{"entry":[{},{},{},"Pay"]},{"entry":[{},{},{},"Access Control"]},{"entry":[{},{},{},"Content Download"]},{"entry":[{},{},{},"and others."]},{"entry":["424","Remote Access","Apps Helper","It provides functions for"]},{"entry":[{},{},{},"making remote access to"]},{"entry":[{},{},{},"services hosted on the device:"]},{"entry":[{},{},{},"Access Control"]},{"entry":[{},{},{},"Set port"]},{"entry":[{},{},{},"and others."]},{"entry":["426","TTS","Apps Helper","It provides functions for"]},{"entry":[{},{},{},"performing translation from"]},{"entry":[{},{},{},"text to speech."]},{"entry":["428","ASR","Apps Helper","It provides functions for"]},{"entry":[{},{},{},"automatic speech recognition."]},{"entry":["410","Audio Driver","Core","It implements functions that"]},{"entry":[{},{},"Extension","support services that require"]},{"entry":[{},{},{},"audio capabilities."]},{"entry":["412","DSP Driver","Core","It implements the functionality"]},{"entry":[{},{},"Extension","to call custom DSP functions,"]},{"entry":[{},{},{},"such as to aid in audio\/video"]},{"entry":[{},{},{},"coding or decoding, or for very"]},{"entry":[{},{},{},"specialized processing such"]},{"entry":[{},{},{},"as signal digitization or"]},{"entry":[{},{},{},"analysis."]},{"entry":["414","Phone Port Driver","Core","It implements functions to"]},{"entry":[{},{},"Extension","support the devices connected"]},{"entry":[{},{},{},"to telephone lines."]},{"entry":["430","Appliance","Apps Helper -","It simulates the presence of a"]},{"entry":[{},"Abstraction","Logic","generic appliance, and"]},{"entry":[{},{},"Function","abstracts appliance control"]},{"entry":[{},{},"Abstraction","functionality, for controlling"]},{"entry":[{},{},{},"appliances."]},{"entry":["432","Light Abstraction","Apps Helper -","It simulates the presence of a"]},{"entry":[{},{},"Logic","lighting system, and abstracts"]},{"entry":[{},{},"Function","light control functionality, for"]},{"entry":[{},{},"Abstraction","controlling lighting."]},{"entry":["434","Thermostat","Apps Helper -","It simulates the presence of an"]},{"entry":[{},"Abstraction","Logic","air conditioning system, and"]},{"entry":[{},{},"Function","abstracts thermostat control"]},{"entry":[{},{},"Abstraction","functionality, for controlling"]},{"entry":[{},{},{},"thermostats."]},{"entry":["436","Video Surveillance","Apps Helper -","It simulates the presence of a"]},{"entry":[{},{},"Logic","video surveillance system, and"]},{"entry":[{},{},"Function","abstracts video control"]},{"entry":[{},{},"Abstraction","functionality, for controlling"]},{"entry":[{},{},{},"video devices."]},{"entry":["438","DMS - Digital","Apps Helper -","It is a software module that"]},{"entry":[{},"Media Server","Logic","acts as a facilitator for the"]},{"entry":[{},"Extender","Function","implementation of applications"]},{"entry":[{},{},"Abstraction","whose goal is to provide"]},{"entry":[{},{},{},"multimedia content to devices"]},{"entry":[{},{},{},"that request it."]},{"entry":[{},{},{},"It may implement the following"]},{"entry":[{},{},{},"functions:"]},{"entry":[{},{},{},"Browse"]},{"entry":[{},{},{},"Access Content"]},{"entry":[{},{},{},"Select Content"]},{"entry":[{},{},{},"Send Content"]},{"entry":[{},{},{},"Progressive Download"]},{"entry":[{},{},{},"MIME type reader"]},{"entry":[{},{},{},"Bit Rates adapter"]},{"entry":[{},{},{},"Encoding type (CBR, VBR)"]},{"entry":[{},{},{},"Resolution Set"]},{"entry":[{},{},{},"Frame Rate Set"]},{"entry":[{},{},{},"Aspect Ratio Set (CIF, QCIF,"]},{"entry":[{},{},{},"QVGA . . . )"]},{"entry":[{},{},{},"and others."]},{"entry":["440","DMC - Digital","Apps Helper -","The Digital Media Controller"]},{"entry":[{},"Media Controller","Logic","Extender is a software module"]},{"entry":[{},"Extender","Function","that acts as a facilitator for the"]},{"entry":[{},{},"Abstraction","implementation of applications"]},{"entry":[{},{},{},"whose goal is to control"]},{"entry":[{},{},{},"multimedia content to devices"]},{"entry":[{},{},{},"that provide them."]},{"entry":[{},{},{},"It may implement the following"]},{"entry":[{},{},{},"functions:"]},{"entry":[{},{},{},"Browse"]},{"entry":[{},{},{},"Access Content"]},{"entry":[{},{},{},"Select Content"]},{"entry":[{},{},{},"Get Content"]},{"entry":[{},{},{},"Volume Control"]},{"entry":[{},{},{},"Content Control (Play,"]},{"entry":[{},{},{},"Pause, Stop, Skip, Seek)"]},{"entry":[{},{},{},"and others."]},{"entry":["442","DMR - Digital","Apps Helper -","It is a software module that"]},{"entry":[{},"Media Renderer","Logic","acts as a facilitator for the"]},{"entry":[{},"Extender","Function","implementation of applications"]},{"entry":[{},{},"Abstraction","whose goal is to request"]},{"entry":[{},{},{},"multimedia content to devices"]},{"entry":[{},{},{},"that provide them."]},{"entry":[{},{},{},"It may implement the following"]},{"entry":[{},{},{},"functions:"]},{"entry":[{},{},{},"Browse"]},{"entry":[{},{},{},"Access Content"]},{"entry":[{},{},{},"Select Content"]},{"entry":[{},{},{},"Bit Rates adapter"]},{"entry":[{},{},{},"Encoding type (CBR, VBR)"]},{"entry":[{},{},{},"Resolution Set"]},{"entry":[{},{},{},"Frame Rate Set"]},{"entry":[{},{},{},"Aspect Ratio Set (CIF, QCIF,"]},{"entry":[{},{},{},"QVGA . . . )"]},{"entry":[{},{},{},"and others."]},{"entry":["444","SIP Server","Apps Helper -","It hosts the application"]},{"entry":[{},{},"Logic","responsible for receiving the"]},{"entry":[{},{},"Function","SIP requests from a SIP UA,"]},{"entry":[{},{},"Abstraction","and on reception returns a"]},{"entry":[{},{},{},"response to the request back"]},{"entry":[{},{},{},"to the SIP User Agent (UA)."]},{"entry":["446","SIP Proxy","Apps Helper -","It implements the main"]},{"entry":[{},{},"Logic","features required for a SIP"]},{"entry":[{},{},"Function","PROXY in order to route"]},{"entry":[{},{},"Abstraction","requests to the user's current"]},{"entry":[{},{},{},"location, authenticate and"]},{"entry":[{},{},{},"authorize users for services,"]},{"entry":[{},{},{},"implement provider call-routing"]},{"entry":[{},{},{},"policies, and provide features"]},{"entry":[{},{},{},"to users."]},{"entry":["448","SIP UA","Apps Helper -","It implements a logical network"]},{"entry":[{},{},"Logic","end-point used to create or"]},{"entry":[{},{},"Function","receive SIP messages and"]},{"entry":[{},{},"Abstraction","manage a SIP session, it"]},{"entry":[{},{},{},"helps manage:"]},{"entry":[{},{},{},"Incoming Audio\/Video Calls"]},{"entry":[{},{},{},"Outgoing Audio\/Video Calls"]},{"entry":[{},{},{},"Text Messages"]},{"entry":[{},{},{},"Supplementary Telephony"]},{"entry":[{},{},{},"Services"]},{"entry":[{},{},{},"Presence Information"]},{"entry":[{},{},{},"Voicemail Functionalities"]},{"entry":[{},{},{},"and other functions."]},{"entry":["450","Web GUI","User","It implements a graphical"]},{"entry":[{},{},"Interface","interface for interacting with"]},{"entry":[{},{},{},"the service platform using"]},{"entry":[{},{},{},"web-based protocols."]},{"entry":["452","Voice UI","User","It implements the User"]},{"entry":[{},{},"Interface","Interface for interaction with"]},{"entry":[{},{},{},"the service platform through"]},{"entry":[{},{},{},"voice commands"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"The user interfaces  and  may provide configuration, inspection, and analysis functions to an administrator of the devices . To that end, the user interfaces  and  may provide mechanisms for requesting or carrying out the service installation, uninstallation, configuration, monitoring, and activation\/deactivation tasks described in detail below with regard to .",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 5","b":["500","502","504","506"]},"Given the helper functions and the core extensions, the designer generates the open gateway framework for installation on a specific device (). The open gateway framework may take the form of an installation package communicated to the device manufacturer (). However, other forms of implementation and distribution of the open gateway framework may also be employed. The device manufacturer installs the open gateway framework on their device (), for example prior to shipping the device to a customer. Note that the open gateway framework typically remains on the device for the life of the device. However, the services (e.g., the management service) may be upgraded or changed, as may the helpers and core extensions, so there is never a need to wholly replace the open gateway framework.","The device manufacturer may also install selected services obtained from the designer of the open gateway framework, such as the management service . In some implementations, the management service  may always be present and may not be uninstallable, due to its role in handling communications and configuration commands received from the management system .",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 6","b":["600","212","212","602","332","304","212","604","212","210","212","210","606","608","212","334"]},"The service management logic  may also check which services are installed on the service platform () and check for updates (). If there are changes or updates for the services, the service management logic  may determine whether an Install, Uninstall, or Activate\/Deactivate action is needed. For an Install, the service management logic  may retrieve the new service or service version (e.g., from the content server ) () and communicate the new service or service version to the service platform (e.g., to the service management service , which executes the install) (). For an Uninstall, the service management logic  determines that a service should be removed () and communicates an instruction to the service platform (e.g., to the service management service , which executes the uninstall) (). For an Activate or Deactivate, the service management logic  determines the service to activate or deactivate () and communicates an activation\/deactivation instruction to the service platform (e.g., to the service management service , which executes the instruction) ().",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 7","b":["700","216","102","118","100","216","218","702","218","216","704","706","216"]},"The application store logic  communicates the filtered service list to the service platform () and responds to a service selection. The application store logic  receives payment information from the service platform (), such as credit card or debit card information and attempts to validate the payment information with the BSS  (). When the payment information does not validate, then the application store logic  communicates an error message back to the service platform (). Otherwise, the service delivery logic  returns a success message to the service platform () and arranges communication of the newly purchased service to the service platform (). In other scenarios, discussed below, service installation or upgrades may be initiated by either the service platform or the management system .","The configuration message flows discussed in  refer to interaction of a device and its service platform (e.g., the open gateway framework ) with other systems, including the management system , content server , and service store server . Configuration messages typically flow across the communication interface (e.g., the communication interface ) of a given device, and are routed by the communication protocol to the service platform (e.g., the service platform ). In particular, the incoming messages may be delivered directly to the management service  to facilitate the remote management and control of the service platform by the management system . Any service platform on any device may process the configuration messages discussed below.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 8","b":["800","105","118","103","802","118","118","102","804","102","102","806"]},"The service platform executes a Hypertext Transport Protocol (HTTP) Get on the URL to download the service () from the content server . The content server  returns a message () preferably in a signed package format, that includes the installation file in the payload and install command in the command list. Other file transfer options may be employed, including File Transfer Protocol (FTP) or remote file system access. In addition to the installation file, the content server  returns a datamodel of parameters for the service to the service platform (). The service platform locally maintains the databases in connection with running the services. The management system  may exercise remote control over the service parameters represented in the datamodel.","The service platform returns a download response message to the management system  (). The download response message may include parameters such as download and installation status (e.g., status=1 if the service has been downloaded and correctly installed), start time, and complete time. When the service platform installs the service, the service platform communicates an Inform message to the management system  (). The Inform message may convey to the management system  that the service has been successfully installed and is up and running. The management system  returns an Inform Response acknowledgement ().","In general, the service platform may send an Inform message to the management system  after each operation. The Inform message communications results (e.g., successes, failures, or other data). When the management system  receives an Inform message from a device, the management system  updates a record for that device identified in the Inform message. The management system  thereby keeps configuration information on the device in synchronism with the configuration maintained on the management system .","The management system  may then communicate a parameter setting message to the service platform (). The parameter setting message may request notifications about the service, such as active notification (i.e., \u201cnotification=2\u201d) about the installation status of the application. The service platform responds with a SetParametersAttributes Response message () to acknowledge receipt of the parameter setting message.","The \u201cnotification\u201d parameter is used to direct the service platform to send, or not send, to the management system  notifications about service installation changes (e.g., installation or uninstallation). In one implementation, possible values for the notification parameter include:","0=no notification should be sent;","1=passive notification. The service platform (e.g., using the management service ) sends a notification only when the next Inform message is required to be sent (e.g., for timeout, device reboot, connection request from the management system , or other reasons); and","2=active notification. The management service  sends a notification as soon as the service status changes.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 9","b":["900","118","902","118","118","904","906","118","118","102","908","102"]},"The management system  may communicate a download message to the service platform (). The service platform executes a Hypertext Transport Protocol (HTTP) Get on the URL to download the service () from the content server . The content server  returns a message () preferably in a signed package format, that includes the upgrade file in the payload and upgrade command in the command list The content server  returns also a datamodel of parameters (if the new version has a different datamodel) for the service to the service platform ().","The service platform returns a download response message to the management system  (). The download response message may include parameters such as download status (e.g., success or fail), start time, and complete time. When the service platform installs the upgraded service, the service platform communicates an Inform message to the management system  (). The Inform message may convey to the management system  that the upgrade has been successfully installed and is up and running. The management system  returns an InformResponse acknowledgement ().","The management system  may then communicate a parameter setting message to the service platform (). The parameter setting message may request notifications about the service, such as active notification about the installation status of the application. The service platform  responds with a SetParametersAttributes Response message () to acknowledge receipt of the parameter setting message.",{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 10","b":["1000","102","105","102","1002","1004","120","120","1006","120","1006"]},"The service platform returns a download response message to the management system  (). The download response message may include parameters such as download status (e.g., status=1 if the service has been downloaded and correctly installed), start time, and complete time. When the service platform installs the upgraded service, the service platform communicates an Inform message to the management system  (). The Inform message may convey to the management system  that the service has been successfully installed and is up and running. The management system  returns an InformResponse acknowledgement ().","The management system  may then communicate a parameter setting message to the service platform (). The parameter setting message may request notifications about the service, such as active notification about the installation status of the application. The service platform responds with a SetParametersAttributes Response message () to acknowledge receipt of the parameter setting message.",{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 11","b":["1100","102","102","1102","1104","120","120","1106","120","1106"]},"The service platform returns a download response message to the management system  (). The download response message may include parameters such as download status (e.g., status=1 if the service has been downloaded and correctly installed), start time, and complete time. When the service platform installs the upgraded service, the service platform communicates an Inform message to the management system  (). The Inform message may convey to the management system  that the service upgrade has been successfully installed and is up and running. The management system  returns an InformResponse acknowledgement ().","The management system  may then communicate a parameter setting message to the service platform (). The parameter setting message may request notifications about the service, such as active notification about the installation status of the application. The service platform responds with a SetParametersAttributes Response message () to acknowledge receipt of the parameter setting message.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 12","b":["1200","102","1202","1204","120","120","1206"]},"The service platform returns a download response message to the management system  (). The download response message may include parameters such as download status (e.g., success or fail), start time, and complete time. When the service platform executes the command and uninstalls the service, the service platform communicates an Inform message to the management system  (). The Inform message may convey to the management system  that the service has been successfully uninstalled and is no longer running. The management system  returns an InformResponse acknowledgement ().",{"@attributes":{"id":"p-0078","num":"0077"},"figref":"FIG. 13","b":["1300","103","102","1302","102","102","1304"]},{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 14","b":["1400","102","102","1402","1404"]},{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 15","b":["1500","102","1502","103","1504","102"]},"For service configuration, the management system  sends a parameter setting message that specifies that the service platform  should set a specific parameter to a specific value (). The service platform  returns an acknowledgement (), optionally indicating success or failure at setting the parameter.",{"@attributes":{"id":"p-0082","num":"0081"},"figref":"FIG. 16","b":["1600","1600","1602","1604","1606","1608","1610","1612"]},"The signed package format may be used to securely download files. The Table: Command Names shows the command names that may be used to support the install, uninstall, upgrade, and other functionalities of the management system  as described above. Alternatively, the management system  may define its own commands in the 1000-9999 range provided for vender specific commands.",{"@attributes":{"id":"p-0084","num":"0083"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Command Names"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Type","Command","Type","Command"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"4","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0","End","1","Extract Files"]},{"entry":["2","Extract Versioned Files","3","Add File"]},{"entry":["4","Add Versioned File","5","Remove File"]},{"entry":["6","Remove Versioned File","7","Remove Sub-Tree"]},{"entry":["8","Move File","9","Move Versioned File"]},{"entry":["10","Version","11","Description"]},{"entry":["12","Recoverable Timeout","13","Unrecoverable Timeout"]},{"entry":["14","Initial Timeout","15","Initial Activity Timeout"]},{"entry":["16","Reboot","17","Format File System"]},{"entry":["18","Minimum Version","19","Maximum Version"]},{"entry":["20","Role","21","Minimum Non-Volatile"]},{"entry":[{},{},{},"Storage"]},{"entry":["22","Minimum Non-Volatile","23","Reserved"]},{"entry":[{},"Storage"]},{"entry":["24","Reserved","25","Required Attributes"]},{"entry":["1000-9999","Vendor Specific Commands"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0085","num":"0084"},"figref":["FIG. 17","FIGS. 8-15"],"b":["1700","334","103","334","102","1702","334","332"]},"For example, the management service  may execute an install or upgrade action by receiving a new service or service version () and installing the new service version () as explained in detail above with reference to . As another example, the management service  may execute an uninstall of a service by determining, from the received command which service to uninstall () and performing the uninstall process () as explained in detail above with reference to . The management service  also handles activation\/deactivation of services as explained above with reference to . To that end, the management service  determines the service involved, and whether to activate or deactivate the service (), then executes the activation or deactivation (). In addition, the management service  handles service monitoring and configuration as explained in more detail with regard to . The management service  determines whether the received command requests monitoring or configuration, and which service is involved (). The management service  then executes the monitoring or configuration command on the identified service ().","The open gateway framework provides an open modular platform for service creation and execution that is device independent. The open gateway framework thereby facilitates less complex and faster application development, as well as remote management. The open gateway framework provides a modular software layer installed on a device, through which the open gateway framework permits service and application communication with device drivers and resources.","As an overview, the open gateway framework provides a package of functionality (e.g., the helpers) on top of the OGSi core (as well as extensions to the core), so that a new service can leverage any function in the package. The package may contain the most commonly used functional blocks from which new services are easily created. For example, a new service does not need to rewrite a home automation driver, but can leverage the driver functions already present in the pre-configured package of functionality.","Regardless of gateway, every service uses functions provided in the package, and the package translates those function calls into different specific operating system or driver calls, depending on the underlying hardware in the device. In this way, the services can be installed freely on any hardware platform without changing, as long as the new hardware platform has an open gateway framework installed. The open gateway framework abstracts the hardware layer to allow portable application development. In case of hardware changes, a specific version of the open gateway framework for the hardware will be released to support execution of already created services on the hardware.","The open gateway framework may include any combination of features, including: a software layer that leverages the OSGi Framework for service creation and execution, which allows application and service decoupling from device base software and hardware, such as the operating system that is tightly coupled to device hardware; a management platform, for remote device monitoring and management that is fully integrable with telecommunications service provider OSS\/BSS systems; an application repository, for application publishing by the telecommunications service provider and third parties, as well as an application store through which a user may browse a catalog and choose the desired service; and an API for application development, with custom extensions to fulfill telecommunications service provider requirements.","One strength of the open gateway framework is that each service may be installed, updated and managed independently from the other services and from the device base software and hardware (e.g. the operating system). The services maybe developed by the telecommunications service provider or any other third party, according to any business model the telecommunications service provider wants to realize. The open gateway framework facilitates complete customer support for remote installation\/uninstallation of new services, and activation\/deactivation of services or services monitoring and configuration.","The logic and processing described above may be encoded or stored in a machine-readable or computer-readable medium such as a compact disc read only memory (CDROM), magnetic or optical disk, flash memory, random access memory (RAM) or read only memory (ROM), erasable programmable read only memory (EPROM) or other machine-readable medium as, for examples, instructions for execution by a processor, controller, or other processing device. The medium may be implemented as any device or tangible component that contains, stores, communicates, propagates, or transports executable instructions for use by or in connection with an instruction executable system, apparatus, or device. Alternatively or additionally, the logic may be implemented as analog or digital logic using hardware, such as one or more integrated circuits, or one or more processors executing instructions, or in software in an application programming interface (API) or in a Dynamic Link Library (DLL), functions available in a shared memory or defined as local or remote procedure calls, or as a combination of hardware and software.","In other implementations, the logic may be represented in a signal or a propagated-signal medium. For example, the instructions that implement the logic of any given program may take the form of an electronic, magnetic, optical, electromagnetic, infrared, or other type of signal. The systems described above may receive such a signal at a communication interface, such as an optical fiber interface, antenna, or other analog or digital signal interface, recover the instructions from the signal, store them in a machine-readable memory, and\/or execute them with a processor.","The systems may include additional or different logic and may be implemented in many different ways. A processor may be implemented as a controller, microprocessor, microcontroller, application specific integrated circuit (ASIC), discrete logic, or a combination of other types of circuits or logic. Similarly, memories may be DRAM, SRAM, Flash, or other types of memory. Parameters (e.g., conditions and thresholds) and other data structures may be separately stored and managed, may be incorporated into a single memory or database, or may be logically and physically organized in many different ways. Programs and instructions may be parts of a single program, separate programs, implemented in libraries such as Dynamic Link Libraries (DLLs), or distributed across several memories and processors.","While various embodiments of the invention have been described, it will be apparent to those of ordinary skill in the art that many more embodiments and implementations are possible within the scope of the invention. Accordingly, the invention is not to be restricted except in light of the attached claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The open gateway framework may be better understood with reference to the following drawings and description. In the figures, like reference numerals designate corresponding parts throughout the different views.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 17"}]},"DETDESC":[{},{}]}
