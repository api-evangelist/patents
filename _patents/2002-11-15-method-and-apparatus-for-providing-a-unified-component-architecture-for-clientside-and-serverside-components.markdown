---
title: Method and apparatus for providing a unified component architecture for client-side and server-side components
abstract: One embodiment of the present invention provides a system that facilitates deploying components on a client. During operation, the system establishes a communication session through a network connection between the client and a server. Next, the system migrates components from the server to the client, wherein the components provide services and are able to use services provided by other components. Finally, the client installs the components on the client, thereby allowing the components to provide services on the client. Note that by supporting deployment of components on the client in this way, the system facilitates a unified component architecture across the client and the server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07617273&OS=07617273&RS=07617273
owner: Sun Microsystems, Inc.
number: 07617273
owner_city: Santa Clara
owner_country: US
publication_date: 20021115
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["1. Field of the Invention","The present invention relates to component-based programming architectures. More specifically, the present invention relates to a method and an apparatus for providing a unified component architecture for both client-side and server-side programming components.","2. Related Art","As networked computing devices, such as personal digital assistants (PDAs) and cell phones, grow increasingly more popular, developers are beginning to deploy a large number of services to operate with these portable computing devices. Unfortunately, developing such services involves writing complicated client-side and server-side software. Dealing with the complexity of this software requires a large amount of programmer time, which results in considerable cost and delay.","Component-based architectures, such as the Enterprise Java Bean (EJB) architecture developed by SUN Microsystems, Inc. of Santa Clara Calif., have been developed to manage the complexity involved in developing server-based middleware applications. A component-based architecture allows an application to be decomposed into dynamic \u201ccomponents\u201d that interact with each other through well-defined interfaces. This allows programmers to work independently from each other, and also makes applications easier to maintain and test. Moreover, components are persistent, which means they can be reused again in different applications without having to be recompiled.","For example, referring the , a middle-tier server  supports an EJB container , which enables various EJB instances - to execute. For example, EJB container  can provide services to manage security and system resources for EJB instances -.","Similarly, components can also be deployed within Enterprise Information System (EIS) tier server  to provide services to components in middle-tier server . For example, referring to , EJB instance  from middle-tier server  makes use of services provided by EJB instance  within EJB container  on EIS-tier server . EJB instance  itself makes use of services provided by other EJB instances  and  within the same EJB container .","An application (or applet)  running on a client  can be configured to access services provided by the components on servers  and . For example, application  within client  can contain code that marshals method invocations before they are sent to middle-tier server . At the same time, web services application  can contain corresponding code that unmarshals the method invocations before they are sent to the components on middle-tier server .","Note that application , web services application  and components within EJB container  are typically developed by different programmers using different programming paradigms. Hence, it is typically a challenging task to get these programmers to effectively collaborate to enable application  to communicate with components in middle-tier server .","Furthermore, it is a difficult task to deploy a service across multiple clients and servers. Capabilities can vary greatly between different client devices. Moreover, characteristics of network connections between clients and server can vary. Both of these factors can influence the decision about what type of functionality should be deployed to a given client.","Hence, what is needed is a method and an apparatus, which allows client applications to make use of services provided by components without the above-described problems.","One embodiment of the present invention provides a system that facilitates deploying components on a client. During operation, the system establishes a communication session through a network connection between the client and a server. Next, the system migrates components from the server to the client, wherein the components provide services and are able to use services provided by other components. Finally, the client installs the components on the client, thereby allowing the components to provide services on the client. Note that by supporting deployment of components on the client in this way, the system facilitates a unified component architecture across the client and the server.","In a variation on this embodiment, migrating components from the server to the client involves sending information to the server specifying capabilities of the client device, and then allowing the server to identify components to migrate to the client based upon the capabilities of the client device, and based on capabilities of the network connection between the client and the server. It also involves transferring the identified components from the client to the server.","In a further variation, transferring identified components from the client to the server involves first receiving a list of components to migrate, and then transferring components in the list from the server to the client.","In a variation on this embodiment, migrating components from the server to the client involves sending information to the server specifying the status of currently installed components on the client, thereby allowing the server to identify components to migrate to the client based upon the status of currently installed components. It also involves transferring identified components from the server to the client.","In a variation on this embodiment, the status of currently installed components on the client includes version information for the currently installed components. The server uses this version information to determine if there exist updated versions of currently installed components on the client. This allows the server to migrate the updated versions to the client, if such updated versions exist.","In a variation on this embodiment, components to be migrated are stored in a database, so that migration takes place as part of normal database synchronization between the client and the server.","In a variation on this embodiment, migrating components from the server to the client involves migrating components when the network connection between the client and the server has available capacity.","In a variation on this embodiment, a given component includes a deployment descriptor specifying conditions used to determine whether the given component should be deployed on the client or the server.","In a variation on this embodiment, prior to establishing the communication session between the client and the server, the system updates a client virtual machine upon which the components execute, if the currently installed client virtual machine is outdated.","In a variation on this embodiment, prior to establishing the communication session between the client and the server, the system updates a container within which the components execute on the client, if the container is outdated.","In a variation on this embodiment, the system additionally synchronizes data between the client and the server.","In a variation on this embodiment, the client is a wireless device, and the network connection between the client and the server is a wireless network connection.","The following description is presented to enable any person skilled in the art to make and use the invention, and is provided in the context of a particular application and its requirements. Various modifications to the disclosed embodiments will be readily apparent to those skilled in the art, and the general principles defined herein may be applied to other embodiments and applications without departing from the spirit and scope of the present invention. Thus, the present invention is not intended to be limited to the embodiments shown, but is to be accorded the widest scope consistent with the principles and features disclosed herein.","The data structures and code described in this detailed description are typically stored on a computer readable storage medium, which may be any device or medium that can store code and\/or data for use by a computer system. This includes, but is not limited to, magnetic and optical storage devices such as disk drives, magnetic tape, CDs (compact discs) and DVDs (digital versatile discs or digital video discs), and computer instruction signals embodied in a transmission medium (with or without a carrier wave upon which the signals are modulated). For example, the transmission medium may include a communications network, such as the Internet.","Unified Component Architecture",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 1B","b":["123","121","122","121","122","123","123"]},"As was discussed above with reference to , server  supports EJB container  in which various EJB instances - can execute. Moreover, EJB container  and EJB instances - can access non-volatile storage within data store .","Similarly, server  supports EJB container  in which various EJB instances - can execute, and EJB container  and EJB instances - can access non-volatile storage within data store .","Unlike existing client computer systems, client  illustrated in  supports a mobile Java Bean (mJB) container  in which various mJB instances - can execute. mJB container  and mJB instances - can access non-volatile storage within data store .","Note that mJB container  is similar to existing EJB containers, except that it may run on a computing device with limited resources, such as a cell phone or a Personal Digital Assistant (PDA). Hence, mJB container  is only able to implement a limited subset of the services provided within an EJB container. Similarly mJB instances - are similar to EJB instances, except that mJB instances are able to operate using the limited resources and services provided by client  and mJB container . Note that the system can dynamically determine at run-time whether a specific component (EJB) can be migrated to client  to execute as an mJB instance.","Note the some components have to reside on client , while other components have to reside on server , while yet other components may reside on either client  or server . For example, some components may require access to an Application Programming Interface (API) for a user interface, which is only available on client , while other components require access to an API for a database, which is only available on server . Yet other components, which do not access device-specific APIs, can reside on either server  or client , if adequate resources are available on client .","The system determines whether to migrate a specific component to client  after considering such factors as the capabilities of client , and the capabilities of the network connection between client  and server . This process of selectively migrating components to client  is described in more detail below with reference to .","Client",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 2","b":["123","123","208","123","123","123","206","204","123","206","204","121","204"]},"After JVM  is able to execute, the system runs boot loader for Java , which causes mJB container  to be loaded (or updated if it is already loaded).","mJB container  provides support for mJB instances -, which may involve migrating mJB instances - from server  to mJB container  as is described below with reference to .","Process of Initializing Client",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 3","b":["123","208","123","204","302","206","204","121"]},"Next, the system runs boot loader for Java  (step ). Boot loader for Java  updates mJB container  as well as container provided beans, if such updates are available on server .","Finally, the system runs the synchronization portion of mJB container  (step ). This synchronization portion migrates components from server  to mJB container . It also updates components and within mJB container  and also updates data, if such updates are necessary. This process is described in more detail below with reference to .","Note that native booter  and boot loader for Java  are executed only during initialization of client , for example after client  is powered on. In contrast, the synchronization portion of mJB container  can execute periodically during system operation to dynamically migrate components to client l and update data items on client . This allows components to be dynamically migrated from server  to client  as they are required.","Process of Component Migration",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 4","FIG. 3"],"b":["306","102","123","121","402","123","121","404","123","123"]},"Next, server  uses this information to determine which components can be migrated to the client  and which components need to reside on server  (step ). Server  also determines whether data items in client  need to be updated.","In one embodiment of the present invention, server  examines a deployment descriptor for a given component to determine whether the given component can be migrated to client . This deployment descriptor can specify a number of conditions, such as conditions about: network bandwidth and usage, client device capabilities, resource availability within the client device, a user's preferences and usage of services, and features required to execute components. These conditions must be met in order to migrate the given component to the client. For example, the deployment descriptor can specify that the client must have a minimum amount of memory and that there must be a minimum communication bandwidth between the client and the server before the given component can be migrated to the client.","Next, server  sends a list of components that are available to be migrated to client  (step ). This list can also specify data that needs to be updated on client . This enables client  and server  to negotiate in order to decide when to transfer components and data to client  (step ). Note that certain components may need to be migrated right away, whereas other components can be migrated at a later time, when network bandwidth becomes available.","Next, server  sends components and updated data to client  (step ). Note that a group of related components may have to be transferred at the same time. In this case, client  and server  must coordinate this group transfer.","Finally, client  installs the components and starts (or restarts) services provided by the components (step ). Client  also updates any data items that need to be updated.","Note that in one embodiment of the present invention, components to be migrated are stored in a database, so that migration takes place as part of normal database synchronization between client  and server .","The foregoing descriptions of embodiments of the present invention have been presented for purposes of illustration and description only. They are not intended to be exhaustive or to limit the present invention to the forms disclosed. Accordingly, many modifications and variations will be apparent to practitioners skilled in the art. Additionally, the above disclosure is not intended to limit the present invention. The scope of the present invention is defined by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":[{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
