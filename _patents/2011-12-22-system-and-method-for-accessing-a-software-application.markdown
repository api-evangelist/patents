---
title: System and method for accessing a software application
abstract: Systems and methods for managing a user identity on a mobile device are provided. The system comprises the mobile device comprising a user agent and a client application, the user agent and the client application in communication with each other. The system further comprises an identity provider in communication with the mobile device, and a client service in communication with the mobile device. The user agent is configured to communicate with the identity provider and retrieve the user identity for the client application, and the client application is configured to transmit the user identity to the client service.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08689299&OS=08689299&RS=08689299
owner: BlackBerry Limited
number: 08689299
owner_city: Waterloo
owner_country: CA
publication_date: 20111222
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","DETAILED DESCRIPTION OF THE DRAWINGS"],"p":["The following relates to systems and methods for accessing a software application.","A mobile device can be used for running various types of software applications. Examples of software applications include social networking applications, communication applications, advertising applications and banking applications. Several client applications may be loaded onto a mobile device, which makes the mobile device a resourceful tool.","To access an application, a user may provide credential information to the application, for example, a username and a password. If there are many applications, the user may need to remember the credential information for each application and provide the credential information to each application.","Computing devices are used to operate many different types of applications, also called software programs. The terms \u201capplication\u201d, \u201csoftware application\u201d, \u201csoftware program\u201d, and \u201cprogram\u201d are interchangeably used herein. Many applications require a user to sign-in, register, or log-in to an account. Typically, a user identification (e.g. a user name) and a password are used to verify that the correct user is logging into a particular account. If there are more applications that are used on a mobile device, then a user is required to remember more user identifications and passwords. This can be troublesome. Further, if a user would like to use multiple applications upon turning on the device, then the user typically needs to manually-enter in a user identification and a password for each of the applications. This is a time consuming process.","The management of user identifications and passwords becomes more cumbersome when a user owns multiple mobile devices which may operate common applications. When using multiple mobile devices, the user may need to sign-on to the same application on each mobile device. Thus, the user needs to sign-on multiple times. This process is also time consuming and inconvenient.","In addition, user identity information (also referred herein as user profile data) is often used to register a new user onto an application account, or to sign a user into an application having an existing account. The user identity information may be personal information and a user may not wish to have the personal information provided to entities that are not trusted. The user identity information can, for example, potentially be used to commit identity fraud. When a user repetitively provides this personal information, it is possible that an adversary person or program has an increased chance to obtain the user identity information.","To address one or more of the above issues, turning to , the proposed systems and methods provide a computing device and another computing device both in communication with a server  through a network . The device may belong to User A, and the other device may belong to User B. There may be other computing devices that are in communication with the server .","As the devices and may have similar software and hardware components, for clarity, some of the components are referred with the same reference numeral having a suffix \u2018a\u2019 for those components in device , or a suffix \u2018b\u2019 for those components in device ","Referring to software components on the device , a user agent is in communication with an operating system , an application , and a memory module for storing keys and credentials. The user agent communicates with the application through an application programming interface (API) . It can be appreciated that although one application is shown on the device in , there may be many applications, each able to communicate with the user agent through an API.","The user agent manages the storage and retrieval of credential information used to access the one or more applications on the device . The credential information of the one or more applications is stored in a key store in the memory module . The user agent is authorized to retrieve the key store and to retrieve the credential information from the key store . The user agent provides the retrieved credential information to the corresponding application through the API, and the application uses the credential information to allow a user to automatically access or sign into the application. For example, the user agent retrieves the credential information to access the application from the key store . The user agent then provides this information to the application through the API ","The user agent is activated through the operating system . After a user has signed into the operating system , the user agent is activated. In another example embodiment, after signing into the operating system , the user further signs into the user agent to activate the user agent . A user, for example, signs into the operating system or the user agent by entering a password or a username, or both. This may, for example, be considered to be the \u201csingle sign-on\u201d. After the user agent is activated, it is able to retrieve and store credentials in the key store ","It can be appreciated that the one or more applications, for example, application , may include third party applications and may pose a security risk. For example, an application may access personal information or credential information corresponding to another application on the computing device , without the user's consent or knowledge. To address this risk, the credential information, which is used to access the one or more applications, is centrally stored in the key store . The user agent is able to store and retrieve the credential information in the key store for each of the one or more applications.","Similar components exist in the other device . Particularly, the user agent communicates with an operating system , an application , and a memory module which stores the key store . The user agent interacts with the application through an API ","A copy of the key store for User A and a copy of the key store for User B are stored in a memory module  on the server . In particular, the key store for User A  on the server  is identical or similar to the key store . Similarly, the key store for User B  on the server  is identical or similar to the key store ","It is recognized that a single user may have multiple devices and the user may update the credentials for an application on one device. The system described herein stores the updated credentials on the server  as well, and propagates the updated credentials to other devices belonging to the same user. Therefore, when the user accesses the same application on a different device, the updated credentials can be used to log into or access the same application.","It can be appreciated that the systems and methods described herein allow for a single sign-on process into multiple applications while providing security of the credential information.","Turning to ), example components are shown in the key store on the device for a certain user (e.g. User A). Each application is associated with an application identification (ID) and credential information for accessing the application. This information for the certain user is stored on the key store as well as on the key store  on the server .","For example, on the key store , there is stored an ID for application A  and a corresponding credential for application A . There is also stored an ID for application B  and a corresponding credential for application B . There is also a time stamp  indicating when the key store , or information therein, was last updated.","Referring to ), similar example components are shown in the key store  on the server . There is stored an ID for application A  and a corresponding credential for application A . These may correspond to the components  and , respectively. There is also stored an ID for application B  and a corresponding credential for application B . These may correspond to the components  and , respectively. There is also a time stamp  indicating when the key store , or information therein, was last updated.","It can be appreciated that the data or components stored in the key store and key store , may be identical or may be different. If the data between the device and the server  have been synchronized, the data in the key stores and  may be identical. However, if the data on the device is updated first before the data on the server , or if the data on the server  is updated before the data on the device , then the data in the key stores and  may be different.","A time stamp is used to indicate which key store is most up to date. The time stamp may also indicate that a key store (e.g. on a device or on a server ) is not the most recently updated copy of the key store. It can also be appreciated that the time stamp  may be different or identical to the time stamp .","In another example embodiment, another indicator, not necessarily a time stamp, can be used to indicate which copy of the key store is most up to date. The indicator, for example, can be a Boolean value or a flag.","It can be appreciated that the credential information used to access an application may be in various formats and may include different types of data. Non-limiting examples of such credential information include: a password, a username, a cryptographic key, an identification value, a serial number, a PIN number, and a value related to the device or to the user.","In an example embodiment, the key stores (e.g. , , , ) are encrypted. This helps to prevent credential information from being accessed by an attacker. For example, when retrieving and storing credential information in a key store, the key store is decrypted to access the credential information and then encrypted again. In an example embodiment, the indicator or time stamp is not encrypted in the key store. This, for example, allows a user agent to determine whether the key store is up to date without having to decrypt the key store. In another example embodiment, the indicator or time stamp is encrypted with the key store. This, for example, prevents an attacker from possibly determining whether an encrypted key store is most up to date.","Turning to , an example configuration shows a user owning or having access to multiple devices. For example, User A  is shown to be owning or having access to devices and . Both of the devices and are in communication with the server  through the network . It can be appreciated that each of User A's devices (e.g. devices and ) and the server  have a copy of the key store for User A.","The following examples include communications between mobile or handheld devices, which will be commonly interchangeably referred to as a computing device, mobile device, or device hereinafter and referred to by numeral .","The mobile device  can be a multi-way communication device with advanced data communication capabilities including the capability to communicate with other mobile devices  or computer systems through a network of transceiver stations. The mobile device  may also have the capability to allow voice communication. Depending on the functionality provided by the mobile device , it may be referred to as a data messaging device, a multi-way pager, a cellular telephone with data messaging capabilities, a wireless Internet appliance, a tablet, a media player, an e-book reader, a laptop, a notebook, a gaming device, a navigation device, a personal computer, or a data communication device (with or without telephony capabilities). These are non-exhaustive examples, and other examples are within the scope of the present disclosure. The mobile device  can also be one that is used in a system that is configured for continuously routing all forms of pushed information from a host system  to the mobile device . One example of such a system will now be described making reference to .",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 4","FIG. 4"],"b":["25","10","26","26","20","10","25","25"]},"Message C in  represents an external message from a sender that is not directly connected to the host system , such as the user's mobile device , some other user's mobile device (not shown), or any user connected to the public or private network  (e.g. the Internet). Message C may include e-mail, voice-mail, event information, database updates, web-page updates or may represent a command message from the user's mobile device  to the host system . The host system  may comprise, along with the typical communication links, hardware and software associated with a computer network system, one or more wireless mobility agents, a TCP\/IP connection, a collection of data stores, (for example a data store for e-mail could be an off-the-shelf mail server like Microsoft Exchange\u00ae Server or Lotus Notes\u00ae Server), all within and behind a network firewall.","The mobile device  may be adapted for communication within wireless network  via wireless links, as required by each wireless network  being used. As an illustrative example of the operation for a wireless router  shown in , consider a data item A, repackaged in outer envelope B (the packaged data item A now referred to as \u201cdata item (A)\u201d) and sent to the mobile device  from an Application Service Provider (ASP) in the host system . Within the ASP is a computer program, similar to a wireless mobility agent, running on any computer in the ASP's environment that is sending requested data items from a data store to a mobile device . The mobile-destined data item (A) is routed through the network , and through the wireless routers  firewall protecting the wireless router  (not shown).","Although the above describes the host system  as being used within a networked environment, this is just one embodiment of one type of host service that offers push-based messages for a handheld wireless device that is capable of notifying and presenting the data to the user in real-time at the mobile device when data arrives at the host system.","By offering a wireless router  (sometimes referred to as a \u201crelay\u201d, \u201cmessage server\u201d, \u201cdata redirector\u201d, etc.), there are a number of major advantages to both the host system  and the wireless network . The host system  in general runs a host service that is considered to be any computer program that is running on one or more computer systems. The host service is said to be running on a host system , and one host system  can support any number of host services. A host service may or may not be aware of the fact that information is being channelled to mobile devices . For example an e-mail or message program  (see ) might be receiving and processing e-mail while an associated program (e.g. an e-mail wireless mobility agent) is also monitoring the mailbox for the user and forwarding or pushing the same e-mail to a wireless device . A host service might also be modified to prepared and exchange information with mobile devices  via the wireless router , like customer relationship management software. In a third example, there might be a common access to a range of host services. For example a mobility agent might offer a Wireless Access Protocol (WAP) connection to several databases.","Although the system is exemplified as operating in a multi-way communications mode, certain aspects of the system could be used in a \u201cone and one-half\u201d or acknowledgment paging environment, or even with a one-way paging system. In such limited data messaging environments, the wireless router  still could abstract the mobile device  and wireless network , offer push services to standard web-based server systems and allow a host service in a host system  to reach the mobile device  in many countries.","The host system  shown herein can have many methods when establishing a communication link to the wireless router . For one skilled in the art of data communications the host system  could use connection protocols like TCP\/IP, X.25, Frame Relay, ISDN, ATM or many other protocols to establish a point-to-point connection. Over this connection there are several tunnelling methods available to package and send the data, some of these include: HTTP\/HTML, HTTP\/XML, HTTP\/Proprietary, FTP, SMTP or some other proprietary data exchange protocol. The type of host systems  that might employ the wireless router  to perform push could include: field service applications, e-mail services, stock quote services, banking services, stock trading services, field sales applications, advertising messages and many others. This wireless network  abstraction is made possible by the wireless router , which implements this routing and push functionality. The type of user-selected data items being exchanged by the host could include: E-mail messages, events, meeting notifications, address entries, journal entries, personal alerts, alarms, warnings, stock quotes, news bulletins, bank account transactions, field service updates, stock trades, heart-monitoring information, vending machine stock levels, meter reading data, GPS data, etc., but could, alternatively, include any other type of message that is transmitted to the host system , or that the host system  acquires through the use of intelligent agents, such as data that is received after the host system  initiates a search of a database or a website or a bulletin board.","The wireless router  provides a range of services to make creating a push-based host service possible. These networks may comprise a Code Division Multiple Access (CDMA) network. These networks may also include a Groupe Special Mobile or the Global System for Mobile Communications (GSM) and General Packet Radio Service (GPRS) networks. These networks may also include existing and upcoming third-generation (3G) and fourth generation (4G) networks like EDGE, UMTS and HSDPA, LTE, Wi-Max etc. Some older examples of data-centric networks include, but are not limited to: the Mobitex Radio Network (\u201cMobitex\u201d) and the DataTAC Radio Network (\u201cDataTAC\u201d).","To be effective in providing push services for host systems , the wireless router  may implement a set of defined functions. It can be appreciated that one could select many different hardware configurations for the wireless router , however, many of the same or similar set of features would likely be present in the different configurations. The wireless router  may offer any one or more of the following features for host services: An addressing method so that mobile device  traffic can be addressed to a host system  without the need for the wireless network  to assign an identity to each host system ; An efficient and authenticated method for the host system  to initiate a communication connection to the wireless router  for the purposes of opening a communication tunnel to the one or more mobile devices  that the host system  wishes to communicate with; A reliable method for exchanging data between the host system  and the mobile device , in a manner consistent with the abilities of the wireless network ; Providing feedback to the host system  when data is delivered, which allows the host system to clean up any wireless delivery queues if necessary, or inform the original sender (user or program) that the data has been delivered to the mobile device ; Implementation of a wireless network  initiated push of services or data to a mobile device , from a wireless router ; and Connect to a wide range of wireless networks  and provide a way of tracking the user's location so that a \u2018follow you anywhere\u2019 solution can be provided.","An example configuration for the mobile device  is illustrated in . Referring first to , shown therein is a block diagram of an example embodiment of a mobile device . The mobile device  comprises a number of components such as a main processor  that controls the overall operation of the mobile device . Communication functions, including data and voice communications, are performed through a communication subsystem . The communication subsystem  receives messages from and sends messages to a wireless network . In this example embodiment of the mobile device , the communication subsystem  is configured in accordance with the GSM and GPRS standards, which are used worldwide. Other communication configurations that are equally applicable are the 3G and 4G networks discussed above. New standards are still being defined, but it is believed that they will have similarities to the network behaviour described herein, and it will also be understood by persons skilled in the art that the embodiments described herein are intended to use any other suitable standards that are developed in the future. The wireless link connecting the communication subsystem  with the wireless network  represents one or more different Radio Frequency (RF) channels, operating according to defined protocols specified for GSM\/GPRS communications.","The main processor  also interacts with additional subsystems such as a Random Access Memory (RAM) , a flash memory , a display , an auxiliary input\/output (I\/O) subsystem , a data port , a keyboard , a speaker , a microphone , a GPS receiver , short-range communications , and other device subsystems . As will be discussed below, the short-range communications  can implement any suitable or desirable device-to-device or peer-to-peer communications protocol capable of communicating at a relatively short range, e.g. directly from one device to another. Examples include Bluetooth\u00ae, ad-hoc WiFi, infrared, or any \u201clong-range\u201d protocol re-configured to utilize available short-range components. It will therefore be appreciated that short-range communications  may represent any hardware, software or combination of both that enable a communication protocol to be implemented between devices or entities in a short range scenario, such protocol being standard or proprietary.","Some of the subsystems of the mobile device  perform communication-related functions, whereas other subsystems may provide \u201cresident\u201d or on-device functions. By way of example, the display  and the keyboard  may be used for both communication-related functions, such as entering a text message for transmission over the network , and device-resident functions such as a calculator or task list.","The mobile device  can send and receive communication signals over the wireless network  after required network registration or activation procedures have been completed. Network access is associated with a subscriber or user of the mobile device . To identify a subscriber, the mobile device  may use a subscriber module component or \u201csmart card\u201d , such as a Subscriber Identity Module (SIM), a Removable User Identity Module (RUIM) and a Universal Subscriber Identity Module (USIM). In the example shown, a SIM\/RUIM\/USIM  is to be inserted into a SIM\/RUIM\/USIM interface  in order to communicate with a network. Without the component , the mobile device  is not fully operational for communication with the wireless network . Once the SIM\/RUIM\/USIM  is inserted into the SIM\/RUIM\/USIM interface , it is coupled to the main processor .","The mobile device  is typically a battery-powered device and in this example includes a battery interface  for receiving one or more rechargeable batteries . In at least some embodiments, the battery  can be a smart battery with an embedded microprocessor. The battery interface  is coupled to a regulator (not shown), which assists the battery  in providing power V+ to the mobile device . Although current technology makes use of a battery, future technologies such as micro fuel cells may provide the power to the mobile device .","In the examples described herein, the mobile device  comprises or otherwise has access to a cryptographic processor  which can be embodied in hardware, software, or a combination of the two. The cryptographic processor  may interact with a user agent  to perform cryptographic operations. The mobile device  may also comprise internal or external memory or other computer readable media for storing computer executable instructions for enabling the cryptographic processor  to perform cryptographic operations as is known in the art. As can be seen in , the cryptographic processor  may be independent of the main processor  in a mobile device configuration, or may be implemented by special instructions or hardware associated with the main processor  itself.","The mobile device  also includes an operating system  and software components  to  which are described in more detail below. The operating system  and the software components  to  that are executed by the main processor  are typically stored in a persistent store such as the flash memory , which may alternatively be a read-only memory (ROM) or similar storage element (not shown). Those skilled in the art will appreciate that portions of the operating system  and the software components  to , such as specific device applications, or parts thereof, may be temporarily loaded into a volatile store such as the RAM . Other software components can also be included, as is well known to those skilled in the art.","The subset of software applications  that control basic device operations, including data and voice communication applications, may be installed on the mobile device  during its manufacture. Software applications may include a message application , a device state module , a Personal Information Manager (PIM) , a connect module  and an IT policy module . A message application  can be any suitable software program that allows a user of the mobile device  to send and receive electronic messages, wherein messages are typically stored in the flash memory  of the mobile device . A device state module  provides persistence, i.e. the device state module  ensures that important device data is stored in persistent memory, such as the flash memory , so that the data is not lost when the mobile device  is turned off or loses power. A PIM  includes functionality for organizing and controlling data items of interest to the user, such as, but not limited to, e-mail, text messages, instant messages, contacts, events, and voice mails, and may interact with the wireless network . A connect module  implements the communication protocols that are required for the mobile device  to communicate with the wireless infrastructure and any host system , such as an enterprise system, that the mobile device  is authorized to interface with. An IT policy module  receives IT policy data that encodes the IT policy, and may be responsible for organizing and securing rules such as the \u201cSet Maximum Password Attempts\u201d IT policy.","Other types of software applications or components  can also be installed on the mobile device . These software applications  can be pre-installed applications (i.e. other than message application ) or third party applications, which are added after the manufacture of the mobile device . Examples of third party applications include games, calculators, utilities, etc. The additional applications  can be loaded onto the mobile device  through at least one of the wireless network , the auxiliary I\/O subsystem , the data port , the short-range communications subsystem , or any other suitable device subsystem .","The data port  can be any suitable port that enables data communication between the mobile device  and another computing device. The data port  can be a serial or a parallel port. In some instances, the data port  can be a USB port that includes data lines for data transfer and a supply line that can provide a charging current to charge the battery  of the mobile device .","For voice communications, received signals are output to the speaker , and signals for transmission are generated by the microphone . Although voice or audio signal output is accomplished primarily through the speaker , the display  can also be used to provide additional information such as the identity of a calling party, duration of a voice call, or other voice call related information.","For composing data items, such as e-mail messages, for example, a user or subscriber could use a touch-sensitive overlay (not shown) on the display  that is part of a touch screen display (not shown), in addition to possibly the auxiliary I\/O subsystem . The auxiliary I\/O subsystem  may include devices such as: a mouse, track ball, infrared fingerprint detector, or a roller wheel with dynamic button pressing capability. A composed item may be transmitted over the wireless network  through the communication subsystem .",{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIG. 6","FIG. 6","FIG. 6"],"b":["139","10","50","52","53","54","56","58","10","138","138","36","54","138","56","34"]},"The instant messaging application  is an instant messaging service that may hosted and provided by the host system , e.g. using a messaging server at the wireless router  or may be associated with a 3party instant messaging service (not shown). The instant messaging application  comprises or otherwise has access to contact information often referred to as a \u201cbuddy\u201d list . The calendar application  comprises or otherwise has access to a portion of memory, database or other data storage device storing calendar entries , which may include any data or information associated with a particular date and time in the calendar application  and may be displayed in a graphical user interface (GUI) therefor. It can be appreciated that such software applications and components  may require one or more operational certificates  to operate or function on the mobile device .","Continuing with , the user agent  comprises or otherwise has access to a portion of memory, database or other data storage device for cryptographic data , which may include any data or information associated with cryptographic functions. In particular, the stored data  includes, for example, certificates, tokens, public and private keys, and a listing of certificate authorities.","The user agent  also has access to the memory module , which may be an ID secure persistent credential storage. This data includes credential information that may be highly sensitive. For example, in a mobile banking application, the credentials stored may include the verification code and PIN number. In government related client applications, the credentials stored may include a person's social security number or social insurance number. The key store (e.g. key store ) is also stored in the memory module .","It will be appreciated that any module or component exemplified herein that executes instructions may include or otherwise have access to computer readable media such as storage media, computer storage media, or data storage devices (removable and\/or non-removable) such as, for example, magnetic disks, optical disks, or tape. Computer storage media may include volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information, such as computer readable instructions, data structures, program modules, or other data, except transitory signals per se. Examples of computer storage media include RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by an application, module, or both. Any such computer storage media may be part of the device , server , etc., or accessible or connectable thereto. Any application or module herein described may be implemented using computer readable\/executable instructions that may be stored or otherwise held by such computer readable media.","A number of figures are discussed below with respect to the method of establishing and managing the personal identity information.","Turning now to ), example computer executable instructions are shown for storing credential information for an application. The operating system , at block , receives a single sign-on username and password. This information is used to access or log into the operating system. This information may also be used to activate the user agent . After receiving and successfully authenticating the username and password, the application , at block , displays a GUI for retrieving credential information (e.g. username and password) from the user. After retrieving this credential information (block ), this information is sent to the API .","The API , at block , retrieves the application ID corresponding to the application. After obtaining the application ID and the credential information, the API  sends this information to the user agent  (block ). The user agent  decrypts the encrypted key store  (block ). It can be appreciated that the key store  is stored on the device in an encrypted state.","In an example embodiment, the key store  can be encrypted and decrypted using a shared secret . The shared secret  can be derived from a hardware key  stored on the device  and from a public key  of the server . The key  is associated with the hardware of the device .","Continuing with ), after decrypting the key store , the user agent  stores credential information for the application, as well as the corresponding application ID, in the key store  (block ). The user agent  associates a time stamp with the key store to indicate when the key store  was updated (e.g. the time stamp indicates when the credential information and application ID were stored on the key store) (block ). At block , the user agent  encrypts the key store  and saves the encrypted key store on the device  (block ). By re-encrypting the key store , the key store  remains secure when not in use. At block , the user agent  sends a copy of the encrypted key store to the server .","At block , the server  receives and stores a copy of the key store. In this way, the server  has the most recent copy of the key store and can distribute the most recent copy to other computing devices belonging to the same user.","Turning to ), example computer executable instructions are provided for signing on to an application or accessing an application using credential information. This process can be performed by the device  for each of the multiple applications stored thereon. In this way, the user is automatically logged onto multiple applications using a single sign-on username and password.","At block , the operating system receives a single sign-on username and password. At block , the application  receives an input to attempt to access the application. After receiving the input, the API  performs the operation of block . An input, for example, can be user tapping on an icon of the application.","It can be appreciated that by waiting for the input at block , only those applications that a user has a desire to access (e.g. as indicated by the input) will undergo or trigger the operations in ). In other words, computing resources are not automatically consumed to retrieve credential information if a user has not indicated a desire to access the application. Furthermore, the credential information and key store are not automatically decrypted, which reduces the security risk to exposing the credential information. However, in another example embodiment, the process proceeds from block  to block  without waiting for the receipt of the input at block . This can expedite the process.","At block , the API  retrieves the application ID. After obtaining the application ID and after the operating system  has received the username and password, the API  sends the request for credential information for the application (block ). The request may include the application ID. At block , the user agent  receives the request for credential information for the application, as well as the corresponding application ID. At block , the user agent  determines if the device  is communicating with the server .","If the device  is in communication with the server , at block , the user agent  communicates with the server  to determine if there is a more recent key store on the server . If not, the user agent  retrieves the key store that is stored on the device  (block ). If there is a more recent key store on the server , then the server  retrieves the more recent key store and sends it to the user agent  (block ). It can be appreciated that the determination of which key store (e.g. on the device  or on the server ) is more recent is based on an indicator associated with each of the key stores. The indicator, for example, can be a time stamp.","It can be appreciated the retrieved key store  is encrypted. Therefore, after retrieving the key store, either from the memory module on the device  or from the server , the user agent  decrypts the key store (). The encrypted key store  can be decrypted using a shared secret . The user agent , for example, can compute the shared secret using the hardware key  stored on the device  and the public key  of the server .","It can be, appreciated that, at times, the device  is not in communication with the server . For example, the device  may be in a location which does not have access to the network . For example, in an underground building or in remote areas, the device  may not have wireless access to the network . There may also be situations in which the device's radio communications are turned off. Example situations include when the user is in a hospital and when the user is on an airplane.","It is recognized that, although the device  is not in communication with the server , it is desirable for the device  to automatically retrieve the credential information to access the application. Therefore, if, from block , the device is not in communication with the server , the user agent  retrieves the key store currently stored on the device . The process continues to block  to decrypt the key store.","After decrypting the key store , the user agent  determines whether or not the application ID exists in the key store (block ). If the application ID for the application does not exist, then the application  displays a message that access is denied (block ). In other words, the application credentials are not present on the key store and the request therefore cannot be complied with.","If the application ID is present in the key store, at block , the user agent  retrieves the credential information for the application, which is associated with the application ID. At block , the user agent  encrypts the decrypted key store. In an example embodiment, the key store is encrypted immediately after retrieving the credential information. In another example embodiment, the key store is encrypted some time later after the operation of block .","At block , the user agent  sends the credential information to the application. The credential information is received by the API  and passed to the application  (block ). The application  receives the credential information (block ) and uses the credential information to sign into or access the application.","Turning to ), example computer executable instructions are provided for generating a credential value, herein referred to as a personal private identifier (PPID). The PPID is used by the user agent  to determine identifying information of the user. The PPID is also used by the application  as a credential to access the application. However, the identifying information of the user cannot be determined by the application .","At block , the operating system  receives a username and password. This, for example, is used to activate the single sign-on feature provided by the user agent . In this scenario, it is assumed that the user does not have a PPID associated with the application .","At block , the application  displays a GUI which may show an option for a user to sign into the application using a username and password (e.g. the password created by the user). If this option is selected, the operations shown in ) would be performed. The GUI may also show another option to sign into the application using an automatically generated credential. If the application  detects that this other option has been selected (block ), then the API  sends a request to the user agent to provide a PPID (block ). Additionally, the username of the user may be sent with the request to the user agent . At block , the user agent  receives the request for the PPID and, at block , requests the application ID from the application. The application  or the API  sends the application ID to the user agent  (blocks  and ). The user agent  receives the application ID (block ).","The user agent also retrieves a user ID associated with the single sign-on username (block ). The user ID is an identification that remains with the user across all devices belonging to the user. The user ID also does not change. For example, although the user may change the single sign-on username or the single sign-on password, the user ID does not change. The user ID can be, for example, a number.","The user agent  computes the hash value of the application ID and the user ID (block ). The hash value may then be truncated to a certain bit value, for example, 128 bits (block ). The truncated hash value is established as the PPID (block ). At block , the PPID and the application ID are stored in association with one another on the key store. It can be appreciated that the key store may have been encrypted, and may be decrypted first to access and store information on the key store. Furthermore, it can be appreciated that, if it is detected that the device  is in communication with the server , then the device  and server  communicate with each other to determine if the device  has the most recent key store. If not, the server sends the most recent key store to the device . The most recent key store is updated to store the PPID and the application ID.","At block , after storing the PPID and application ID, the user agent  encrypts the key store and updates the indicator that the key store on the device is the most recent. The indicator can be, for example, a time stamp. The user agent  sends a copy of the encrypted key store to the server  (block ) and the server  saves the updated key store for the user. The encrypted key store is also stored on the device  (block ).","In an example embodiment, the device  sends a copy of the username and PPID to the application's server (block ). The application's server may use this information to authenticate a user trying to access the application.","The username and PPID are also sent to the API (block ), which forwards it to the application  (block ). After the application receives the username and PPID (block ), the application  uses this credential information to access the application.","It can be appreciated that the user may not be aware of the PPID and that the user does not need to remember the PPID. The PPID has been automatically created and stored by the user agent. It is also automatically retrieved by the PPID. This reduces the burden on a user to create and remember a password.","Turning to ), example computer executable instructions are provided for signing into an application or accessing an application using the PPID. After receiving the single sign-on username and password (block ), the application  receives an input to attempt to access the application  (block ). The API  retrieves the application ID (block ) and sends the request for the PPID to the user agent  (block ). The request includes the application ID. After receiving the request for the PPID and the corresponding application ID (block ), the device  determines whether or not it is in communication with the server  (block ). If so, the device  and the server  determine if there is a more recent key store on the server (block ). If so, the more recent key store is retrieved from the server  and sent to the device  (block ). If not, the key store on the device  is retrieved (block ). Similarly, if it is detected that the device  is not in communication with the server , the process continues to block .","At block , the key store is decrypted using a shared secret , which is computed using a hardware key  and a public key  of the server . The user agent  then determines if the application ID exists in the key store (block ). If not, then an \u201caccess denied\u201d message is displayed by the application  (block ). If so, then the user agent  retrieves the PPID associated with the application ID (block ). The key store is then encrypted (block ). If any changes were made, the user agent  may send the encrypted key store to the server  for storage on the server  (block ).","The user agent  sends the PPID to the application  through the API  (blocks ,  and ). After receiving the PPID, the application  uses the PPID to access the application (block ).","Turning to , an example GUI  is shown to facilitate a user to sign into the single sign-on application (e.g. corresponding to blocks , , , ). It includes a field  to receive a username and a field  to receive a password. There may also be a button  that can be selected should the user forget their password. There may also be a button  that can be selected should the user forget their username.",{"@attributes":{"id":"p-0101","num":"0100"},"figref":"FIG. 10(","i":"a","b":["404","404","242","316","404","408","410"]},"If the user selects option , turning to ), a GUI  is shown providing a text field  for the user to enter in their password. In another example embodiment, the user may need to enter in the same password twice to confirm the password. If the user selects option , turning to ), a GUI  is shown displaying a message  that the auto-generated password has been created and stored.","In an example general embodiment, a method for managing credential information, is provided. The credential information is for accessing a software application on a computing device. The method comprises: the computing device obtaining the credential information; an application program interface (API), associated with the software application, sending the credential information and an application identification (ID) of the software application to an user agent, the user agent on the computing device; the user agent decrypting a key store; the user agent storing the credential information in association with the application ID in the key store; the user agent associating with the key store a time stamp of when the credential information and the application ID were stored; the user agent encrypting the key store; and the user agent sending a copy of the encrypted key store, the time stamp to a server.","In another example aspect, the user agent decrypts the key store using a shared secret, the shared secret derived from a hardware key of the computing device and a public key of the server. In another example aspect, the method further comprises accessing the software application by: the API sending a request to the user agent for the credential information, the request including the application ID; the user agent determining if the computing device is in communication with the server, and if not, the user agent decrypting the key store; the user agent determining if the application ID exists in the key store and, if so, retrieving the credential information associated with the application ID; the user agent encrypting the key store; and the user agent sending the credential information, through the API, to the software application to provide access to the software application. In another example aspect, if the user agent determines the computing device is in communication with the server, the method further comprises: the user agent determining if a more recent key store is available from the server based on the time stamp of the key store; if the more recent key store is available, the user agent retrieving from the sever the more recent key store; the user agent decrypting the more recent key store; the user agent determining if the application ID exists in the more recent key store and, if so, retrieving the credential information associated with the application ID; the user agent encrypting the more recent key store; and the user agent sending the credential information, through the API, to the software application to provide access to the software application. In another example aspect, the credential information is a username and a password received through a GUI. In another example aspect, the credential information comprises a username. In another example aspect, the method further comprises: the user agent creating a personal private identification (PPID) by combining the application ID and a user identification; and the user agent incorporating the PPID into the credential information. In another example aspect, the PPID is created by computing a hash value of a combination of the application ID and the user identification, and truncating the hash value to a predetermined number of bits. In another example aspect, the method further includes activating the user agent after signing into an operating system on the computing device. In another example aspect, the method further includes activating the user agent after signing into the user agent. In another example aspect, at least one of a single sign-on username and a single sign-on password are used to activate the user agent.","The steps or operations in the flow charts described herein are just for example. There may be many variations to these steps or operations without departing from the spirit of the invention or inventions. For instance, the steps may be performed in a differing order, or steps may be added, deleted, or modified.","Although the above principles have been described with reference to certain specific embodiments, various modifications thereof will be apparent to those skilled in the art without departing from the scope of the claims appended hereto."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Embodiments will now be described by way of example only with reference to the appended drawings wherein:",{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2(","i":"a"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2(","i":"b"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 7(","i":"a"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7(","i":"b"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 8(","i":"a"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 8(","i":"b"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 10(","i":"a"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 10(","i":"b"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 10(","i":"c"}]},"DETDESC":[{},{}]}
