---
title: Wireless database environment for a small device
abstract: The wireless environment includes an object processing module to process objects obtained from a wireless receiver on the mobile device. The object processing module processes the object to alter data stored in memory on the mobile device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07444143&OS=07444143&RS=07444143
owner: Microsoft Corporation
number: 07444143
owner_city: Redmond
owner_country: US
publication_date: 20041123
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["REFERENCE TO CO-PENDING PATENT APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["The present application is a continuation of U.S. patent application Ser. No. 09\/107,916, filed on Jun. 30, 1998, the contents of which are hereby incorporated by reference in their entirety, which claims the benefit of U.S. provisional patent application Ser. No. 60\/070,720 filed on Jan. 7, 1998.","The present invention generally relates to a microcomputer for executing software applications. More particularly, the present invention pertains to a wireless environment for updating small software applications (applets) and databases. The present invention further includes a viewer module for viewing databases on the microcomputer.","On the first personal computers (PCs) developed by IBM, the operating system and applications executed were relatively compact, sharing about one megabyte of address space. PCs including desktop and portable laptop computers have subsequently evolved to much more sophisticated designs. Graphic operating systems and applications requiring much more memory have become common, and it is not unusual for PCs and laptop computers to be sold with 16 or more megabytes of random access memory (RAM) installed. In contrast to the increasing amount of RAM installed on PCs, portable personal information (PIM) devices have recently been introduced that include a microcomputer or microprocessor provided with only enough RAM to enable the dedicated PIM functions to be performed. PIM devices must be distinguished from personal data assistants (PDAs) that include sufficient RAM to enable small application programs specifically developed for the PDA to be executed. PIM devices provide very limited computational functions, and much of the functionality of the devices is programmed into read only memory (ROM). RAM is typically not provided on a PIM device for running application programs that are downloaded into non-volatile read\/write memory. An example of a PIM device is the Timex DATA LINK wristwatch, which provides timekeeping functions and stores PIM data that are downloaded from a PC through a sensor that responds to a predefined modulation of scan lines on the PC monitor.","Data can be downloaded into a non-volatile read\/write memory of a portable computing device such as a laptop computer from a conventional PC using a variety of different mediums, including: radio frequency (RF) links, infrared (IR) data links, and data cable connections. In addition to the screen modulation technique noted above, these same data transfer mediums can be employed to download data into a portable PIM device. A PC is preferably used for compiling\/entering the data, since the keyboard of the PC permits more efficient data entry, the hard drive of a PC conveniently provides long term storage, and data are more easily reviewed on the PC display. Application programs are not normally downloaded to a PIM device from a PC, because the 2-4 Kbytes (or less) of RAM provided on the typical PIM device is generally considered too small for executing downloaded code.","More recently, however, a combination pager and PIM device has been developed that will receive conventional paging messages and paging objects that are used to update PIM data and other data maintained in non-volatile read\/write memory in the device. The data stored in the device includes the typical PIM type of data noted above, e.g., addresses, telephone numbers, and names. However, the dual purpose paging device requires that it also be capable of executing small application programs called \u201capplets\u201d using the very limited amounts of RAM provided on the device, i.e., typically less than 4 Kbytes. Those familiar with programming applications for execution by a microprocessor will appreciate that with even the most careful and efficient coding, it is generally not possible to implement more than a trivial application with machine instructions that will fit into 4 Kbytes of RAM. Accordingly, a new approach was developed and is described in co-pending application entitled \u201cAPPLICATION EXECUTION ENVIRONMENT FOR A SMALL DEVICE\u201d, Ser. No. 08\/825,645, filed Apr. 3, 1997, now U.S. Pat. No. 6,226,665, issued May 21, 2001, which is hereby incorporated by reference, allows processing of larger amounts of application code in a very limited amount of RAM.","Another problem with current remote devices involves updating the information downloaded to the remote device. Commonly, the user must return to a personal computer or other downloading station in order to download a new dataset that has been updated with new information. Although a PIM device, such as the watch described above, can updated without an electrical connection between the watch and the updating computer, such a system still requires the user to return to the computer in order to receive the update. In addition, the user must download the complete dataset although only small portion may have been updated.","The wireless environment includes an object processing module to process objects obtained from a wireless receiver on the mobile device. The object processing module processes the object to alter data stored in memory on the mobile device.","An exemplary form of the present invention is embodied in a combination pager and data management device  illustrated in . However, it is contemplated that the present invention can also be practiced using other readily portable \u201cmobile\u201d electronic devices having a limited memory and resources for executing application software. For example, a combination cellular phone and data management device employing the present invention would achieve virtually all of the benefits and advantages of the present invention. Such devices will have enhanced utility compared to existing portable PIM devices and other portable electronic devices, and the functions and compact size of such devices will more likely encourage the user to carry the device at all times. Accordingly, it is not intended that the scope of the present invention be limited by the disclosure of the invention as embodied in an exemplary pager and PIM device .","A top view of the pager and data management mobile device  is shown in . The mobile device  includes a housing  and has a user interface that includes a plurality of keys  disposed on the top of the housing  and having four buttons that are used to control a display  and the functions performed in connection with its conventional paging function and its PIM data management functions. The buttons comprise an Action button , a Back button , an Up button , and a Down button . The buttons navigate the user through a directory\/menu hierarchy like that shown in . The Action\/Back buttons ,  are paired as opposites, having a pair functionality similar to that of the Enter and Escape keys on a conventional QWERTY keyboard. The Action button  takes the user in (to a selected lower level) and the Back button  takes the user out (to a next higher or parent level in a the hierarchical structure). The Up\/Down buttons ,  are another functional pair of buttons that move the user up and down within the display . Display  is preferably a liquid crystal display (LCD), which in the preferred embodiment can display a maximum of eight lines, with 17 characters per line. Other types and sizes of displays can alternatively be used, as appropriate for the type of device in which the present invention is included.","Referring now to , a block diagram illustrates the functional components comprising the mobile device . An eight-bit central processing unit (CPU)  implements the software controlled functions, although it will be understood that CPUs employing either more or fewer bits can alternatively be employed. CPU  is coupled to display  so that text and graphic icons generated in accordance with the controlling software appear on the display . Data that are downloaded or entered by the user into the mobile device  are stored in a non-volatile read\/write memory store , and this memory is bidirectionally coupled to the CPU, which reads and writes the data in a serial stream. In one embodiment, the CPU is a Zilog Corporation, type Z80 running from 2-4 MHz. The capacity of non-volatile read\/write memory store , which is provided as battery-backed random access memory (RAM), is only about 16 KB in the exemplary embodiment. The RAM  provides volatile storage for instructions that are executed by the CPU when applets are run on the mobile device , and storage for temporary data, such as register values. Default values for configuration options and other variables are stored in a ROM . The ROM  is also used to store the operating system software for the device that controls the basic functionality of the mobile device , e.g., its conventional paging function and other operating system kernel functions, e.g., the loading of applet software components into RAM .","Memory  simply serves as storage for the code in a manner analogous to the function of a hard drive on a PC that is used to store application programs, i.e., storing the applet code until the applet is required to be executed by a user. It should be noted that although non-volatile memory is used for storing the applet code, it can alternatively be stored in a volatile memory that is not used for execution of the code. Further, if more than one applet is stored in this storage memory (non-volatile or volatile), the total size of the code for all such applets must be less than the capacity of the storage memory. The applets are written in compact p-code, which allows them to be extremely small in size compared to more conventional application programs written to be executed on PCs. The p-code is processor independent, since the operating system for a specific type of processor can translate the p-code into the required machine instructions needed for that type of processor.","The p-code is divided into modules or software components. Operating as a state machine, specific modules of p-code are swapped into the RAM of the mobile device  for execution by the CPU so that an extremely small run-time footprint in memory is required when executing an applet.","Paging signals received by the mobile device  are handled through a wireless receiver , which is coupled to CPU . As already noted, keys  provide a simple user interface to permit control of the mobile device , editing, and other user determined selections entered with the four buttons , , , and . Since the data stored in non-volatile memory  are likely to be more extensive than a user would care to enter using only the four buttons, such data are more efficiently entered on a computer  () and downloaded to the mobile device  through a communication interface . The interface  comprises an infrared sensor\/transmitter  (shown in ), which communicates through an infrared data port  of the computer . Similarly, data are typically uploaded to the computer  from the mobile device  through the IR interface. As will be described below, data can alternatively be downloaded from the computer  to the mobile device  through a paging signal transmission to be wireless receiver .","Display  is employed to present bitmapped characters in 8 rows by 17 columns, allowing a substantial amount of information to be viewed at one time. Although not shown in , above the display area of the mobile device  is a row of icons indicating other aspects of the device, and on the left-hand side of the display area may be one or two auxiliary icons resembling up and down arrows. These arrow icons are used to indicate that lines of items are available above and\/or below the lines currently shown on the display. Specifically, the up arrow icon indicates that hidden lines exist above the visible text, and the down arrow icon indicates hidden lines exist below the visible text.","Navigation on the mobile device  is done with hierarchical menus, enabling the user to move through a tree structure.  illustrates the Main Menu on display . The first line of a menu may be its title (\u201c**MAIN MENU**\u201d in this case). The menu title is in upper case and is set off with asterisks to visually distinguish it from the other items in the menu.","The user moves a selection line (which causes the line to appear in reverse video on the display) up and down to select a desired list item. When the selection line is at the bottom and the down arrow icon is showing on the display , the next Down button  push scrolls the list up one line, keeping the selection line at the bottom. When the selection line is on the last list item, the down arrow icon is no longer displayed, and additional Down button  pushes do nothing. The analogous process applies to the Up button . The title line is never selectable, but it scrolls off the display  as if it were just another list item, as depression of the Down button  moves the selected line below the original bottom line displayed. These same rules normally apply when applets are being executed on the mobile device  that display information to the user.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 3","b":["68","68","70","72","74","76","55","77","79","68","78"]},"Memory  is implemented as non-volatile electronic memory such as random access memory (RAM) with a battery back-up module (not shown) such that information stored in memory  is not lost when the general power to mobile device  is shut down. A portion of memory  is preferably allocated as addressable memory for program execution, while another portion of memory  is preferably used for storage, such as to simulate storage on a disc drive.","Memory  includes an operating system , an application program  (such as a personal information manager or PIM) as well as an object store . During operation, operating system  is preferably executed by processor  from memory . Operating system , in one preferred embodiment, is a Windows CE brand operating system commercially available from Microsoft Corporation. The operating system  is preferably designed for mobile devices, and implements database features which can be utilized by PIM  through a set of exposed application programming interfaces and methods. The objects in object store  are preferably maintained by PIM  and operating system , at least partially in response to calls to the exposed application programming interfaces and methods.","Communication interface  is optionally provided as any suitable communication interface. Interface  is preferably used to communicate with computer , or optionally another mobile device . Thus, communication interface  includes synchronization components for communicating with computer . The wireless receiver  is used for receiving information from a wireless carrier, not shown.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 4","FIG. 4","FIG. 4"],"b":["68","68","18","83","85","86","85","86","86","85","83"]},{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 5","FIG. 5","FIG. 4","FIG. 5","FIGS. 4 and 5","FIGS. 4 and 5"],"b":["68","68","68","85","86","85","85"]},"The mobile device  shown in  also includes a number of user input keys or buttons (such as scroll buttons ) which allow the user to scroll through menu options or other display options which are displayed on display , or which allow the user to change applications, without contacting display . In addition, the mobile device  also shown in  also preferably includes a power button  which can be used to turn on and off the general power to the mobile device .","It should also be noted that, in the embodiment illustrated in , mobile device  includes a hand writing area . Hand writing area  can be used in conjunction with stylus  such that the user can write messages which are stored in memory  for later use by the mobile device . In one illustrative embodiment, the hand written messages are simply stored in hand written form and can be recalled by the user and displayed on the display screen  such that the user can review the hand written messages entered into the mobile device . In another preferred embodiment, mobile device  is provided with a character recognition module such that the user can enter alpha-numeric information into mobile device  by writing that alpha-numeric information on area  with stylus . In that instance, character recognition module in the mobile device  recognizes the alpha-numeric characters and converts the characters into computer recognizable alpha-numeric characters which can be used by the application programs  in mobile device .",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 6","b":["55","55","30","68","55"]},"With reference to , an exemplary system for implementing desktop computer  includes a general purpose computing device in the form of a conventional personal computer , including processing unit , a system memory , and a system bus  that couples various system components including the system memory  to the processing unit . The system bus  can be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. The system memory  includes read only memory (ROM)  a random access memory (RAM) . A basic input\/output system (BIOS) , containing the basic routine that helps to transfer information between elements within the desktop computer , such as during start-up, is stored in ROM . The desktop computer  further includes a hard disk drive  for reading from and writing to a hard disk (not shown), a magnetic disk drive  for reading from or writing to removable magnetic disk , and an optical disk drive  for reading from or writing to a removable optical disk  such as a CD ROM or other optical media. The hard disk drive , magnetic disk drive , and optical disk drive  are connected to the system bus  by a hard disk drive interface , magnetic disk drive interface , and an optical drive interface , respectively. The drives and the associated computer-readable media provide nonvolatile storage of computer readable instructions, data structures, program modules and other data for the desktop computer .","Although the exemplary environment described herein employs a hard disk, a removable magnetic disk  and a removable optical disk , it should be appreciated by those skilled in the art that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks (DVDs), Bernoulli cartridges, random access memories (RAMs), read only memory (ROM), and the like, may also be used in the exemplary operating environment.","A number of program modules can be stored on the hard disk, magnetic disk , optical disk , ROM  or RAM , including an operating system , one or more application programs  (which may include PIMs), other program modules  (which may include synchronization components for synchronizing data between the desktop computer  and the mobile device  or ), and program data . A user can enter commands and information into the desktop computer  through input devices such as a keyboard , pointing device . Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a serial port interface  that is coupled to the system bus , but may be connected by other interfaces, such as a sound card, a parallel port, game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video adapter . In addition to the monitor , desktop computers can typically include other peripheral output devices such as speakers and printers.","The desktop computer  may operate in a networked environment using logic connections to one or more remote computers (other than mobile device  or ), such as a remote computer . The remote computer  can be another personal computer, a server, a router, a network PC, a peer device or other network node, and typically includes many or all of the elements described above relative to desktop computer , although only a memory storage device  has been illustrated in . The logic connections depicted in  include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer network intranets and the Internet.","When used in a LAN networking environment, the desktop computer  is connected to the local area network  through a network interface or adapter . When used in a WAN networking environment, the desktop computer  typically includes a modem  or other means for establishing communications over the wide area network , such as the Internet. The modem , which may be internal or external, is connected to the system bus  via the serial port interface . In a network environment, program modules depicted relative to desktop computer , or portions thereof, may be stored in the remote memory storage devices. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","Desktop computer  runs operating system  that is typically stored in non-volatile memory  and executes on the processor . One suitable operating system is a Windows brand operating system sold by Microsoft Corporation, such as Windows 95 or Windows NT, operating systems, other derivative versions of Windows brand operating systems, or another suitable operating system. Other suitable operating systems include systems such as the Macintosh OS sold from Apple Corporation, and the OS\/2 Presentation Manager sold by International Business Machines (IBM) of Armonk, N.Y. Application programs are preferably stored in program module , in volatile memory or non-volatile memory, or can be loaded into any of the components shown in  from a floppy diskette , CD ROM drive , downloaded from a network via network adapter , or loaded using another suitable mechanism.","The infrared data port  connects to the system bus  through an interface , which as stated data above can be used to download data to the mobile devices  and  when placed in proximity to the computer . Alternatively, data can be provided to the mobile devices  and  through a wireless paging network accessible by the computer  directly via a modem or through the LAN  or the WAN  networks.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 7","b":["30","30","68","30","52","52","54","54","54","30","202","202","202","202","54","204","204","205","204","54","208","208","30","30","30"]},"One aspect of the present invention includes an object processing module  that is used to update the memory store  with information received over the air through the wireless receiver  from a wireless transmitter such as a paging network. The object processing module  processes received objects to update the information stored in memory store  and, in particular, to update the information stored in the datasets , the applets , the applet data  or the system parameters list .",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 8","b":["240","52","240","242","244","242","54","244","54"]},"An exemplary embodiment of the object header  is illustrated in detail in . In this embodiment, the object header  includes multiple portions A, B, C, D, E and F. Each portion A-F contains specific information for locating or updating the information stored in memory store . Portion A contains an encoded value indicative of the type of information contained in the object information . For instance, a first preselected value can be used to indicate that the object information  contains data for completely replacing a current dataset  stored in the memory store , or contains information for a new dataset  to be stored in the memory store . Similarly, a second preselected value in portion A can be used to indicate that the object information  is an applet that will be used to replace an existing applet  currently on the mobile device , or a new applet that will be installed in the memory store . Other preselected values in portion A can be used to indicate that the object information  includes data for a record of a particular dataset . For example, a third preselected value located in portion A can indicate that the object information  pertains to an individual record of a particular dataset  such as a \u201creminder\u201d dataset, or a \u201ccontacts\u201d dataset. Other preselected values can be assigned as necessary to denote other information stored in the memory store . For instance, another preselected value can be used to denote that the object information  pertains to a generic record of a dataset . Yet another value can be preselected to indicate that the object information  pertains to a radio address or capcode programming of the mobile device . Generally, the size of portion A is small wherein one byte is typically sufficient to encode the information.","Portion B is illustrated in detail in . Generally, portion B contains a value indicative of the action to be performed for updating the information in the memory store . A first preselected value is used to indicate that the object information  is to be added to the memory store , while a second preselected value is used to indicate that the object information  will replace information in the memory store . A third preselected value is used to indicate that information in the memory store  will be deleted. In the embodiment illustrated in , portion B is a single byte of data wherein the operations of \u201cadd\u201d, \u201cchange\u201d and \u201cdelete\u201d are encoded in bits A and B. A third bit C is used to indicate whether unique identifiers associated with each of the datasets , applets  or the system parameter list  must match before the \u201cadd\u201d, \u201cchange\u201d or \u201cdelete\u201d operation will be performed.","As will be discussed below, each dataset  includes a unique identifier that is used to identify the dataset from all other information stored in the memory store . Commonly, the dataset also includes an associated \u201ctitle\u201d that allows the user to easily identify the dataset on the \u201cmain menu\u201d as illustrated in . The title is displayed on the display , while the unique identifier associated with the dataset is not displayed, but is used to identify the dataset when information is to be updated. When shipped from the factory, the mobile device  can include standard datasets such as a \u201creminder\u201d or \u201ccalendar\u201d dataset and a \u201ccontacts\u201d dataset. As shipped, each mobile device may have the same identifier for each \u201creminder\u201d dataset, and the same identifier for each \u201ccontacts\u201d dataset, although the \u201ccontacts\u201d identifier will be different than the identifier used for the \u201creminder\u201d dataset. Typically, during the initialization procedure, a user will change each of the identifiers on the mobile device  in order that when information is transmitted to the mobile device , it only updates the information of the user's mobile device  and does not alter information stored on any other mobile device . Nevertheless, in certain situations, it may be necessary to update information, such as a particular record stored in the \u201ccontacts\u201d dataset of a plurality of users. Rather than sending multiple messages to each user to update the information stored in the \u201ccontacts\u201d dataset, a single message can be simultaneously transmitted to all users to update the information where the bit C is set so that an identifier match is not necessary to update the information.","In yet a further embodiment, portion B also includes information as to whether the user should be alerted of any errors that occurred when the object  is processed by the object processing module . In the embodiment illustrated, a fourth bit D is used to indicate when errors will be reported. Specifically, if bit D is set, and an error occurs during processing of an incoming object , information is provided by the object processing module  to an error processing module , illustrated in , indicative of the error that has occurred. For example, if the object  being processed pertains to a new record for the \u201ccontacts\u201d dataset and that record included an error such as invalid data representing a phone number, the error processing module  alerts the user through the display  that a new record for the \u201ccontacts\u201d dataset was received but could not be processed. In general, the information provided by the object processing module  to the error processing module  is as much as can be ascertained about the error and\/or the appropriate dataset , applet  or other information being updated in the memory store .","Referring back to , portions C and D pertain to the unique identifier used to identify the information to be updated in the memory store . Portion C contains a value indicative of the number of bytes in portion D. Portion D contains the unique identifier to identify the information stored in memory store  that will be updated.","It should be noted that portion C can have a value such as zero that would indicate that portion D does not exist. The object header  always identifies the information to be updated based upon the value contained in portion A.","In the embodiment illustrated, the object header  also includes portions E and F. Portions E and F are not required in order to process the object  and update the memory store . Rather, portions E and F contain information used to alert the user that a specific type of object has been received. For instance, a user may desire a first type of audible tone to be generated by the mobile device  when information pertaining to the \u201creminder\u201d dataset is to be updated, while a second type of audible tone is to be generated if the information pertains to the \u201ccontacts\u201d dataset. Portion E, as illustrated in , is a single byte wherein bits A, B, C and D are set when the mobile device  should use preselected audible tones stored in the mobile device  when objects pertaining to certain datasets are received. If bits A-D are not set, the object processing module  is to use the values contained in the object store itself to determine what type of audio tone, if any, will be used. The objects are stored under a folder much like a disk file system, the folder name is displayed on the menu of . Along with the name, a notification option byte (same format as F discussed below) is stored as well. If the fields A-D of portion E are set to 0, then the audio notification is selected from the notification option byte stored with the folder. If the fields A-D are set to 1 then the audio notification is selected from the notification option byte within the object, namely F. Portion F is illustrated in . Portion F is similar to portion E in that portion F includes settable bits A, B, C and D. The value represented by bits A-D is used by the object processing module  to select a desired audible tone that will be generated by the mobile device . This allows the sender to specify, on a per object basis, his or her own selection of audio tones or allowing to honor the recipient's choice. These details are the subject matter of another patent \u201cFLEXIBLE OBJECT NOTIFICATION\u201d issued Oct. 26, 997, U.S. Pat. No. 5,973,612, the content of which is incorporated by reference.","Bit E is set if the mobile device  should provide a visual indication through the display  when the object is received. If bit E is not set, the object processing module  will examine the values contained in portion F to determine if a visual notification will be provided. The sender can control whether or not a visual notification is provided to the user upon receipt of the object  by setting or not setting a bit E in portion F.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 13","b":["244","270","270","270","270","270","270","270","30","30"]},"Portion B of format  contains a value indicative of the type of data contained in the field of the record. For instance, if the field contains data in the form of a string, a first value is present in portion B. Other values are used to indicate that the field contains a number, a date, a time, a phone number or a boolean value. Additional values can be defined for other types of data.","Portion D of format  contains the actual data for the field, while portion C indicates the length of the data contained in portion D.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIGS. 14-16","FIG. 14","FIG. 13"],"b":["242","242","290","244","290","270","244","292","290","240","294","244","294","240","242","244","290","250","244","290"]},{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 15","FIG. 15"],"b":["240","242","210","290","240","242","240","290","242","290","292","290","294"]},{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 16","b":["242","244","300","242","302","300","302","302","302"]},"In addition to adding, deleting and changing a record in a particular dataset, another aspect of the present invention allows the addition, deletion or changing of a complete dataset on the mobile device . The format for adding or changing a complete dataset is illustrated in . As discussed above, the object header  identifies the particular dataset to be added or changed, while the object information  includes a portion  indicative of the name of the dataset. The name of the dataset is stored and displayed on the display  as discussed above with respect to  when the dataset is viewed. The number of bytes in portion  is contained in portion . A portion  contains the actual data of the dataset, while a portion  is provided to indicate the size of the portion . The object processing module  ascertains whether or not the object is a new dataset to be added or an existing dataset to be changed by examining the identifier length portion C of the object header . If the value contained in portion C () is non-zero, the object processing module  will use the identifier contained in portion D to search the memory store  for an existing dataset having the matching identifier. If a matching identifier is found, the object processing module  will replace the dataset with the object information provided. If a dataset is not found and the \u201cignore identifier match\u201d bit C () is not set, then the object processing module  will discard the received object. However, if a dataset is not found with a matching identifier and the \u201cignore identifier match\u201d bit C is set, then a new dataset will be created from the object received. In the event that the value contained in the identifier length portion C is zero, indicating that a matching identifier does not exist on the mobile device , and if the \u201cignore identifier match\u201d bit C is set, then a new dataset will be created from the received object. In contrast, if the \u201cignore identifier match\u201d bit C is not set, then the object processing module  will discard the object.","A dataset can be deleted from the mobile device  simply by transmitting and processing the object header . As discussed above, the object header includes the identifier of the dataset to be deleted in portion D as well as the required action of deletion as specified in portion B.","Applets  can be added, deleted and changed in a manner similar to the method described above for datasets. With respect to , portion  includes the name of the applet to be added or changed, while portion  indicates the length of the portion . Portion  includes the applet code, while portion  indicates the size of the applet. As with deleting a complete dataset, an applet can be deleted from the mobile device  by transmitting and processing the object header .","Applet data  can be changed in a manner similar to the method described above for changing datasets. Applet data  is called a datablock and an applet  can have multiple numbers of datablocks numbered from \u201c0\u201d onwards. A datablock can be added, or replaced, or deleted using the following object (similar to ) (Obj. Hdr) (Applet Name Len) (Applet Name) (Datablock Number) (Datablock Size) (Datablock . . . ) For the delete operation, there is no need for \u201cdatablock size\u201d and \u201cdatablock\u201d fields. The system parameters  can be added, replaced or deleted in a manner similar to applet data , in other words, (Obj. Hdr) (Parameter Number) (Value Size) (Value).","The mobile device  further includes a viewer module  in . The viewer module  accesses the memory store  to display the datasets  individually. The viewer module  is compact in size, but allows the user to easily view, edit and manage each of the datasets .",{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 18","b":["202","202","402","404","404","202","54","202","52","46","404","406"]},"In addition to storing the format of the records portion , the header portion  also includes general information of the dataset  as well as control parameters used by the viewer module  to display the dataset  to the user.",{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 19","b":["402","402","420","202","54","420","34","402","202","420","202"]},"A value  is provided in the header portion  to indicate the types of views available for viewing the dataset . In the embodiment described, records of the dataset  can be viewed in the form of a \u201cTable of Contents View\u201d or individually as a \u201cRecord View\u201d. An example of a \u201cTable of Contents View\u201d is illustrated in . The \u201cTable of Contents View\u201d displays a plurality of records simultaneously on the display  wherein each record occupies one line of the display . Typically, the length of each record is longer than the display  such that only a portion of the record can be displayed. Operation of the keys  allows the user to display unseen records as well as unseen portions of records currently being displayed. By operating the keys , the user can \u201chighlight\u201d a desired record and upon further operation of the keys , display the selected record as a \u201cRecord View\u201d, which is illustrated in . In the examples illustrated in , the dataset is the \u201ccontacts\u201d dataset wherein individual records comprise names of people and associated addresses and telephone numbers. In a further embodiment, only selected fields can be displayed in the \u201cTable of Contents View\u201d in order to provide a less cluttered display of information. The value stored at location  in the header portion  indicates whether the user can display records in the \u201cTable of Contents View\u201d and\/or the \u201cRecord View\u201d.","A value  indicates operation of the viewer module  due to inactivity of the user after viewing a particular dataset. In the embodiment illustrated, the value  corresponds to a \u201ctime-out\u201d parameter wherein if the user accesses and views the dataset, but then does not press any of the keys  for a selected period of time, the viewer module  will exit the dataset and return to the main or root level. For instance, if the value  equals \u201c1\u201d, the viewer module  will display the main or root level if the user does not press any of the keys  within a user selectable value (system wide parameter). If, on the other hand, the value  equals \u201c0\u201d, the viewer module  will not automatically return to the main or root level. Although the display  may turn off in order to save battery power, upon operation of any of the keys , the viewer module  will display the dataset, and the particular record, which was last viewed.","Value  in the header portion  indicates the number of functions which are available for manipulation of the dataset  upon storage in the memory store . In the embodiment described, there are five different actions that can be made available to the user for manipulation of the dataset . The actions include \u201cediting a record\u201d, \u201cdeleting a record\u201d, \u201csending a record\u201d, \u201csending a dataset\u201d and \u201csetting field views\u201d. These actions are available upon activation of a preselected key when an individual record is being displayed with the \u201cRecord View\u201d.  illustrates each of the available actions including a \u201cjump\u201d action as displayed on the display . Using the keys , the user can highlight the desired action to be performed. The \u201cjump\u201d action is used when a long dataset is being viewed. The \u201cjump\u201d action allows the user to jump to a different record of the dataset  without having to return to the \u201cTable of Contents View\u201d and scroll through the records to find the desired record.","The \u201cediting a record\u201d action allows the user to make changes to selected fields in a particular record. After highlighting \u201cedit record\u201d in the display  illustrated in , the user presses a selected key  to then display a list of the fields that can be edited. Using the keys , the user can highlight the field to edit and toggle through the characters or digits in order to change individual values.","The \u201cdelete record\u201d action allows the user to delete the record from the dataset. In one embodiment, the record that is deleted is the record previously displayed before the list of actions () was displayed.","The \u201csetting field views\u201d action allows the user to selectively display fields in the dataset . Using the \u201ccontacts\u201d dataset illustrated in , by way of example, if desired, the user can hide the \u201cfax\u201d including the associated value from being displayed when any of the records in the \u201ccontacts\u201d dataset are displayed.","The action listed as \u201csend this item\u201d allows the user to send a particular record to another device, such as another mobile device. Highlighting and activation of this action using the keys  initiates execution of a transfer module  (). The transfer module  formats the record and transfers the record to the receiving device using, for example, the IR port . Similarly, when the action listed as \u201csend entire list\u201d is highlighted and activated, the complete dataset is transferred to the receiving device through the IR port  by the transfer module .","It should be noted that other types of actions can be listed and presented to the user in the list of . Such actions can be particularly applicable for certain types of datasets. For instance, a \u201ctoggle\u201d action can be provided as an option to the user when the user is accessing a \u201ctasks\u201d dataset. The \u201ctoggle\u201d action would allow the user to quickly mark the task as being completed without having to change a particular field through the \u201cedit record\u201d action.","As stated above, value  in  indicates the number of actions that can be performed on a particular dataset. Preferably, each of the available actions that can be implemented are listed individually in the header portion  as illustrated at .","The number of fields in each record is provided in the header portion  at . Characteristics of each field are then provided in section . In the embodiment illustrated, characteristics of each field include a title designation  and a type designation . Preferably, the available types of fields include a string of characters of variable length, a string of characters of fixed length, boolean variables, a number, a date, a time, phone numbers (U.S. format phone numbers, international format phone numbers and\/or free format phone numbers). Other types of fields can include various combinations of the aforementioned, for example, a \u201creminder\u201d field could include date, time and string fields. The length of the field is indicated at . Typically, the length is a quantity of bytes. A selected designation such as \u201c0\u201d can indicate that the field length is not fixed and can be variable.","Value  indicates whether the field of the record can be hidden using the \u201csetting field view\u201d action described above. A first preselected value indicates that the field can be hidden, while a second preselected value indicates that the field cannot be hidden.","Values , ,  and  are used by the viewer module  to display the record on the display . Value  is used to specify the minimum number of characters of the field that are displayed in the \u201cTable of Contents View\u201d. Value  can be used to control the maximum number of characters that are displayed of the field in the \u201cTable of Contents View\u201d. Values  and  together specify coordinates (row, column) of the first character of the title of the field. It should be noted that special designations can be provided for the values - to indicate other formatting considerations. For instance, a \u201c0\u201d for value  or value  indicates that the next available row or column should be used to display the field.","The number of records in the dataset are indicated at . The amount of free space (typically given in bytes) is provided at . A textual representation of a dataset for storing and viewing stock reports for a particular stock is given below.",{"@attributes":{"id":"p-0088","num":"0087"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},";"]},{"entry":[{},"; Sample Stock Dataset"]},{"entry":[{},";"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"GENEREIC,MSFT;","Identifier Bytes"]},{"entry":[{},"TocView;","RecView or TocView"]},{"entry":[{},"NoTimeout;","NoTimeout or DefaultTimeout"]},{"entry":[{},"5;","Number of functions"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Edit,Set View,Delete,Send Record,Send DataSet; Action"]},{"entry":[{},"7;"]},{"entry":[{},";Enable\/Disable"]},{"entry":[{},"; ;Type"]},{"entry":[{},"; ; ;Len (0=variable)"]},{"entry":[{},"; ; ; ;Min"]},{"entry":[{},"; ; ; ; ;Max"]},{"entry":[{},"; ; ; ; ; ;Row"]},{"entry":[{},"; ; ; ; ; ; ;Col"]},{"entry":[{},"; ; ; ; ; ; ; ;Title"]},{"entry":[{},"E,S,3,3,3,1,1,Day;"]},{"entry":[{},"E,S,4,0,0,1,5,Date;"]},{"entry":[{},"D,S,6,6,6,2,1,Low;"]},{"entry":[{},"D,S,6,6,6,2,8,High;"]},{"entry":[{},"E,S,6,6,6,2,15,Last;"]},{"entry":[{},"E,S,0,0,0,4,1,InfoLine1;"]},{"entry":[{},"E,S,0,0,0,4,1,InfoLine2;"]},{"entry":[{},"5,100;\u2003\u2003\u2003\u2003\u2003\u2003Number of Records, Free space"]},{"entry":[{},"Mo ,5\/06,140.00,141.50,112.50,Dow +20;"]},{"entry":[{},"Tu ,5\/07,140.00,141.84,113.50,Qtr Revenues, K;"]},{"entry":[{},"We ,5\/08,141.00,142.95,114.00, , ;"]},{"entry":[{},"Th. ,5\/09,141.50,142.85,114.75,New alliance with NEC,;"]},{"entry":[{},"Fr ,5\/10,142.00,143.00,116.75, , ;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]},{"entry":[{},"(Note that all characters right of a \u201c;\u201d on any line pertain to a comment)."]}]}}]}}},"Although the header portion  of the dataset  includes a considerable amount of flexibility in defining and displaying fields of a dataset, there can still be situations where the structure does not meet the requirements of the user. Another aspect of the present invention allows the user to install a custom viewer module to display information. In the embodiment illustrated in , the custom viewer module is an applet  stored in the memory store . It should be noted that the memory store  can store multiple custom viewer modules as applets wherein each custom viewer module is used to display selected information. The custom viewer module or applet is written in a pseudo-code language that is not machine dependent in order that the applet  can be machine independent. As discussed above, the applet can be added or changed to the memory store  through the wireless receiver . A p-code interpreter  accesses the memory store  and, in particular, the applet  to be executed. Display formats chosen by the user to display information is encoded in the applet . The p-code interpreter  operates the display  in accordance with the encoded instructions contained in the applet . Commonly, the applet  is written on a computer, such as the desktop computer  () that includes the keyboard  and the pointer device  to allow the applet  to be easily written. As discussed above, the applet  can then be transferred to the mobile device  using either the wireless receiver  or the IR port .","Use of the applet  as a custom viewer may be best illustrated by an example. Consider the same example described above to deliver stock information. Using the dataset  and the viewer module , a service provider can send records to update the dataset  when new stock reports are issued. However, suppose the service provider would like to provide to the user a \u201c30 day high\/low price\u201d or an \u201caverage price over the last 30 days\u201d. In a typical prior art mobile device, this information is calculated by the service provider and sent as a page to the mobile device. This page like all other pages is retained in a buffer, thereby requiring the user to scroll through all pages in order to find the particular page desired. Using the dataset  and the viewer module  described above, this information can be defined possibly as a record or as a field in a record of the dataset . Nevertheless, the service provider will have to calculate the \u201c30 day high\/low price\u201d and the \u201caverage price\u201d and send this information to the mobile device  as an updated record. However, using an applet  as a custom viewer allows the service provider to transfer the calculation steps to the mobile device . As discussed above, typically the applet  includes an associated applet data  that can be updated or changed in a manner similar to updating or changing a record in the dataset . In this manner, the service provider need only provide the stock quotes on a periodic or daily basis. Upon execution of the applet  using the p-code interpreter , the applet  operates on the associated applet data  to calculate the desired information that being the \u201c30 day high\/low price\u201d and the \u201caverage price\u201d, which are then displayed on the display . In this manner, the service provider does not need to calculate the desired information, but rather, only has to update the applet data .","Although the present invention has been described with reference to preferred embodiments, workers skilled in the art will recognize that changes may be made in form and detail without departing from the spirit and scope of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 5","FIG. 3"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 7","FIG. 1"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIGS. 10-12"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIGS. 14-16"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 19","FIG. 18"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIGS. 20-22"}]},"DETDESC":[{},{}]}
