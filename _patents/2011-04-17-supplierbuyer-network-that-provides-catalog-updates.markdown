---
title: Supplier/buyer network that provides catalog updates
abstract: Embodiments for a supplier/buyer (S/B) network providing catalog updates are disclosed. One method includes the S/B network receiving a request for an update of product information of a catalog. The S/B network receives a profile request of at least one supplier from a buyer. The S/B network confirms that the at least one supplier supports product updates. If the at least one supplier supports product information updates, then the S/B network receives the request for a product information update from the buyer, and requests the product information update from the at least one supplier. The S/B network receives the product information update from the at least one supplier, and the S/B network updates the catalog based on the product information update.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08732036&OS=08732036&RS=08732036
owner: Ariba, Inc.
number: 08732036
owner_city: Sunnyvale
owner_country: US
publication_date: 20110417
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["RELATED APPLICATIONS","FIELD OF THE DESCRIBED EMBODIMENTS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","Descriptions of Specific Embodiments","GLOSSARY"],"p":["This patent application claims priority to U.S. Provisional Patent Application No. 61\/332,370 filed on May 7, 2010 which is herein incorporated by reference.","The described embodiments relate generally to a supplier network. More particularly, the described embodiments relate to a method, apparatus and system for a supplier\/buyer network that provides catalog updates.","Searchable electronic catalogs are commonly used in support of electronic commerce and purchasing functions. However, the catalogs loaded by buyers on their systems may not reflect the current prices of the items within the catalogs. As the catalog may have been loaded a while ago, the search result does not guarantee the exact picture to the buyer. That is, the buyer is not assured to have the latest price and availability information, which clearly, can lead to problems.","An out-of-date catalog may not provide the buyer with accurate product information. For example, when viewing a punch-out item, the buyer sees a price in the catalog, and clicks on a \u2018Buy from Supplier\u2019 button\/link in, for example, an Ariba Buyer (\u00ae) product that punches the buyer out to the supplier site. It can be baffling to the buyer to see the new price there. This scenario can get worse if the buyer notices the price change only after ordering or receiving the item.","Item comparisons can be misleading if, for example, a price comparison is on an outdated catalog. More specifically, the buyer is not provided with the correct product comparison information.","An outdated catalog can result in a loss of business for a supplier. For example, if a price of a product is reduced but not reflected in a buyer's catalog, the buyer may very well chose not to buy a product from that supplier. Additionally, outdated catalogs can result in buyers submitting purchase orders for products that are no longer available, or for products in which the price of the product has changed. Providing a buyer with a new catalog whenever the catalog is updated can be cumbersome due to the large amount of information that can exist within the catalog.","There is a need for a system, method and apparatus for providing a buyer with updated catalog product information, wherein a download (or uploading) of a catalog is not required each time information related to products within the catalog are updated.","An embodiment includes a computer-method of a supplier\/buyer (S\/B) network providing catalog updates. The method includes the S\/B network receiving a request for an update of product information of a catalog. The S\/B network receives a profile request of at least one supplier from a buyer. The S\/B network confirms that the at least one supplier supports product updates. If the at least one supplier supports product information updates, then the S\/B network server receives the request for a product information update from the buyer, and requests the product information update from the at least one supplier. The S\/B network receives the product information update from the at least one supplier, and the S\/B network updates the catalog based on the product information update.","Another embodiment includes a supplier\/buyer (S\/B) network that provides catalog updates. An S\/B network server the S\/B network receives a request for an update of product information of a catalog. A buyer server submits a profile request of at least one supplier to the S\/B network server. The S\/B network server confirming that the at least one supplier supports product information updates. If the at least one supplier supports product information updates, then the S\/B network server receiving a request for a product information update from the buyer server, and requesting the product information update from the at least one supplier server. A supplier server provides the S\/B network server with the product information update, and the S\/B network server updates the catalog based on the product information update.","Another embodiment includes a program storage device readable by a machine, tangibly embodying a program of instructions executable by the machine to perform a method of providing catalog updates. The method performed includes a supplier\/buyer (S\/B) network the S\/B network receiving a request for an update of product information of a catalog. The S\/B network server receives a profile request of at least one supplier from a buyer. The S\/B network confirming that the at least one supplier supports product updates. If the at least one supplier supports product information updates, then the S\/B network server receives a request for a product information update from the buyer, and requests the product information update from the at least one supplier. The S\/B network receiving the product information update from the at least one supplier, and the S\/B network updates the catalog based on the product information update.","Other aspects and advantages of the described embodiments will become apparent from the following detailed description, taken in conjunction with the accompanying drawings, illustrating by way of example the principles of the described embodiments.","The embodiments described include methods, systems and apparatuses for providing catalog updates of suppliers to buyers. The catalogs can be provided by many different suppliers, to many different buyers. Updates to the catalogs can be made available to the buyer either at a buyer's request, or periodically at a selectable rate. The updates are provided while minimizing the amount of changes to the catalog information. The described embodiments provide updates without requiring an entire catalog update. Therefore, complete validation and approval of the updated catalog is not required.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 1","FIG. 1"],"b":["110","110","120","130","110","110","120","130","110","120","130"]},"Generally, each supplier network (such as supplier network ) completes a registration with the S\/B network . For an embodiment, one element of the registration includes the supplier network  indicating within a supplier profile whether the supplier network  supports product information updates. Other elements of registration can include, for example, a supplier punchout address.","Embodiments include the S\/B network  receiving a request for an update of product information of a catalog. Each catalog is generally available to many buyer networks (such as buyer network ). For an embodiment, this includes the S\/B network  periodically checks whether the buyer network  is requesting a product information update. The product information updates can be requested in various ways. For example, for one embodiment each buyer network  can select a frequency in which a request for product information updates is made. That is, for example, a buyer network  can select to request a product information update once per unit of time, such as, once a day, once a week or once a month. Alternatively, or additionally, each buyer network  can manually request for a product information update.","For an embodiment, the S\/B network checks the request for product information. If the request includes multiple requests, the request can be broken into multiple sub-requests. That is, for example, if the request for product information includes request for a large number of products, the request can be broken into multiple smaller requests. More specifically, if the number of product in which product information is being requested is greater than a threshold number, then the request is broken into multiple requests. This can be an advantageous feature\/embodiment because breaking up the request can reduce demands on the network, thereby avoiding, for example bandwidth problems. In the case of a failure, only a small request fails rather than a large request. The request other than a failed request may very well go through (pass). Upon a failure, only the failed subset of the total request needs to be resent or requested again.","Embodiments include various types of catalogs. For example, one type of catalog is a public catalog that is generically supplied to potential buyers. Another type of catalog is a buyer specific catalog that can be tailored or customized to a specific buyer. In either case, the buyer makes a request for product information updates, allowing the buyer to receive current product information updates.","The S\/B network  can receive the product information request from the buyer network  for a specific product or item of the catalog. Once the S\/B network  receives the product information request from the buyer network , the S\/B network  checks that the supplier network supports catalog updates, and if so, the S\/B network  extends the request to the supplier network . For an embodiment, the request can be extended to multiple supplier networks . It should be noted that the capability for allowing a buyer to request product information for a specific item or catalog is both valuable and powerful. More specifically, the updated information can be provided for just the specific product or item rather than providing a catalog update for an entire catalog which can be cumbersome. Additionally, as previously stated, an updated catalog does not have to be validated and approved.","Any loaded catalogs or the items in the catalogs need to follow some rules that determined what kind of values can be included in their fields. Together, these fields form or define a catalog item. For an embodiment, these rules are defined by buyer. The validation engine\/process makes sure the field values in a catalog item follow these rules. If they do not follow the rules, errors are generated.","Additionally, embodiments include there being some approvals required by some catalog approvers (catalog approvers can be, for example, catalog experts in a buyer organization, a finance person, or a procurement person) before making a catalog available or use, consumption, or search by an end user\/buyer. A catalog updated by the means or methods of the described embodiments does not need these approvals all over again. In contrast, if the updates were required to be loaded via a newer version of the catalog, the approval process would be required all over again.","The supplier network  then responds to the request from the S\/B network  with an update to the specific product or item of the catalog. The updates in product information received from the supplier can include, for example, an indication of no change in the product information, or an indication that updates in specific products are not supported. A set of cXML responses (updates in product information) will be described later.","For embodiments, once the updates in product information are received, the catalog(s) is modified based on the updated product information. For an embodiment, a catalog index is rebuilt. Embodiments of the catalog index allow a buyer to search for product information of the catalog. Embodiments include updated product information being available to the buyer after modifying the catalog.","For embodiments, the catalog index is a repository (in file system, not database) of catalog data from various suppliers and for various buyers. The catalog data is sorted and divided based on various measures so as to make the catalog data searchable easily and faster by an end user\/buyer. These embodiments provide benefits, such as, redundancy. The catalog data can be backed up. If, for example, the primary source of catalog data is not available for some reason, the same catalog data can be served by the back up.","For an embodiment, the catalog index works on version basis. When newer and updated catalog data is received, the index is rebuilt and updated to a newer version.","Another benefit these embodiments that include the catalog index, is that they provides support for existing version of catalog data until the newer version is built. Therefore, even if the newer version fails to complete for some reason, all of the valid catalog data of the previous versions is still be maintained and available for regular search and consumption.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 2","b":["210","210","220","230","240","250","260"]},"For embodiments, the product information update includes at least one of product price, product availability, and product lead time. Other product information updates can include any like-related items. Like-related items include, for example, whether the update-requested-item is not available, any alternate items, an indication of how many counts of the update-requested-item are in store, whether the update-requested-item environment friendly, or whether available in different colors\/sizes or other parameters.","For an embodiment, the S\/B network scheduling a task for updating product information of a catalog includes the S\/B network periodically checking whether the buyer is requesting a product information update. The product information updates can be requested in various ways. For example, one embodiment includes each buyer can select a frequency in which a request for product information update is made. That is, for example, a buyer can select to request a product information update once per unit of time, such as, once a day, once a week or once a month. Alternatively, or additionally, each buyer can manually request for a product information update.","As previously described, an embodiment includes each supplier registering with the S\/B network, wherein registration includes the supplier indicating within a supplier profile whether the supplier supports product information updates. The indication can suggest, for example, that the supplier supports a Data Universal Numbering System (DUNS) number which is a widely recognized identification number, that the supplier is a women or minority owned business, a Punchout address and\/or various locations. It is to be understood that this is not an exhaustive list.","For an embodiment, the S\/B network confirming that the at least one supplier supports product information updates includes the S\/B network checking the corresponding supplier profile. The supplier profile can indicate, for example, what portions or subsets of the overall supplier profile can be provided to a buyer. For example, what updates are supported functionality is supported, such as, punch-out.","The product information requests can come in different forms. For an embodiment, the S\/B network receiving a product information request from the buyer server includes the S\/B network receiving the product information request for a specific product or item of the catalog. Once the S\/B network receives the product information request from the buyer, the S\/B network extends the request to the supplier. For an embodiment, the S\/B network requesting the product information update from the at least one supplier includes the S\/B network requesting the product information for the specific product or item of the catalog.","The S\/B network can receive various product information updates from the suppliers. The updates in product information received from the supplier can include, for example, an indication of no change in the product information, or an indication that updates in specific products are not supported.","For embodiments, once the updates in product information are received, the catalog(s) is modified based on the updated product information. For an embodiment, a catalog index is rebuilt. Embodiments of the catalog index allow a buyer to search for product information of the catalog. Embodiments include updated product information being available to the buyer after modifying the catalog. As previously described, embodiment include providing the capability to rebuild the index with just the updated information, without needing to provide a whole new version of various catalogs with changes just to price\/availability\/lead time.","Embodiments include the product information updates being customizable by each of the suppliers based on the buyer requesting the product information updates. For example, if suppliers and buyers have some contractible terms or they do good business together, the suppliers can provide preferential and lower prices or some offers to certain buyers. Alternatively, or additionally, they can make an item available to one particular buyer. That is, they can hold the item for a buyer.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 3","FIG. 2"],"b":["310","310","320","330","340","350","360"]},"For an embodiment, a supplier can send a Level 2 PunchOut catalog (described below) to all potential buyers with or without list pricing. For an embodiment, a Level 2 PunchOut allows a supplier to supply catalog items in a more useful way to customers by saving them from having to conduct searches both on their own procurement applications and the supplier site. The buyers can see all the items the supplier wishes to sell within, for example, a S\/B network (such as, Ariba Buyer\u00ae or Ariba Procure-to-Pay\u00ae), and then punch out to the supplier site to complete the purchase. The supplier benefits by being able to selectively market and push content closer to customers, since they can see full descriptions, pictures, and other product details without having to go to the supplier site. Customers benefit by being able to find the products they need faster without having to navigate through multiple search mechanisms.","Level 2 PunchOut is a mechanism or process that lets the supplier supply catalog items in a more useful way to buyers by saving the buyer from having to conduct searches on both the buyer's procurement applications and the supplier site. The buyers can see all the items the supplier wishes to sell within S\/B supplier network, and then punch out to the supplier site to complete the purchase. The supplier benefits by being able to selectively market and push content closer to buyers, since the buyer can see full descriptions, pictures, and other product details without having to go to the supplier site. Buyers benefit by being able to find the products they need faster without having to navigate through multiple search mechanisms.","A first exemplary use situation includes a supplier sending a single Level 2 PunchOut catalog to all of their buyers with list pricing or no pricing. For the product level punchout items, buyer specific pricing should be displayed and periodically check the pricing, availability and lead time of product level punchout items.","A solution to the first exemplary use situation includes the supplier configuring on a supply network whether the supplier supports responding to such update requests (as previously describe, this can be indicated in the supplier profile). For an embodiment, that means the supplier (supplier network) needs to understand an cXML request for pricing and availability updates for a several of the items and send back a cXML response for the same. For an embodiment, an application programming interface is provided that can be implemented by the supplier. The buyer network can submit a request to the supplier network with a list of items (part numbers) that the buyer would like to purchase. The supplier responds with the latest availability and optionally the latest price and lead time.","For an embodiment, the buyer network (that includes, for example, an Ariba Buyer\u00ae catalog manager) can configure the subscription to periodically (using a scheduled task) send a cXML message (for example, PriceAvailabilityRequest) to an S\/B network requesting the updates for a set of items. This can be specified at the catalog level rather than at the item level for simplicity. S\/B network receives the request, does a profile check on supplier and if the supplier supports these updates, then forwards the request from buyer to the supplier. Generally, the number of product level punchout items requested is expected to be manageable but in the case where the supplier provides a larger catalog the request can be broken up into multiple requests with each request having at most, for example, 1000 items. While it is expect that this is to be used primarily in conjunction with the S\/B network (for example, and Ariba Supplier Network\u00ae) based catalog subscriptions it should be possible to configure this as long as the supplier has been synced with S\/B network and the profile indicates that the supplier supports the product information updates. As described, embodiments also include the buyer being able to manually inquire if the supplier supports the product information requests, which is useful for providing real-time price and availability data.","As described, the supplier sends back a response with the updated data (requested product information) for the requested items. For an embodiment this includes an cXML response (such as, PriceAvailabilityResponse). The S\/B network forwards this response as is to the buyer. The buyer network receives it and re-indexes the catalogs with the updated set of information. For a specific embodiment, this includes a CatalogModification cluster root being created for each item that has price\/availability information provided by the supplier. A Catalog Modification is a place to store the details about the updated information. This contains the information about the catalog, the item in the catalog for which the update was received, the updated price if any, the updated availability info if any and the update lead time if any. This facilitates the mechanism to rebuild the index with updated information. This doesn't require or removes the need to have a new version of the catalog as the means of providing updated information.","If an existing CatalogModification already exists for that item it will be modified. The CatalogModification includes a link to the subscription it was created for. If a CatalogModification is no longer in use it is deleted or deactivated. The catalog item internal type will be modified so the price, lead time and availability attributes specify that their values are to come from the CatalogModification cluster root. If an updated price\/availability has been provided then that will override the value specified in the catalog. If any new CatalogModifications then automatically re-index either the entire subscription or just those items whose CatalogModification changed. The updated information is available in the search index and as such will be seen in the search UI however the original catalog will not be updated. If the supplier specifies that an item is no longer available, that item is not removed from the catalog but instead just give an indication on the item that it's not available any more until the supplier provides a new catalog. When the supplier specifies that an item is no longer available, provision for the supplier to specify whether a replacement part exists or not has been provided.","It can be desirable for a punchout supplier to provide a distinct custom catalog to each buyer it has a relationship with. The customization can take two forms. Different buyers may be purchasing a different subset of the items which that supplier has for sale. Additionally, different buyers may be getting different prices. If can be easier for a supplier to only have to provide one L2 punchout catalog for all their buyers.","Additional embodiments for catalog content customization can include, filtering out those items in the catalog which the buyers don't actually want to purchase. Additionally or alternatively, it can be desirable to either hide all prices for that punchout catalog or use a separate mechanism to load our custom prices.","The described embodiments provide a couple of advantages for suppliers. The buyer provides the list of items it wants pricing (requested product information) for so the supplier's application may not need to be concerned with which items that buyer purchases when responding to the product information request. Also the described embodiments include a pull of data which simplifies things for a supplier that was currently generating catalog files and manually uploading them onto S\/B network.","A situation can arise in which an item (for example, a product) has been added to a shopping cart either from a punchout request or a local catalog item. In the case of the punchout request, the information is accurate as of the time the punchout request was made. In the case of the local catalog item, the information is accurate as of the time the catalog was provided by the supplier. At various points in the requisition workflow it can be desirable to use the embodiments for requesting product information updates on the contents of the shopping cart to update the content. The catalog manager (for example, the S\/B network) can configure how out of date an item for a given catalog should be before its contents are refreshed. This involves requesting information about the handful of items in the shopping cart rather than a significant subset of the catalog. It's possible that additional attributes besides price and lead-time are updated on the requisition based upon the supplier's response.","The described embodiment can further be adapted to allow a buyer to punch into a catalog for content. A product information request (for example, PriceAvailability) API can be used to check if the items are still available or if the pricing has changed at the moment content is returned to the procurement application.","A list of cXML messages have been introduced in an implementation of the described embodiments. Such xXML messages include, for example:","<!\u2014","Definition of Price Availability Request. This is the data sent to external catalog source (e.g. supplier) containing the items for price and availability updates.",{"@attributes":{"id":"p-0054","num":"0053"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"-->"},{"entry":"<!ELEMENT PriceAvailabilityRequest (PriceAvailabilityRequestItem+)>"},{"entry":"<!--"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0055","num":"0054"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"-->"]},{"entry":[{},"<!ELEMENT PriceAvailabilityResponse"]},{"entry":[{},"(PriceAvailabilityResponseItem+)>"]},{"entry":[{},"<!--"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The representation of a line item as it needs to be for price availability request.",{"@attributes":{"id":"p-0057","num":"0056"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"-->"},{"entry":"<! ELEMENT PriceAvailabilityRequestItem (ItemOut, Extrinsic*)>"},{"entry":"<!--"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The representation of a line item as it needs to be for price availability response.",{"@attributes":{"id":"p-0059","num":"0058"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"-->"},{"entry":"<!ELEMENT PriceAvailabilityResponseItem (ItemIn, Extrinsic*)>"},{"entry":"<!ATTLIST PriceAvailabilityResponseItem"},{"entry":"\u2003type (available | unavailable | temporarilyUnavailable | unknown |"},{"entry":"unrecognized | excluded ) #IMPLIED"},{"entry":">"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"As previously described, the supplier network  responds to requests from the S\/B network , with product updates to the specific products or items of the catalog. The updates in product information received from the supplier can include, for example, an indication of no change in the product information, or an indication that updates in specific products are not supported. A set of more specific cXML responses including, for example a responses of Available, which implies that the requested item is available with the supplier and the supplier can optionally attach the latest price and lead time in the response to Buyer as part of the ItemIn element. Another response includes Unavailable, which implies that the requested item is unavailable with the supplier. Another response includes TemporarilyUnavailable, that implies that the requested item is temporarily unavailable with the supplier and the supplier can optionally attach the lead time & latest price in the response to buyer as part of the ItemIn element.","The ItemIn element is the representation of a line item as it needs to be for sending to a buyer. For example,",{"@attributes":{"id":"p-0062","num":"0061"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!ELEMENT ItemIn (ItemID, ItemDetail, SupplierID?, ShipTo?,"]},{"entry":[{},"Shipping?, Tax?)>"]},{"entry":[{},"<!ATTLIST ItemIn"]},{"entry":[{},"\u2003quantity % int; #REQUIRED"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The ItemIn contains ItemDetail that essentially has detailed information about an item. All the data that a user wants to see about an item instead of the bare essentials that are represented in the ItemID. For example, Unit price or LeadTime which is the time in days to receive the item. For example,",{"@attributes":{"id":"p-0064","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<!ELEMENT ItemDetail (UnitPrice, Description+, UnitOfMeasure,"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Classification+, ManufacturerPartID?,"]},{"entry":[{},"ManufacturerName?, URL?, LeadTime?, Extrinsic*)>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"No timeframe is provided about when it will become available. Another response includes Unknown, that implies that the availability status of the requested item is unknown. Another response includes Unrecognized, that implies that the requested item is an invalid item and not recognized by the supplier. Another response includes Excluded, that implies that the requested item is part of the generic catalog the supplier provides but is being filtered on the punchout site so it's not being shown to this buyer.","Ariba Buyer\/Buyer: is an integral part of Ariba Spend Management Solutions, Ariba Buyer securely automates the full buying cycle to improve cross-enterprise management and tracking of spend operations. Ariba Buyer helps customers streamline the purchase of goods and services to reduce processing time and costs, improve management and leverage of spend, and maximize collaboration with a global network of trading partners. With Ariba Buyer, customers achieve rapid cost savings by increasing the efficiency of the entire procurement process. The Ariba buyer can be equated with the buyer network .\n\nASN: Ariba Supplier Network. Also referred to as Ariba Network (AN)-Ariba Supplier Network gives companies a comprehensive, shared business solution that automates and streamlines multiple business processes, from trading partner discovery to transaction management to financial settlement. The Ariba buyer can be equated with the supplier network .\n\nCatalog: is a structured database with information about products items or services in a standardized format. Catalogs loaded in Ariba Buyer follow the CIF format or cXML standard.\n\nClusterroot: Embodiments include a layer of abstraction on top of the database called the Base Object layer. This allows manipulating, querying, and accessing objects in the database from Java code without needing to know details of the underlying database representation.\n","The basic functionality for persisting objects into the database is implemented in the BaseObject class. This class, together with the other classes in the Base Object layer, provides code that reads metadata XML type declarations, generates a database schema from those declarations, and handles database save and retrieve operations. For embodiments, every class that is saved to the database must inherit (either directly or indirectly) from the class BaseObject. Other objects do not persist after the server is shut down.","A cluster root (ClusterRoot) is a subclass of BaseObject. A cluster is a collection of related base objects, which moves between the database and the server as a unit. Clusters help improve database performance and efficiency, by providing hints about how data should be grouped. For example, when an object is cached, the entire cluster is cached. When an application accesses an object in memory, the entire cluster is pulled into memory. When allocating database tables, Ariba Buyer typically allocates one database table per cluster, and not one for each base object.","A cluster root is typically a \u201ctop level\u201d object of interest throughout the system, whereas base objects have meaning only in the context of a containing cluster root. For example, Address, PCard, Approvable, and Supplier are all ClusterRoots, because they are each objects that are meaningful without requiring any additional context. On the other hand, a specific money amount, such as $19.63, has meaning only within a specific context, such as a requisition, expense report, or line item.","cXML: cXML is a streamlined protocol intended for consistent communication of business documents between procurement applications, e-commerce hubs and suppliers. The protocol does not include the full breadth of interactions some parties may wish to communicate. However, through the use of Extrinsic elements and newly-defined domains for various identifiers, it is easily expanded by such applications. This expansion is the limit of point-to-point configurations necessary for communication. The current standard includes documents for setup (company details and transaction profiles), catalogue content, application integration (including the widely-used PunchOut feature), original, change and delete purchase orders and responses to all of these requests, order confirmation and ship notice documents (cXML analogues of EDI 855 and 856 transactions) and new invoice documents.",{"@attributes":{"id":"p-0071","num":"0070"},"figref":["FIG. 4","FIG. 4","FIG. 4"],"b":["400","110"]},"The computer system  is shown comprising hardware elements that can be electrically coupled via a bus  (or may otherwise be in communication, as appropriate). The hardware elements can include one or more processors , one or more input devices , which can include without limitation a mouse, a keyboard and\/or the like; and one or more output devices , which can include without limitation a display device, a printer and\/or the like. The computer system  may further include (and\/or be in communication with) one or more storage devices . The computer system  also can comprise software elements, shown as being located within the working memory , including an operating system  and\/or other code, such as one or more application programs , which may comprise computer programs of the described embodiments, and\/or may be designed to implement methods of the described embodiments and\/or configure systems of the embodiments as described herein.","Another embodiment includes a program storage device readable by a machine (of the B\/S network), tangibly embodying a program of instructions executable by the machine to perform a method of providing catalog updates. The method performed includes a supplier\/buyer (S\/B) network the S\/B network receiving a request for an update of product information of a catalog. The S\/B network server receives a profile request of at least one supplier from a buyer. The S\/B network confirming that the at least one supplier supports product updates. If the at least one supplier supports product information updates, then the S\/B network receives a request for a product information update from the buyer, and requests the product information update from the at least one supplier. The S\/B network receiving the product information update from the at least one supplier, and the S\/B network updates the catalog based on the product information update.","Although specific embodiments have been described and illustrated, the embodiments are not to be limited to the specific forms or arrangements of parts so described and illustrated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
