---
title: Method, system, and computer program product for blending textures in a texture paging scheme
abstract: Methods, systems, and computer program products for blending textures used to render computer generated images are provided. In an embodiment of the invention, a MIP-mapped mask texture is constructed. Each MIP-level of the MIP-mapped mask texture includes texels representative of different mask information. The MIP-mapped mask texture is sampled during rendering to obtain mask information. The obtained mask information is used to blend between textures. The invention is used to blend, for example, between multiple textures wherein, zero, one, or more of the textures are MIP-mapped and/or between different levels of one or more three-dimensional textures. In an embodiment, the most appropriate texture amongst multiple textures, each providing coverage at different resolutions, is selected for a fragment being rendered, thereby avoiding texture scintillation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07295212&OS=07295212&RS=07295212
owner: Silicon Graphics, Inc.
number: 07295212
owner_city: Sunnyvale
owner_country: US
publication_date: 20030430
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION","EXAMPLE ARCHITECTURE AND ENVIRONMENT OF THE PRESENT INVENTION","EXAMPLE SYSTEM EMBODIMENT OF THE PRESENT INVENTION","EXAMPLE METHOD EMBODIMENT OF THE PRESENT INVENTION","EXAMPLE COMPUTER SYSTEM FOR IMPLEMENTING EMBODIMENTS OF THE PRESENT  INVENTION","CONCLUSION"],"p":["This application is a continuation-in-part of commonly owned U.S. application Ser. No. 10\/183,553, filed Jun. 28, 2002, now U.S. Pat. No. 6,809,739, and this application claims the benefit of U.S. Provisional Application No. 60\/376,223, filed Apr. 30, 2002, each of which is incorporated herein by reference in its entirety.","The invention relates to computer graphics. More particularly, it relates to rendering of a computer generated image.","Computer systems are used to render all kinds of images for display. In general, it is important that images rendered for display appear as realistic to a viewer as possible. It is also important in many applications that the computer system used to render images for display operate at an interactive rate.","Many computer systems used to render images for display have graphics processors. Graphics processors allow for flexibility in the configuration of the per-pixel computation stage of their graphics rendering pipeline. This makes it possible, for example, to implement at interactive rates complex algorithms for combining, blending, and\/or modulating multiple textures in a single pass through the graphics rendering pipeline.","Using a graphics processor, it is possible, for example, to perform a per-fragment texture selection based on spatial mask-information encoded in an additional texture. This is particularly useful in a terrain texture paging scheme, where multiple textures (each providing coverage for a contiguous subregion of the terrain) need to be spatially selected on a per-fragment basis during rendering of a single primitive. U.S. application Ser. No. 10\/183,553, which is incorporated by reference herein in its entirety, describes how a mask texture containing properly encoded information on the spatial coverage of various textures can be sampled to obtain a per-fragment mask value.","While techniques for blending textures exists, these techniques have limitations. For example, the blending techniques that exist select textures based on spatial availability information. There are situations, however, where selecting textures based only on spatial availability information will result in the selection of the textures providing coverage at the highest available resolution for each fragment. These situations include, for example, implementations where the available textures (or a subset of them) are not MIP-mapped, and where some regions of terrain imagery are present in more than one texture at different resolutions. Because, in these situations, the selected textures of higher resolution are not MIP-mapped, their usage over areas of the terrain whose area projected to screen-space is small will cause visible aliasing problems or texture scintillation.","What is needed is a texture selection scheme and blending technique that do not exhibit texture scintillation for the situations described above.","The present invention provides a method, system, and computer program product for blending textures used to render images. In an embodiment, the present invention involves constructing a MIP-mapped mask texture, wherein each MIP-level of the MIP-mapped mask texture includes texels representative of different mask information, sampling the MIP-mapped mask texture to obtain mask information, and using the mask information obtained to blend between textures.","In an embodiment of the present invention, multiple textures of progressively higher resolution provide coverage for concentric square regions of a terrain. Textures of progressively higher resolution provide coverage, for example, at four-times the resolution (two-times width, two-times height) of preceding textures. In this way, the area covered by one texture is also covered by other textures with a lower resolution, and a single texture provides full coverage for areas covered by textures with a higher resolution. Then, by appropriately biasing the MIP-level selection computation for the MIP-mapped mask texture, each MIP-level in the MIP-mapped mask texture is set to correspond to the resolution provided by the textures. Textures providing coverage for fragments at a resolution closest to the resolution associated with the MIP-level of the mask selected by the graphics processor unit, are favored over textures of higher resolution that also provide coverage for fragments being rendered.","In an embodiment of the present invention, the present invention selects the most appropriate texture amongst multiple textures, each providing coverage at different resolutions, for a fragment being rendered.","In an embodiment of the present invention, the MIP-mapped mask texture is constructed from integer values. In another embodiment, the MIP-mapped mask texture is constructed from floating-point values.","In an embodiment of the present invention, the mask information obtained from the MIP-mapped mask texture is a point sample value. In another embodiment, the mask information obtained from the MIP-mapped mask texture a filtered value such as, for example, a bi-linearly filtered sample, a tri-linearly filtered sample, or an anisotropicly filtered sample.","It is a feature of the present invention that the MIP-mapped mask texture can be constructed from many different types of values. For example, in an embodiment, the MIP-mapped mask texture is constructed from single component values. In other embodiments, the MIP-mapped mask texture is constructed, for example, from two component values, three component values, or four component values.","It is also a feature of the present invention that it can be used to blend many different types of textures. For example, the present invention can be used to blend between multiple textures wherein, zero, one, or more of the textures are MIP-mapped. The present invention can also be used, for example, to blend between different levels of one or more three-dimensional textures. Other embodiments of the present invention blend between still other types of textures.","Further features and advantages of the present invention, as well as the structure and operation of various embodiments of the present invention, are described in detail below with reference to the accompanying drawings.","As described herein, the present invention provides a method, a system, and a computer program product for blending textures used to render images. The detailed description of the present invention that follows begins with a terminology subsection that defines terms used to describe the present invention. This subsection is followed by subsections that describe in detail various embodiments of the present invention. Finally, this section concludes by describing a computer system that can be used to implement, for example, system and computer program product embodiments of the present invention.","Terminology","The following terms are defined so that they may be used to describe embodiments of the present invention. As used herein:","\u201cClip texture emulation scheme\u201d means a texture paging scheme that emulates the hardware clip-texturing of INFINITE REALITY graphics systems, available from Silicon Graphics, Incorporated, Mountain View, Calif. This hardware supports, for example, displaying textures that are too large to fit in available graphics processor memory or system memory.","\u201cFragment\u201d means an image point and its associated information such as color, depth, and texture data.","\u201cImage\u201d means an array of data values. A typical image might have red, green, blue, and\/or alpha pixel data, or other types of pixel data information as known to a person skilled in the relevant art.","\u201cMask\u201d or \u201cMask Texture\u201d means an array of values used to blend between textures. Typically, values of a mask or mask texture are used as weighting factors associated with particular texels blended together to form a texel.","\u201cMIP-mapped mask texture\u201d means a data structure, formed from textures, from which mask information or mask values can be obtained. This data structure is similar to a conventional MIP-mapped data structure. Different levels of a MIP-mapped mask texture include different mask information. This different mask information can be used to select among different resolution textures. Such a MIP-mapped mask texture can be stored in any type of layout in any type of memory.","\u201cPixel\u201d means a data structure, which is used to represent a picture element. Any type of pixel format can be used.","\u201cReal-time\u201d or \u201cInteractive Rate\u201d refers to a rate at which successive display images can be redrawn without undue delay upon a user or application. This can include, but is not limited to, a nominal rate of between 30-60 frames\/second. In some example embodiments, such as some flight simulators or some interactive computer games, an interactive rate maybe approximately 10 frames\/second. In some examples, real-time can be one update per second.","\u201cTexture\u201d means an array of texels. A texel can be a color or an intensity value. A texture can be any array of values that is used to determine a value for a pixel. As used herein, the term \u201ctexture\u201d includes, for example, texture maps, bump maps, and gloss maps. A texture can also be used as mask information to blend or to combine other textures.","\u201cTexel\u201d means a texture element.","\u201cTexture sample\u201d means a sample selected from a texture map or texture. The sample can represent one texel value or can be formed from two or more texel values blended together. Different weighting factors can be used for each texel blended together to form a texel. The terms \u201ctexel\u201d and \u201ctexture sample\u201d are sometimes used interchangeably.","\u201cTexture unit\u201d refers to graphics hardware, firmware, and\/or software that can be used to obtain a texture sample (e.g., a point sample or a filtered texture sample) from a texture. A texture unit can in some instances obtain multiple texture samples from multiple textures.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 1","b":"100"},"Architecture  includes six overlapping layers. Layer  represents a high level software application program. Layer  represents a three-dimensional (3D) graphics software tool kit, such as OPENGL PERFORMER, available from Silicon Graphics, Incorporated. Layer  represents a graphics application programming interface (API), which can include but is not limited to OPENGL, available from Silicon Graphics, Incorporated. Layer  represents system support such as operating system and\/or windowing system support. Layer  represents firmware. Finally, layer  represents hardware, including graphics hardware. Hardware  can be any hardware or graphics hardware including, but not limited to, a computer graphics processor (single chip or multiple chip), a specially designed computer, an interactive graphics machine, a gaming platform, a low end game system, a game console, a network architecture, et cetera. Some or all of the layers - of architecture  will be available in most commercially available computers.","As will be apparent to a person skilled in the relevant art after reading the description of the invention herein, various features of the invention can be implemented in any one of the layers - of architecture , or in any combination of layers - of architecture .","In an embodiment, the invention is used to blend multiple textures in a dynamic texture paging scheme. The textures that are blended according to this embodiment provide coverage for different areas of a larger (virtual) image at potentially different resolutions. In an embodiment, the blended textures cover overlapping areas of a larger (virtual) image.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 2","FIG. 2"],"b":["200","200","202","204","204","206","202","204","208","208","206","210"]},"As can be seen in , texture paging scheme  creates boundaries between the pages of texture or texture regions stored in system memory  and texture memory . In an embodiment, the present invention is used to blend different pages of texture or texture regions using mask information obtained from a MIP-mapped mask texture.","In an embodiment, the invention is used to blend multiple roaming levels in a clip texture emulation scheme. These roaming levels may be consecutive roaming levels or non-consecutive roaming levels. As will be understood by a person skilled in the relevant art given the description herein, two consecutive roaming level textures comprise two independent textures of equal size representing two concentric subregions of a larger (virtual) image. One of the two roaming level textures covers, for example, four times the area covered by the other roaming level texture, but at one-fourth the resolution.","In another embodiment, the consecutive levels being blended may be non-roaming levels or a mixture of roaming levels and non-roaming levels.","In yet another embodiment, the levels being blended can be different levels of a three-dimensional texture or different levels of multiple three-dimensional textures.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 3","b":["320","320","322","206","330","320","206","324"]},"Taken together, the plurality of roaming levels  make up a \u201cclip stack.\u201d The clip stack is essentially a partial MIPMAP that is dynamically updated. Highest resolution texture data is available only around a particular point in MIP-level . This particular point is called the \u201cclip center.\u201d By repositioning the clip center and managing the off-disk texture loading and caching, the present invention enables one skilled in the relevant arts to dynamically roam over and zoom in and out of huge textured regions, thereby facilitating, for example, unconstrained viewing of high resolution imagery at real-time rates without texture scintillation.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 4","b":["400","400","410","420","470","400","400"]},"Host system  includes an application program , a hardware interface or graphics API , a processor , and a memory . Application program  is any program requiring the rendering of a computer image. The computer code of application program  is executed by processor . Application program  assesses the features of graphics subsystem  and display  through hardware interface or graphics API . Memory  stores information used by application program .","Graphics subsystem  includes a vertex operation module , a pixel operation module , a rasterizer , a texture memory , and a frame buffer . Texture memory  can store one or more textures or images, such as texture . Texture memory  is connected to a texture unit  by a bus (not shown). Rasterizer  includes a texture unit  and a blending unit . Texture unit  and blending unit  can be implemented separately or together as part of a graphics processor. The operation of these features of graphics system  would be known to a person skilled in the relevant art given the description herein.","In embodiments of the present invention, texture unit  can obtain multiple point samples or multiple filtered samples from textures and\/or images stored in texture memory , including a MIP-mapped mask texture according to the present invention. Blending unit  blends texels and\/or pixel values according to weighting values to produce a fragment, texel, or pixel. These weight values can include values of zero. The output of texture unit  and\/or blending unit  is stored in frame buffer . Display  can be used to display images stored in frame buffer .","The embodiment of the invention shown in  has a multipass graphics pipeline. It is capable of operating on each pixel of an image (object) during each pass that the image makes through the graphics pipeline. For each pixel of the image, during each pass that the image makes through the graphics pipeline, texture unit  can obtain at least one texture sample from the textures and\/or images stored in texture memory .","Further features and advantages of graphics system  will be understood by persons skilled in the relevant arts given the description of the present invention herein.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 5","FIG. 5"],"b":["500","500","502","504","506","502","504","506","504"]},"As noted above, in step  a MIP-mapped mask texture is constructed that includes a plurality of mask textures such as, for example, a mask texture  illustrated in . An example MIP-mapped mask texture  is shown in . Mask texture  and MIP-mapped mask texture  are further described below with reference to  and .","As illustrated in , each MIP-level of a MIP-mapped mask texture according to the present invention includes texels representative of different mask information. The structure of a MIP-mapped mask texture according to the present invention is similar to a conventional MIP-mapped data structure.","In an embodiment of the invention, the MIP-mapped mask texture is constructed from a plurality of single component values. In other embodiments, the MIP-mapped mask texture is constructed, for example, from a plurality of two component values, three component values, or four component values. Each of these values can be either an integer value or a floating-point value.","In step , the MIP-mapped mask texture constructed in step  is sampled to obtain mask information. In an embodiment of the present invention, the mask information obtained from the MIP-mapped mask texture is a point sample value. In another embodiment, the mask information obtained from the MIP-mapped mask texture is a filtered value such as, for example, a bi-linearly filtered sample, a tri-linearly filtered sample, or an anisotropicly filtered sample. It is an advantage of the present invention that these values can be obtained using the processing capabilities of available graphics processors.","In step , the texture coordinates of the geometry may have to be modified before they are used to sample the mask texture. In an embodiment, this is accomplished by linearly transforming the texture coordinates of the geometry so that the current coordinates of the clip center are mapped to (0.5, 0.5). The coordinates are also scaled so that the regions in the mask texture are accurately mapped over the regions of the terrain for which textures in the clip stack provide coverage. The highest resolution MIP-level of the mask encodes the maximum available resolution for each fragment.","In an embodiment, the MIP-level selection of the mask texture is biased as follows. Assume, for example, that M\u00d7M is the size of the smallest region encoded in the mask texture, and T\u00d7T is the size of each texture in the clip stack, then the MIP selection is biased by log (T\/M). The result of sampling the mask with this bias is used to compute the correct MIP-level selection for the clip stack, or more precisely, the minimum between the available resolution and the correct MIP-level resolution for every pixel.","In step , the mask information obtained in step  is used to blend between a plurality of textures. In an embodiment, this is accomplished as follows. First, the mask information obtained in step  is used to calculate coefficients that represent blending weights. Next, these blending weights are associated with texture samples obtained from available textures. Finally, the blending weights are used with their associated texture samples in a summation operation to produce fragments, texels, and\/or pixels. How this is accomplished will be understood by persons skilled in the relevant arts given the description herein.","In an embodiment, the present invention selects the most appropriate texture amongst multiple textures, each providing coverage at different resolutions, for a fragment being rendered. This is accomplished, for example, by assigning a blending weight of zero to any texture samples obtained from a texture other than the most appropriate texture.","In an embodiment, the present invention is used to blend between multiple textures of progressively higher resolution. These multiple textures provide coverage, for example, for concentric square regions of a terrain. The textures of progressively higher resolution provide coverage at four-times the resolution (two-times width, two-times height) of preceding textures. In this way, the area covered by one texture is also covered by other textures with a lower resolution, and a single texture provides full coverage for areas covered by textures with a higher resolution.","It is a feature of the present invention that it can be used to blend many different types of textures. For example, the present invention can be used to blend between multiple textures wherein, zero, one, or more of the textures are MIP-mapped. The present invention can also be used, for example, to blend between different levels of one or more three-dimensional textures. Other embodiments of the present invention blend between still other types of textures.",{"@attributes":{"id":"p-0067","num":"0066"},"figref":["FIG. 6","FIG. 6"],"b":["600","600","602","604","606","602","604","602","604","604","606"]},"As described in U.S. application Ser. No. 10\/183,553, the values of mask texture  can be extracted and used to form masks. These masks are used, for example, to blend between any three consecutive roaming level textures (e.g., a high resolution texture, a medium resolution texture, and a low resolution texture) and form a blended image. A mask value of 1.0 indicates that a fragment value from the high resolution texture is used to form the blended image. A mask value between 1.0 and 0.5 indicates that a linear blend between the high resolution texture and the medium resolution texture is used. A mask value of 0.5 indicates that a fragment value from the medium resolution texture is used to form the blended image. A mask value between 0.5 and 0.0 indicates that a linear blend between the medium resolution texture and the low resolution texture is used. Finally, a mask value of 0.0 indicates that a fragment value from the low resolution texture is used to form the blended image. In an embodiment, the low resolution texture is a base texture.","Mask texture  is only illustrative, and it is not intended to limit the invention. Other textures according to the invention have non-square regions and more or fewer regions than that of mask texture .",{"@attributes":{"id":"p-0070","num":"0069"},"figref":["FIG. 7","FIG. 7"],"b":["710","710","720","730","740","710","500","710"]},"MIP level  has a white square region , a gray square region , and a black square region . The values in the white square region  are equal to 1.0. The values in the gray square region  are equal to 0.5. The values in the black square region  are equal to 0.0. The region between white square region  and gray square region  contains values between 1.0 and 0.5. The region between gray square region  and black square region  contains values between 0.5 and 0.0.","MIP level  has a gray square region  and a black square region . The values in the gray square region  are equal to 0.5. The values in the black square region  are equal to 0.0. The region between gray square region  and black square region  contains values between 0.5 and 0.0.","MIP level  has a black square region . The values in the black square region  are equal to 0.0.","In an embodiment, the values of MIP-mapped mask texture  are used as mask information to select and\/or blend between three roaming level textures (e.g., a high resolution texture, a medium resolution texture, and a low resolution texture) as described herein. A mask value of 1.0 indicates that a fragment value from a high resolution texture is used. A mask value between . and 0.5 indicates that a linear blend between the high resolution texture and a medium resolution texture is used to form a fragment value. A mask value of 0.5 indicates that a fragment value from the medium resolution texture is used. A mask value between 0.5 and 0.0 indicates that a linear blend between the medium resolution texture and a low resolution texture is used to form a fragment value. Finally, a mask value of 0.0 indicates that a fragment value from the low resolution texture is used.",{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 8","b":["800","800"]},"Computer system  includes one or more processors, such as processor , and one or more graphics subsystems, such as graphics subsystem . One or more processors  and one or more graphics subsystems  can execute software and implement all or part of the features of the present invention described herein. Graphics subsystem  can be implemented, for example, on a single chip as a part of processor , or it can be implemented on one or more separate chips located on a graphic board. Each processor  is connected to a communication infrastructure  (e.g., a communications bus, cross-bar, or network). After reading this description, it will become apparent to a person skilled in the relevant art how to implement the invention using other computer systems and\/or computer architectures.","Computer system  also includes a main memory , preferably random access memory (RAM), and can also include secondary memory . Secondary memory  can include, for example, a hard disk drive  and\/or a removable storage drive , representing a floppy disk drive, a magnetic tape drive, an optical disk drive, etc. The removable storage drive  reads from and\/or writes to a removable storage unit  in a well-known manner. Removable storage unit  represents a floppy disk, magnetic tape, optical disk, etc., which is read by and written to by removable storage drive . As will be appreciated, the removable storage unit  includes a computer usable storage medium having stored therein computer software and\/or data.","In alternative embodiments, secondary memory  may include other similar means for allowing computer programs or other instructions to be loaded into computer system . Such means can include, for example, a removable storage unit  and an interface . Examples can include a program cartridge and cartridge interface (such as that found in video game devices), a removable memory chip (such as an EPROM, or PROM) and associated socket, and other removable storage units  and interfaces  which allow software and data to be transferred from the removable storage unit  to computer system .","In an embodiment, computer system  includes a frame buffer  and a display . Frame buffer  is in electrical communication with graphics subsystem . Images stored in frame buffer  can be viewed using display .","Computer system  can also include a communications interface . Communications interface  allows software and data to be transferred between computer system  and external devices via communications path . Examples of communications interface  can include a modem, a network interface (such as Ethernet card), a communications port, etc. Software and data transferred via communications interface  are in the form of signals which can be electronic, electromagnetic, optical or other signals capable of being received by communications interface , via communications path . Note that communications interface  provides a means by which computer system  can interface to a network such as the Internet.","Computer system  can include one or more peripheral devices , which are coupled to communications infrastructure  by graphical user-interface . Example peripheral devices , which can from a part of computer system , include, for example, a keyboard, a pointing device (e.g., a mouse), a joystick, and a game pad. Other peripheral devices , which can form a part of computer system  will be known to a person skilled in the relevant art given the description herein.","The present invention can be implemented using software running (that is, executing) in an environment similar to that described above with respect to . In this document, the term \u201ccomputer program product\u201d is used to generally refer to removable storage unit , a hard disk installed in hard disk drive , or a carrier wave or other signal carrying software over a communication path  (wireless link or cable) to communication interface . A computer useable medium can include magnetic media, optical media, or other recordable media, or media that transmits a carrier wave. These computer program products are means for providing software to computer system .","Computer programs (also called computer control logic) are stored in main memory  and\/or secondary memory . Computer programs can also be received via communications interface . Such computer programs, when executed, enable the computer system  to perform the features of the present invention as discussed herein. In particular, the computer programs, when executed, enable the processor  to perform the features of the present invention. Accordingly, such computer programs represent controllers of the computer system .","In an embodiment where the invention is implemented using software, the software may be stored in a computer program product and loaded into computer system  using removable storage drive , hard drive , or communications interface . Alternatively, the computer program product may be downloaded to computer system  over communications path . The control logic (software), when executed by the one or more processors , causes the processor(s)  to perform the functions of the invention as described herein.","In another embodiment, the invention is implemented primarily in firmware and\/or hardware using, for example, hardware components such as application specific integrated circuits (ASICs). Implementation of a hardware state machine so as to perform the functions described herein will be apparent to a person skilled in the relevant art.","Various embodiments of the present invention have been described above, which are capable of being implemented on an interactive graphics machine. It should be understood that these embodiments have been presented by way of example only, and not limitation. It will be understood by those skilled in the relevant art that various changes in form and details of the embodiments described above may be made without departing from the spirit and scope of the present invention as defined in the claims. Thus, the breadth and scope of the present invention should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS\/FIGURES","p":["The present invention is described with reference to the accompanying figures. In the figures, like reference numbers indicate identical or functionally similar elements. Additionally, the leftmost digit or digits of a reference number identify the figure in which the reference number first appears. The accompanying figures, which are incorporated herein and form part of the specification, illustrate the present invention and, together with the description, further serve to explain the principles of the invention and to enable a person skilled in the relevant art to make and use the invention.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
