---
title: Cross-platform mobile application development
abstract: A cross-platform software development kit and related services supports the use of platform-generic mobile applications across a variety of mobile platforms. These generic applications may consist of and be developed in a purely content-based format, without requiring any binary files to be distributed alongside a generic content application. Such applications may access platform-specific resources of a mobile device using generic device resource request tags. A platform-specific native shell running on a mobile device accesses a generic content application and identifies device resource request. In response, the platform-specific native shell performs platform-specific functionality associated with the requested device resource.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08612933&OS=08612933&RS=08612933
owner: Amazon Technologies, Inc.
number: 08612933
owner_city: Reno
owner_country: US
publication_date: 20110624
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION OF SPECIFIC EMBODIMENTS","CONCLUSION"],"p":["Applications created for mobile devices form a growing industry. Individuals, corporations, and other entities are creating an increasing number and variety of mobile applications. Often, a particular version of a mobile application will only work on mobile devices using the specific mobile device platform for which the mobile application was developed. However, there are a number of popular mobile device platforms. This can pose a number of problems to mobile application developer. A developer may limit development of a mobile application to only a subset of mobile device platforms, thereby limiting the number of potential users and\/or customers. Should the developer wish to expand the number of mobile platforms on which a mobile application may be used, the developer may need to expend additional resources to create new versions for the additional mobile platforms. Supporting multiple versions, each released for a separate mobile platform, can add cost, stress and delay to the software support lifecycle. Also, the ability to create and support different versions of a mobile application for different mobile platforms may require that a developer learns about and stays current on differing implementation details for the various mobile platforms. Faced with this variety of platform-specific implementation details, a developer may inadvertently introduce bugs into the mobile applications.","Advances in modern software development have allowed for a limited degree of cross-platform mobile application development, but many shortcomings still exist. For example, a developer may be able to reuse some portions of a mobile application created for one platform when creating a version of that mobile application for a different platform. However, portions of that mobile application which interact with certain mobile device resources may need to be rewritten for the different platform. These mobile device resources may include the hardware or related software (e.g., a driver) of the mobile device, such as a camera, a global positioning satellite (\u201cGPS\u201d) receiver, an accelerometer, a gyroscope, a communications radio, a user input receiver (e.g., multi-touch user input), file management and data storage. Using existing software development tools and techniques, portions of a mobile application which interact with such mobile device resources may need to be implemented separately for different mobile device platform.","Additionally, there are many software developers whose experience and knowledge is focused on development of applications designed to operate in a network hosted environment. Some of these developers may be unfamiliar with mobile application development but may nonetheless wish to create mobile applications. However, knowledge of hosted application development may not be entirely sufficient for the creation of a mobile application. For example, a developer accustomed to creating hosted applications may expect certain host resources to be available to an application. Examples of these host resources may host-based storage, a database service, a message forwarding service, and a reply\/request interface. As one or more of these host-based resources may be unavailable mobile applications running on certain mobile platforms, such a developer may face a challenge of unfamiliar development constraints when creating a mobile application. Or, a developer may simply prefer to develop applications which have access to host resources. Alternatively or additionally, a developer may wish create a mobile application with access to host resources which typically require a network connection to access, but may also want the mobile application to have access to those host resources even when it lacks a network connection.","Furthermore, there are a number of network resources which may be useful for a mobile application to access. Examples of such network resources include electronic catalogues and the items which they contain, metric data, and advertisements. To the extent that a network resource can be accessed by a mobile device, there may be one or more restrictions which complicate such access. For example, an implementation for accessing such a network resource may require a significant amount of work to establish a connection, authenticate, and request the network resource. This may need to be implemented in a format specific to the particular network resource. For example, one electronic catalog may have an application programming interface (\u201cAPI\u201d) which allows a mobile device to access the electronic catalog's contents using uniquely formatted queries and\/or parameters. Another electronic catalog may have a separate API which requires the use of differently formatted queries and\/or parameters. A mobile application developer may need to be familiar with this variety of API's in order to create a mobile application capable of accessing the various electronic catalogues.","Some network resource requests may require complex implementations beyond what can currently be accessed through the content of a mobile application. For example, a developer may need to use a non-content-based implementation to access a network resource, when that developer would be more easily able to create content-based applications. As another example, a party exercising control over a network resource may change the format required to interact with the network resource. This may cause existing versions of mobile applications which could previously access the network resource to no longer be capable of accessing the network resource.","Mobile Device Resource References",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1"},"To create the single version of the application in this example, the developer creates a generic content application  which includes a generic device resource tag found in a generic device resource tag library . For example, the generic device resource tag library may indicate that, within the context of this system, the generic <camera> tag can be used to access the camera of a mobile device. The developer includes the <camera> tag within the generic content application  while creating the generic content application . Once the generic content application is complete, the developer submits it to a network application system .","The user of an Android mobile device  downloads the generic content application  from the network application system . The user of an iOS mobile device  also downloads the generic content application  from the network application system . The network application system  also provides each user with a native shell service specific to their mobile device's operating system. When the Android device runs the generic content application , the platform A native shell service  recognizes the <camera> tag as a mobile device resource reference requiring platform-specific access and provides the appropriate access to the Android mobile device's camera. The mobile device resource reference may be associated with a mobile device resource request. Similarly, when the iOS device runs the generic content application , the platform B native shell service  recognizes the <camera> tag as a mobile device resource reference requiring platform-specific access and provides the appropriate access to the iOS mobile device's camera.","Developer Workstation","The components illustrated within the present embodiment will next be described in greater detail to further illustrate how the embodiment provides cross-platform access to platform-specific mobile device resources. A developer may use a developer workstation  to create one or more generic content applications . The developer workstation may, for example, be a desktop or laptop computer. In the present embodiment, the developer may store one or more copies, including the work-in-progress copy, of a generic content application  on the developer workstation . In other embodiments, one or more copies are stored external to the developer workstation . It will be understood that the numbering \u201c101\u201d used to identify the generic content application(s)  indicates the generic content application(s) itself or themselves, rather than a storage medium used to store the generic content application(s). For example, as illustrated in , the same generic content application may be stored on a developer workstation , on a network application system , and on mobile devices , . A device or service storing one or more generic content applications  need not store each generic content application  which other devices and services store.","A developer may reference a generic device resource tag library , for example in order to review a list of available generic device resource tags, identify a mobile device resource tag associated with a mobile device resource reference which the developer wishes to include in a generic content application , and\/or to reference the proper syntax, format, or other use of the generic device resource tag. In one embodiment, the generic device resource tag library  is a text-based file, such as an XML or HTML file, including information about generic device resource tags. In another embodiment the generic device resource tag library  located external to the developer workstation , for example being accessible by the developer through a network  such as the Internet. In another embodiment, a developer may also create generic content applications  without use of a generic device resource tag library , since the generic device resource tag library  is an optional reference tool for the developer.","A developer may use an integrated development environment (\u201cIDE\u201d), such as Eclipse or Visual Studio, to develop generic content applications . The system may include an IDE plug-in service  which accesses the generic device resource tag library  in order to make the information contained therein more accessible to the developer while the developer is working with the IDE. For example, the IDE plug-in service may present a frame within the IDE where generic device resource tags are shown and described. The IDE and\/or the IDE plug-in service may, in some embodiments, be used to create generic content applications .","In the embodiment of , a content application may be an application comprising one or more content-based files. A content-based file may lack any portions which are directly computer-executable (e.g., binary software). Such content may, for example, be in the form of a markup language such as HTML5, some other version of HTML, XHTML, Extensible Markup Language (XML), Cascading Style Sheets (CSS), and\/or any combination thereof. In one embodiment, a content-based application may include one or more files which are at least in part, non-content-based. In another embodiment, a content application consists solely of files which are entirely content-based. The generic nature of a generic content application  relates to the use of generic content, such as content which is not created for a particular platform. The above-described application using the <camera> generic device resource tag is an example of a generic content based application. In another embodiment, a generic content-based application may include both platform-specific and generic content, and may further require the use of a platform-specific native shell in order for a mobile device to use the generic content contained within the generic content-based application.","A generic content application  may include a generic device resource tag so that the application, when used on a mobile device , , may have access to a device resource of that mobile device , . For example, the device resource tag may be considered generic because, at the time the generic device resource tag is included by the developer within the generic content application , the generic device resource tag is not associated with any particular instance of platform of the device resource to which it relates. The <camera> tag, for example, could be used at runtime to access an iOS device's camera, an Android device's camera, or some other device's camera.","Examples of mobile device resources may include, for example, a mobile device's hardware or related software (e.g., a driver), such as a camera, a global positioning satellite (\u201cGPS\u201d) receiver, an accelerometer, a gyroscope, a communications radio, a user input receiver (e.g., multi-touch user input), file management and\/or data storage.","As the generic content applications described in this embodiment may include mobile device resource references which are not specific to any particular instance or platform, the system may also include a generic platform emulator  which provides a developer with the ability to use a generic content application  on the developer workstation . For example, the developer workstation  may not include a camera, but the developer may wish to test a mobile application which includes a mobile device resource reference for a camera. The generic platform emulator service  may emulate the behavior of a mobile device by emulating access to a mobile device resource in response to identifying a generic device resource tag. An emulated camera user interface may be presented in response to the generic platform emulator service  identifying the <camera> generic device resource tag, which may be interpreted as a reference to access a mobile device camera resource. In one embodiment, the generic platform emulator service  emulates the behavior of an imagined or abstract mobile device running the generic content application.","In another embodiment, one or more generic platform emulator services may be used, at least some of which may emulate the behavior of specific mobile platforms in running the generic content application. A developer may thereby be able to test how the generic content application is expected to run on, for example, an iOS device, and on an Android device. The generic platform emulator service  may access a generic functional library  which provides emulated and\/or generic functional behavior associated with mobile device resource references.","As another example, a generic content application  may include a mobile device resource reference to a latitude and longitude position from a GPS receiver. A developer may use a generic platform emulator service  to test the generic content application . When the portion of the mobile application dealing with the GPS receiver reference and\/or its associated request is reached (for example because the generic platform emulator service is executing associated content from the generic content application ), the generic platform emulator service  accesses the generic functional library  in order to determine the generic function to provide in response to the mobile device resource reference to the GPS receiver. One such generic function response could be providing a fixed latitude and longitude pair. A more complex generic function response would be to show present the developer with a user input prompt to enter the latitude and longitude pair which the generic platform emulator service will treat as the response from a mobile device resource.","Network Application System","The present embodiment further includes a network application system . The network application system may consist of one or more servers or services, including ones which are distributed and\/or cloud-based. The network application system  may be in communication with a developer workstation  and\/or a mobile device  through a network , such as the Internet. The network application system  includes a developer portal service  through which the network application system  receives generic content applications from developers. For example, the developer portal service  may be a portal accessible through an electronic resource, such as a webpage, and may allow a developer to upload a generic content application , such as by specifying the file or files associated with the generic content application  using a web-browser on the developer workstation . In another embodiment, the developer portal service  may include a file transfer protocol (\u201cFTP\u201d) server. The developer portal service may transmit the received generic content applications  for storage associated with the network application system . For example, the network application system may include a data store of generic content applications submitted by a number of developers.","The network application system may also include an application store service , which provides one or more generic content applications stored by, or accessible to the network application system, to mobile device users. For example, the application store service  may access an electronic catalog of mobile device applications and may allow users to access the electronic catalog using a web-browser to access the application store service . In another embodiment, the application store service  may be configured to provide data to some other software, such as a mobile device application configured to interact with the application store service .","Mobile Device","The embodiment of  includes mobile devices, one mobile device  identified as using platform A, and the other mobile device  identified as using platform B. In the illustrated embodiment, these mobile devices are smartphones, examples of which include HTC's EVO, Apple's iPhone, Research In Motion's Blackberry Torch, and Motorola's Atrix. Other devices and types of devices may also be used, for example tablet computing devices (e.g., HTC's Flyer, Apple's iPad, Research In Motion's Blackberry Playbook), personal data assistants, netbooks (e.g., Samsung's Chromebook, HP's HP Mini, Asus's Eee PC), laptops, and personal computers. Each mobile device may use one or more mobile device operating systems as a platform. Examples of these mobile platforms include Google's Android, Apple's iOS, Microsoft's Windows Phone, Nokia's Symbian, HP's PalmOS, Google's Chrome OS, or Research In Motion's BlackBerry OS. Other operating systems may be used, such as Apple's OS X, Microsoft's Windows, Linux, etc. In another embodiment, different versions of a platform are treated as separate platforms, for example because those different versions may require version-specific implementations related to accessing certain mobile device resources.","In the present embodiment, mobile devices ,  store generic content applications . For example, a generic content application's content files may be stored in a mobile device's memory, such as on persistent, flash-based storage. In another embodiment, a generic content application is not stored in any persistent storage of a particular mobile device, and instead that mobile device accesses the generic content application through a communication method (e.g., accessing an application hosted on a network resource, or accessing a non-hosted application stored on a remote file system, or in a cloud-based system).","Each of the shown mobile devices ,  uses a native shell service , . The platform A mobile device  uses a platform A native shell service , while the platform B mobile device  uses a platform B native shell service . In the present embodiment, a native shell service includes software designed for use in running other software. For example, a native shell service may be used in connection with a content application in order to execute the content described within the content application. This could be accomplished using a native shell service which includes non-content software, such as binary files compiled from source code written in a programming language, examples of which include Java, C#, and C++. In this example, a mobile device may only be capable of executing binary files, as content files may be treated as purely descriptive data rather than executable commands. Binary files associated with a native shell service may be executed on the mobile device, and those binary files may be used to access one or more content files and perform actions based on the content stored within the one or more content files. The native shell service may thereby allow a developer to create a mobile application without needing to create any binary files associated with the mobile application\u2014the application's behavior may be described within one or more content files, and that behavior is performed when a mobile shell accesses the content files and interprets their contents as corresponding to particular actions. A native shell service may use a functional library in order to look up what functional action or actions correspond to a particular content.","In the example of , distinct native shell services and corresponding distinct functional libraries are used in order to provide platform-specific functionality for generic content applications . A content application may be generic in that its content is not limited to use on a particular platform. However, a developer may wish to certain functionality within the generic content application that requires a platform-specific action to occur. For example, mobile devices using a variety of mobile platforms include gyroscope hardware and associated software which may be accessible to mobile applications running on those devices (e.g., so that a mobile game application can accept a user's physical movement of the mobile device as an input control for the game). At least some of the mobile platforms may require that a mobile application uses distinct, platform-specific functionality in order to make use of the gyroscope. A platform-specific mobile application could include functionality, such as gyroscope access, that is specific to one or more mobile platforms. A generic mobile application could provide the same gyroscope access, but described in a manner not specific to any particular mobile platform. The gyroscope access could instead be described using a generic placeholder which is translated to platform-specific functionality later, such as when a platform-specific native shell service  runs the generic content application  by using a platform-specific functional library  to determine what platform-specific gyroscope functionality will be performed in order to provide the gyroscope access which has been described generically in the generic content application .","Accordingly, the platform A shell service  may access a generic content application  and use a platform A functional library  in order to perform the functionality generically referenced within the generic content application  in a manner specific to platform A. Similarly, the platform B shell service  may access a copy of the same generic content application  and use a platform B functional library  in order to perform the functionality generically referenced within the generic content application  in a manner specific to platform B.","In one embodiment, the network application system  provides one or more native shell services and\/or associated functional libraries, such as platform-specific native shell services ,  and platform-specific functional libraries ,  to mobile devices , . In another embodiment, no network application system  is used and a developer or some other entity may provide a mobile device  with a native shell service  and\/or a functional library. For example, a platform-specific native shell service  and platform-specific functional library  could be included by the mobile device's manufacturer and immediately available to the user upon receiving the mobile device .","In some embodiments, one or more functional libraries ,  are periodically updated in order to provide support for additional mobile device resource references. A generic device resource tag library  could be updated at a similar time in order to inform developers of these new mobile device resource references. In one embodiment, the system includes compatibility functionality so that a native shell will only run a generic content application if the native shell and\/or its associated functional library are compatible with the generic content application. For example, the native shell may detect that a generic content application uses device resource tags which the native shell and\/or the functional library does not support. In another embodiment, the network application system  provides at least some of this compatibility functionality.","Content Application and Functional Library","Referring to , a portion of an example generic content application  is shown along with corresponding portions of example platform-specific functional libraries , . The illustrated portion of the generic content application  relates to the use of a mobile device's camera. The generic content application may include other portions before  and after  the portion discussed here, and those other portions may include other mobile device resource references. The generic content application  includes text relating to the message \u201cLet's take a picture!\u201d . In the present example, this portion of the content may be understood by any mobile device with a platform or other software capable of supporting the standard in which the generic content application  is written, such as HTML5. The generic content application  next includes a button tag  identifying a user interface button element which will be displayed when using this portion of the generic content application. The button tag  indicates that the button's title will be \u201cCamera\u201d  and that, when a user presses the button, the portion of the content placed between the open button tag  and the close button tag  will occur in response.","The illustrated generic content application  uses a generic tag  to indicate a portion of its content which relates to generic functionality, such as mobile device resource references which may be resolved by a native shell to provide platform-specific functionality. The native shell may perform a request for a mobile device resource in response to encountering a reference to that mobile device resource. The open generic tag  indicates the beginning of a generic section and the close generic tag  indicates the close of a generic section. In another embodiment, open and close tags are not used to indicate sections of a generic content application  which relate to generic functionality. For example, a mobile device resource reference may occur at any point in the generic content application. A native shell may then identify mobile device resource reference based on one or more other factors, such as the name of a tag or variable, or syntax use.","The generic content application  of . includes a mobile device resource reference for access to a mobile device's camera . For example, the developer may have referenced a generic device resource tag library and identified the \u201c<showCamera>\u201d tag  as a means of displaying the camera interface of the mobile device using the generic content application.","The functional libraries ,  include portions which relate to this showCamera tag. The platform A functional library is shown as including text data which lists the showCamera mobile device resource reference  and the associated functionality ,  for providing access to the camera on a mobile device using platform A. For example, the platform-specific functionality may include software designed for the particular platform . The platform A functional library  associates three lines of software source code  with the showCamera function . In another embodiment, a functional library includes compiled, binary software which is associated with a function such as a mobile device resource reference. In still other embodiments, a functional library may associate a function such as a mobile device resource reference with one or more scripts, other applications, messages, assembly software, compiled software, source code software, and\/or any combination thereof.","One piece of software may depend on other pieces of software to operate. Accordingly, a platform function library may include information indicating the dependencies  for a particular platform-specific implementation of a generic device resource reference. The platform A functional library indicates that the software used in connection with showCamera on platform A depends on two other pieces of software, \u201candroid.app.Activity\u201d and \u201candroid.os.Bundle\u201d . In another embodiment, software dependencies are not listed or are listed in a different format and\/or location within a functional library.","The platform B functional library  also includes a portion relating to the showCamera function . This portion of the platform B functional library  provides the platform-B specific functionality ,  for providing access to the camera on a mobile device using platform B. This includes software  and information concerning that software's dependencies .","In another embodiment, a functional library may indicate that the mobile platform which the functional library corresponds to does not support a particular mobile device resource reference. For example, a particular platform might not include or support camera hardware and\/or related software. The functional library may include substitute functionality associated with an unsupported mobile device resource reference. For example, the substitute functionality could cause a message to be displayed to the user that the application is attempting to access a mobile device resource that is unsupported on the present mobile platform. Alternatively or additionally, the functional library may provide functionality meant to mimic that which would be provided by the mobile device resource. For example, a functional library could cause an image to be transmitted from the mobile device's file system rather than a camera. In another embodiment, a functional library may provide substitute functionality for a mobile device resource reference even the corresponding mobile platform supports the mobile device resource reference.","Cross-Platform Use","Referring to , example user interfaces are shown corresponding to the use of the generic content application  and functional libraries ,  which were also described in the context of . The platform A mobile device  is shown using the generic content application  and displaying the \u201cLet's take a picture!\u201d message  contained therein. Also displayed on the platform A mobile device's  user interface is the \u201cCamera\u201d button  from the generic content application . In response to the user pressing the \u201cCamera\u201d button , the platform A functional library is accessed  in order to provide platform-A specific functionality associated with the showCamera mobile device resource reference, which was triggered by the user pressing the \u201cCamera\u201d button . For example, a platform A native shell service may have encountered the <showCamera> generic device resource tag and associated that tag with a generic mobile device resource reference which resulted in a mobile device resource request for the device's camera. The mobile device resource request may have been resolved using the platform A functional library in order to provide access to the mobile device's  camera. In the present embodiment, providing access to the mobile device's  camera in the context of platform A involves presenting an image-capture user-interface  which displays the current image being captured by the mobile device's  camera and includes a shutter-shaped button  which allows the user to take a picture with the platform A mobile device's  camera.","The present embodiment also illustrates the user of the generic content application  on a platform B mobile device . The same text  and button  are shown on the platform B mobile device's display. However, when the button  is pressed, it results in the platform B function library  being used in order to provide platform B-specific functionality for accessing the mobile device's  camera. Here, a different image-capture user interface  is shown. The platform B camera interface also displays the current image being captured by the mobile device's  camera. The platform B interface includes a button  titled \u201cTake Photo\u201d which allows the user to take a picture with the platform B mobile device's  camera.","Validation Service","Referring to , another embodiment of a system for distributing cross-platform mobile applications is shown. The present embodiment includes a validation service  which accesses the generic content applications  stored on the network application system , and determines whether those generic content applications  meet certain recommended or required guidelines. For example, the validation service  may check the formatting of a generic content application  for errors which may cause the generic content application  to function improperly when used on a mobile device. Alternatively or additionally, the validation service  may determine whether the generic content application  includes proper use of generic tags, such as ensuring that each open generic tag is proceeded by a close generic tag, and whether the content within open and close generic tags are supported generic device resource tags.","In some embodiments, the validation service is triggered in response to the network application system  receiving a generic content application . The validation service  may record data indicating which generic content applications  have and have not been validated. The network application system  may notify a developer when it has been determined that the developer's generic content application  was identified as invalid. The validation service may also detect which version of generic device resource tags a particular generic content application  uses, and may record this information.","Pre-Processing Service","The present embodiment includes a pre-processing service  which performs certain platform-specific modifications on generic content applications  in order to generate platform-specific content applications . For example, a generic content application may include a mobile device resource reference to a virtual keyboard, by including the <showVirtualKeyboard> generic device resource tag. While a platform A mobile device  may be able to provide a virtual keyboard promptly when requested to do so, a platform B mobile device  may require certain preconditions to be met in order for the request associated from the reference to be promptly satisfied. The pre-processing service may access information concerning platform-specific content pre-processing in a data store for platform-specific resource libraries. The platform-specific resource libraries may indicate, for example, that a virtual keyboard reference should be pre-processed in order to create a platform B-specific content application. During pre-processing, the pre-processing service  may identify the virtual keyboard reference and may include content in the platform B-specific version of the content application which initializes the virtual keyboard well enough in advance of it being used. By creating platform-specific content applications , the pre-processing service may accomplish a variety of other tasks. A developer may thereby create a single, generic version of a content application and rely on the network application system  to create platform-specific versions.","Mobile Store Service","The embodiment system of  includes a mobile store service  stored on the platform a mobile device . The mobile store service  provides one means of obtaining content applications, including generic content applications  and platform-specific content applications  from the network application system . For example, the mobile store service  may be a mobile application running on the mobile device  which communicates with the network application system . Alternatively or additionally, the mobile store service  may perform one or more other tasks, including obtaining and updating a native shell  and\/or functional library  on the mobile device .","Incorporation Service","Referring to , another embodiment of a system for distributing cross-platform mobile applications is shown. The present embodiment also enables developers to submit generic content applications  which include mobile device resource references that correspond to platform-specific functional implementations. However, in the present embodiment, mobile devices are provided with platform-specific complete applications rather than generic content applications or platform-specific content applications. The network application system  includes an incorporation service  in communication with platform-specific binary libraries and native shells .","The incorporation service uses the platform-specific binary libraries and native shells  to create platform-specific complete applications . For example, the incorporation service  may read through a generic content application or platform-specific content application and identify generic mobile device resource references. The incorporation service creates a platform A-specific complete application which replaces generic portions of the generic content application  with platform-A specific functionality. As explained when describing the various types of platform-specific functionality which may be used in response to a generic tag for a mobile device resource reference, such platform-specific functionality may be associated with compiled, binary software, a script, source code, etc. The incorporation service may then include one or more platform-A specific binary files, such as binary files used in a platform A native shell, in order to create a completed application which can be run natively on platform A and which includes the functionality described in the generic content application .","The network application system  may store a number of platform-specific complete applications , for example for different applications and\/or different platforms. The network application system may provide complete applications to mobile devices , . For example, a mobile store service  may access an application store service  in order to obtain complete applications specific to the platform on which the mobile store service  is running. In the illustrated embodiment, the platform A mobile device  stores platform A complete applications  while the platform B mobile device stores platform B mobile applications .","In another embodiment, one or more mobile devices may be provided with a combination of one or more of generic content applications, platform-specific content applications, and platform-specific complete applications. In another embodiment, incorporation is performed at a location or by a system other than the network application system. For example, incorporation may occur on the developer workstation  or on the mobile device .","Network Resource Reference",{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 6","b":["150","140","654","605"]},"Examples of network resources include electronic catalogs and\/or one or more items which they contain (it will be understood that the term \u201citem\u201d may refer to either an actual item such as a physical or electronic thing which may be purchased, or a digital representation of that thing, for example an entry within an electronic catalog or database for the thing). As another example, an advertisement referenced by and\/or provided to the mobile device may be a network resource. As yet another example, one or more metrics may be a network resource. Examples of metrics include information concerning high-scores, in-game achievements and usage rates.","A mobile developer may create a mobile application which can be augmented with additional content, such as extra levels, playable characters, themes, backgrounds, templates, protocols, language support, tutorials, books, multimedia, challenges, digital items, and licenses. This additional content may be downloadable content which a user of the mobile application can download, after obtaining the mobile application in order to add the additional content to the mobile application. The mobile application's developer may wish to use a network-based publisher for making the mobile application and\/or its additional content available to users. For example, the developer may not wish to maintain a network server to store and make available the additional content. Furthermore, the developer may wish to require a user to pay in order to obtain certain additional content. The developer may wish to avoid configuring and maintaining a payment processing system in order to make this additional content available.","In some embodiments, a developer may rely on an electronic catalog  service to provide the additional content to users. The electronic catalog service may be capable of transmitting data describing some or all additional content presently available through the electronic catalog for a particular mobile application. Such data describing items available in an electronic data is one example of a network resource available to a mobile device in the embodiment of . In order to obtain this network resource, a mobile device may include a network resource reference and\/or make an associated network resource request. A network resource tag is one example of a network resource reference. When the mobile application is run, it may transmit a lookup request corresponding to the network resource reference. The response received in relation to the network resource reference may depend on external factors, such as the time at which the lookup associated with the network resource reference was performed. For example, the contents of an electronic catalog may change over time and the same network resource reference may result in different responses when lookups are performed at different times. A network resource reference may be considered to be unresolved when it is stored within a content application and may result in different responses when performed at different times. By providing developers with the ability to include unresolved network resource references within unresolved content applications, the present embodiment may provide flexible, easily implemented means for accessing network resources.","The developer workstation  used in the present embodiment may include elements related to network resource references. For example, the developer may be developing an unresolved content application  which includes one or more unresolved network resource references. These network resource references may be represented within the mobile application in the form of network resource tags. The developer may refer to a network resource tag library  in order to gain information concerning the network resource tags, in a manner similar to a developer's use of a generic device resource tag library. The developer may also use an IDE plug-in service  that interacts with the network resource tag library in a similar manner to the way in which an IDE plug-in service interacts with a generic device resource tag library. In order to test and develop the unresolved content applications , the developer workstation  may include a native shell service  and a network resource lookup service . These services may behave similarly to the native shell service  and associated network resource service  discussed in the context of the mobile device  described below. In another embodiment, for example, the same native shell service  and\/or the same network resource lookup service  may be used by or on the developer workstation  as the native shell service  and network resource lookup service  used by or on the mobile device .","The developer workstation  may interact with the network application system , for example in a manner similar to that described in the context of submitting generic content applications. In the present embodiment, the developer may submit unresolved content applications . The mobile device  shown may obtain one or more unresolved content applications , for example from the network application system . The mobile device  includes a native shell service . For example, the native shell service  may be software which can run an unresolved content application  and recognize an unresolved network resource reference within that unresolved content application . In one embodiment, this is performed in a manner similar to the way in which a platform-specific native shell service has been described as running generic content applications. However, in the present embodiment the native shell service  need not be platform-specific. For example, the native shell service  may be capable of providing access to network resources in a manner which spans multiple platforms and is not created for any platform specifically. In another embodiment, the native shell service  is platform-specific may therefore be a platform-specific native shell service.","The native shell service  may, in response to identifying a network resource reference within an unresolved content application , use a network resource lookup service in order to locate and\/or access the desired network resource. For example, the network resource lookup service  may be software stored on the mobile device  which interacts with a network resource resolution service in order to identify the location of the referenced network resource and report that location to the native shell service . In such an embodiment, the native shell service  may then request the network resource directly. In another embodiment, the native shell service  interacts with the network resource lookup service  in order to obtain the network resource through the network resource lookup service . In another embodiment, the network resource lookup service  is not stored on the mobile device  but is in communication with the developer workstation .","Network Resource Lookup Service and Network Resource Resolution Service","The present embodiment includes a network resource resolution service  which is in communication with the network resource lookup service  through the network . In this example, the network resource resolution service  acts as a directory for network resources. The network resource resolution service  may have access to information identifying one or more network resources ,  which may be used to satisfy a network resource reference. In one embodiment, the network resource resolution service  forwards a communication received from a mobile device  to a network resource  so that the network resource can respond to the mobile device  through the network resource resolution service . In another service, the network resource resolution service  provides the mobile device  with information concerning the network resource, thereby resolving the network resource reference and enabling the mobile application being performed on the mobile device  to access the desired network resource.","A catalog service  is shown in communication with item data . As has been described, such a catalog service  may provide information concerning the contents of an electronic catalog. This information may be stored as item data . The catalog service and\/or the information which it provides may be a network resource. Examples of items which may be available through an electronic catalog service include digital items associated with a mobile device, for example extra levels, playable characters, themes, backgrounds, templates, protocols, language support, tutorials, books, multimedia, challenges, digital items, and licenses. These digital items, and\/or information concerning them, are examples of network resources. A request for the five most popular themes for a particular mobile application is an example of a network resource request. Network resource requests and their associated references may additionally or alternatively relate to information concerning physical, non-digital items. For example, an electronic catalog may provide users with the ability to purchase shoes. A network resource reference may reference the price of a particular model of brown sneakers. Another network resource reference may reference information identifying whether the model of brown sneakers are currently in stock. A metric service  is also shown. The metric service may provide metric information, which it may obtain by communicating with a metric data store . Some examples of metric information has already been provided, but a variety of other examples also exist.","In one embodiment, the catalog service  is associated with the network application system  and may provide both the mobile application itself and additional content for the mobile application. For example, the network application system  may also be an electronic catalog and may include a catalog service  allowing a mobile application to request and obtain information concerning items offered through the electronic catalog. Network resource references may relate to actions other than requesting information. For example, a network resource reference may relate to the purchase of an item through an electronic catalog service. This network resource reference could be associated with an action, such as an access method, which submits information related to the purchase, for example to the catalog service . The mobile native shell service  may receive a response, for example from the catalog service  as a result of the purchase. For example, the native shell service  may be configured to download and\/or install additional content which has been purchased for the mobile application and\/or the mobile device .","Unresolved Content Application","Referring to , an example portion of an unresolved content application  is shown, along with a corresponding portion of data related to an electronic catalog . The unresolved content application  includes portions before  and after  the displayed section of content. The unresolved content application  includes a text-based description  which may be presented on a mobile device using the mobile application. The unresolved content application also includes an open lookup tag \u201c<lookupTag>\u201d  and a corresponding close lookup tag \u201c<\/lookupTag>\u201d . As was described in the context of generic content applications, such open and close tags may be used in certain embodiments to designate sections of an application. In unresolved content application embodiments, those sections may relate to network resource references to be resolved using a native shell service.","The embodiment of  includes a network resource reference which includes a number of sub-elements. The network resource reference is identified with a \u201c<getCatalogItemGroup>\u201d open tag  and a corresponding <\/getCatalogItemGroup>\u201d close tag . The tags may appear within a network resource tag library which provides developers with a means of referencing available tags for network resource references. The network resource reference corresponds to a request for a catalog item group. The sub-elements - of the network resource reference  provide additional information concerning the reference. For example, the network resource reference is associated with a specific catalog provider, identified by the name \u201celectronicCatalogCompanyEast\u201d . This name may be used, for example, by a network resource lookup service and\/or a network resource resolution service in order to determine what network resource will be used to provide the catalog item group requested. For example, a network resource resolution service may maintain a directory of network resource locations, such as catalog services, and may forward the associated network resource lookup to a network address associated with the Electronic Catalog Company East, or respond to the lookup with a network address associated with the Electronic Catalog Company East.","The network resource reference  also includes a catalog item group identification sub-element , identifying the reference as being for the item group with identification number 8780893. In the present example, that may be the number associated with the present mobile application. In another embodiment, a system does not require an identification number in order to present additional content for a mobile application because, for example, the mobile application itself and\/or the native shell service running the application may provide information by which the application can be identified and its associated additional content can be determined. In still other embodiments, network resource references are associated with resources which are not related to a mobile device application.","The network resource reference  includes a sub-element identifying that the network resource reference is for a maximum of three items  from the identified item group . Another sub-element identifies that the items in the item group are to be sorted in the order of newest item first . The network reference of the present embodiment is thereby associated with a request seeking the three most recent items in item group 8780893 in Electronic Catalog Company East's electronic catalog. The network resource reference includes a \u201creturnValue\u201d sub-element  which identifies the pieces of information requested to be returned for each of the three most recent items. Those pieces of information are each item's icon, title, description and price . The network resource reference  also includes a sub-element identifying that buttons associated with buying and\/or otherwise getting the returned items should be shown in the mobile application. These buttons may include embedded references and\/or requests for additional network resources, such as a network resource reference to purchase a particular item from the electronic catalog.",{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 7","b":["673","750","752","760","770","780","790"]},"Resolving a Network Resource Reference","Referring to , a user interface of a mobile device  running the content application described in , and other content from the same mobile application, is shown. The displayed user interface output is associated with the use of the content application after the unresolved network resource references discussed in the context of  have been resolved. For example, the network resource references were resolved using a network resource lookup service and a network resource resolution service in order to obtain network resources from the Electronic Catalog Company East's item data. The mobile device application includes the text description  included within its content. This text description did not require network resolution in order to present. The mobile device's display also shows user interface information showing item data associated with three items from the referenced item group of the electronic catalog. The icon, title, description and price for each of the three items , ,  is shown. Also shown are buttons allowing the user to purchase ,  or freely get  the items, based on the items' respective prices.","Below the section which corresponds to the network resource references of , the mobile application's user interface presents information related to other mobile device resource references. In this example, metric information is presents which was obtained by resolving network resource references for metric information accessible through a network. Here, the mobile application identifies the metric information as related to the values of a high score leaderboard . Headings identify high score entries by their rank , name  and score . The top four high score entries  are displayed. One of the entries  is identified by the mobile application as corresponding to the user of the mobile device . The metric information was obtained by resolving one or more network resource references associated with one or more metric resources, using a network resource lookup service, a network resource resolution service and a metric service.","Server-Side Network Resolution Lookup","Referring to , another embodiment of a system for distributing applications capable of performing network resource requests associated with network resource references is shown. In the present embodiment, network resolution lookup occurs at the network application system  after an unresolved content application  has been submitted to the network application system  by a developer, but before a corresponding mobile application is made generally available to users' mobile devices . An unresolved content application  may be resolved into a resolved content application  using a network resolution lookup service  present on or accessible to the network application system . For example, the network resolution lookup service may function in a similar manner to the network resolution lookup services previously discussed for use on or with a mobile device  or developer workstation . In one embodiment, a developer may choose to have some or all of the network resource references within an unresolved content application  resolved at the network application system  rather than at a mobile device .","For example, a developer may wish to dedicate a portion of his mobile application's user interface to advertising. The present embodiment provides a convenient means for the developer to accomplish this\u2014the network resource tag library  may include one or more network resource tags associated with advertising network resource references. The developer may select a \u201c<80 pixelBy200 pixelBannerAd>\u201d tag and include that tag within the mobile application's content. This tag corresponds to a network resource reference to a banner advertisement with display dimensions 80 pixels tall by 200 pixels wide.","The present embodiment provides intelligent advertising functionality as part of the network resolution lookup service  which occurs on the network application system . For example, the network application system  may scan the contents of the unresolved content application in order to identify the type of application. For example, the frequency of certain terms may be used to classify the application. Alternative or additionally, the developer may be asked to classify the mobile application when submitting it to the developer portal service . This classification may be used in part to classify the application within the application store service  so that it users can more easily locate desired applications. However, the network application system  may also use this classification system for improved intelligent advertising. The network resolution lookup service may resolve the advertisement portion of the application by replacing the banner advertisement tag with network resource-specific reference content for a banner advertisement from a specific advertising service  for a specific type of advertisement. The advertisement service may be in communication with advertising data , that advertising data describing different advertisements. The network application system  may store the resulting, resolved content application . In another embodiment, only some of the network resource references within an unresolved content application  are resolved at the network application system . In another embodiment, the resolved complete application  includes a resolved network resource reference and also receives dynamic advertisements while the resolved complete application  is running. For example, the resolved network resource reference for an advertisement may have been resolved to a type of advertisement-feed, or to software which performs regular and\/or recurring requests for new advertisements from the advertising service , optionally based on an advertisement categorization which was determined by the network resolution lookup service .","Network Resource Reference Incorporation","The present embodiment includes an incorporation service  as part of the network application system . The incorporation service  may function in a manner similar to that described for incorporating platform-specific content applications in order to create platform-specific complete applications. The incorporation service  of the present embodiment accesses a data store with one or more native shells  in order to create resolved complete applications  in response to analyzing resolved content applications . For example, the incorporation service  may group a content application with one or more binary files capable of performing the actions described in the content application. The resulting version of the application may be considered a complete application because it can run without a separate shell service. The network application system may store complete applications, such as the resolved complete applications  of the present embodiment. In the present embodiment the incorporation service  does not rely on platform-specific native shells . Accordingly, the resulting resolved complete applications  are not platform-specific. In another embodiment, platform-specific native shells are used, resulting in platform-specific resolved complete applications.","Hosted Applications","Referring to , a prior art system is shown. In this system, a developer creates a hosted application  and transmits the hosted application to a network host server . For example, the hosted application may be a web-based data entry application. A host service on the network host server  provides users with access to the hosted application stored on the network host server . The network host server includes a host service  which allows users of mobile devices ,  to access the hosted applications  using a client service , . For example, a user may use a web-browser application as a client service  in order to access the hosted application  which is accessible through the network  at a particular URL. The hosted application  may interact with and depend on having access to certain host resources on the network host server. Examples of such host resources include","Native Host Service","Referring to , there is illustrated an embodiment of a system capable of distributing hosted applications for native use on mobile devices. The hosted applications  may include content-based references to host resources. Examples of host resources include host-based storage, message forwarding service, and a request\/reply interface. A host resource reference may seek access to a database storage system present on or accessible to the host server upon which the hosted application is run. While providing users with network-based access to hosted applications running on network host servers provides certain advantages, these are accompanied by disadvantages. Accordingly, a developer may wish to create a hosted application but distribute the hosted application for native use on a mobile device , .","A developer may develop a hosted application  by referencing a host resource tag library  which lists content tags associated with certain, supported host resource references. The developer may run a host service  on the developer workstation  in order to use and test the hosted application  during development. For example, a host service  such as Apache may be used on the developer workstation, and the developer may connect to the host service  using a web browser client service  such as Google's Chrome web-browser. The developer may submit the hosted application  to a network application system , which makes the hosted application  available for mobile device to be copied onto data storage of one or more mobile devices , . The network application system  may use an application store service in order to transmit the contents of the hosted application to a mobile device .","The mobile devices of the present embodiment include platform-specific native host services ,  which are designed in order to run hosted applications  natively on a mobile device. Platform A mobile device  includes platform a native host service  which has access to hosted applications  and a platform a functional library . The platform A native host service  may run the content of a hosted application  and, in response to identifying a host resource reference, may interact with the platform A functional library  in order to determine the appropriate functionality in the context of platform A in order to support the host resource reference. The platform A mobile device includes a client service  which may communicate with the platform A native host service  in order to access the hosted application . From the user's perspective, the hosted application which is being run natively on the mobile device  may appear similar or indistinguishable to a hosted application running on a network host service.","The platform B mobile device  includes a platform B native host service  which uses a platform B functional library  in order to perform platform-B specific functionality in response to host resource references of one or more hosted applications .","Hosted Application Content","Referring to , an example portion of a hosted application  and the corresponding portion of a platform-specific functional library  are shown. The hosted application's content indicates that it is a warehouse inventory hosted application . The content includes a section of content corresponding to displaying information concerning blue widgets . The application includes text corresponding to the characters \u201cIn Stock:\u201d, followed by an open host tag . This example includes a number of short host tag sections, identified as occurring between an open host tag  and a closed host tag . For example, the first host tag section includes a host tag for the reference \u201cserverGetDBEntry\u201d  which corresponds to a host resource reference to a request to get the value of a server's database entry. The host tag indicates that the particular resource reference seeks the database entry named \u201cblueWidgetStock\u201d, corresponding to the inventory stock of blue widgets. The \u201cOn Order:\u201d  line of content includes a host resource reference to the number of blue widgets on order . Next, the mobile application's content includes a button  tag with title \u201cUpdate Inventory\u201d . This corresponds to a button which, when pressed, performs a host resource reference . The triggered host resource reference sets the value of the server database corresponding to the inventory of blue widgets . Another button with the title \u201cOrder 10\u201d is associated with the host resource reference to submit an order for ten additional blue widgets to the recipient WidgetCo. This order submission is a message type of host resource. The hosted application  includes similar content for displaying, obtaining, and submitting information  concerning orange widgets .","The present embodiment also includes a platform A-specific functional library  with functionality corresponding to performing satisfying certain host resource references in the context of running a hosted application on a mobile device with platform A. For example, serverGetDBEntry is a host resource reference . The platform A functional library associates that host resource reference with platform-A specific functionality  wherein a particular SQLiteDatabase object has a method performed in order to get an entry from a database running natively on the mobile device, for example as part of the platform A native host service. This functionality depends on a software object  defined earlier in the functional library. The serverSetDBEntry  depends on the same software object  and returns a value indicating whether a platform-A specific database function was successful . The serverForwardMessage host resource reference  includes two parameters: the message to forward, and the recipient to forward the message to. The platform A functional library  indicates that the serverForwardMessage host resource reference  can be satisfied on a platform A mobile device using a QueuedMessageHandler software object  by invoking that object's forwardMessage function .","Native Use of Hosted Application","Referring to , a user interface embodiment is shown which corresponds to the hosted application and functional library discussed in the context of . The warehouse inventory hosted application  presents information for blue widgets , including the number presently in stock  and the number on order . The values shown are obtained by a host service which identifies the host references within the content of the mobile application and uses a functional library in order to determine the platform-specific functionality to use in satisfying those host resource references. The native host service and functional library thereby provide the hosted application with the sense of being run in a hosted environment even though it is actually being run natively on a mobile device. For example, the hosted application performed a host database lookup and determined that there are 58 widgets in stock  and ten widgets on order . The hosted application supports updating the inventory for widgets using a button . Were the hosted application being run on a network host server, that button press may result in a host request that is satisfied directly by a host resource on the network host. However, when the hosted application is run on a mobile device, the button press may instead result in a mobile platform-specific functionality being used to substitute for the referenced host resource. Similarly, a platform-A specific messaging functionality may be used in connection with a host resource reference for a messaging service. That host resource reference is triggered whenever the blue widget's \u201cOrder 10\u201d button  is pressed. The mobile application presents user interface elements  corresponding to the orange widget  content from . Also shown is user interface information concerning fuchsia widget content .","Although certain systems, methods and embodiments have been described related to distinct systems embodying use of generic mobile device resource references, unresolved network resource references, and host resource references, a system may use any combination of these types of resource references. For example, a library may provide information concerning one or more types of reference, a shell service may be able to identify one or more of types of reference, and an application may include one or more types of reference.","The network application system  may be implemented as a computing system that is programmed or configured to perform the various functions described herein. The computing system may include multiple distinct computers or computing devices (e.g., physical servers, workstations, storage arrays, etc.) that communicate and interoperate over a network to perform the described functions. Each such computing device typically includes a processor (or multiple processors) that executes program instructions or modules stored in a memory or other non-transitory computer-readable storage medium. The various functions disclosed herein may be embodied in such program instructions, although some or all of the disclosed functions may alternatively be implemented in application-specific circuitry (e.g., ASICs or FPGAs) of the computer system. Where the computing system includes multiple computing devices, these devices may, but need not, be co-located. The results of the disclosed methods and tasks may be persistently stored by transforming physical storage devices, such as solid state memory chips and\/or magnetic disks, into a different state.","Each of the services, for example services , , , ,  and  shown in , services , , , , , , ,  and  shown in , and the services shown in , ,  and  may be implemented in an appropriate combination of computer hardware and software, or in application-specific circuitry. For example, each such service may be implemented in service code executed by one or more physical servers or other computing devices. The service code may be stored on non-transitory computer storage devices or media. The various data repositories , , , , , , , , , , , , , , , , , , , ,  and  may include persistent data storage devices (hard drives, solid state memory, etc.) that store the disclosed data, and may include associated code for managing such data.","Although the inventions have been described in terms of certain preferred embodiments, other embodiments will be apparent to those of ordinary skilled in the art, including embodiments that do not include all of the features and benefits set forth herein. Accordingly, the invention is defined only by the appended claims. Any manner of software designs, architectures or programming languages can be used in order to implement embodiments of the invention. Components of the invention may be implemented in distributed, cloud-based, and\/or web-based manners.","Conditional language used herein, such as, among others, \u201ccan,\u201d \u201cmight,\u201d \u201cmay,\u201d \u201ce.g.,\u201d and the like, unless specifically stated otherwise, or otherwise understood within the context as used, is generally intended to convey that certain embodiments include, while other embodiments do not include, certain features, elements and\/or states. Thus, such conditional language is not generally intended to imply that features, elements and\/or states are in any way required for one or more embodiments or that one or more embodiments necessarily include logic for deciding, with or without author input or prompting, whether these features, elements and\/or states are included or are to be performed in any particular embodiment."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated in and form a part of this specification, illustrate example embodiments of the inventive subject matter, and in no way limit the scope of protection. The accompanying drawings include examples of possible graphical user interfaces for use with the disclosed system and methods. Other embodiments are contemplated using alternate hardware and\/or software platforms, and using significantly different interfaces. The accompanying drawings illustrate embodiments wherein:",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 13"}]},"DETDESC":[{},{}]}
