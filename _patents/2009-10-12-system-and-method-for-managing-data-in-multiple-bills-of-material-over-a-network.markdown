---
title: System and method for managing data in multiple bills of material over a network
abstract: A system for managing a bill of materials includes a data structure having at least one record with a primary key data field, an owner data field for indicating the owner of the record, the owner data field including data representative of one of a plurality of owners, and at least one other data field. In another aspect, the system for managing a bill of materials includes a database having a single namespace, and at least one record with a primary key data field, an owner data field for indicating the owner of the record, the owner data field including data representative of one of a plurality of owners, and at least one other data field.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07801916&OS=07801916&RS=07801916
owner: Arena Solutions, Inc.
number: 07801916
owner_city: Foster City
owner_country: US
publication_date: 20091012
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application is a continuation of U.S. patent application Ser. No. 11\/750,254 (now U.S. Pat. No. 7,610,312) filed May 17, 2007 titled SYSTEM AND METHOD FOR MANAGING DATA IN MULTIPLE BILLS OF MATERIAL OVER A NETWORK. The contents of U.S. application Ser. No. 11\/750,254 (now U.S. Pat. No. 7,610,312) are incorporated herein by reference.","U.S. patent application Ser. No. 11\/750,254 (now U.S. Pat. No. 7,610,312) is a continuation of U.S. patent application Ser. No. 09\/832,753 filed Apr. 10, 2001 now abandoned titled SYSTEM AND METHOD FOR MANAGING DATA IN MULTIPLE BILLS OF MATERIAL OVER A NETWORK. The contents of U.S. application Ser. No. 09\/832,753 are incorporated herein by reference.","U.S. application Ser. No. 09\/832,753 claims priority from U.S. Provisional Application Ser. No. 60\/195,918 entitled \u201cSystem and Method for Hosting Multiple Bills of Material for Multiple Companies in a Single Namespace\u201d filed Apr. 10, 2000 by Eric Larkin and Michael Topolovac; U.S. Provisional Application Ser. No. 60\/206,219 entitled \u201cSystem and Method for Transparent Electronic Processing\u201d filed May 22, 2000 by Eric Larkin and Michael Topolovac; U.S. Provisional Application Ser. No. 60\/206,221 entitled \u201cSystem and Method for Vendor Performance Tracking\u201d filed May 22, 2000 by Eric Larkin and Michael Topolovac; and U.S. Provisional Application Ser. No. 60\/210,935 entitled \u201cSystems and Methods for Utilizing Multiple Bills of Material from Multiple Companies Stored in a Single Namespace\u201d filed Jun. 12, 2000 by Eric Larkin, Michael Topolovac, and Janet Yu, the disclosures of which are hereby incorporated by reference.","1. Field of the Invention","The invention relates generally to the field of data management and more particularly to managing data related to bills of material on a computer network.","2. Description of Related Art","During development and manufacturing of a product, elements, parts or components of the product are often kept in a structured item list called a bill of materials (hereinafter BOM, while the plural form, bills of material, is abbreviated as BOMs). For each such product, a BOM is used to keep track of information such as the number of parts used in manufacturing the product, the identification of parts, part vendors, and part costs. The BOM may also be used as an index or organizational tool for the documentation of a product's components such as component datasheets and mechanical drawings. Furthermore, in some instances BOMs include non-material elements such as assembly and finishing processes, machining steps, and connections. Finally, BOMs may include reference items such as tooling or agency certifications which are not actually included in the product itself, but which are required for its manufacture.","During the product development process a BOM is typically changed frequently and considerable effort is undertaken to collect and maintain BOM data. After the development cycle is complete, the BOM may be used as a guide for purchasing, and for inventory maintenance and cost control. As such, parties involved in a wide variety of organizational tasks generally make use of BOMs.","A BOM typically has a nested or hierarchical structure. For example, a typical BOM for a very simple consumer product includes a first level item list that has the box in which the product is delivered, the packing material used to protect the product from damage during shipping, the product assembly and\/or use instructions, and the product itself. The first level item list also includes non-physical reference items such as product certifications and agency approvals. In the case where the product is an assembly of components, the BOM includes a second level item list that has one or more parts of the product enclosure, fasteners, a label, and one or more printed wiring board assemblies, for example. The BOM includes a third level item list for a printed wiring board assembly that typically has the printed wiring board itself and a number of electrical components of various types in various quantities. The printed wiring board item list also includes a non-physical item representing the manufacturing process of assembling the various physical parts together onto the printed wiring board. The printed wiring board item list also includes items such as fiducials and test points that are fabricated as an integral part of the printed wiring board.","It is common to refer to a nested BOM as a multi-level BOM and to an item list for a particular assembly as a single-level BOM. BOMs are often very complex, with hundreds or thousands of items and five to ten or more levels. It is common for the same item or subassembly to appear multiple times at multiple levels in a BOM. In addition, subassemblies are often used in quantities greater than one. Both of these situations substantially complicate tracking of a total component count. For this reason, a separate single-level item list is sometimes developed that includes one line for each unique item in a BOM, each line including a total quantity of that item used in the product. The development of such an item list is referred to as the flattening of the BOM, and the resulting single-level item list is often called a flattened BOM. Flattening a BOM during product development is often done by a single individual working with a computer application program such as a spreadsheet and is a time-consuming and error-prone process. Further, when the BOM changes frequently during product development, maintaining a flattened BOM is very difficult.","As noted above, BOMs additionally serve as guides for purchasing. The inclusion of non-physical and non-purchasable elements such as fiducials and test points in a BOM can be a source of confusion when the BOM is used in this manner. Non-technical staff may spend considerable time attempting to find sources for non-physical items or for items such as test points that are produced as a by-product of another manufacturing process. For this reason, separate item lists are often developed for purchasable and non-purchasable elements in a BOM. Because the resulting item list is often used as a guide for purchasing items, it is commonly referred to as a purchasing BOM. A purchasing BOM is typically created manually during product development.","The creation of flattened and purchasing BOMs is often combined, resulting in a flattened purchasing BOM. As can be appreciated, the manual process of creating the flattened purchasing BOM is time-consuming and prone to human error.","In a typical industrial setting, a single company manufactures many products each of which requires a BOM. Each such BOM may include common parts and subassemblies. In such situations, it is desirable to maintain a master item list of the items used in the company's products and to require that all items in the company's BOMs be included in the master item list. Generally a company's master item list and the BOMs that it references are closely guarded trade secrets, as access to such information would assist a competitor in replicating the company's products. The secrecy of such information is even more critical during product development, when access by a competitor would permit the competitor to anticipate the company's future direction and future product features. Thus master item lists and BOMs are conventionally maintained on a company's computer system and not placed in a common computing environment with data from other companies. Further, multiple companies' BOM data is never stored in a single database.","While the master item list and the collection of product BOMs as a whole are generally kept secret, a company must share information about individual items including discrete parts and subassemblies with its suppliers in order to permit the suppliers to manufacture the parts and subassemblies. In cases where a company uses a contract manufacturer to produce an entire product on a turnkey basis, the company must share the entire product BOM with the contract manufacturer. Currently, information is shared with suppliers on an ad hoc basis, with individual engineers or purchasing agents mailing or e-mailing product documentation to the suppliers. As a result, suppliers frequently have out-of-date or otherwise incorrect information about items and subassemblies. This method of sharing information does not enable a company to easily determine which information each supplier has and if the release of the information is appropriate.","Various software tools have been developed to manage BOMs. Each of these tools provides limited functionality to address a specific aspect of BOM management. For example, to facilitate the manufacturing process and to plan the procurement of product components, conventional computer software called Manufacturing Resource Planning (MRP) software may be employed. MRP software uses a product BOM as the basis for such planning. However, MRP software is very complex to use. In addition, MRP software typically assumes that the product BOM changes very infrequently and as a result only provides inadequate tools for entering changes to the BOM. For these reasons, MRP software is rarely used during product development, when the product BOM may be changing on a daily or weekly basis and ease-of-use is important. Further, the calculations performed by MRP software are quite intensive and a single computer or server is typically dedicated to running the MRP software for one company or user. The computer used for this purpose is typically housed on-site at the company for security and convenience.","The most common category of software tool used for BOM management during product development is the general-purpose spreadsheet, of which Microsoft Excel\u00ae is an example. However spreadsheets are not well suited to BOM management. As noted above, a BOM is a complex collection of information that is typically developed and used by a group of people working together. Such information is more efficiently managed with a multi-user, relational database, while a spreadsheet is best characterized as a single-user flat-file database.","Examples of database applications employed to manage BOMs include Agile Anywhere\u00ae by Agile Software Corp. of San Jose, Calif. and Vendors\u00ae by Trilogy Design of Grass Valley, Calif. These applications provide a dedicated multi-user database for managing a single company's master item list and related BOM data during product development, including vendor and inventory information and item specification documents. However, these applications do not provide any means to maintain master item lists and BOM data from multiple companies or unrelated users in a single computer system or in a single database.","Furthermore, the set-up and management of dedicated computer systems for BOM management is difficult and expensive. This fact is widely recognized, as is evidenced by Agile Software's \u201cHosting\u201d service. This service permits a company to pay Agile Software to maintain a dedicated BOM management database on a dedicated computer at an offsite facility with access to the database provided by secure connections over the Internet. Agile Software claims to be able to set up a customer with hosting in \u201c . . . as little as four weeks\u201d (Agile Hosting Datasheet, Document #DSHOST-B 06\/00, Agile Software Corp.).","The hosting of data from more than one company in a single database is known in the art. For example, Yahoo! Corporation provides a service that permits companies to set up virtual storefronts or catalogs on the Internet for presentation to potential customers. These and related services allow companies to combine non-confidential catalog data into a common database managed by a third party and thereby reduce the cost of set-up and maintenance of an electronic commerce web site. A notable feature of such services is that the hosted data is considered non-confidential by the participating companies.","Known database systems further enable a contract manufacturer to combine BOM data from multiple customer companies into a single database using conventional MRP or BOM management software. As such, the contract manufacturer combined database is a BOM management database for the contract manufacturer and is established for the sole use of the contract manufacturer. In particular, the contract manufacturer is not permitted to keep track of which customer supplied which data, except through cumbersome manual tabulation and labeling of individual item and BOM relations. Furthermore, customer companies of the contract manufacturer are not generally permitted access to the combined database, as this would violate the confidentiality of other customer companies' data. In the rare situations where customer access is permitted, access privileges must be administered on an ad hoc basis by manually designating which BOM data should be available to which customer. In addition, the combined database represents a duplication of BOM data, that is, the customer maintains one representation of the product BOM on their own system, and the contract manufacturer maintains a second representation on the contract manufacturer's system.","Master item lists in current BOM management systems include only items as represented by the company that owns the system. Current BOM management systems do not permit representation of other company's items as distinct entities within the BOM management system. As a result, documents and information such as supplier datasheets are typically duplicated by customer companies and then stored and tracked under the customer company's item number. In some cases, the same supplier item may be approved for use as multiple customer items. For example, a supplier's 1% tolerance resistor may be approved for use as the customer's 1% tolerance resistor or as the customer's 5% tolerance resistor. In such a situation, the supplier's item information is replicated multiple times in the customer's BOM management system. This presents difficulties when the supplier changes the supplier item data, as each of the duplicate representations of the supplier item in the customer's BOM management system must be updated individually. Thus, there is a need for a BOM management system that permits a company to maintain representations of other companies' BOM data, including items, while minimizing the duplication of such data.","Conventional software tools further include those that provide for the analysis of BOM data and the categorization of items in a master item list. During product development and production, it is common to categorize components as line items of a BOM by type such as molded plastic part, printed circuit board, and integrated circuit and then to conduct design analysis to determine the relative number and value of each type of component contained in a particular product or group of products. A typical statement that would arise from this type of analysis is \u201cin product X, mechanical components account for 5% of the total number of components and 25% of the overall product cost.\u201d This type of analysis is often done to direct cost-reduction efforts, both in development and in production.","Because of the recognized need to categorize components by type, developers of software tools that manage and maintain element lists and BOMs conventionally include functionality that permits component type categorization. This functionality is implemented with either a fixed \u201cbuilt-in\u201d scheme for type categorization, or support for a single user-specified application-specific categorization scheme. When implemented, these solutions permit only one level of categorization, so either the developer or the user of the software tool must decide how many different categories to include, and what level of detail to include in each category type.","When the categorization scheme is specified by the software tool developer, problems arise because different users typically want different categorization schemes. For example, a manufacturer of optical equipment may need a very precise categorization of different lens types and have no need for a categorization of electrical components. Alternatively, a manufacturer of door locks would need a detailed categorization of mechanical components, but have no need to categorize lenses or electrical components.","Problems also arise when a company using the software tool can specify the categorization scheme in their implementation of the categorization. Different individual users of the system need different levels of detail in the categorization scheme. Clerks who assign item numbers typically prefer a simple system with few categories, as less technical knowledge is required to correctly categorize an element. Engineers and technical managers typically prefer a system with more categories, because this is more useful in performing design analysis. A technical manager may prefer relatively few, broad categories (for example, electrical, mechanical, packaging), while the individual engineers typically want categories that reflect a much more precise categorization. However, even different engineers typically care about different levels of detail. An electrical engineer may wish to categorize electrical components very precisely, but be happy to group all mechanical components together into one category. Conversely, a mechanical engineer may want to categorize mechanical components very precisely and not care about electrical components. Conventional systems do not have the flexibility to meet these varied preferences.","The difficulty of addressing component categorization in a way that adequately serves the needs of different companies and different users within the company is so severe that many developers of software tools that manage and maintain item lists and BOMs have chosen to omit this functionality. Furthermore, current categorization systems are inflexible and limited in their use. They do not adapt well to specific applications and are inadequate for analyzing BOMs. Current categorization systems also do not support multiple categorization levels, inheritance of category properties, and multiple views of category detail.","In sum, conventional systems do not provide for the flexibility required of BOM management systems. For example, current technology does not facilitate the sharing of information between BOMs, particularly when the BOMs are developed by different users. The lack of shared BOM data inhibits activities such as identification of vendors, rating of parts, rating of vendors, rating of manufacturers, calculation of cost estimates, identification of components and alternative components, and execution of electronic transactions. Currently, the presence of an element, and data concerning that element, in a BOM is not fully exploited when a second BOM is developed. The current technology also does not facilitate the presentation of a variety of views of a BOM or a variety of views of elements within a BOM. Finally, there are no means by which data within a BOM can be used to provide a user with additional useful information about related elements and products.","Conventional systems do not facilitate grouping of user data across separate BOMs. For example, there are no prior art systems for storing more than one BOM, owned by more than one user, in a single namespace. A single namespace includes a set of names, such as the primary keys of a database, in which all names (keys) are unique. Therefore, in the prior art it is not possible to store multiple BOMs within a single data file, or set of files that share a set of primary keys, while maintaining ownership or access control to individual BOMs, and BOM data, among the stored multiple BOMs. This prevents the storage of BOMs from multiple companies, or any other \u201cowning\u201d entity, in a single database or similar computational process. Advantages of BOM aggregation are therefore not achievable in the prior art.","A system for managing a bill of materials includes a data structure having at least one record with a primary key data field, an owner data field for indicating the owner of the record, the owner data field including data representative of one of a plurality of owners, and at least one other data field.","In another aspect, the system for managing a bill of materials includes a database having a single namespace, and at least one record with a primary key data field, an owner data field for indicating the owner of the record, the owner data field including data representative of one of a plurality of owners, and at least one other data field.","In another aspect, the system provides a means for storing multiple bills of material, from multiple owners in a single namespace.","The foregoing and other advantages of the invention will become apparent to those of ordinary skill in the art after having read the following detailed description as illustrated in the various drawing figures.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 1","b":["100","100","102","104","106","120","106","100","100","100","104","100","108","110"]},"As illustrated in  memory  includes a server code  and a relational database management system (RDBMS) . Server code  includes a variety of application code supporting a plurality of applications. Memory  also stores an operating system  such as Windows NT\u00ae, Linux\u00ae, or Solaris\u00ae that is capable of supporting server code  and RDBMS . RDBMS  includes a data owner list , an element list , and an element relations list . RDMBS  optionally includes a user list  and RDBMS modules .",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 3","FIG. 3"],"b":["300","205","302","302","302","304","310","302","302","210","310","300","300","320"]},"In another aspect of the invention, users and owners are considered identical and other data fields  include an owner name data field  and an owner password data field . In this case, user list  is typically omitted from RDBMS . In yet another aspect of the invention, user list  is maintained separately from data owner list .",{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 4","FIG. 4"],"b":["400","208","400","402","404","400","410","425","402","410","310","302","410","310","402","425","400","210","400","430","433","436","440","400"]},{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 5","FIG. 5"],"b":["500","206","500","502","502","502","504","500","505","510","505","500","210","510","310","500","530","520","525","530"]},"In another aspect of the invention, element number data field  includes an element (part) number for the BOM element associated with the individual data record . Element name data field  includes further identifying information regarding the element associated with the data record . Element numbers and names can reference steps or operations, as well as physical elements. Typically, element list data structure  includes more data fields  than shown, which can be referred to by a variety of names such as unit of measure or price.  also shows optional workspace context data field , the purpose of which is explained below.","Element list  lists individual parts from at least one BOM. Examples of possible elements within element list  include custom mechanical operations such as injection molding, extrusion, and stamping; standard mechanical components such as fasteners and O-rings; printed circuit boards; standard electrical components such as resistors and capacitors; programmed electrical components such as ROMs and ASICs; and the like.","Multiple lists of elements from multiple BOMs associated with multiple users or companies can be combined in element list . Additional parameters related to each element are also stored in association within element list . For example, a single element can have an associated description, user and vendor part numbers, cost per item, owner including which company placed the item in the element list , and other information. As disclosed above, owner information is particularly important because it enables server code  to limit access to elements in element list  to owners and their designates. An owner is either a single user or an enterprise. In this disclosure, the term \u201cuser\u201d refers to either a single user or a group of users. The subset of element list  owned by a user is referred to as the user's \u201cprivate element list.\u201d The private element list is the subset of element list  within the workspace  of the user.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 6","FIG. 6"],"b":["600","207","600","602","602","602","604","600","605","610","620","625","605","600","210","610","310","620","505","625","505","502","500","502","502","602","502","620","502","625","602"]},"Various applications of this method will be apparent to those skilled in the art. For example, element relations list data structure  optionally includes other data fields  in addition to element parent data field  and element child data field . In an aspect of the invention, other data fields  include child quantity data field , which contains a number indicating how many of the child BOM elements are included in each of the parent BOM elements. The contents of other data fields  are preferably specified by users of the invention. Typically, element list data structure  will include more data fields  in addition to those shown. Also shown in  is optional workspace context data field , the purpose of which is explained below.","As disclosed above, element relations list  are data delineating the relationships between various items in element list . For example, a first element (or parent element) in element list  can include four of a second element (first child element) and two of a third element (second child element). Therefore, producing two of the first element requires the acquisition of eight of the second element and four of the third element. Element relations list  is optionally used to represent other relationships such as physical or electrical connectivity or assembly order. Because of the hierarchal nature of many BOMs, the structure of element list  can, to first order, be viewed as a tree structure with subcomponents filling branches below an element node. As discussed below this tree structure facilitates several aspects of the invention.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 7","FIG. 7"],"b":["700","700","702","702","702","704","700","705","710","705","700","210","710","310","730","730","710","700","715","700","104","205","206","207","700"]},"In another aspect of the invention, server code  permits access to RDBMS  only to users represented in user list . In yet another aspect, server code  permits access to RDBMS  only to users represented in data owner list . For each user permitted to access RDBMS , server code  identifies data owners represented in data owner list  for which the user has been granted access rights. In one aspect, a user referenced by a particular data record  in user list data structure  is granted access by application code  to all data stored in various instances of generalized data structure  for which the contents of the owner data field  in generalized data structure  match the contents of the user's named owner data field  in user list data structure . In other aspects, server code  uses a more complex algorithm to determine a list of one or more data owners represented in data owner list  for which a user represented in user list  has been granted access rights (the user's access list).","Server code  interacts with RDBMS  to restrict users to viewing and editing data stored in generalized data structure  for which the data owner referenced in owner data field  is included in the user's access list. In addition, when a user creates a new data record  in any particular instance of generalized data structure , server code  interacts with RDBMS  to automatically set the contents of owner data field . In another aspect, the contents of owner data field  are set to match the contents of the user's named owner data field  in user list data structure . In other aspects, server code  uses a more complex algorithm to set the contents of owner data field .","Optional data fields  are designated workspace context data field , element name data field , and other data fields . There can be a plurality of other data fields .","In another aspect of the invention data records  of generalized data structure  are grouped by owner data field . The set of data records with a common owner is considered that owner's workspace .  shows data records A, B, and C as being included in a workspace \u201cA\u201d A. Likewise, data records D through  are divided between workspace \u201cB\u201d B and workspace \u201cC\u201d C. Each of these workspaces  typically has a different owner. Owners have control of rights and preferences within their workspaces . They can delegate rights, add records, and delete records. Owners determine what information within their workspace  is available to other users and owners. The division of BOM data into individual private workspaces  under a single namespace enables significant utility.","Generalized data structure  is optionally used within many of the lists and files in RDBMS  and is not restricted to use with data that includes BOM elements. For example, in various aspect of the invention, generalized data structure  is used to facilitate the storage of vendor lists, shipment lists, transaction lists, and other data related to various aspects of the invention. In these aspects element number data field  can be replaced by alternative identifying fields. For example, when generalized data structure  is used to facilitate the storage of a vendor list element, number data field  can be replaced by a vendor number data field.","Inclusion of an owner data field in generalized data structure  enables the aggregation of data from multiple owners, within a single namespace, in each list in which generalized data structure  is incorporated. An owner's workspace  can include any of these aggregations and can reside in files storing BOM elements, vendors, transactions, and\/or other related data.","Optional workspace context data fields  in generalized data structure  are used to store data indicating the context in which other data within the data record  is to be interpreted. For example, it is common for two different users to use different element numbers for the same BOM element. In one aspect data within the workspace context field  identifies a user whose element number is used in the element number data field . This user can be different from the user that owns the record  that includes the element number data field . The ability to define context enables owners to make proxy representations of data owned by others. Element numbers can be aliased to reconcile differences in element numbers used by different parties.","The system and method of the invention may alternatively be practiced in a distributed system, generally designated  as shown in . The distributed system includes the internet , routers , demilitarized zone virtual LANs (DMZ VLAN) , firewalls , load balancers , database (DB) VLANs , Web VLANs , database servers , web servers , RAID storage , VLANs , a management VLAN , a monitoring VLAN, and a connection to a managing entity . Various elements are disposed in a mirrored and redundant architecture. Monitoring VLAN  and Management VLAN provide control of the distributed system .","Elements within RDBMS modules  are alternatively stored separately or combined in a variety of data structures. RDBMS  optionally includes a distributed database system and may be located on distributed system .",{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 9","b":["215","215","920","910","930","940","950","215","205","206","207","208","920","205","920","205"]},"Vendor list  includes data related to vendors for elements in element list . Vendor list  also optionally includes, for each vendor, vendor identification data such as vendor name, vendor contact information, and vendor identification number. Vendor element relations list  includes data delineating which vendors, of vendor list , supply BOM elements of element list . Vendor element relations list  is optionally further qualified by the quantity of each element that the referenced vendor can supply. For example, a vendor is able to supply up to 1,000 of an element per month with a minimum order of 500 units. In contrast, a second vendor is willing to supply lower quantities, perhaps for use in the conceptual or design phases of a user's product. Further, a third vendor is a manufacturer and has the ability to deliver vast quantities of the element. Vendor element relations list  optionally includes, for each vendor element relation, such data. In addition, vendors are typically resellers that resell elements in lower quantities, or manufacturers producing an element and supplying it directly to a client. Vendor element relations list  optionally includes, for each vendor element relation, data indicating whether the vendor is a reseller or a manufacturer.","User list  optionally includes data to associate a subset of users with a vendor in vendor list . According to this aspect, server code  uses this data in conjunction with vendor element relations list  to permit users associated with a vendor to access elements in element list  supplied by said vendor. Users typically enter vendor element relationships in order to facilitate future purchasing of an item. Using previously entered vendor element relationships to permit users associated with a vendor to gain access to BOM elements and related BOM data provides significant utility. In particular, there is a substantial reduction in the amount of work required to administer access to BOM data. In addition, the timeliness and accuracy of the shared data is improved, because the vendor's users gain automated access to the most current BOM data stored in the system.","Transaction data  includes information used to support transactions. An aspect of vendor transaction history  lists the number of each transaction type completed for each vendor. Each time an electronic transaction as described below is completed, the vendor transaction history  is updated with a record of the transaction. Optionally, pre-calculated vendor ratings  contain summaries of the data, such as timeliness and reliability, for vendors in vendor list . Pre-calculated vendor ratings  are alternatively automatically updated at pre-established intervals or whenever a user requests a vendor rating.",{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 10","b":["940","1010","1020","1030","1040","1050","1060","1070","940"]},{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 11","b":["930","1130","1140","1150","1160","1170","1180"]},"List of supported transaction types  includes transaction types such as element availability inquiries (queries regarding whether a vendor carries an element), manufacturer availability (queries regarding whether a vendor carries elements from a specific manufacturer), quantity of elements \u201cavailable to promise\u201d (items in stock and unordered), price request for a specific quantity of items, price schedule as a function of quantity, lead time request for a specific quantity, lead time as a function of quantity, requests for quotation, quotation provided (from vendor to user), purchase order issued (user to vendor), PO acknowledged (vendor to user), promise to ship (vendor to user), notification of shipment (vendor to user), notification of receipt (user to vendor), and the like.","List of supported transaction protocols  includes transaction protocols such as Rosetta Net or EDI, fax, e-mail, e-mail containing the URL of a web form for entering vendor response, postal mail interface, manual protocols such as telephone calls (voice), and the like. These protocols are implemented by systems  and  and associated with interfaces described below and with reference to .","Vendor and transaction type\/protocol relations , include a list of vendors and vendor protocols associated with items in element list . The vendor and transaction type\/protocol relations  include the vendors that can supply an item and which protocol to use for each transaction type with each vendor when requesting the element.","Private user-specified element list  is a subset of element list  with access control so that each enterprise or user can only see selected elements. The user can transfer elements to private user specified element list  from element list , thereby eliminating the need to enter specification data for each element. In one aspect of the invention, private user-specified element list  includes some elements not included in element list .","Private user-specified element relations  includes relations that are applicable to private user-specified element list . Private user-specified vendor list  optionally includes a list of at least one vendor for each of the elements in private user-specified element list . Private user-specified vendor list  is generated by the user and is only accessible by the user or his designates. Private user-specified vendor list  optionally makes reference to vendors listed in vendor list  and optionally includes new or unknown vendors.",{"@attributes":{"id":"p-0086","num":"0085"},"figref":"FIG. 12","b":["210","1200","200"]},"At a step , server code  receives from the user at least one private user specified element list  of uniquely identified elements, the elements' attributes, and the elements' relationships to each other. The elements include processes, mechanical or electrical components, or any other uniquely identifiable element required for the building of a product. Attributes or properties of the elements include quantity of the element required to produce a product or subassembly, part number, and description.","At a step , RDBMS  stores any or all of the elements within private user-specified element list  and their attributes in element list . RDBMS  stores relations between the elements (such as parent-child relationships) in element list . Further, RDBMS  stores vendor and\/or manufacturer information for each element in vendor list . In addition, elements from multiple BOMs from multiple users are stored together in the element list . These users may \u201cown\u201d BOMs or workspaces  comprised of private user specified element lists and, through ownership, control access to and manipulation of data within those BOMs. For example, multiple companies can add elements in element list  while only those elements introduced by a specific user are preferably edited by that user. The user can provide a variety of access privileges to other users such as other employees of the same enterprise.","At a step , server code  sends an interface to a user via the Internet, or similar communications means, for relating elements from element list  into a private user specified element list  or private BOM. In one aspect the user builds and accesses a list of public elements that are accessible by all users and incorporates and relates those public elements into a private BOM. The BOM is presented as a fully nested view with user-selectable expansion of subassemblies\/levels. Further, the BOM is expandable down to a specified level or alternatively only a specific level can be viewed. The interface also allows flattened and component viewing. At a step , the method terminates. Vendors optionally provide elements to element list  for public access. The user-specified element list  or private BOM can be loaded into the workspace  of the user within element list .",{"@attributes":{"id":"p-0090","num":"0089"},"figref":"FIG. 13"},"At a step , server code  receives a request from a user to send a flattened BOM. At a step , server code  optionally verifies the user's authority to access the BOM that he has requested. At a step , server code  verifies the user's authorization by confirming that a user-entered password matches the password listed in user\/enterprise list . Alternatively, server code  verifies the user's authorization via any other well-known means for confirming identity such as fingerprint matching or retinal scanning. If the user is not authorized to access the BOM, the method ends at a step . Alternatively, the user is prompted to reenter his or her password. Further, the user is locked out of the BOM if he fails to enter the correct password multiple times in a pre-specified time period.","If the user is authorized to access the requested BOM, then at a step  the RDBMS  aggregates and flattens the user's BOM. RDBMS  identifies which items in element list  are parts of the user's BOM (workspace ) by accessing the owner data field  associated with each element. At a step , RDBMS produces a list of BOM elements that include the aggregated and flattened BOM data. This list may be divided by or limited to purchasable or non-purchasable elements. At a step , server code  sends the list to the user and the process ends at a step .","The unique collection of multiple BOMs, preferably from multiple users, organizations, or companies within a single system and the relationships among elements, enables several aspects of the invention. These include automated development of vendor lists, enhanced calculation of system costs, improved element classification, vendor ratings, electronic transaction processing, and targeted advertising based on elements within a BOMs. These aspects are disclosed in detail below.","Development of Vendor Lists","In another aspect of the invention, element list  is used to generate primary or alternative vendor lists. Since element list  includes data submitted by a plurality of users, when a user selects an element for inclusion within their own BOM there is a possibility that the same element has already included in a BOM owned by a party other than the user. Computer code operating within system  disaggregates multiple BOM owned by multiple users into individual elements, remove proprietary information, and then compiles the non-proprietary information into a database of element sources. The database of element sources allows computer code operating within system  to recommend sources for elements when a user creates a new BOM. Sourcing recommendations are keyed by manufacturer name, vendor name, part number, or the like.","Sourcing recommendations are further enabled by a BOM possibly having multiple interchangeable sources for each line element within the BOMs. A user can indicate one vendor of an individual element as the \u201cpreferred\u201d source, and maintain information about other \u201calternative\u201d vendors in case the preferred sources are unable to meet the requirements of the user.","The source recommendation method is implemented in a database, such as RDBMS , that contains lists of purchasable elements from multiple users or companies in a single namespace. In this database, if enterprise A has an element for which a single source is known, it is possible to search the database for elements owned by other companies that have the same source, and if any such elements exist, to determine what other sources have been specified by the alternative companies. These alternative sources can then be returned to enterprise A as suggested alternative sources without revealing the identity or any other information about the other companies or users.",{"@attributes":{"id":"p-0097","num":"0096"},"figref":"FIG. 14","b":["1410","206","1420","1410","1430","1410","1440","1450","1460","1470"]},"Calculation of System Costs","In an aspect of the invention data within RDBMS  is used for automatically calculating a product cost estimate and a figure of merit for this calculation. One method of determining a \u201crolled up\u201d product cost estimate and calculating the accuracy of the estimate based on a preliminary BOM is illustrated in .","In a step  a list of purchasable or non-purchasable elements to be included in a BOM is developed. This list is generated as one or more BOMs are populated. In a step , the list developed in step  is divided into elements that are already used by the user and newly specified elements. The division occurs as the list is developed or at the request of the user, and the division is optionally updated over time as more elements are introduced or changed. Throughout this process elements having a known, quoted, or estimated cost are tagged as such. In a step , for each element already used by the user, cost information from previous purchasing records are automatically associated with the element. In a step  a cost estimation or price quotation is attained for each newly specified element. Users select to have quotation requests automatically generated and sent to appropriate vendors. In an optional step  a new BOM is developed and in a step  an element is added to the new BOM or a previously existing BOM. Cost estimates are for single or multiple element quantities. Steps  and  are not necessarily performed immediately proceeding steps  through .","In a step  three separate cost subtotals are calculated for the selected BOM, the subtotal of the elements with estimated costs, the subtotal of the elements with quoted costs, and the subtotal of the elements with known costs. Alternatively, these values are maintained in running subtotals. A count of the quantity of elements in each category is optionally maintained. In a step  the total cost estimate is determined by adding the three subtotals.","In a step  figures of merit for the accuracy of the cost estimates are calculated from the values generated in steps  and  or from values generated through a similar process. At a minimum, these include the percentage of the total cost represented by the estimated, quoted, and known cost subtotals, or the percentage of the total number of elements in each cost category. The perceived accuracy of individual price estimates may be considered in an algorithm used to calculate the accuracy of estimated total costs. The calculated figures of merit are optionally reported to a user.","Element Classification","In another aspect of the invention systems for simplified component type categorization and automating design analysis using said type categorizations are provided. These enable methods of multiple, application specific, hierarchical, and other types of categorizations of product components.","A table of classes or \u201ccategories\u201d is maintained in a database, with each category represented by at least one row within the table. Categories are related to each other in a tree-like structure, wherein each category is a parent to none, one or more child categories or elements (components). Individual categories and elements are also children to none, one, or more parent categories. The relationships between categories in this system are structurally similar to assemblies in BOMs and in an aspect of the invention, the table of categories is combined with an element table (BOM) as a single table in a database. In another aspect two separate tables are maintained, one of categories and another of components. The relationship between the parent and children categories and components are maintained as a \u201cparent category\u201d column in the category and element table(s), or in a separate \u201ccategory relation\u201d table which minimally includes a column for the child category or component and a column for the parent category or component. In this aspect, each categorization scheme has one \u201ctop-level\u201d category, which typically signifies a \u201cgeneric\u201d categorization. The top-level category is a parent to multiple sub-categories that typically signify broad levels of categorization, such as \u201cmechanical\u201d, \u201celectrical\u201d, or \u201cdocument\u201d. Each sub-category is a parent in turn to further sub-categories that represent subsets of the parent category. This structure is repeated as many times as necessary to reach the desired level of detail in the categorization scheme. Typically, the deepest level of category in the tree is parent to individual elements (components) that belong to that category.","According to this aspect, a user who needs to categorize a particular known element can find the appropriate category in any scheme by starting with the top-level category. The user determines which sub-category applies most closely to the element, and then move on to the further sub-categories of that sub-category. At each level in the categorization tree, if no sub-category applies to the element, the user creates a new sub-category or assigns the element to the current category. Thus, a user need not memorize the details of any particular categorization scheme, and a non-technical person can successfully categorize a well-described element. Also, the categorization scheme can be extended as new elements are added. In some aspects, users also have the ability to edit the category descriptions, to \u201cmove\u201d components individually or in a group to a new category, to delete categories, and to merge categories.","In another aspect of the invention a method for automatically analyzing the content of one or more bills of material by component type is provided. This method permits analysis using different categorization schemes and at different levels of detail within each categorization scheme. For example, a user can query the database to calculate the cost subtotals by category for all components contained in a bill of materials at any level in the categorization tree. A product manager can look at the subtotals at the top level of the tree in order to understand how the product cost was divided between electrical and mechanical components. An electrical engineer can look at the subtotals for only the electrical sub-categories to see how the product cost was divided between passive components, active components, and connectors. A salesperson can develop a completely different categorization scheme based on target markets and use it to analyze product offerings by target market. The owner of system  can develop a categorization scheme that is independent of any user's schemes and employ the independent scheme to guide the placement of targeted advertising.","Replace \u201cdata fields \u201d with \u201cother data fields \u201d pg 21 line 1","In another aspect of this method, parameters and default values for each parameter are assigned to a category and, as in other class based schemes, the parameter and value is \u201cinherited\u201d by components belonging to that category or any level of sub-category of that category. For example, the user can assign a \u201cpackage\u201d parameter with a value of \u201cunspecified\u201d to the category of \u201cElectrical Components\u201d, and a \u201cresistance\u201d parameter with a value of \u201cunspecified\u201d to the category of \u201c Surface Mount Resistors\u201d. Further, the user can specify that the value of the \u201cpackage\u201d parameter for  Surface Mount Resistors was \u201c\u201d. Whenever a component is added to the \u201c Surface Mount Resistors\u201d category, \u201cpackage\u201d and \u201cresistance\u201d parameters are automatically assigned to the component, and the \u201cpackage\u201d parameter is automatically given the value of \u201c\u201d.","Vendor Rating",{"@attributes":{"id":"p-0109","num":"0108"},"figref":"FIG. 16","b":["1602","1610","1620","1602","100","1602","1610","1602","1620"]},"Vendor rating processor  calculates vendor ratings by comparing data between two or more of the lists in vendor transaction history . For example, vendor rating processor  calculates vendor responsiveness to requests for quotations (timeliness) by comparing, over multiple transactions, the dates of requests for quotations and their subsequent quotations provided as detailed in request for quotation list  and quotation provided list . Vendor rating processor  also calculates the percentage of vendor quotations that result in sales by calculating how often a purchase order is issued, as shown in the purchase order issued list , for each quotation provided, as shown in the quotation provided list .","Vendor rating processor  calculates vendor responsiveness to POs (timeliness) by comparing the dates between POs issued, as recorded in the purchase order issued list , and the respective POs acknowledged, as recorded in the PO Acknowledged list ; or between the dates of the POs issued, as recorded in purchase order issued list , and the respective promises to ship, as shown in the promise to ship list . Vendor rating processor  calculates vendor reliability by comparing, over multiple transactions, the dates between promises to ship, as recorded in promise to ship list , and the respective notifications of shipment, as recorded in notification of shipment list .","Vendor rating processor  calculates how many transactions a vendor has completed using system  by summing the transactions for the vendor stored in the multiple lists of vendor transaction history . For vendors with a sufficient volume of transactions, vendor processor  illustrates vendor performance over time in an appropriate graph. For example, transaction processor  displays vendor reliability over time so users could see whether a previously reliable vendor is currently extending delivery dates.",{"@attributes":{"id":"p-0113","num":"0112"},"figref":"FIG. 17","b":["1710","1602","200","1610","1602","1602","100"]},"At a step , vendor rating processor  receives a request for one or more vendor or manufacturer rating criteria from a user. At a step , vendor rating processor  formulates a database query to retrieve the data from vendor transaction history  that is necessary for calculating the user-specified vendor rating or alternatively to retrieve pre-calculated vendor ratings . However, if the user requests a manufacturer rating, vendor rating processor  can also formulate a database query to retrieve data from element list .","At a step , vendor rating processor  submits the database query to RDBMS , which, in turn, searches vendor transaction history  or pre-calculated vendor ratings (or element list  in the case of manufacturer ratings) for the appropriate data. At a step , vendor rating processor  receives the results of the database query and at an optional step  calculates any further performance criteria\/vendor ratings (or manufacturer ratings) based on the results of the query. As discussed above in conjunction with , vendor rating processor  calculates vendor responsiveness to requests for quotations, vendor quotation conversion, vendor responsiveness to POs, vendor reliability by comparing dates between the appropriate lists for multiple transactions as stored in vendor transaction history , and the like. In addition, vendor rating processor  provides a user with information regarding how many transactions a vendor has completed using system . For vendors with a sufficient volume of transactions, vendor rating processor  also correlates and presents vendor performance over time in an appropriate graph.","At a step , vendor rating processor  formats and sends the requested performance criteria to the user via server code . The performance criteria are optionally presented graphically such as in x-y charts, pie charts, and color-coding results for a multiple-vendor query. Further, transaction processor  provides multiple vendor ratings for multiple vendors in a single display for the purpose of vendor comparison. At a step , the method ends.","Electronic Transaction Processing",{"@attributes":{"id":"p-0117","num":"0116"},"figref":"FIG. 18","b":["1802","1802","100","1805","1810","1820","1830","1840","1850","1860","1870","1880","1802","1890","1802"]},"Transaction processor  sends a web form from Internet interface  to a user. The user employs the web form to send to system  an electronic transaction request. Transaction processor  also sends a second web form or the like to a vendor. The vendor employs the second web form to initiate an electronic transaction request such as responding to a request for quotation. Alternatively, a user obtains or programs custom software to connect to system  by way of an interface such as Internet interface . In this case, the user software uses the application programming interface  to generate electronic transaction requests. If the user desires, such transaction requests may be initiated and executed entirely automatically, without human intervention.","The interfaces shown in  are all used by transaction processor  to perform electronic transactions as requested by a user. When transaction processor  is unable to complete an electronic transaction, transaction processor  sends a notification to a human operator via notification interface .",{"@attributes":{"id":"p-0120","num":"0119"},"figref":"FIG. 19","b":["1905","200","1160","1170","1180","340","215"]},"In a step , transaction processor , in conjunction with server code , sends a web form to a user so that the user can initiate a transparent electronic transaction of a type listed in supported transaction types  based on an element or elements stored in private user-specified element list . A vendor can also initiate an electronic transaction, such as acknowledgement of a PO. In a step , transaction processor , via server code  or similar digital interface, receives an electronic transaction request from a user. The electronic transaction request can include information such as the type of transaction to be initiated, the vendor with which to initiate the transaction, and the element to be ordered or inquired about. In addition, if the user-initiated request involves a user-designed element, the request includes design data to further define the element. Different transaction types require a variety of different information. For example, a specific \u201cissue PO for a printed circuit board\u201d transaction requires the user to supply the vendor with certain circuit board design data before the user can initiate the transaction. Alternatively, some transaction types do not require that a specific purchasable element be specified by the user but instead require the user to supply the vendor with descriptive parameters for a particular type of component. Then either system  or the vendor resolves the descriptive parameters into one or more particular purchasable or non-purchasable elements as part of the execution of the transaction.","System  optionally supports a variety of protocols for vendor-initiated transactions. For example, system  enables the user to specify that they prefer to receive vendor-initiated transactions through transaction processor . In this case, the vendor initiates a transaction through one of a variety of protocols supported by transaction processor  (as listed in supported transaction protocols ) and has that transaction appear to the user as an electronically generated transaction.","In a step , transaction processor  attempts to match the specified vendor as indicated in the electronic request to a vendor in vendor list  via automated means such as matching vendor contact information. Alternatively, the electronic transaction request specifies a specific vendor from vendor list  and, therefore, step  is skipped.","If transaction processor  cannot match the specified vendor to a vendor in vendor list , then transaction processor  optionally notifies a human or automated operator of system , via notification interface , to manually determine if the specified vendor is listed in vendor list . In a step , transaction processor  receives the results of the operator's determination. If, in a step , the operator determined that the specified vendor was a known vendor, then the method continues to a step , further discussed below. If the operator determines that the new vendor is a previously unknown vendor, then in a step , transaction processor  adds the new vendor to vendor list  and initializes tracking data associated with the new vendor. In a step  transaction processor  determines the appropriate transaction protocols from the list of supported transaction protocols  for use in executing a transaction with the new vendor and stores the protocol data for each transaction type in vendor list .","In a step , transaction processor  establishes a relationship between the vendor specified in step  and a vendor in vendor list  for the purpose of processing future transactions. Even if the vendor specified in step  is a new vendor, the transaction processor  can still establish the relationship between the new vendor and a vendor in vendor list  because the new vendor would have been added to the vendor list  in step .","In a step , the method optionally attempts to establish a relationship (if any) between the element, or elements specified in step , with elements in element list  for future processing of electronic transactions. If transaction processor  matches the buyer-specified element to an element in the element list , then transaction processor  continues to a step  discussed below. If transaction processor  is unable to establish a match, the buyer-specified element to an element in element list , then, in a step , transaction processor  notifies a human operator of system  via internal notification interface .","In a step , transaction processor  receives the results from the operator's inquiry regarding matching the element. If the operator was able to match the buyer-specified element to an element in element list , then transaction processor  proceeds to a step . If the element is new (the human operator was unable to match the buyer-specified element to an item in element list ), then in a step , transaction processor  adds the new item to element list .","In step , transaction processor  determines the relationship between the buyer-specified element and an item in element list  for the purpose of processing future transactions. In a step , transaction processor  determines which protocol to use for this transaction by cross-referencing the vendor and transaction type in vendor and transaction type\/protocol relations .","In a step , transaction processor  executes the transaction using the protocol selected in step .","After the transaction is completed, transaction processor  optionally updates transaction quantity data item in vendor list  for the transaction type performed. In a step  the method ends.","Targeted Advertising","Categorization of elements within a user's BOM and selection of third-party part numbers by a user provides system  with information about the interests and activities of the user. This information allows the manager of system  to display targeted advertising to the user. The manager of system  offers advertising space based on a user's element categorizations and part numbers. For example, if a user has elements within their private user-specified element list  categorized as \u201celectronic power supply-switch mode\u201d they are shown advertisements related to alternative power supplies or DC-DC converters. In another example, a user has specified a part number 00-1234 from manufacturer A. Manufacturer B pays for advertisements to be shown to all users that specify part 00-1234 offering an alternative part. This permits vendors to deliver advertising to potential users that are known to be specifying a competitive compatible part and to users that are known to be interested in specific types of components. Vendors are also able to cross-sell to users who have already specified their parts. The targeted delivery of information need not be limited to advertising. For example, product updates, recall notices, and application notes can be delivered to users of specific products."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWING","p":[{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 1","b":"100"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 2","b":"104"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 19"}]},"DETDESC":[{},{}]}
