---
title: Method and system for dynamic expansion and contraction of nodes in a storage area network
abstract: A method and system to add a storage controller in a SAN includes receiving a storage controller node to add to a logical storage controller in the storage area network having a logical nodename and a sequence of logical ports, adopting the logical nodename from the logical storage controller in place of the predetermined nodename associated with the storage controller and renumbering a set of ports associated with the storage controller to extend the sequence of logical ports associated with the logical storage controller. Removing the storage controller includes removing a storage controller node from the logical storage controller in the storage area network having a logical nodename and a sequence of logical ports, deleting the set of ports associated with the removed storage controller from the sequence of logical ports associated with the logical storage controller and renumbering the sequence of logical ports to accommodate the deleted ports.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07752294&OS=07752294&RS=07752294
owner: NetApp, Inc.
number: 07752294
owner_city: Sunnyvale
owner_country: US
publication_date: 20031028
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["This application claims priority to U.S. Provisional Application No. 60\/422,109, filed Oct. 28, 2002 and titled \u201cApparatus and Method for Enhancing Storage Processing in a Network-Based Storage Virtualization System\u201d, which is incorporated herein by reference. This application also relates to the subject matter disclosed in the co-pending U.S. application Ser. No. 10\/695,887, by Richard Meyer, et al., titled \u201cMethod and System for Dynamic Expansion and Contraction of Nodes in a Storage Area Network\u201d, co-pending U.S. application Ser. No. 10\/695\/889, by Gautam Ghose, et al., titled \u201cFailure Analysis Method and System for Storage Area Networks\u201d, co-pending U.S. application Ser. No. 10\/695\/888, by Tuan Nguyen, et al., titled \u201cMethod and System for Managing Time-Out Events in a Storage Area Network\u201d, co-pending U.S. application Ser. No. 10\/696,434, by Rush Manbert, et al., titled \u201cMethod and System for Strategy Driven Provisioning of Storage in a Storage Area Network\u201d, filed concurrently herewith.","Storage area networks, also known as SANs, facilitate sharing of storage devices with one or more different host server computer systems and applications. Fibre channel switches (FCSs) can connect host servers with storage devices creating a high speed switching fabric. Requests to access data pass over this switching fabric and onto the correct storage devices through logic built into the FCS devices. Host servers connected to the switching fabric can quickly and efficiently share blocks of data stored on the various storage devices connected to the switching fabric.","Storage devices can share their storage resources over the switching fabric using several different techniques. For example, storage resources can be shared using storage controllers that perform storage virtualization. This technique can make one or more physical storage devices, such as disks, which comprise a number of logical units (sometimes referred to as \u201cphysical LUNs\u201d) appear as a single virtual logical unit or multiple virtual logical units, also known as VLUNs. By hiding the details of the numerous physical storage devices, a storage virtualization system having one or more such controllers advantageously simplifies storage management between a host and the storage devices. In particular, the technique enables centralized management and maintenance of the storage devices without involvement from the host server.","In many instances it is advantageous to place the storage virtualization controller(s) in the middle of the fabric, with the host servers and controllers arranged at the outer edges of the fabric. Such an arrangement is generally referred to as a symmetric, in-band, or in-the-data-path configuration. As storage area networks grow additional ports on the storage area controller and switching fabric are needed to connect additional hosts and storage devices into the network. More ports on the storage controller are also required to handle increasing per-port performance requirements. For example, current SANs provide 6,000 ports with a 3:1 fan in\/out ratio measure of performance. Assuming the same 3:1 performance, increasing the SAN size by ten-fold to 60,000 ports would require the storage controller device in the SAN to provide over 20,000 ports in the chassis. Even if per-port performance could be increased to a 6:1 fan in\/out ratio, the storage controller device would still be required to provide over 10,000 ports.","Indeed, increasing the size of the storage controller to hold thousands of ports also has drawbacks. Growing customers may not want the added expense of purchasing storage controllers with empty slots to accommodate projected growth and expansion. By the time the company requires the additional ports, advances in technology and manufacturing may render the technology required for the added slots functionally or economically obsolete. Adding ports to a large but older storage controller chassis may be more expensive than buying newer, denser and more reliable storage controller technology. Further, once the larger storage controller is filled then customers must once again face the dilemma of purchasing yet another storage controller chassis and ports. These large storage controllers are not only expensive but cumbersome to manufacture and install.","Even if it were feasible, larger storage controllers are more vulnerable to hardware or software failures. In a SAN, a single hardware or software failure that renders a physical device inoperable will impact the SAN performance. The significance of the failure may depend on the role of the physical device. For example, in the traditional replication of a storage controller instance failure of an original storage controller may lead to a performance degradation of as much as 50%; in most cases, this is an unacceptable impact on the SAN.","Current technique for adding another conventional storage controller may satisfy the increased demand for ports but at the expense of significantly increasing the complexity of managing the SAN. Each additional storage controller chassis and set of ports defines a separate island within the overall storage network. These islands have a separate storage pools and therefore cannot share the storage as readily as storage located on a single SAN.","Performance in the SAN would also most likely suffer when required port ratios in the storage controller described previously are exceeded. Typically performance degradation would create port congestion, over-subscription of resources and reduced input-output performance. The ability to address the increased port demand in the SAN is currently limited by the number of slots and line cards in a given storage controller chassis. Unfortunately, adding additional line cards and ports is not a simple task using conventional storage controller solutions as demonstrated above.","For these and other reasons, it is therefore desirable to improve the scalability, configurability and sizing of storage controllers as used in rapidly growing SANs.","In one implementation, the present invention provides a method for adding a storage controller node in a storage area network. Adding the storage controller includes receiving a storage controller node to add to a logical storage controller in the storage area network having a logical nodename and a sequence of logical ports, adopting the logical nodename from the logical storage controller in place of the predetermined nodename associated with the storage controller and renumbering a set of ports associated with the storage controller to extend the sequence of logical ports associated with the logical storage controller.","In another implementation, the present invention provides a method of removing a storage controller node in a storage area network. Removing a storage controller includes removing a storage controller node from a logical storage controller in the storage area network having a logical nodename and a sequence of logical ports, deleting the set of ports associated with the removed storage controller from the sequence of logical ports associated with the logical storage controller and renumbering the sequence of logical ports to accommodate the deleted set of ports.","Aspects of the present invention provide a dynamic method and system for expanding and contracting nodes in a storage area networks. Managing nodes in accordance with the present invention is advantageous for at least one or more of the following reasons described herein. A single storage pool can be managed with multiple storage controllers configured and managed in accordance with the present invention as a single logical storage controller. Ports can be added without increasing the number of storage islands being managed as ports are added in contiguous sequence with preexisting ports in the logical storage controller. Multiple new storage controllers entered into a logical storage controller contribute additional ports to the SAN while appearing as a single and larger storage controller.","Implementations of the present invention facilitate combining multiple storage controllers into a single larger logical storage controller. It can also be used to combine existing and older storage controllers with newer storage controllers. The logical storage controller construct implemented in accordance with the present invention accommodates different storage controllers through a universal application programming interface (API). This API is used to exchange database information between the various controllers pertinent to operation of the overall logical storage controller. The API even makes it possible for storage controllers using different databases to share important SAN configuration information and coexist. This API interface also enables customers to upgrade from an older model storage controller to a newer storage controller without having to remove the existing older storage controller model on the SAN.","Further, another advantage of the present invention provides an increased reliability characteristic given hardware or software failures. In a logical storage controller containing n physical storage controllers the impact of failure from a storage controller can be reduced to approximately 1\/n. The larger logical storage controllers have significant improved performance and reliability due to the increased redundancies in ports and communication paths not previously available using conventional solutions.","Management of remote SAN is also simplified by implementations of the present invention. A remote SAN and storage controller can be incorporated into the logical storage controller of the present invention and managed as a single SAN rather than a local SAN and a remote SAN as traditionally found with other solutions. Also, the storage pool on both the local and remote SAN can be combined into a single shared image or island of storage rather than several.","Referring to the exemplary configuration in , a storage area network (SAN)  may include one or more SAN switch fabrics, such as fabrics ,. Fabric  is connected to hosts , while fabric  is connected to storage devices . At least one storage virtualization controller  is inserted in the midst of SAN , and connected to both fabrics , to form a symmetric, in-band storage virtualization configuration. In an in-band configuration, communications between server devices  and storage devices  pass through controller  for performing data transfer in accordance with the present invention. In accordance with implementations of the present invention, these one or more storage virtualization controllers  or storage controllers  appear as a single logical storage controller during operation.","Host servers  are generally communicatively coupled (through fabric ) via links  to individual upstream processing elements (UPE) of storage controller . In an alternate configuration, one or more host servers may be directly coupled to storage controller , instead of through fabric . Storage controller  includes at least one UPE for each server  (such as host servers ,,,) connected to storage controller . As will be discussed subsequently in greater detail, storage controller  appears as a virtual logical unit (VLUN) to each host server.","Storage devices  are communicatively coupled (through fabric ) via links  to individual downstream processing elements (DPEs) of storage controller . In an alternate configuration, one or more storage devices may be directly coupled to storage controller , instead of through fabric . Storage controller  includes at least one DPE for each storage device  (such as storage devices ,,,,) connected to the controller . Storage controller  appears as an initiator to each storage device . Multiple storage controllers  may be interconnected by external communications link . Within each storage controller , is node expansion and node contraction routines for adding and deleting storage controllers with supporting hardware and software needed to implement the present invention. As described later herein, the components used for expanding or contracting the nodes in a logical storage controller facilitate scalability of ports in the storage area network in an efficient cost-effective manner without significant increased management overhead requirements.","Considering now the virtualization of storage provided by an implementation of the present invention, and with reference to the exemplary SAN  of , a storage virtualization system includes an exemplary storage virtualization controller arrangement . Storage controller arrangement  includes, for illustrative purposes, two storage virtualization controllers , interconnected via external communication link . Storage controller  has been configured to provide four virtual logical units ,,, associated with hosts -, while controller  has been configured to provide one virtual logical unit  associated with hosts ,. In the general case, a virtual logical unit (VLUN) includes N \u201cslices\u201d of data from M physical storage devices, where a data \u201cslice\u201d is a range of data blocks. In operation, a host requests to read or write a block of data from or to a VLUN. Through controllers  of this exemplary configuration, host  is associated with VLUN ; host , host , and host  are associated with VLUN ; host  is associated with VLUN , host  and host  are associated with VLUN . Through controller , host  and host  are also associated with VLUN . It can be seen that host  can access VLUN  through two separate paths, one through controller  and one path through controller .","A host - accesses it's associated VLUN by sending commands to the controller arrangement  to read and write virtual data blocks in the VLUN. Controller arrangement  maps the virtual data blocks to physical data blocks on individual ones of the storage devices ,,, according to a preconfigured mapping arrangement. Controller arrangement  then communicates the commands and transfers the data blocks to and from the appropriate ones of the storage devices ,,. Each storage device ,, can include one or more physical LUNs; for example, storage device   has two physical LUNs, LUN A  and LUN B .","To illustrate further the mapping of virtual data blocks to physical data blocks, all the virtual data blocks of VLUN  are mapped to a portion of the physical data blocks LUN  of storage device . Since VLUN  requires more physical data blocks than any individual storage device ,, has available, one portion of VLUN  is mapped to the physical data blocks of LUNA  of storage device , and the remaining portion of VLUN  is mapped to a portion of the physical data blocks of LUN  of storage device . One portion of VLUN  is mapped to a portion of LUN  of storage device , and the other portion of VLUN  is mapped to a portion of LUN  of storage device . It can be seen with regard to VLUN that such a mapping arrangement allows data block fragments of various storage devices to be grouped together into a VLUN, thus advantageously maximizing utilization of the physical data blocks of the storage devices. All the data blocks of VLUN  are mapped to LUNB  of storage device .","While the above-described exemplary mapping illustrates the concatenation of data block segments on multiple storage devices into a single VLUN, it should be noted that other mapping schemes, including but not limited to striping and replication, can also be utilized by the controller arrangement  to form a VLUN. Additionally, the storage devices ,, may be heterogeneous; that is, they may be from different manufacturers or of different models, and may have different storage sizes, capabilities, architectures, and the like. Similarly, the hosts - may also be heterogeneous; they may be from different manufacturers or of different models, and may have different processors, operating systems, networking software, applications software, capabilities, architectures, and the like.","It can be seen from the above-described exemplary mapping arrangement that different VLUNs may contend for access to the same storage device. For example, VLUN  and VLUN  may contend for access to storage device  ; VLUN  and VLUN  may contend for access to storage device  ; and VLUN  and VLUN  may contend for access to storage device  . The storage virtualization controller arrangement  according to an implementation of the present invention performs the mappings and resolves access contention, while allowing data transfers between the host and the storage device to occur at wire-speed.","Before considering the various elements of the storage virtualization system in detail, it is useful to discuss, with reference to , the format and protocol of the storage requests that are sent over SAN  from a host to a storage device through the controller arrangement . Many storage devices frequently utilize the Small Computer System Interface (SCSI) protocol to read and write the bytes, blocks, frames, and other organizational data structures used for storing and retrieving information. Hosts access a VLUN using these storage devices via some implementation of SCSI commands; for example, layer 4 of Fibre Channel protocol. However, it should be noted that the present invention is not limited to storage devices or network commands that use SCSI protocol.","Storage requests may include command frames, data frames, and status frames. The controller arrangement  processes command frames only from hosts, although it may send command frames to storage devices as part of processing the command from the host. A storage device generally does not send command frames to the controller arrangement , but instead sends data and status frames. A data frame can come from either host (in case of a write operation) or the storage device (in case of a read operation).","In many cases one or more command frames is followed by a large number of data frames. Command frames for read and write operations include an identifier that indicates the VLUN that data will be read from or written to. A command frame containing a request, for example, to read or write a 50 kB block of data from or to a particular VLUN may then be followed by 25 continuously-received data frames each containing 2 kB of the data. Since data frames start coming into the controller  only after the controller has processed the command frame and sent a go-ahead indicator to the host or storage device that is the originator of the data frames, there is no danger of data loss or exponential delay growth if the processing of a command frame is not done at wire-speed; the host or the storage device will not send more frames until the go-ahead is received. However, data frames flow into the controller  continuously once the controller gives the go-ahead. If a data frame is not processed completely before the next one comes in, the queuing delays will grow continuously, consuming buffers and other resources. In the worst case, the system could run out of resources if heavy traffic persists for some time.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 3A","b":"302"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 3B","FIG. 3B"],"b":["306","0","47","314","0","23","24","47","306","312","314"]},"Depending on the values contained within, a 64-bit string can describe a nodename  or a portname . In the first instance, a nodename  is indicated by a \u201c0x01\u201d value in bits - of field Network Address Authority (NAA)  ID and a \u201c0\u201d value in bits - of Port ID . Along with IEEE Address  or MAC as described above, nodename  identifies a WWN for the storage controller. Alternatively, portname  is indicated by a \u201c0x02\u201d value in bits - of field NAA  and a port number in bits - of Port ID  identifying the particular port. The port number in bits - corresponds to the port being identified on the node. IEEE Address  in bits - once again includes a MAC address to identify the storage controller.","Referring to  is a block diagram and overview of combining two storage controllers into one logical storage controller in accordance with implementations of the present invention. In this example, a first storage controller  has 8 ports identified as port  through port  and a predetermined node name of \u201c10000000FFE00048\u201d assigned to the storage controller during manufacture. Similarly, a second storage controller  also has 8 ports ranging from port  to port  but instead has a predetermined nodename of \u201c100000007BB00002\u201d, also assigned during manufacture.","In accordance with the present invention, first storage controller  is entered into a logical storage controller arrangement . Subsequently, storage controller  is added to the arrangement to be used in conjunction with first storage controller . In this particular implementation, a logical nodename of \u201c10000000FFE00048\u201d is derived from the predetermined nodename assigned to first storage controller  as this storage controller was also the first storage controller added to logical storage controller arrangement . As illustrated, second storage controller  adopts the logical nodename of \u201c10000000FFE00048\u201d assigned to the logical storage controller arrangement  and renumbers the ports in contiguous sequence extending the logical ports of logical storage controller  from 8 to a total of 16.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 5","b":"502"},"The administrator or other party configuring the system determines if the storage controller is to be added to a logical storage controller for the SAN or work as a separate storage controller (). Like conventional systems, implementations of the present invention provide the option of adding the storage controller without further modification using the predetermined nodename of the storage controller and set of ports to establish a separate island of storage ().","Alternatively, a determination is made if the storage controller is the first storage controller in the logical storage controller (). In one implementation, the first storage controller added to the logical storage controller arrangement contributes a nodename for use as the logical nodename of the logical storage controller. The logical nodename is a unique world wide node name (WWN).","When at least one storage controller is associated with the logical storage controller arrangement (), the storage controller adopts the logical nodename from the logical storage controller in place of the predetermined nodename for the storage controller determined during manufacture (). In addition, implementations of the present invention renumber the set of ports associated with the storage controller to extend the sequence of logical ports associated with the logical storage controller (). For example, in one configuration the sequence of logical ports is a contiguous numeric sequence of ports generated as sets of ports from each storage controller as they are added to the logical storage controller.","Implementations of the present invention also designate a role for each storage controller in the logical storage controller including: a primary storage controller, a secondary storage controller and a alternate storage controller. The primary storage controller is generally responsible for a variety of roles involved with updating data across the storage controllers in the logical storage controller. In the event the primary storage controller experiences a failure, the secondary storage controller performs tasks assigned to the primary storage controller; alternate storage controllers can also be nominated to step up to a secondary storage controller role as deemed necessary. Once the storage controller is modified, the present invention then generates configuration information reflecting the addition of the storage controller to the logical storage controller and the set of ports added to the corresponding sequence of logical ports.","Implementations of the present invention then distributes configuration information containing the above changes to one or more storage controllers associated with the logical storage controller (). In one implementation, the configuration information is stored in a database along with other types of metadata useful in operating the logical storage controller of the present invention. For example, the metadata describing the geometry of one or more volumes of data managed by the logical storage controller may include number of physical devices, physical device identifiers, ranges of blocks on the physical devices and total number of blocks. To maintain compatibility, an application programming interface (API) of the present invention passes this metadata and configuration information to one or more databases associated with the respective storage controllers. The API of the present invention communicates with many different types of databases and thereby facilitates combining many different types of storage controllers. Older storage controllers communicate with newer storage controllers and different model storage controllers over an external communication link using this API of the present invention to pass this information.","Aspects of the present invention can also be used to reduce the size of nodes in a logical storage controller. Removing a storage controller node from a logical storage controller in the storage area network affects the number of ports and the sequence of ports. The set of ports associated with the removed storage controller are deleted from the sequence of logical ports associated with the logical storage controller and renumbered to reverse out the operations performed when they were added. The storage controller removed from the logical storage controller cannot be used in another SAN unless it is also properly reprogrammed with a different nodename and set of ports.","Other storage controllers must also be notified of the changes when the storage controller is removed. Accordingly, implementations of the present invention generates configuration information except this time reflecting the deleted storage controller removed from the logical storage controller and the set of ports removed from the corresponding sequence of logical ports. This configuration information and metadata is also once again distributed to one or more storage controllers still associated with the logical storage controller.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 6","b":["602","604","606","608","610","602","606","610"]},"Further, logical storage controller  is more reliable as each storage controller within the logical storage controller operates as a backup when ports or whole storage controllers fail. Failed ports or storage controller details are passed between the storage controllers in logical storage controller  to create alternate paths between hosts  and storage servers  thus keeping the SAN operable. If properly configured, a large number of storage controllers n in logical storage controller  limits the impact of a fault or failure of hardware or software to 1\/n rather than a higher impact suffered in conventional systems.","Referring to  is a block diagram system configuration of a local and remote data center operatively coupled together using a logical storage controller designed in accordance with one implementation of the present invention. Local data center includes hosts , a switching fabric , a logical storage controller  portion designed in accordance with the present invention, a fabric  and storage servers . Similarly, remote data center includes hosts , a switching fabric , a logical storage controller  portion designed in accordance with the present invention, a fabric  and storage servers . Wide area network and equipment  and wide area network and equipment  couple the local data center and remote data center together over a distance. In this example, storage servers  and storage servers  are physically separate but appear in the same storage pool from both hosts  and hosts . In large enterprises spanning countries or even continents, this type of arrangement would greatly simplify SAN data storage management as well as improve sharing of underlying data stored in these systems.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 8","b":["800","802","804","806","808","810","812","814","816","800"]},"Memory  includes various components useful in implementing aspects of the present invention. These components include a logical storage controller manager , logical node and port expansion module , a logical node and port contraction module , a logical node configuration API  and a logical node configuration database  managed using a run-time module .","Logical storage controller manager  manages the operation of the logical storage controller and communicates information about the status of the logical storage controller to one or more underling storage controllers. Some of these operations may be delegated and distributed to primary, secondary or alternate storage controllers associated with the logical storage controller. Higher level operations handled by logical storage controller manager includes mapping failed ports to functioning ports on other devices as well as redirecting SAN traffic away from failed storage controllers in the logical storage controller.","Logical node and port expansion module  performs operations on storage controllers added to the logical storage controller and updates various configuration information, metadata and databases as needed to keep the logical storage controller and system operational. Further, logical node and port contraction module  handles the removal of certain storage controllers from the logical storage controller network and the renumbering of ports as needed and previously described.","Logical storage controller configuration API (application programming interface)  provides the interface used to communicate between the different storage controllers. This API facilitates communication with a wide variety of databases and thus keeps legacy systems compatible with newer systems as well as with systems manufactured by different third-parties. Logical storage controller configuration database  is one example database that holds configuration information, metadata and other information about the current status of the SAN implemented in accordance with a logical storage controller of the present invention. Resources used to run these aforementioned modules are managed efficiently using a run-time module  for higher performance and a small memory footprint.","In general, implementations of the invention can be implemented in digital electronic circuitry, or in computer hardware, firmware, software, or in combinations of them. Apparatus of the invention can be implemented in a computer program product tangibly embodied in a machine readable storage device for execution by a programmable processor; and method steps of the invention can be performed by a programmable processor executing a program of instructions to perform functions of the invention by operating on input data and generating output. The invention can be implemented advantageously in one or more computer programs that are executable on a programmable system including at least one programmable processor coupled to receive data and instructions from, and to transmit data and instructions to, a data storage system, at least one input device, and at least one output device. Each computer program can be implemented in a high level procedural or object oriented programming language, or in assembly or machine language if desired; and in any case, the language can be a compiled or interpreted language. Suitable processors include, by way of example, both general and special purpose microprocessors. Generally, the processor receives instructions and data from a read only memory and\/or a random access memory. Also, a computer will include one or more secondary storage or mass storage devices for storing data files; such devices include magnetic disks, such as internal hard disks and removable disks; magneto optical disks; and optical disks. Storage devices suitable for tangibly embodying computer program instructions and data include all forms of non-volatile memory, including by way of example semiconductor memory devices, such as EPROM, EEPROM, and flash memory devices; magnetic disks such as internal hard disks and removable disks; magneto optical disks; and CD ROM disks. Any of the foregoing can be supplemented by, or incorporated in, ASICs (application specific integrated circuits).","While specific implementations have been described herein for purposes of illustration, various modifications may be made without departing from the spirit and scope of the invention. Accordingly, the invention is not limited to the above-described implementations, but instead is defined by the appended claims in light of their full scope of equivalents. From the foregoing it will be appreciated that the storage virtualization controller arrangement, system, and methods provided by the present invention represent a significant advance in the art. Although several specific implementations of the invention have been described and illustrated, the invention is not limited to the specific methods, forms, or arrangements of parts so described and illustrated. For example, the invention is not limited to storage systems that use SCSI storage devices, nor to networks utilizing fibre channel protocol. This description of the invention should be understood to include all novel and non-obvious combinations of elements described herein, and claims may be presented in this or a later application to any novel and non-obvious combination of these elements. The foregoing implementations are illustrative, and no single feature or element is essential to all possible combinations that may be claimed in this or a later application. Unless otherwise specified, steps of a method claim need not be performed in the order specified. The invention is not limited to the above-described implementations, but instead is defined by the appended claims in light of their full scope of equivalents. Where the claims recite \u201ca\u201d or \u201ca first\u201d element of the equivalent thereof, such claims should be understood to include incorporation of one or more such elements, neither requiring nor excluding two or more such elements."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The features of the present invention and the manner of attaining them, and the invention itself, will be best understood by reference to the following detailed description of implementations of the invention, taken in conjunction with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
