---
title: Methods, apparatuses, and computer-readable media for initiating an application for participants of a conference
abstract: Methods, apparatuses, and computer-readable media for initiating an application for participants of a conference are disclosed. In one embodiment, a method is provided for concurrently initiating an application for participants of a conference. A conference may be established including a plurality of participant user devices. A request may be received from a participant user device in the conference to assign an application to the conference after the conference has been established. The application may be assigned to the conference. In response to the assigning the application to the conference, initiation of the application for use on each of the plurality of participant user devices in the conference may be concurrently requested. Apparatuses and computer-readable media having instructions for providing the method are also disclosed. These may provide multiple application instances for different participants of the conference, and may result in increased collaboration and/or productivity for participants of a conference.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09584558&OS=09584558&RS=09584558
owner: Avaya Inc.
number: 09584558
owner_city: Basking Ridge
owner_country: US
publication_date: 20110908
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["RELATED APPLICATIONS","BACKGROUND","SUMMARY OF THE DETAILED DESCRIPTION","DETAILED DESCRIPTION"],"p":["This application is related to U.S. patent application Ser. No. 12\/948,140 filed Nov. 17, 2010, entitled \u201cMETHOD AND SYSTEM FOR CONTROLLING AUDIO SIGNALS IN MULTIPLE CONCURRENT CONFERENCE CALLS,\u201d which is hereby incorporated herein by reference in its entirety.","This application is also related to U.S. patent application Ser. No. 12\/971,380 filed Dec. 17, 2010, entitled \u201cMETHOD AND SYSTEM FOR GENERATING A COLLABORATION TIMELINE ILLUSTRATING APPLICATION ARTIFACTS IN CONTEXT,\u201d which is also hereby incorporated herein by reference in its entirety.","Field of the Disclosure","The technology of the disclosure relates to conferences, such as audio conferences, video conferences, and\/or text chat conferences.","Technical Background","Conference calls allow two or more people to communicate. Typically, to setup a conference call among multiple participants, a meeting organizer schedules a meeting time, and reserves a conference bridge for availability during that time. The meeting organizer distributes the conference bridge phone number for the meeting. At the appropriate time, participants dial the conference bridge phone number to join the conference.","Though conference calls allow a plurality of participants to remotely communicate, participants of such calls may encounter various impediments to productivity. For example, if a conference participant wishes the participants of the conference to start a particular application to facilitate or be used during a call, problems may be encountered. For example, some conference participants may not have the application available on their personal computer. The conference participant may not have conceived of a need to use the application for the conference until participation in the conference began. Thus, there may have been insufficient notice for an information technology (IT) department to have installed the application on personal computers of the conference participants before the conference. Furthermore, the members of the conference may work for different organizations within a company or for different companies altogether. Thus there may be no common information technology (IT) department for providing the application for all the conference participants before the conference. Different conference participants may have different versions of a same application installed on their personal computer. The different application versions may be incompatible. Some members of a conference may not have a valid software license to execute the application.","One approach is for a conference participant to share their desktop with other participants of the conference. In this manner, the conference participant may present one instance of an application to the users of a conference. The conference participant may share her desktop in two ways: read-only, or with full access. If the shared desktop is shared read-only, other participants may not collaboratively manipulate the application. If the shared desktop is shared with full access, conference participants may also view or change other portions of her desktop. All conference participants may not have the same screen sharing application software and\/or version on their personal computer. Firewalls may restrict screen sharing applications running on the personal computers of the participants from communicating with one another. Further, screen sharing only provides one instance of an application. Accordingly, screen sharing also does not address instances where greater collaboration or productivity could be achieved with multiple application instances for the participants of the conference.","Embodiments disclosed in the detailed description include methods, apparatuses, and computer-readable media for initiating an application for participants of a conference. In one embodiment, a method is provided for concurrently initiating an application for participants of a conference. The method includes establishing a conference that includes a plurality of participant user devices. The method further includes receiving a request from a participant user device in the conference to assign an application to the conference after the conference has been established. The method further includes assigning the application to the conference. The method further includes in response to the assigning the application to the conference, concurrently requesting initiation of the application for use on each of the plurality of participant user devices in the conference. This method may provide multiple application instances for different participants of the conference, and may also result in increased collaboration and\/or productivity for the participants of a conference.","In another embodiment, an apparatus for concurrently initiating an application for participants of a conference is disclosed. In this embodiment, the apparatus includes a communications interface adapted to interface with a network. The apparatus further includes a control system coupled to the communications interface. The control system is configured to establish a conference that includes a plurality of participant user devices. The control system is further configured to receive a request from a participant user device in the conference to assign an application to the conference after the conference has been established. The control system is further configured to, in response to the assigning the application to the conference, concurrently request an initiation of the application for use on each of the plurality of participant user devices in the conference. As a non-limiting example, the apparatus may be a conference controller.","In another embodiment, a computer-readable medium is disclosed. The computer-readable medium has stored thereon computer executable instructions to cause an electronic device to implement a method for concurrently initiating an application for participants of a conference. The computer executable instructions include establishing, by a computing device comprising a processor, a conference that includes a plurality of participant user devices. The computer executable instructions further include receiving a request from a participant user device in the conference to assign an application to the conference after the conference has been established. The computer executable instructions further include assigning the application to the conference. The computer executable instructions further include in response to the assigning the application to the conference, concurrently requesting an initiation of the application for use on each of the plurality of participant user devices in the conference. As a non-limiting example, the computer-readable instructions may be computer-readable instructions for a conference controller.","Additional features and advantages will be set forth in the detailed description which follows, and in part will be readily apparent to those skilled in the art from that description or recognized by practicing the embodiments as described herein, including the detailed description that follows, the claims, as well as the appended drawings.","It is to be understood that both the foregoing general description and the following detailed description present embodiments, and are intended to provide an overview or framework for understanding the nature and character of the disclosure. The accompanying drawings are included to provide a further understanding, and are incorporated into and constitute a part of this specification. The drawings illustrate various embodiments, and together with the description serve to explain the principles and operation of the concepts disclosed.","With reference now to the drawing figures, several exemplary embodiments of the present disclosure are described. The word \u201cexemplary\u201d is used herein to mean \u201cserving as an example, instance, or illustration.\u201d Any embodiment described herein as \u201cexemplary\u201d is not necessarily to be construed as preferred or advantageous over other embodiments.","Embodiments disclosed in the detailed description include methods, apparatuses, and computer-readable media for initiating an application for participants of a conference. In one embodiment, a method is provided for concurrently initiating an application for participants of a conference. The method includes establishing a conference that includes a plurality of participant user devices. The method further includes receiving a request from a participant user device in the conference to assign an application to the conference after the conference has been established. The method further includes assigning the application to the conference. The method further includes in response to the assigning the application to the conference, concurrently requesting initiation of the application for use on each of the plurality of participant user devices in the conference. As a non-limiting example, the method may be executed by a conference controller. This method may provide multiple application instances for different participants of the conference, and may also result in increased collaboration and\/or productivity for the participants of a conference.","Before embodiments of methods, apparatuses, and computer-readable media for initiating an application for participants of a conference are further discussed, an exemplary system in which these functions may be provided is first discussed. In this regard,  is a block diagram illustrating a system  in which embodiments disclosed herein may be practiced. The system  includes a plurality of processing devices, such as a conference controller  and a plurality of participant user devices A-D (generally, participant user device  or participant user devices ). The participant user devices A-D are used by corresponding participants A-D (generally, participant  or participants ) in a conference. A conference is a session in which real-time information is exchanged between participants without the need for separate and repeated message initiation triggering by a user. As non-limiting examples, the information exchanged may be audio information, video information, text chat information (for example, text messaging information), and\/or a combination of any of these. For purposes of illustration, the embodiments described herein will be discussed in the context of a conference in which audio information is exchanged; however, the embodiments are not limited to the exchange of audio information.","In one embodiment, the participant user device  is a device capable of sending and receiving voice signals, and is capable of providing a conference application for display and\/or control to a participant  as further described below. The participant user device  may comprise, for example, a computer; a personal digital assistant (PDA); a mobile phone, such as an Apple\u00ae iPhone\u00ae, a Google\u00ae Android\u00ae phone, or the like.","While for purposes of illustration embodiments are described herein in the context of a single participant user device  that is capable of both audio processing and conference application functionality, the embodiments are not limited to the use of a single processing device. One or more of the participants may participate in the conference with multiple processing devices, one of which (e.g., a telephone) handles and otherwise processes the audio aspects of the collaboration session, and another of which (e.g., a computer) handles the conference application aspects of the conference. In particular, a participant may use a conventional telephone to dial into a particular conference bridge, and may also direct a program on a computer, such as a web browser program, to a particular location, such as a particular website, in order to communicatively couple the computer to the conference. Of course, the participant user device  may also comprise a single processing device, such as a computer with a microphone and headset, or a smartphone, such that both the audio aspects and the conference application aspects of the embodiments described herein are handled by a single processing device.","The participant user devices  are communicatively coupled to the conference controller  and to one another via one or more networks . While only a single network  is illustrated in , it will be appreciated that communications may travel over multiple networks, such as a private local area network (LAN) in a participant's house, a public access network, an enterprise network, and so on, between the processing devices. The participant user devices A-D may connect to the network  via any suitable network access paths , such as, for example, telephony technology, digital subscriber line technology, cable modem technology, cellular technology, Wi-Fi\u00ae, Bluetooth\u00ae, or the like. Data, such as control signals, audio signals, and the like, are typically carried over a network access path .","An exemplary participant user device , such as the participant user device A, includes a control system , which may include a processor  and a random access memory (RAM) , for controlling the overall operation of the participant user device A, and for executing collaboration applications as discussed in greater detail herein.","The participant user device A may also include a communications interface  that is adapted to communicate with the network  to facilitate communications between the participant user device A and external devices, such as the conference controller . The participant user device A also includes, or is coupled to, a display  upon which visual artifacts of conference applications may be rendered, and via which, with the aid of an input device such as a mouse, keyboard, or touch screen interface it is possible to interact with conference applications. The participant user device A also preferably includes a media processor, such as an audio processor , which generates a media stream that includes voice signals of the participant A and sends the media stream to the conference controller  continuously during the conference, or continuously for as long as the participant user device A detects that the participant A is speaking. The media stream is typically, although not necessarily, a digitized data stream that is generated by the audio processor  and represents the voice signals of the participant A. Over the course of a conference, the media stream of any particular participant  may be discontinuous, in that the media stream may be generated only when the participant  is actually speaking. As used herein, the phrase \u201cincoming media stream\u201d will refer to a media stream that is sent from a participant user device  to the conference controller , and the phrase \u201coutgoing media stream\u201d will refer to a media stream that is sent from the conference controller  to a participant user device .","For purposes of illustration only, the embodiments herein will be discussed in the context of a telephone conference, and the media stream is thus an audio stream. However, the embodiments herein are not limited to media streams that contain only audio streams, and are equally applicable to media streams that include video only, and to media streams that include both video and audio. The embodiments herein are also equally applicable to media streams that include text chat only, and to media streams that include any combination of audio, video, text chat, or other media.","The audio processor  receives outgoing media streams from the conference controller  and provides the outgoing media streams to an audio port  to which an audio device, such as a headset or speakers, may be coupled. Alternatively, if the participant user device A is a smartphone, for example, the audio device would be integral with the participant user device A.","Each of the participant user devices  establishes a conference with the conference controller . A conference may comprise any type of session or connection between a respective participant user device  and the conference controller  that enables the transmission of a media stream from the respective participant user device  to the conference controller , and the receipt of a media stream from the conference controller  to the respective participant user device , irrespective of the underlying physical infrastructure used to carry the media stream, or the particular protocol used to establish the communication session between the respective participant user device  and the conference controller . As non-limiting examples, suitable protocols may include, for example, Transport Control Protocol (TCP), User Datagram Protocol (UDP), Internet Protocol (IP), Hypertext Transport Protocol (HTTP), Session Initiation Protocol (SIP), ITU-T H.323, Media Gateway Control Protocol (MGCP), conventional public switched telephone network (PSTN) signaling, or the like. If implemented with support for the SIP protocol, for example, the conference controller  may be implemented as a user agent or a back-to-back user agent (B2BUA). A network access path , such as a wired or wireless access path, typically couples a participant user device  to the network . Certain embodiments disclosed herein are illustrated using SIP protocol signaling and novel extensions to SIP protocol signaling. However, embodiments disclosed herein are not limited to using the SIP protocol. The embodiments disclosed herein may be provided as an extension of any protocol, signaling, or messaging that may be used for collaboration and\/or conferencing.","The conference controller  includes a communications interface  that is adapted to communicate with the communication network , and can comprise any suitable combination of hardware and\/or software necessary to receive incoming media streams from the participant user devices , and to send outgoing media streams to the participant user devices .","The conference controller  also includes a conference processor  that may establish a conference between the participants . The conference processor  includes a mixer that enables the conference processor  to mix or combine multiple media streams and provide a mixed outgoing media stream to one or more participant user devices . During a conference, the conference processor  operates to generate a conference media stream that comprises the media streams of the participants  during a particular period of time during the collaboration session. The conference media stream may comprise a plurality of video streams of all the participants if the media stream is a video stream. The conference media stream may comprise a combination of a combined audio stream and a plurality of video streams where the media streams include both audio and video, for example.","The conference controller  also includes a control system , which may include a processor  and a memory , for controlling the overall operation of the conference controller . A voice recognition module  may enable one or more of the participants  to issue commands during a conference, such as a command issued by one of the participants  to initiate an application for all participants of the conference.","A collaboration timeline generator  represents functionality in the conference controller  that generates a collaboration timeline  which corresponds to a particular conference. A phonetic processor  may be used to generate a phonetic index that corresponds to the collaboration media stream where the media stream includes audio signals. A phonetic index enables a participant  or other entity to subsequently search the collaboration media stream for the occurrence of words or phrases that may have been spoken during the collaboration session. Phonetic indexes may be generated using phonetic indexing technology, which is available from, for example, Nexidia Inc., 3565 Piedmont Road NE, Building Two, Suite 400, Atlanta, Ga. 30305. Additional details relating to the generation of a particular phonetic index are detailed in U.S. Patent Application Publication No. 2010\/0094630 A1 entitled \u201cASSOCIATING SOURCE INFORMATION WITH PHONETIC INDICES,\u201d which is hereby incorporated herein by reference in its entirety. Additional detail regarding collaboration timelines is discussed in greater detail in U.S. patent application Ser. No. 12\/971,380 filed Dec. 17, 2010, entitled \u201cMETHOD AND SYSTEM FOR GENERATING A COLLABORATION TIMELINE ILLUSTRATING APPLICATION ARTIFACTS IN CONTEXT,\u201d which is hereby incorporated herein by reference in its entirety.","The conference controller  also includes an application controller , for concurrently initiating applications for a plurality of participant user devices  in a conference, such as participant user devices A-D. In this regard, the application controller  may be configured to initiate an application for each participant of a conference. For example, the application controller  may initiate an application  for a participant user device  for each participant of a conference.","The application  may be provided to a participant  for a participant user device  in any one of several ways. In one embodiment, a web client  executing on the participant user device  may present an application  from a web server . Portions of the content of the application  may be generated on the web server , for example using Hypertext Markup Language (HTML), and\/or Extensible Markup Language (XML). Further portions of the content of the application  may be generated on the web client , for example using client-executed instructions, such as Javascript. One of skill in the art will appreciate that, in accordance with this disclosure, the web server  may be a plurality of web servers .","In a further embodiment, the application controller  may initiate the application  by initiating an application instance  on a virtualization server . The application instance  executing on the virtualization server  may provide display and control of the application  to a conference participant  by streaming display and control of the application instance  to a virtualization client  executing on a participant user device  of the conference participant . This embodiment may be referred to as a cloud computing implementation of the application .","In one embodiment, the application controller  may initiate the application  by initiating an application client  on a participant user device  of the conference participant . The application client  may be configured to communicate with an application server . The application client  and application server  communicate to provide display and control of an application  to a conference participant  on the participant user device  of the conference participant . This embodiment may be referred to as a client-server implementation of the application . An application client may also be referred to as a client application.","In another embodiment, the application controller  may initiate the application  for execution directly on participant user device . The application  may be a standalone application. This embodiment may be referred to as a local application, a native application, or a standalone application.","The application  may be configured to communicate to the conference controller  using an application programming interface (API) of the conference controller . The application  may be configured to communicate with other applications  executing for other participants  of the conference using the application programming interface (API) of the conference controller .","Regardless of the method of implementation of the application , portions of the application  or the entire application  may not be available in memory of the participant user device  or and\/or the servers , , . Accordingly, when the application controller  of the conference controller  initiates the application , those portions not already available in memory may be downloaded from a storage device  to memory of the participant user device  and\/or the servers , , . Storage device  may provide remote storage or local storage. Accordingly, one or more application files  and\/or one or more data files  may be downloaded to one or more of the participant user devices  and\/or servers , ,  to provide the application  for the conference participant  through the participant's participant user device . Thus, the downloaded application file  and\/or data file  may provide portions or all of the application , including all or portions of a web client , web server , application instance , virtualization client , application client , and\/or application server . The storage device  may be a network storage device. Those of skill in the art will appreciate that, in accordance with this disclosure, an application  may be implemented using a combination of any of the above methods. For example, portions of the application  may be provided from a web client  and web server , further portions of the application  may be provided from an application client  and application server , further portions of the application  may be provided from an application instance  executing on a virtualization server , and further portions of the application  may be provided as an application  executing directly on the participant user device . Any combination of such methods may provide the application  on the participant user device  for a conference participant . In one embodiment, the conference controller  may determine whether an application  is available on a participant user device  in the conference. In response to determining that the application  is not available on the participant user device  in the conference, the application  may be downloaded from the storage device  to the participant user device  in the conference.","The system  may also provide a licensing server . The licensing server  may license the application  for execution. For example, the licensing server  may license all or portions of web client , virtualization client , application client , web server , virtualization server , application instance , application server , and\/or other portions of application  for execution. In one embodiment, the conference controller  may determine whether a participant user device  in the conference is licensed to execute the application . In response to determining that the participant user device is not licensed to execute the application , the conference controller  may request a license for the participant user device  in the conference for the duration of the conference from the licensing server . In other words, a license may be requested and provided that is valid only for the duration of the conference, and installed so as to allow the application  to execute for the duration of the conference.","In one embodiment, conference controller  may provide at least one license to execute the application  for at least one participant user device  in the conference for the duration of the conference. In a further embodiment, conference controller  may first determine whether each participant user device  in the conference is licensed to execute the application . In response to determining that at least one participant user device  is not licensed to execute the application , conference controller  may request at least one license for the at least one participant user device  in the conference for the duration of the conference. Thereafter, conference controller  may provide the at least one license to execute the application  for the at least one participant user device  in the conference for the duration of the conference to the at least one participant user device  in the conference.","The system  may also provide an accounting server . The accounting server  may be configured to receive at least one accounting record comprising application usage information for conference applications. The conference controller  may create the at least one accounting record comprising application usage information for conference applications. The conference controller  may transmit the accounting record to the accounting server .","Various usage information about the use of a conference application  may be provided in an accounting record. In this regard in one embodiment, the at least one accounting record may include a timestamp indicating when an application  or application instance  was started for at least one participant user device  in the conference. The at least one accounting record may include a timestamp indicating when the application  or application instance  of the application  was terminated for the at least one participant user device in the conference. The at least one accounting record may include a duration of usage of the application  on the at least one participant user device  in the conference. The at least one accounting record may include a duration of usage of the application  by at least one participant  in the conference. The at least one accounting record may include a duration of usage of the application  by all participants  in the conference. The at least one accounting record may include an amount of network data transmitted by the application  or application instance  of the application  started for the at least one participant user device  in the conference. The at least one accounting record may include an amount of network data received by the application  or the application instance  of the application  started for the at least one participant user device  in the conference. The at least one accounting record may include a number of messages transmitted by the application  or application instance  of the application  started for the at least one participant user device  in the conference. The at least one accounting record may include a number of messages received by an application  or application instance  of the application  started for the at least one participant user device  in the conference. The at least one accounting record may include a maximum number of concurrent participants  in the conference. The at least one accounting record may include a maximum number of concurrent applications  or application instances  of the application  that may be concurrently used for the plurality of participant user devices  in the conference. In one embodiment, the conference controller  may communicate with the accounting server  using a RADIUS protocol and\/or a DIAMETER protocol. One of skill in the art will appreciate other protocols that may also be used in accordance with this disclosure.","As may be appreciated by one of skill in the art from the disclosures provided herein, any of the servers, devices, or other components herein disclosed may be provided as a plurality of those servers, devices, or components. Providing a plurality of the servers, devices, or other components may increase the capacity and\/or redundancy of those servers, devices, or other components. Certain non-limiting examples are now provided. Conference controller  may be provided as a plurality of conference controllers . Any one participant user device A, B, C, and\/or D may be provided as a plurality of participant user devices A, B, C, and\/or D. Web server  may be provided as a plurality of web servers . Virtualization server  may be provided as a plurality of virtualization servers . Storage device  may be provided as a plurality of storage devices . Licensing server  may be provided as a plurality of licensing servers . Accounting server  may be provided as a plurality of accounting servers .","The application  or application instance  may provide any type of application for the conference participants  of a conference. As non-limiting examples, the application  or application instance  may be any of or any combination of a whiteboard application, a spreadsheet application, a text editing application, a slide presentation application, a database client application, a web browser application, an action item management application, a task management application, a personal agent application (for example, a personal agent application for gathering group information), a transcription application, a translation application, a polling application, a personal productivity application, a business application, an application for integrating business processes, and\/or any type of business productivity application.","Embodiments described herein may be implemented in hardware, software, or a combination thereof. When implemented in software, the software comprises software instructions which may be executed on a processor, such as the processor , to cause the processing device, such as the conference controller , to implement the functionality described herein. Thus, embodiments may be implemented as a computer program product, such as a computer-usable or computer-readable medium having a computer-readable program code embodied therein. The computer-readable program code can include the software instructions for implementing the functionality of the embodiments described herein.","In one embodiment, the conference controller  offers a collaboration application programming interface (API)  which enables a conference application  to communicate with the conference controller . Each separate application instance of the application  may be configured to communicate to the conference controller  through an application programming interface (API) of the conference controller. The collaboration application programming interface (API)  may also be used as an interface for a participant user device  to communicate to other participant user devices  participating in a conference. In this regard, each separate application instance of the application  may be configured to communicate through the application programming interface (API) of the conference controller to each of the other application instances initiating and executing for other participant user devices in the conference. For example, in one embodiment, any of the above mentioned implementations of application  provided on a participant user device A for a conference participant A may use the collaboration application programming interface (API)  to communicate with other applications  executing on other participant user devices B, C, D for other participants B, C, D of a same conference through the collaboration application programming interface (API) of the conference controller .",{"@attributes":{"id":"p-0067","num":"0066"},"figref":["FIGS. 2A and 2B","FIG. 1","FIGS. 2A and 2B"],"b":["84","84","14","84","86","88","86","88","84","86","88"]},"The first defined area  is associated with a first conference and the second defined area  is associated with a second conference. A first plurality of participant identifiers  (for example in , participant identifiers A, B, and C) are displayed in association with the first defined area . In one embodiment, a user interface manipulation  may be used by a participant  () to select a plurality of participant identifiers A-C from a contact list . The user interface manipulation action  may include any of a variety of user interface manipulation actions. For example, as non-limiting examples, the user interface manipulation  may comprise selecting, clicking, moving, dragging, and\/or dropping a participant identifier  for each of the participant identifiers A-C from the contact list  to the first defined area . As each participant identifier  is dragged from the contact list  and dropped into the first defined area , the participant user device A may send a control signal to the conference processor  of the conference controller , requesting that the conference processor  initiate a conference with the participant user device  identified by the contact information associated with that participant identifier . Alternatively, the first conference may be a conference that was initiated by one of the other participants B-D of the conference, and the user interface , at the initiation of the conference, may depict the first defined area  and request the controlling participant A join the first conference. The contact list  may provide a scrollbar (or scrollwheel)  for scrolling among a plurality of contacts in the contact list .","While the participant identifiers  are depicted as iconic images for purposes of illustration, the participant identifiers  may be still images or photographs of the corresponding participants , or may display actual video of the participants  by virtue of video data that is captured by the corresponding participant user devices  associated with the participants  and provided to the participant user device A of a controlling participant A.","In one embodiment, the controlling participant A may select one of the conferences associated with defined areas ,  to be a selected conference. The selected conference may, for example, be the conference which the controlling participant A wishes to speak to at a given point in time. The audio signal of the controlling participant A may be provided to those participants  participating in the selected conference, but not provided to those in a non-selected conference. The controlling participant A may select the first conference (associated with first defined area ) or the second conference (associated with second defined area ) to be the selected conference for the controlling participant A as desired. In one embodiment, the controlling participant A may select a conference by selecting the first defined area  or the second defined area  that is associated with the conference which the controlling participant A seeks to make the selected conference.","The selection may be made via an input device such as a mouse, trackball, trackwheel, keyboard, or, if the display is a touch display, via touching the display. The selected conference may be distinguished from non-selected conference using any visual distinguishing characteristic. For example, the defined area for the selected conference may be positioned in a center potion of the display, displayed larger than non-selected conference(s), displayed with thicker lines than the non-selected conference(s), and\/or displayed using a different color palette than the non-selected conference(s).","User interface  may also provide an application list  comprised of a plurality of applications  which may be associated with a conference. A scrollbar or scrollwheel  may be provided for scrolling among the plurality of applications  in the application list . For example,  depict the application list  scrolled to a certain polling application , such that an icon A representing the polling application  is displayed.","As illustrated in , a user interface manipulation  may be used to associate an application  with the conference. The user interface manipulation  may be provided by any of the above discussed methods. The user interface manipulation  to associate an application  with the conference may occur after a conference including a plurality of participant user devices  has been established. The user interface manipulation  is a request to assign the application  to the conference after the conference has been established. As a result of the user interface manipulation , a request message may be transmitted from a participant user device A in the conference to the conference controller . The transmitted request message is a request to assign the application  to the conference after the conference has been established. The conference controller  may assign the application  to the conference. In response to the assigning the application  to the conference, the conference controller  may concurrently request initiation of the application  for use on each of the plurality of participant user devices  in the conference (A-D, in this example).","In this regard,  is a high-level flowchart illustrating a method  for concurrently initiating an application for participants of a conference. The method comprises establishing a conference that includes a plurality of participant user devices (step ). The method further comprises receiving a request from a participant user device in the conference to assign an application to the conference after the conference has been established (step ). The method further comprises assigning an application to the conference (step ). The method further comprises in response to the assigning the application to the conference, concurrently requesting initiation of the application for use on each of the plurality of participant user devices in the conference (step ). In one embodiment, a conference controller  may be configured to execute method .",{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIGS. 4A-4D","b":"300"},"This embodiment also provides a novel SIP event package, the \u201cconference-application\u201d package. The conference-application package provides event signaling for conference applications in accordance with embodiments herein described. For example, the conference-application package provides signaling that a participant of a conference should start an application  assigned to the conference (e.g., \u201cSTART-CONFERENCE-APPLICATION: APPLICATION A\u201d). The conference-application package also provides signaling to allow a participant user device  to confirm that it is starting an application  (e.g., \u201cAPPLICATION A.STATE=STARTING\u201d).","The conference-application package also provides signaling to allow a participant user device  to notify a conference controller  that the requested application  has successfully started (e.g., \u201cAPPLICATION A.STATE=STARTED\u201d). The conference-application package may also provide signaling to allow a participant user device  to notify a conference controller  that the application  cannot be started. For example, the conference-application package provides signaling to allow a participant user device  to notify a conference controller  that an application  was not started because all or a portion of the application  was not found for execution (e.g., \u201c496 APPLICATION NOT FOUND\u201d). By way of further example, the conference-application package provides signaling to allow a participant user device  to notify a conference controller  that an application  was not started because all or a portion of the application  is not licensed for execution (e.g., \u201c497 APPLICATION LICENSE REQUIRED\u201d).","The conference-application package also provides signaling to allow a participant user device  in the conference to request termination of a conference application  associated with the conference (e.g., \u201cTERMINATE-CONFERENCE-APPLICATION: APPLICATION A\u201d). The conference-application package also provides signaling to allow the conference controller  to signal at least one participant user device  in the conference to terminate a conference application  associated with the conference (e.g., \u201cTERMINATE-CONFERENCE-APPLICATION: APPLICATION A\u201d).","The conference-application package also provides signaling to allow a participant user device  to signal the conference controller  that it is terminating its instance(s) of the conference application  associated with the conference (e.g., \u201cAPPLICATION A.STATE: TERMINATING\u201d). The conference-application package also provides signaling to allow a participant user device  to signal the conference controller  that it has terminated its instance(s) of the conference application  associated with the conference (e.g., \u201cAPPLICATION A.STATE: TERMINATED\u201d). The conference-application package may use exemplary syntax provided above or alternative syntax for accomplishing the same steps. As a non-limiting example, the conference-application package may use an Extensible Markup Language (XML) syntax for accomplishing the same steps. Further conference application related signaling may also be provided in the conference-application package. Use of the novel conference-application package and its novel signaling message are hereinafter illustrated.","In accordance with the method  illustrated in ,  provide one embodiment for concurrently initiating an application  for participants  of a conference. In this embodiment, steps - establish a conference that includes a plurality of participant user devices (in this embodiment, participant user devices A (CLIENT ), B (CLIENT ), and C (CLIENT ). Steps - provide receiving a request from a participant user device  in the conference to assign an application to the conference after the conference has been established. In step , the conference controller  assigns the application  to the conference. In response to the assigning the application to the conference (in step ), the conference controller  concurrently requests an initiation of the application  for use on each of the plurality of participant user devices  in the conference (see generally steps -) and note specifically steps , , and . These steps are now discussed in further detail.",{"@attributes":{"id":"p-0081","num":"0080"},"figref":"FIGS. 4A-4D","b":["400","400","400","400"]},"Referring now to , a participant user device A transmits a Session Initiation Protocol (SIP) INVITE for establishing a conference with the conference controller  (step ). Conference controller  accepts the invite, indicating that it supports the \u201cconference\u201d event package as well as the \u201cconference-application\u201d event package (step ). In step , conference controller  also provides (in the Contact header of the 200 OK message) a Uniform Resource Locator (URL) indicating a conference identifier for the conference. Participant user device A acknowledges the response from conference controller  (step ). Thereafter, a bidirectional media stream is established between participant user device A and conference controller  (step ). Participant user device A subscribes for \u201cconference\u201d events associated with the conference (steps , ). Participant user device A also subscribes for \u201cconference-application\u201d events associated with the conference (steps , ).","In continuing reference to , participant user device A refers participant user device B to the conference (step ). Participant user device B accepts the referral (step ). In response to the referral, participant user device B transmits a SIP INVITE for requesting to join the conference to the conference controller  (step ). Conference controller  accepts the request, and advertises to participant user device B that it supports \u201cconference\u201d and \u201cconference-application\u201d event packages (step ). Participant user device B acknowledges the response from conference controller  (step ).","Referring now to , in step , a bidirectional media stream is established between participant user device B and conference controller . Conference controller  begins media mixing of the media of participant user devices A and B, allowing participants A and B to communicate in the conference (step ). When the state of the conference changes (for example, when a participant joins the conference or when a participant leaves the conference) that state change may be signaled to one or more participants of the conference. Step  illustrates a conference state change being notified from conference controller  to participant user device A to signal that a new participant user device (participant user device B) has joined the conference (step ). The notification is acknowledged by participant user device A (step ). Conference state change notifications may be sent by conference controller  to the participant user devices  of the conference whenever a participant user device  joins or leaves the conference.","Participant user device B may also subscribe to conference controller  to receive \u201cconference\u201d events (steps , ). Upon joining an existing conference, the joining participant user device (e.g., B) may receive a notification from the conference controller regarding the existing state of the conference (steps , ). Participant user device B may also subscribe to the conference controller  to receive \u201cconference-application\u201d events (steps , ).","A participant A may also invite another participant C to the conference by referring conference controller  to call the other participant C. In this regard in step , participant A refers conference controller  to invite participant C to the conference, and conference controller  acknowledges the referral (step ). In response to the referral, conference controller  invites participant C's participant user device C to join the conference (step ). The invitation also advertises conference controller  support for \u201cconference\u201d and \u201cconference-application\u201d event packages, and that conference controller  is the focus for the conference (step ). Participant user device C accepts the invitation to join the conference (step ) and conference controller  acknowledges the response (step ). Referring now to , in step , a bidirectional media stream is established between participant user device C and conference controller . Conference controller  begins media mixing of the media of participant user devices A, B, and C, allowing participants A, B, and C to communicate with each other in the conference (step ). At this point in the message flow, a conference has been established including a plurality of participant user devices A, B, and C among the plurality of participant user devices A, B, C. Additional participants  and participant user devices  may also be added to the conference using these or other signaling mechanisms.","Steps -, discussed in greater detail above, illustrate one exemplary method of joining a participant to the conference. Steps - illustrate a participant user device A referring another participant user device B to the conference. In one embodiment, a participant user device A provides a conference URL for the conference to the participant user device B in message . Participant user device B may use the provided conference URL (for example, in message ) to join the conference. In another embodiment, participant user device B may learn the conference URL and\/or a time to join the conference via some other mechanism. As a non-limiting example, the conference URL and\/or a time to join the conference may be received by participant user device B from an email, a Short Message Service (SMS) message, a voicemail, a text message, a web page, and\/or by any other means. In any of these embodiments, the participant user device B may use the conference URL to join the conference without being referred to the conference by another participant (for example, without messages , ).","Steps -, discussed in greater detail above, illustrate another exemplary method of joining a participant to the conference. Steps - illustrate participant user device A referring conference controller  to invite participant user device C to join the conference.","One of skill in the art may appreciate that other methods of joining a participant to the conference may also be used in accordance with this disclosure. As a non-limiting example, the established conference may be an ad-hoc conference. An ad-hoc conference is established from a call between two participant user devices of two participants which does not initially include a conference bridge. One of the existing participants of the call may join a third participant (and the third participant's participant user device) to the call. The joining of the third participant may result in the call being converted to a conference involving a conference bridge, for example, conference controller .","As other non-limiting examples, certain exemplary methods of joining a participant to a conference are described in further detail in IETF RFC4579 entitled \u201cSession Initiation Protocol (SIP) Call Control\u2014Conferencing for User Agents,\u201d available at http:\/\/tools.ietf.org\/pdf\/rfc4579.pdf, which is hereby incorporated by reference herein in its entirety.","Conference controller  may notify existing participant user devices  in the conference (e.g., participant user devices A and B) that participant user device C has joined the conference (steps , , , ). Participant user device C may also subscribe to the \u201cconference\u201d event package (steps , ) and be notified of current conference state (steps , ). Participant user device C may also subscribe to the \u201cconference-application\u201d event package (, ) so that it will receive corresponding events if an application  is later associated with the conference.","In continuing reference to , conference controller  may receive a request from a participant user device  in the conference (in this embodiment, participant user device A) to assign an application  to the conference after the conference has been established. In this regard, in step , a participant A may manipulate the user interface  of a participant user device A to select and move an application identifier (e.g., Application A) to a first defined area  of the user interface representing the first conference. In one embodiment, this user interface manipulation  occurs as illustrated in . As depicted in , the first defined area  representing the first conference may depict an image of a \u201cspotlight,\u201d or any other image. The participant user device A may display the at least one application identifier assigned to the first conference (step ), for example, at least partially within the first defined area  associated with the first conference. Referring now to , in response to the user interface manipulation , participant user device A may transmit a request to conference controller  to assign the application  to the conference after the conference has been established (step ). Conference controller  may acknowledge the request (step ). Conference controller  assigns the application  to the conference (step ). In response to the assigning the application  to the conference, conference controller  may concurrently request initiation of the application  for use on each of the plurality of participant user devices  in the conference (steps , , and ). This allows the participants A, B, C to experience shorter initiation times for initiating the application  than would otherwise be experienced.","As used herein, the term \u201cconcurrently\u201d is defined as \u201cat least partially overlapping in time.\u201d In other words, at least some portions of the transactions for initiating the application on each of the plurality of participant user devices A, B, C occur at least in part during a same period of time. In the embodiment illustrated in , the steps for initiating the application for participant user device A comprise steps , , , , , and . The steps for initiating the application for participant user device B comprise steps , , , , , and . The steps for initiating the application for participant user device C comprise steps , , , , , and . As illustrated in , portions of each of these transactions overlap in time. Thus, these transactions are concurrently initiated.","These messages are now described in additional detail. In the embodiment depicted in , conference controller  notifies each of the participant user devices A, B, C to associate and start an application (\u201cAPPLICATION A\u201d) with the conference (steps , , and ). Each of the participant user devices A, B, C positively acknowledges this notification (, , ) and begin initiating the application (steps , , and ). When application initiation for a particular user device  completes (steps , , and ), the participant user device  notifies conference controller  that the application (Application A) has started (steps , , and ), and conference controller  acknowledges the notifications of the participant user devices  (steps , , and ).","Applications for use on each of the plurality of participant user devices  in the conference may be provided a variety of ways. Accordingly, the concurrently requesting an initiation of an application for use on each of the plurality of participant user devices  in the conference may be provided in any one of numerous embodiments. All manners of initiating an application for the participants  of the conference are intended to be encompassed herein. In this regard, several embodiments for initiating a conference application for the plurality of participant user devices  in a conference are hereafter discussed. Such embodiments are provided by . Each of these embodiments is in accordance with steps - of , and each of these embodiments may be understood as providing embodiments for steps - of .","In one embodiment, concurrently requesting initiation of the application for use on each of the plurality of participant user devices  in the conference (, step ) may comprise concurrently transmitting a uniform resource locator (URL) for initiating the application to each of the plurality of participant user devices  in the conference.  provide a method  illustrating one such embodiment. In this embodiment, participant user device A transmits a request to conference controller  to assign an application (Application A) to the conference after the conference has been established (step ), which is acknowledged by conference controller  (step ). Conference controller  assigns the application to the conference (step ). In response to the assigning the application to the conference, conference controller  may concurrently transmit a uniform resource locator (URL) for initiation of the application (Application A) to each of the plurality of participant user devices  in the conference (steps , , and ).","As a non-limiting example, exemplary URLs are depicted in , such as \u201chttp:\/\/webserver.com\/applicationA?conference=1;instance=1\u201d, \u201chttp:\/\/webserver.com\/applicationA?conference=1;instance=2\u201d, and \u201chttp:\/\/webserver.com\/applicationA?conference=1;instance=3\u201d. However, the URL for initiating the application may be provided using any syntax for providing a URL. The URL(s) depicted in  identify the domain name or address of a web server  (e.g., \u201cwebserver.com\u201d) and may also provide syntax (\u201capplicationA\u201d) identifying the particular application (Application A) that should be provided by the web server  to the web client  of the participant user devices A, B, C. As also depicted in , the URL(s) may also identify a conference identifier (e.g., \u201cconference=1\u201d) representing the particular conference with which the application is to be associated. As further depicted in , the URL(s) may also identify an instance identifier (e.g., \u201cinstance=1\u201d) which may be used by the web server  to uniquely identify which participant user device A, B, C a particular instance of the application should be associated. As depicted in , the request  from the participant user device A to conference controller  may or may not provide the URL which is thereafter transmitted to the participant user devices A, B, and C in steps , , and .","With continuing reference to , participant user device A may acknowledge the notification (step ). Thereafter, the participant user device A may transmit a request to the web server  to receive the application or a presentation of the application for display and control in a web client  of the participant user device A (step ). Web server  may respond with one or more messages to provide the application to participant user device A (one or more steps ). Thereafter, the participant user device A provides, based on the uniform resource locator (URL), the application (Application A) for display and control within a web client\/browser  of the participant user device A (step ). Other notifications previously discussed with regards to  may also be transmitted and acknowledged (e.g., steps  and ). Referring now to , transactions for participant user device B (steps , , , , , and ) and participant user device C (steps , , , , , and ) may proceed similarly to those discussed above for participant user device A.","In one embodiment, web server  may be provided as a plurality of web servers . In this embodiment, different web clients  may or may not communicate with different web servers  among the plurality of web servers . The plurality of web servers  may provide an increased capacity and\/or redundancy for communications with web clients .","Referring now to , in one embodiment, concurrently requesting initiation of the application for use on each of the plurality of participant user devices  in the conference (, step ) may comprise concurrently requesting initiation of an application instance  on a virtualization server  for each of the plurality of participant user devices  in the conference. Each such application instance  initiated on the virtualization server  may be configured to provide display and control of the application instance  to a different participant user device  in the conference.  provide a method  illustrating one such embodiment. Such embodiments may be referred to as cloud computing embodiments. Virtualization server  may comprise a plurality of virtualization servers . Accordingly, a first application instance  may execute on a first virtualization server  whereas a second application instance  may execute on a second virtualization server . In this regard, concurrently requesting initiation of an application instance  on a virtualization server  for each of the plurality of participant user devices  in the conference may comprise concurrently requesting initiation of an application instance  on one among a plurality of virtualization servers  for each of the plurality of participant user devices  in the conference. Some or all of the application instances  may execute on a same virtualization server . Some of the application instances  may execute on different virtualization servers . Each of the application instances  may execute on a different virtualization server . Accordingly, concurrently requesting initiation of the application for use on each of the plurality of participant user devices  in the conference (, step ) may comprise concurrently requesting initiation of at least one application instance  on at least one virtualization server  for each of the plurality of participant user devices  in the conference. Each such application instance  is configured to provide display and control of the application instance  to a different participant user device  in the conference.","Referring now to , in this embodiment, a participant user device A may transmit a request to conference controller  to assign an application (Application A) to the conference after the conference has been established (step ). The request may be acknowledged (step ). Conference controller  assigns the application (Application A) to the conference (step ). In response to assigning the application to the conference, conference controller  concurrently requests initiation of the application for use on each of the plurality of participant user devices in the conference (A, B, C). In this embodiment, the concurrently requesting initiation of the application for use on each of the plurality of participant user devices in the conference (A, B, C) comprises concurrently requesting initiation of an application instance  on a virtualization server  for each of the plurality of participant user devices  in the conference (steps , , ). As depicted in , in response to the request to initiate an application instance  on the virtualization server  for participant user device A, virtualization server  initiates a first virtualization instance (step ), and thereafter initiates the application (e.g., Application A) in that first virtualization instance (step ). The virtualization server may acknowledge the request from the conference controller  (step ). Once initiation of the application (Application A) completes in the first virtualization instance (step ) (), display and control of the application (Application A) executing in virtualization instance  is provided to virtualization client  of participant user device A (step ). This enables participant A to view and control the application (Application A) on the participant user device A. The completion of the initiation of the application (Application A) in virtualization instance  may also trigger a notification to be transmitted from the virtualization instance  executing on the virtualization server  to the conference controller , indicating that the application (Application A) for participant A has started (step ). As depicted in , similar transactions may concurrently occur for participant user device B (steps , , , , , and ) and participant user device C (steps , , , , , , and ).","In one embodiment, virtualization server  may be provided as a plurality of virtualization servers . In this embodiment, different application instances  may or may not execute on different virtualization servers  among the plurality of virtualization servers . The plurality of virtualization servers  may provide an increased capacity and\/or redundancy for providing application instances  to participant devices .","Referring now to , the concurrently requesting initiation of the application for use on each of the plurality of participant user devices  in the conference (, step ) may comprise concurrently initiating an application client  on each of the plurality of participant user devices  (e.g., A, B, C) in the conference. Each such application client  may be configured to communicate with a server application on a server (such as application server ).  provide a method  illustrating one such embodiment. Referring now to , participant user device A may transmit a request to conference controller  to assign an application (Application A) to the conference after the conference has been established (step ). Conference controller  may acknowledge the request (step ). Conference controller  assigns the application (application A) to the conference (step ). In response to the assigning the application to the conference, conference controller  concurrently requests initiation of the application for use on each of the plurality of participant user devices  (such as A, B, and C) in the conference (steps , , ).","Focusing now on the transaction for participant user device A, participant user device A may acknowledge the request from conference controller  (step ). Participant user device A may initiate an application client  () (for Application A) configured to communicate with an application server  (step ). Upon completion of the initiation of the application client  (for Application A) (step ), application client  of participant user device A may notify conference controller  that the application (Application A) has started (step ). Conference controller  may acknowledge this notification (step ). Accordingly, participant user device A and application server  may communicate (step ) to provide the application (Application A) for display and control on the participant user device A.","As depicted in , similar transactions may concurrently occur for participant user device B (steps , , , , , and ) and participant user device C (steps , , , , , and ). The client\/server communication among other participant user devices A, B, C and the conference controller  may or may not affect the display and control of the application provided to each participant user devices A, B, C. In other words, the application running on each participant user device A, B, C may or may not interact with other application clients running on other participant user devices  due to the client\/server communication (steps , , and ).","In one embodiment, application server  may be provided as a plurality of application servers . In this embodiment, different application clients  may or may not communicate with different application servers  among the plurality of application servers . The plurality of application servers  may provide an increased capacity and\/or redundancy for communications with application clients .","Referring now to , the concurrently requesting initiation of the application for use on each of the plurality of participant user devices  in the conference (, step ) may comprise concurrently initiating an application instance directly on each of the plurality of participant user devices  in the conference. Each such application instance may be configured to communicate to each of the other application instances on the other participant user devices in the conference.","One such embodiment is provided by method  illustrated in . In this embodiment, participant user device A transmits a request to conference controller  to assign an application (Application A) to the conference after the conference has been established (step ). Conference controller  may positively acknowledge the request (step ). Conference controller  may assign the requested application (Application A) to the conference (step ). In response to the assigning the application (Application A) to the conference, conference controller  may concurrently request initiation of the application (Application A) for use on each of the plurality of participant user devices  in the conference (steps , , and ). Focusing now on the transaction for participant user device A, participant user device A may positively acknowledge the request from conference controller  (step ). Participant user device A may initiate the application instance  (for Application A) on participant user device A (step ). Upon completion of initiation of the application instance  for the application (Application A) (step ), participant user device A may notify conference controller  that the application (Application A) has started (step ). Conference controller  may positively acknowledge the notification (step ). As depicted in , similar transactions may concurrently occur for participant user device B (steps , , , , and ) and participant user device C (steps , , , , and ).","According to this and other embodiments discussed herein, the concurrently requesting initiation of the application  for use on the plurality of participant user devices  in the conference (, step ) may comprise concurrently requesting initiation of a separate application instance  of the application  for each of the plurality of participant user devices  in the conference. Each separate application instance  of the application  may provide a different display of the application  for each of the participant user devices . Each separate application instance  of the application  may only be controllable on the participant user devices  for which it was initiated.","As also depicted in , each application instance  of the application (Application A) may be configured to communicate to the conference controller . As a non-limiting example, this communication may occur through an application programming interface (API) of the conference controller (e.g., collaboration API  in ). In one embodiment, each application instance  may be configured to communicate through the application programming interface (API) of the conference controller  to each of the other application instances  executing for the other participant user devices  in the conference. Such an application programming interface (API) may or may not be used by any other embodiments herein discussed.","Referring back to , the method  may comprise additional steps. For example, method  may further comprise determining whether the application  is available on at least one participant user device  in the conference. In response to determining that the application  is not available on the participant user device  in the conference, the application  may be downloaded to the participant user device  in the conference. For example, conference controller  may download the application  to the at least one participant user device  directly, or alternatively, conference controller  may instruct the at least one participant user device  to download the application  from a particular address (e.g., a URL).","In this regard,  provide a method  illustrating one such embodiment. In this embodiment, participant user device A may transmit a request to conference controller  to assign an application  to the conference after the conference has been established (step ). Conference controller  may positively acknowledge this request (step ). Conference controller  may assign the application (Application A) to the conference (step ). Conference controller  may determine whether the application (Application A) is available on each of the participant user devices (A, B, C) in the conference (step ). In this regard, in response to the concurrently requesting initiation of the application (Application A) for use on each of the plurality of participant user devices  in the conference (steps , , ), at least one of the participant user devices  may negatively acknowledge the request (steps , ) indicating that the application (Application A) cannot be started because the application (Application A) was not found (steps , ). Other participant user devices  may positively acknowledge the request (step ), indicating that the application (Application A) was found. In this manner, conference controller  may determine whether the application (Application A) is available on a participant user device  in the conference. One of skill in the art will recognize other methods consistent with this disclosure for conference controller  to determine whether the application  is available on a participant user device  in the conference.","In response to determining that the application (Application A) is not available on at least one of the participant user devices  (such as B and C) in the conference, the application (Application A) may be downloaded to the at least one participant user devices (B, C) in the conference. One such embodiment is provided in , though one of skill in the art will recognize other embodiments, in accordance with this disclosure, for downloading the application to the at least one participant user devices (B, C) in the conference.","Referring now to the embodiment depicted in , conference controller  may notify the at least one participant user devices (B, C) to download the application (Application A) from a storage device  (steps , ). The at least one participant user devices (B, C) may acknowledge the notification (steps , ). The at least one participant user device (B, C) may request the application (Application A) from a storage device  (steps , ). The storage device  may be any type of storage device. As non-limiting examples, the storage device  may be a File Transfer Protocol (FTP) server, a Secure File Transfer Protocol (SFTP) server, a Hypertext Transfer Protocol (HTTP) server, a Secure Hypertext Transfer Protocol (HTTPS) server, a Network File System (NFS) drive, a network drive, an encrypted or non-encrypted drive, or any other remote or local storage device.","In response to the request for the application from the storage device , the storage device  may transmit the application (Application A) to the at least one participant user device (B, C) (steps , ). Upon completion of the download of the application, each participant user device  downloading the application (e.g., B, C) may notify conference controller  that the download completed (steps , ). Conference controller  may acknowledge the notification (steps , ). In response to the notification, conference controller  may re-notify the at least one participant user device  to start the application (Application A) (steps , ). Alternatively, the at least one participant user device (e.g., B, C) may automatically attempt to start the application (Application A) without further notification from conference controller .","In some instances, licensing may be required to execute an application assigned to a conference. Accordingly, method  () may comprise additional licensing related steps. For example, conference controller  may determine whether a participant user device  in the conference is licensed to execute the application  assigned to the conference. In response to determining that the participant user device  is not licensed to execute the application , conference controller  may request as license for the participant user device  in the conference. The license may license the participant user device  to execute the application  for the duration of the conference. In some embodiments, the license may license the participant user device  to execute the application  for only the duration of the conference.  provide one such embodiment. One of skill in the art will appreciate other such embodiments that may be provided in accordance with this disclosure.","Referring now to , participant user device A may transmit a request to conference controller  to assign an application (Application A) to the conference after the conference has been established (step ). Conference controller  may positively acknowledge the request (step ). Conference controller  may assign the application (Application A) to the conference (step ). Conference controller  may determine whether each of the participant user devices  (e.g., A, B, C) in the conference has a license to execute the application (Application A) (step ). For example, after concurrently requesting initiation of the application (Application A) for use on each of the plurality of participant user devices  (e.g., A, B, C) (steps , , ), conference controller  may receive negative acknowledges from at least one participant users devices (e.g., B, C) indicating that the application cannot be started for those at least one participant user devices (e.g., B, C) because an application license is required (steps , ).","Other participant user devices (e.g., A) may positively acknowledge the request, indicating that no additional application license is required for executing the application for those participant user devices (e.g., A) (step ). In response to determining at least one of the participant user devices (e.g., B, C) in the conference does not have a license to execute the application (Application A), conference controller  may request and\/or provide a license for the at least one of the participant user devices (e.g., B, C) in the conference (step ).","Referring now to , conference controller  may request a license from a licensing server  for the duration of the conference for the at least one participant user devices (e.g., B, C) in the conference (step ). In response, the licensing server  may provide license(s) for the duration of the conference for the at least one participant user devices (e.g., B, C) in the conference (step ). Thereafter, conference controller  may transmit the license for the application (Application A) for the duration of the conference for the participant user device (B) to the participant user device (B) (step ). Participant user device B may install the license for the application (Application A) on the participant user device B (step ). Participant user device B may notify conference controller  that the license has been installed (step ). Conference controller  may also transmit the license for the application (Application A) for the duration of the conference for the participant user device (C) to the participant user device (C) (step ).","The license provided to participant user device B may be the same or different from the license provide to participant user device C. For example, a same license may be provided to both participant user device B and C when the license is valid for all participants of a same conference. Regardless, participant user device C may install the license for the application (Application A) on participant user device C (step ). Thereafter, participant user device C may notify the conference controller  that the license has been installed (step ). The license may be provided for a participant user device  in the conference only for the duration of the conference.","Upon completion of the installation of the license, each participant user device installing the license (e.g., B, C) may notify conference controller  that the license installation has completed (steps , ). Conference controller  may acknowledge the notification (not shown). In response to the notification, conference controller  may re-notify the at least one participant user device (e.g., B, C) to start the application (Application A) (steps , ).","In an alternative embodiment, the at least one participant user device (e.g., B, C) may automatically attempt to start the application (Application A) without further notification from conference controller . In this embodiment, each at least one participant user device (e.g., B, C) may notify conference controller  when the application has successfully started for that participant user device . Conference controller  may acknowledge the notifications.","In one embodiment, conference controller  and\/or licensing server  is notified whenever an application instance  of an application  has terminated for a participant user device  (e.g., A, B, C). This may allow the conference controller  and\/or licensing server  to become aware and maintain awareness of the number of concurrent licenses that are in use for a conference. As a non-limiting example, each participant user device  may notify the conference controller  when the application instance  for that participant user device  terminates. In response to such a notification from a participant user device , the conference controller  may notify the licensing server  that the application instance  has terminated for the participant user device . Alternatively, participant user device  may directly notify the licensing server that its application instance  of application  has terminated.",{"@attributes":{"id":"p-0124","num":"0123"},"figref":["FIG. 11","FIGS. 2A, 2B, 12, 13, 14, 17A and 17B"],"b":["1100","1100","14","12","14","14","14","1100","84","14","84","1100","1102","12","12","1104","1102","1104","1106","1106","1102"]},"A participant list  may be associated with each conference record . The participant list  may provide a list of participants  in the conference . At least one participant user device record  may be associated with each participant record . The at least one participant user device records  provide information about at least one participant user devices  that a participant  is using for the conference . Each participant user device  may have at least one session  for communicating with the conference .","An application list  may also be associated with each conference record . The application list  may provide a list of applications records  for each application  which may be assigned to the conference.","The data structure  may optionally provide an available application list , and at least one application  records indicating at least one application  which may be assigned to a conference of the conference controller  associated with the conference controller record . The available application list  may alternatively be associated with each conference record .","The data structure  may also optionally provide a contact list  associated with the conference controller record  indicating all contacts  that may assigned to a conference  of the conference controller . A contact list  may also be associated directly with a participant record , enabling the participant  to have a participant specific list of contacts that may be assigned to a conference . In other embodiments, the contact list  may additionally or instead be associated with a participant user device record , providing a participant user device  specific contact list .",{"@attributes":{"id":"p-0129","num":"0128"},"figref":["FIG. 12","FIGS. 2A and 2B","FIG. 12","FIG. 2B","FIG. 12","FIG. 12"],"b":["84","104","84","104","104","86","108","104","107","14","12","104","110","112","114","14","14","14","14","14","14","14","108","110","112","114","14","14","14","14","14"]},{"@attributes":{"id":"p-0130","num":"0129"},"figref":"FIG. 13","b":["116","84","14","116","116","86","84","14","118","116","107","14","116","120","122","124","14","14","14","118","120","122","124","16","16","16","16","14","14","14","14","118","16","120","16","122","16","124","16"]},"An application may also be disassociated from a conference. In this regard,  depicts a user interface manipulation  of the user interface  of participant user device A for requesting disassociation of the application  from the conference. For example, the icon B associated with application  may be dragged and dropped away from the first defined area  representing the first conference. In one embodiment, as depicted in , the disassociation may result in certain artifacts generated during use of the application  during the conference being archived in a history . However, any dragging and dropping away of the icon B from the first defined area  associated with the first conference may disassociate the application  from the conference associated with the first defined area .",{"@attributes":{"id":"p-0132","num":"0131"},"figref":["FIGS. 15A and 15B","FIG. 14"],"b":["1500","16","84","14","86","86","1502","86","84","14","14","12","1504","12","1506","12","1507","12","1508","1514","1520","14","14","14","14","12","1510","1516","1522","1512","1518","1524"]},"Referring now to , upon completion of the termination of the application (Application A) (steps , , and ), the participant user devices A, B, C in the conference may notify the conference controller  that the applications have been terminated (steps , , and , respectively). The conference controller  may acknowledge these notifications (steps , , and , respectively). In this manner, an application may be disassociated from the conference. Further, in response to disassociating the application from the conference, conference controller  may request termination of any instances of the application initiated in response to the request initiation of the application.","In response to receiving a notification that an application (Application A) for a participant user device  has terminated, conference controller  may also transmit a notification to licensing server . The notification transmitted by conference controller  to the licensing server  may indicate that the application (Application A) for the participant user device  has terminated. This may allow the licensing server  to become aware and maintain awareness of the number of concurrent licenses that are in use for a conference.","Embodiments provided herein may also create and transmit at least one accounting record comprising application usage information for an application assigned to a conference.  illustrates a method  depicting one such embodiment. In response to the disassociating the application from the conference, at least one such accounting record may be created and transmitted. As a non-limiting example, the accounting record may be transmitted from the conference controller  to an accounting server . However, such an accounting record may also be created and transmitted from a participant user device  in the conference to the accounting server . As depicted in , an accounting record is created (step ). The accounting record comprises application usage information for a conference application assigned to the conference (step ). The accounting record may be transmitted from the conference controller  to the accounting server  (step ). The accounting server  may be configured to receive at least one accounting record comprising application usage information for conference applications (step ).","Various usage information about the use of conference applications may be provided. In this regard in one embodiment, the at least one accounting record may include a timestamp indicating when an application instance was started for at least one participant user device  in the conference. The at least one accounting record may include a timestamp indicating when the application instance was terminated for the at least one participant user device in the conference.","The at least one accounting record may include a duration of usage of the application on the at least one participant user device  in the conference. The at least one accounting record may include a duration of usage of the application by at least one participant  in the conference. The at least one accounting record may include a duration of usage of the application  by all participants  in the conference.","The at least one accounting record may include an amount of network data transmitted by the application instance started for the at least one participant user device  in the conference. The at least one accounting record may include an amount of network data received by the application instance started for the at least one participant user device  in the conference.","The at least one accounting record may include a number of messages transmitted by the application instanced started for the at least one participant user device  in the conference. The at least one accounting record may include a number of messages received by an application instance started for the at least one participant user device  in the conference.","The at least one accounting record may include a maximum number of concurrent participants in the conference. The at least one accounting record may include a maximum number of concurrent application instances that were concurrently used for the plurality of participant user devices in the conference.","In one embodiment, the conference controller  may communicate with the accounting server  using a RADIUS protocol and\/or a DIAMETER protocol. One of skill in the art will appreciate other protocols that the conference controller  may use to communicate with the accounting server  in accordance with this disclosure.","The accounting server  may charge an account based on a participant  or other chargeable entity based on the accounting record comprising the application usage information for the conference (step ). Thereafter, the participant  or another billable entity may be invoiced or billed for the usage of the conference application based on the application usage information for the conference.","Any of the embodiments herein disclosed may also be provided for a second conference. As a non-limiting example, a user interface  of a participant user device  may provide a second defined area  representing the second conference, and the user manipulations herein discussed may also be provided for the second conference associated with the second defined area  of the user interface .  provides one such embodiment.  depicts a second defined area  associated with a second conference. The second conference may also be referred to as a \u201csidebar\u201d or \u201csidebar conference.\u201d Participants  may be assigned to the second conference by dragging and dropping contacts from the contact list  to the second defined area . Alternatively, as depicted in , a proper subset of participant icons  representing participants  may be dragged and dropped from the first defined area  associated with the first conference to a second define area  associated with the second conference. The dragging and dropping of the participant icons  may be accomplished via a user interface manipulation  of the user interface  of the participant user device A.","A second application may also be assigned to the second conference.  provides one such embodiment. As depicted in , a slide presentation application  may be assigned to a second conference associated with a second defined area  of the user interface  of the participant user device A. As a non-limiting example, a user manipulation  of the user interface  may be provided to drag and drop an icon representing the slide presentation application A to the second defined area  (for example, as shown to by application icon B). This user interface manipulation  will result in the participant user device A transmitting a request to conference controller .","Similar message flows as herein previously discussed will thereafter occur for the second conference, in accordance with method  and other embodiments herein disclosed. In this manner, a second conference including a second plurality of participant user devices  represented by second participant identifiers (D, E) may be established. A request for assigning a second application to the second conference may be received from the participant user device  by the conference controller . Conference controller  may assign the second application  to the second conference. In response to the assigning the second application  represented by icon A to the second conference, conference controller  may request an initiation of the second application  for use on each of the second plurality of participant user devices  (associated with the second plurality of icons D, E) in the second conference.","As previously discussed with regards to , the second plurality of participant user devices  associated with the second conference may be a proper subset of the plurality of the participant user devices  associated with the first conference associated with the first defined area . As depicted in , a participant user device A may implicitly and concurrently be a member of both the first conference associated with the first defined area  and the second conference associated with the second defined area .","Alternatively, participant A may only be a member of one of the plurality of conferences. To select the conference for active membership, the participant A may provide a user interface manipulation to position the active conference provided in a larger or center portion of the user interface , such as the position occupied by the first defined area  associated with the first conference in .","In one embodiment, conference controller  may be provided as a standalone device. In some embodiments, the conference controller  may also be provided as a component of another device herein discussed. As a non-limiting example, conference controller  may also be provided as a component of a participant user device , a web server , a virtualization server , an application server , a storage device , a licensing server , and\/or an accounting server .","Referring now to , an application  (e.g. slide application ) may be reassigned from a first conference to a second conference. Reassigning the application from the first conference to the second conference may comprise disassociating the application  from the first conference and associating the application  with the second conference. In one embodiment, reassigning the application from the first conference to the second conference may comprise establishing a second conference that includes a second plurality of participant user devices. A request from a participant user device  to reassign the application to the second conference may be received by the conference controller . In response to receiving the request from the participant user device to reassign the application to the second conference, an initiation of the second application for use on each of the second plurality of participant user devices in the second conference may be requested. The application may be disassociated from the first conference. The termination of any instances of the application for any participant user devices not included in the second conference may be requested.","In this regard,  depicts the user interface  of .  also depicts a first defined area  associated with a first conference and a second defined area  associated with a second conference. A first plurality of participants (A, B, C) is assigned to the first conference. A second plurality of participants (D, E) is assigned to the second conference. Slide presentation application  may be reassigned from the first conference representing the first defined area  to the second conference representing the second defined area  by a user interface manipulation . The user interface manipulation  may drag and drop the icon B for the slide presentation application  from the first defined area  of the first conference to the second defined area  of the second conference. As a non-limiting example, slide presentation application icon B may be dragged and dropped away from the first defined area  to a position indicated by slide presentation application icon C in the second defined area . As a result of this user interface manipulation , a participant user device  (e.g. A) will transmit a request to the conference controller to reassign the application  to the second conference representing the second defined area . In response to receiving the request from the participant user device , conference controller  will reassign application  to the second conference. As a result, conference controller  may request an initiation of the second application for use on each of the second plurality of participant user devices  in the second conference (e.g. participant user devices D and E associated with participants D and E represented by participant icons D and E). Conference controller  will disassociate the application  from the first conference. As a result, conference controller  may request termination of any instances of the application  for any participant user devices  (e.g., participant user devices A, B, C associated with participants A, B, C represented by participant icons A, B, C) not included in the second conference.","In continuing reference to , as a non-limiting example, exemplary messages - previously discussed in relation to  may be used to disassociate application  from the first conference associated with the first defined area . Other embodiments herein discussed may also be used to provide the disassociation of the application  from the first conference. As a non-limiting example, exemplary messages - previously discussed in relation to  may also be used to associate application  with the second conference. Other embodiments herein discussed may also be used to provide the association of the application  with the second conference. This disassociation of the application  from the first conference and association of the application  with the second conference may occur concurrently. Data of the application  executing for the first conference may be preserved for use by the second conference. Accordingly, an application  disassociated from a first conference may continue to persist, even after being disassociated from the first conference. The application  may continue to be provided, though display and control of the application  shifts from participants of the first conference to participants of the second conference.",{"@attributes":{"id":"p-0152","num":"0151"},"figref":"FIG. 19","b":["12","134","12","134","12","12","12","12","12"]},"The exemplary computer system  includes a processing device or processor , a main memory  (e.g., read-only memory (ROM), flash memory, dynamic random access memory (DRAM) such as synchronous DRAM (SDRAM), etc.), and a static memory  (e.g., flash memory, static random access memory (SRAM), etc.), which may communicate with each other via a bus . Alternatively, the processing device  may be connected to the main memory  and\/or static memory  directly or via some other connectivity means.","The processing device  represents one or more processing devices such as a microprocessor, central processing unit, or the like. More particularly, the processing device  may be a complex instruction set computing (CISC) microprocessor, a reduced instruction set computing (RISC) microprocessor, a very long instruction word (VLIW) microprocessor, a processor implementing other instruction sets, or processors implementing a combination of instruction sets. The processing device  is configured to execute processing logic in instructions  and\/or cached instructions  for performing the operations and steps discussed herein.","The computer system  may further include a communications interface in the form of a network interface device . It also may or may not include an input  to receive input and selections to be communicated to the computer system  when executing instructions. It also may or may not include an output , including but not limited to display(s) , a video display unit (e.g., a liquid crystal display (LCD) or a cathode ray tube (CRT)), an alphanumeric input device (e.g., a keyboard), a cursor control device (e.g., a mouse), and\/or a touch screen device (e.g., a tablet input device or screen).","The computer system  may or may not include a data storage device that includes using drive(s)  to store functions herein described in computer-readable medium  on which is stored one or more sets of instructions  (e.g., software) embodying any one or more of the methodologies or functions described herein. The functions can include the method  or other functions of the conference controller , as non-limiting examples. The instructions  may also reside, completely or at least partially, within the main memory  and\/or within the processing device  during execution thereof by the computer system , the main memory  and the processing device  also constituting machine-accessible storage media. The instructions , , and\/or  may further be transmitted or received over a network  via the network interface device . The network  can be an intra-network or an inter-network.","While the computer-readable medium  is shown in an exemplary embodiment to be a single medium, the term \u201cmachine-accessible storage medium\u201d should be taken to include a single medium or multiple media (e.g., a centralized or distributed database, and\/or associated caches and servers) that store the one or more sets of instructions. The term \u201cmachine-accessible storage medium\u201d shall also be taken to include any medium that is capable of storing, encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the embodiments disclosed herein. The term \u201cmachine-accessible storage medium\u201d shall accordingly be taken to include, but not be limited to, solid-state memories, optical and magnetic media, and carrier wave signals.","As also depicted in , a participant user device , web server , virtualization server , application server , storage device , licensing server , and accounting server  may also each be provided in the form of an exemplary computer system .","The devices, systems, methods, and computer-readable mediums initiating one or more applications for participants of a conference according to embodiments disclosed herein may be provided in or integrated into any processor-based device. Examples, without limitation, include a set top box, an entertainment unit, a navigation device, a communications device, a fixed location data unit, a mobile location data unit, a mobile phone, a cellular phone, an internet phone, a computer, a portable computer, a desktop computer, a personal digital assistant (PDA), a monitor, a computer monitor, a television, a tuner, a radio, a satellite radio, a music player, a digital music player, a portable music player, a digital video player, a video player, a digital video disc (DVD) player, and a portable digital video player.","Those of skill in the art would further appreciate that the various illustrative logical blocks, modules, circuits, and algorithms described in connection with the embodiments disclosed herein may be implemented as electronic hardware, instructions stored in memory or in another computer-readable medium and executed by a processor or other processing device, or combinations of both. The arbiters, master devices, and slave devices described herein may be employed in any circuit, hardware component, integrated circuit (IC), or IC chip, as examples. Memory disclosed herein may be any type and size of memory and may be configured to store any type of information desired. To clearly illustrate this interchangeability, various illustrative components, blocks, modules, circuits, and steps have been described above generally in terms of their functionality. How such functionality is implemented depends upon the particular application, design choices, and\/or design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application, but such implementation decisions should not be interpreted as causing a departure from the scope of the present invention.","The various illustrative logical blocks, modules, and circuits described in connection with the embodiments disclosed herein may be implemented or performed with a processor, a digital signal processor (DSP), an Application Specific Integrated Circuit (ASIC), an field programmable gate array (FPGA) or other programmable logic device, discrete gate or transistor logic, discrete hardware components, or any combination thereof designed to perform the functions described herein. A processor may be a microprocessor, but in the alternative, the processor may be any conventional processor, controller, microcontroller, or state machine. A processor may also be implemented as a combination of computing devices, e.g., a combination of a DSP and a microprocessor, a plurality of microprocessors, one or more microprocessors in conjunction with a DSP core, or any other such configuration.","The embodiments disclosed herein may be embodied in hardware and in instructions that are stored in hardware, and may reside, for example, in Random Access Memory (RAM), flash memory, Read Only Memory (ROM), Electrically Programmable ROM (EPROM), Electrically Erasable Programmable ROM (EEPROM), registers, hard disk, a removable disk, a CD-ROM, or any other form of computer readable medium known in the art. An exemplary storage medium is coupled to the processor such that the processor can read information from, and write information to, the storage medium. In the alternative, the storage medium may be integral to the processor. The processor and the storage medium may reside in an Application Specific Integrated Circuit (ASIC). The ASIC may reside in a remote station. In the alternative, the processor and the storage medium may reside as discrete components in a remote station, base station, or server.","It is also noted that the operational steps described in any of the exemplary embodiments herein are described to provide examples and discussion. The operations described may be performed in numerous different sequences other than the illustrated sequences. Furthermore, operations described in a single operational step may actually be performed in a number of different steps. Additionally, one or more operational steps discussed in the exemplary embodiments may be combined. It is to be understood that the operational steps illustrated in the flow chart diagrams may be subject to numerous different modifications as will be readily apparent to one of skill in the art. Those of skill in the art would also understand that information and signals may be represented using any of a variety of different technologies and techniques. For example, data, instructions, commands, information, signals, bits, symbols, and chips that may be referenced throughout the above description may be represented by voltages, currents, electromagnetic waves, magnetic fields or particles, optical fields or particles, or any combination thereof.","The previous description of the disclosure is provided to enable any person skilled in the art to make or use the disclosure. Various modifications to the disclosure will be readily apparent to those skilled in the art, and the generic principles defined herein may be applied to other variations without departing from the spirit or scope of the disclosure. Thus, the disclosure is not intended to be limited to the examples and designs described herein, but is to be accorded the widest scope consistent with the principles and novel features disclosed herein."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":["The accompanying drawing figures incorporated in and forming a part of this specification illustrate several aspects of the disclosure, and together with the description serve to explain the principles of the disclosure.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 2B","FIG. 2A"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIGS. 4A-4D","b":"400"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIGS. 5A and 5B","FIG. 4D"],"b":"500"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIGS. 6A, 6B, and 6C","FIG. 4D"],"b":"600"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIGS. 7A and 7B","FIG. 4D"],"b":"700"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIGS. 8A and 8B","FIG. 4D"],"b":"800"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIGS. 9A and 9B","FIG. 4D"],"b":"900"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIGS. 10A and 10B","FIG. 4D"],"b":"1000"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 12","FIG. 2B"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 13","FIG. 2B"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 14","FIG. 12"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIGS. 15A and 15B","FIG. 4D"],"b":"1500"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 16","FIGS. 15A and 15B"],"b":"1600"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 17A","FIGS. 2A, 2B, 12, 13"],"b":"14"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 17B","FIG. 17A"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 18","FIG. 17A"]},{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 19","FIG. 1"]}]},"DETDESC":[{},{}]}
