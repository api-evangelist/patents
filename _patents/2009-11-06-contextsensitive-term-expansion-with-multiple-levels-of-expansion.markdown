---
title: Context-sensitive term expansion with multiple levels of expansion
abstract: Articles of manufacture and systems for searching collections of data using context sensitive expanded term searching are provided. The collection of data may be a relational database, text document, or any other type of searchable collection of data. In either case, a query including a search condition based on a specified search term may be modified to include additional conditions based on a set of expanded (e.g., conceptually-related) search terms. For some embodiments, a user may be given the ability to control the level of expansion and the context in which the terms may be expanded.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08086623&OS=08086623&RS=08086623
owner: International Business Machines Corporation
number: 08086623
owner_city: Armonk
owner_country: US
publication_date: 20091106
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS","An Exemplary Environment","An Exemplary Relational View","An Exemplary Method","Environmental Term Expansion","Exemplary Application Programming Interface","Exemplary Graphical User Interface","Dynamic and Static Term Expansion"],"p":["This application is a continuation of U.S. patent application Ser. No. 10\/691,308, field Oct. 22, 2003, now U.S. Pat. No. 7,617,196, which is herein incorporated by reference in its entirety.","This application is related to U.S. Pat. No. 6,996,558, entitled \u201cApplication Portability And Extensibility Through Database Schema And Query Abstraction,\u201d issued on Feb. 7, 2006 and application Ser. No. 10\/264,188, entitled \u201cSQL Query Construction Using Durable Query Components\u201d, filed Oct. 3, 2002, now U.S. Pat. No. 7,752,197.","1. Field of the Invention","The present invention generally relates to data processing and more particularly to searching text, or other type data fields, using automatically expanded search terms.","2. Description of the Related Art","Databases are computerized information storage and retrieval systems. A relational database management system is a computer database management system (DBMS) that uses relational techniques for storing and retrieving data. The most prevalent type of database is the relational database, a tabular database in which data is defined so that it can be reorganized and accessed in a number of different ways. A distributed database is one that can be dispersed or replicated among different points in a network. An object-oriented programming database is one that is congruent with the data defined in object classes and subclasses.","Regardless of the particular architecture, in a DBMS, a requesting entity (e.g., an application or the operating system) demands access to a specified database by issuing a database access request. Such requests may include, for instance, simple catalog lookup requests or transactions and combinations of transactions that operate to read, change and add specified records in the database. These requests are made using high-level query languages such as the Structured Query Language (SQL). Illustratively, SQL is used to make interactive queries for getting information from and updating a database such as International Business Machines' (IBM) DB2, Microsoft's SQL Server, and database products from Oracle, Sybase, and Computer Associates. The term \u201cquery\u201d denominates a set of commands for retrieving data from a stored database. Queries take the form of a command language that lets programmers and programs select, insert, update, find out the location of data, and so forth.","One example of a query used extensively is a command for searching data, or a request to return data stored in the database, given a specific search term. One of the problems faced by data searching applications is that of finding a concept with a search criteria. The common query condition for searching a field containing a specific term is based on a specific value (e.g., diagnosis=\u201ccolon cancer\u201d), rather than a concept. Value searches work well in cases where the data is relational in nature, for example, where a discrete set of known values are stored in discrete rows and columns within a tabular format. This type of searching breaks down, however, when you are interested in finding information stored in a free text or open format, such as a textual document or text field of a database.","For example, a doctor's notes may have several paragraphs of written information for each time a patient visits the doctor. Searching this data with the above condition will obviously not work, as the notes will likely contain additional text, rather than a specific value. In some cases, wildcards may be used to specify that the field should be returned if a specified value is found anywhere within the field. However, this approach may still present problems. For example, if the specified value spans the end of a line, in many data formats, the value to not be found.","Another, possibly more significant problem is that, in free text information, the preparers of the information are free to describe things as they see fit, using their preferred terms. As an example, if a doctor has chosen to write in his notes \u201ccancer of the colon\u201d, \u201ccolon malignancy\u201d, or any other descriptive phrases, the field would not be found by searching for \u201ccolon cancer\u201d. This is unfortunate, as a user searching for information regarding colon cancer would likely be interested in retrieving and reviewing these notes.","Accordingly, there is a need for an improved and more flexible method for searching fields, such as text fields, preferably that allows conditions based on a single specified search term to be expanded to include a set of conceptually-related expanding search terms.","The present invention generally provides methods, articles of manufacture, and systems for searching collections of data using expanded term searching.","One embodiment provides a method for context-sensitive searching of fields of a data repository using multiple levels of term expansion. The method generally includes receiving, from a user, a query containing at least one condition for searching at least one field of the data repository, wherein the at least one condition includes at least one base search term, obtaining one or more parameters associated with the base search term, obtaining a level of expansion based on the one or more parameters associated with the base search term, obtaining, based at least in part on the level of expansion, one or more expanded search terms, and modifying the query to contain one or more conditions based on the one or more expanded search terms.","Another embodiment provides a method for searching fields of a data repository using multiple levels of term expansion. The method generally includes receiving, from a user, a query containing at least one condition for searching at least one field of the data repository, wherein the at least one condition includes at least one base search term, obtaining a level of expansion associated with the base search term, obtaining, based on the base search term and the associated level of expansion, one or more expanded search terms, and modifying the query to contain one or more conditions including the one or more expanded search terms.","Another embodiment provides a method for context-sensitive searching of fields of a data repository. The method generally includes receiving, from a user, a query containing at least one condition for searching at least one field of the data repository, wherein the at least one condition includes at least one base search term, obtaining, based one or more parameters associated with the base search term, one or more expanded search terms, and modifying the query to contain one or more conditions based on the one or more expanded search terms.","Another embodiment provides a computer-readable medium containing an executable component for searching fields of a data repository using multiple levels of term expansion. When executed, the program performs operations generally including providing a first interface allowing a user to build a query containing at least one condition for searching at least one field of the data repository, wherein the at least one condition includes at least one base search term, providing a second interface allowing the user to specify expanded search terms to be associated with the at least one base search term, and prior to executing the query, modifying the query to contain one or more conditions including the one or more specified expanded search terms.","Another embodiment provides a data processing system generally including a collection of data, at least one expanded term repository, and an executable component. The executable component is generally configured to receive a query containing at least one condition for searching the collection of data, obtain, based on at least one base search term included in the at least one condition and at least one parameter indicative of a context of the query, one or more expanded search terms contained in the at least one expanded term repository, and modify the query to contain one or more conditions based on the one or more expanded search terms.","Embodiments of the present invention are generally directed to a system, method, and article of manufacture for expanding the search terms used in a query. For example, a query including a search condition based on a specified search term may be modified to include additional conditions based on a set of expanded (e.g., conceptually-related) search terms, thus providing some flexibility to conventionally rigid search conditions requiring a specific match with the specified term. The manner and\/or extent in which search terms are expanded may be determined based on a context of the query, as determined by any number of factors, such as a specified level of expansion, the fields being searched, a credential of a user issuing the query, and the environment in which the query is to be executed (e.g., the time of day, date, and\/or how heavily the system on which the query is to be executed is loaded).","While embodiments may have particular advantage with respect to text searching, those skilled in the art will recognize that the same or similar concepts may be applied to expand search terms used for searching any type data field. Further, while embodiments may be described below with reference to relational database fields, those skilled in the art will also recognize that the same or similar concepts may be applied more generally to expand search terms used for searching any searchable collection of data, such as textual documents, HTML documents, Adobe Acrobat (PDF) documents, or any portions thereof.","In one embodiment of the present invention, a data model may be implemented as a data repository abstraction component containing a collection of abstract representations of physical fields of a searchable database (hereinafter \u201clogical fields\u201d). Thus, this data abstraction model provides a logical view of the underlying database, allowing the user to generate \u201cabstract\u201d queries against the data warehouse without requiring direct knowledge of its underlying physical properties. A runtime component (e.g., a query execution component) performs translation of abstract queries (generated based on the data abstraction model) into a form that can be used against a particular physical data representation.","The concepts of data abstraction and abstract queries are described in detail in co-pending application Ser. No. 10\/083,075, entitled \u201cApplication Portability And Extensibility Through Database Schema And Query Abstraction,\u201d filed Feb. 26, 2002, herein incorporated by reference in its entirety. While the data abstraction model described herein provides one or more embodiments of the invention, persons skilled in the art will recognize that the concepts provided herein can be implemented without such a data abstraction model while still providing the same or similar results.","One embodiment of the invention is implemented as a program product for use with a computer system such as, for example, the computer system  shown in  and described below. The program(s) of the program product defines functions of the embodiments (including the methods described herein) and can be contained on a variety of signal-bearing media. Illustrative signal-bearing media include, but are not limited to: (i) information permanently stored on non-writable storage media (e.g., read-only memory devices within a computer such as CD-ROM disks readable by a CD-ROM drive); (ii) alterable information stored on writable storage media (e.g., floppy disks within a diskette drive or hard-disk drive); and (iii) information conveyed to a computer by a communications medium, such as through a computer or telephone network, including wireless communications. The latter embodiment specifically includes information downloaded from the Internet and other networks. Such signal-bearing media, when carrying computer-readable instructions that direct the functions of the present invention, represent embodiments of the present invention.","In general, the routines executed to implement the embodiments of the invention, may be part of an operating system or a specific application, component, program, module, object, or sequence of instructions. The computer program of the present invention typically is comprised of a multitude of instructions that will be translated by the native computer into a machine-readable format and hence executable instructions. Also, programs are comprised of variables and data structures that either reside locally to the program or are found in memory or on storage devices. In addition, various programs described hereinafter may be identified based upon the application for which they are implemented in a specific embodiment of the invention. However, it should be appreciated that any particular program nomenclature that follows is used merely for convenience, and thus the invention should not be limited to use solely in any specific application identified and\/or implied by such nomenclature.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 1","b":["100","100","122","150","148","156","159","158"]},"The expanded term repository  may contain different (e.g., context-specific) sets of expanded terms for each search term, for example, with different sets corresponding to different levels of expansion, a user's credentials (e.g., a user ID or role), and\/or some other parameter, such as the specific field being searched. In other words, while a set of expanded terms corresponding to a higher level of expansion will typically have more expanded terms than a set of expanded terms corresponding to a lower level of expansion, different sets of expanded terms associated with the same base term may be organized differently (e.g., other than based on just the number of search terms) and associated with other types of parameters. As will be described in greater detail below, for some embodiments, a plurality of expanded term repositories  may be used to hold different sets of expanded terms, for example, with each being used in a different context.","As illustrated in , the system  generally includes client computers  and at least one server computer , connected via a network . In general, the network  may be a local area network (LAN) and\/or a wide area network (WAN). In a particular embodiment, the network  is the Internet. For other embodiments, however, the methods described herein may be performed on a single (e.g., non-networked) computer system.","As illustrated, the client computers  generally include a Central Processing Unit (CPU)  connected via a bus  to a memory , storage , an input device , an output device , and a network interface device . The input device  can be any device to give input to the client computer . For example, a keyboard, keypad, light-pen, touch-screen, track-ball, or speech recognition unit, audio\/video player, and the like could be used. The output device  can be any device to give output to the user, e.g., any conventional display screen. Although shown separately from the input device , the output device  and input device  could be combined. For example, a client  may include a display screen with an integrated touch-screen or a display with an integrated keyboard.","The network interface device  may be any entry\/exit device configured to allow network communications between the client  and the server  via the network . For example, the network interface device  may be a network adapter or other network interface card (NIC). If the client  is a handheld device, such as a personal digital assistant (PDA), the network interface device  may comprise any suitable wireless interface to provide a wireless connection to the network .","Storage  is preferably a Direct Access Storage Device (DASD). Although it is shown as a single unit, it could be a combination of fixed and\/or removable storage devices, such as fixed disc drives, floppy disc drives, tape drives, removable memory cards, or optical storage. The memory  and storage  could be part of one virtual address space spanning multiple primary and secondary storage devices.","The memory  is preferably a random access memory (RAM) sufficiently large to hold the necessary programming and data structures of the invention. While the memory  is shown as a single entity, it should be understood that the memory  may in fact comprise a plurality of modules, and that the memory  may exist at multiple levels, from high speed registers and caches to lower speed but larger DRAM chips.","Illustratively, the memory  contains an operating system . Examples of suitable operating systems, which may be used to advantage, include Linux and Microsoft's Windows\u00ae, as well as any operating systems designed for handheld devices, such as Palm OS\u00ae, Windows\u00ae CE, and the like. More generally, any operating system supporting the functions disclosed herein may be used.","The memory  is also shown containing the query building interface , such as a browser program, that, when executed on CPU , provides support for building queries based on the DRA component . In one embodiment, the query interface  includes a web-based Graphical User Interface (GUI), which allows the user to display Hyper Text Markup Language (HTML) information. More generally, however, the query interface  may be any program (preferably GUI-based) capable of exposing a portion of the DRA component  on the client  for use in building queries. As will be described in greater detail below, queries built using the query interface  may be sent to the server  via the network  to be issued against one or more databases .","The server  may be physically arranged in a manner similar to the client computer . Accordingly, the server  is shown generally comprising a CPU , a memory , and a storage device , coupled to one another by a bus . Memory  may be a random access memory sufficiently large to hold the necessary programming and data structures that are located on the server .","The server  is generally under the control of an operating system  shown residing in memory . Examples of the operating system  include IBM OS\/400\u00ae, UNIX, Microsoft Windows\u00ae, and the like. More generally, any operating system capable of supporting the functions described herein may be used. As illustrated, the server  may be configured with an abstract query interface  for issuing abstract queries (e.g., received from the client application ) against one or more of the databases .","In one embodiment, elements of a query are specified by a user through the query building interface  which may be implemented as a browser program presenting a set of GUI screens for building queries. The content of the GUI screens may be generated by application(s) . In a particular embodiment, the GUI content is hypertext markup language (HTML) content which may be rendered on the client computer systems  with the query building interface . Accordingly, the memory  may include a Hypertext Transfer Protocol (http) server process  (e.g., a web server) adapted to service requests from the client computer . For example, the server process  may respond to requests to access the database(s) , which illustratively resides on the server . Incoming client requests for data from a database  invoke an application  which, when executed by the processor , perform operations necessary to access the database(s) . In one embodiment, the application  comprises a plurality of servlets configured to build GUI elements, which are then rendered by the query interface . Generally speaking, the application programmable interface (API)  contains a set of programs that perform a variety of term expansion related functions.","As previously described, abstract queries containing conditions based on a specified search term may be supplemented with expanded conditions based on a set of expanded search terms  (from the expanded term repository ) related to the specified search term. In other words, the expanded terms repository  may act, in effect, as a thesaurus during the building and\/or issuance of queries, in an effort to ensure related terms and values are not excluded, for example, due to use of different term. For example, the expanded terms repository  may be used to include generally synonymous terms (e.g., \u201ccancer,\u201d \u201ctumor,\u201d \u201cmalignant,\u201d and the like), in an effort to ensure certain values of interest are not excluded merely by a user's choice of terms.","The expanded term repository  may reside in the same database that the query is being executed against, or it may be a separately stored database. The expanded term repository  may be maintained, for example, by periodically adding or deleting terms from expanded terms sets . One technique to identify terms to be included in an expanded term set is to examine the co-occurrence of terms in the database . In other words, a high co-occurrence of one or more terms with a common search term (e.g., the one or more terms often occur in the same field with the common search term) may indicate the terms are conceptually related. Accordingly, for some embodiments, the expanded term repository  (or plurality of expanded term repositories ) may be periodically updated based on the co-occurrence of terms. As an alternative, or additionally, the expanded term repository  may be \u201cmanually\u201d maintained, for example, by an administrator specifying expanded search terms (related to a base search term), via a set of administrative tools (e.g., GUI screens).","Operation of various components of the abstract query interface , according to one embodiment of the present invention, may be further described with reference to .  illustrates a relational view of a client application  and query execution runtime component , according to one embodiment of the invention. As shown, the application  may issue an abstract query  (e.g., via the query building interface  shown in ). The abstract query  may include at least one condition (e.g base condition ) base on a search term (e.g., a base term  specified via the query building interface ).","As previously described, the abstract query  may be executed by the query execution component . However, prior to execution, the abstract query  may be modified (e.g., via the query building interface , query execution component , or other executable component) to include additional conditions , based on expanded terms , for example, related to the base term  and stored in the expanded term repository .","As previously described, in the exemplary abstract data model, the logical fields are defined independently of the underlying data representation being used in the DBMS , thereby allowing queries to be formed that are loosely coupled to the underlying data representation .","For example, as illustrated in , the DRA component  includes a set of logical field specifications  that provide abstract representations of corresponding fields in a physical data representation  of data in the one or more databases  shown in . Each logical field specification  may include various information used to map the specified logical field to the corresponding physical field, such as field names, table names, and access methods (not shown) describing how to access and\/or manipulate data from the corresponding physical field in the physical data representation . The physical data representation  may be an XML data representation , a relational data representation , or any other data representation, as illustrated by . Therefore, regardless of the actual physical data representation , a user may generate an abstract query  based on the logical fields defined by the logical field specifications , in order to access data stored therein.","The logical field specifications  may also include information related to term expansion. For example, a field specification may include a field type  and term expander , which may indicate whether or not the logical field is text searchable and what types of term expansion (e.g., expansion levels) are associated with that logical field, respectively. Other attributes in field specifications  may also be used to determine what type of term expansion is used, such as a concept attribute (e.g., \u201cBlood Related\u201d shown in field specification ) that may be used to select a set of expanded terms","Referring back to , the query execution component  is generally configured to execute the expanded abstract query  by transforming the expanded abstract query  into a concrete query compatible with the physical data representation (e.g., an XML query, SQL query, etc). The query execution component  may transform the expanded abstract query  into the concrete query by mapping the logical fields of the expanded abstract query  to the corresponding physical fields of the physical data representation . The mapping of abstract queries to concrete queries, by the query execution component , is described in detail in the previously referenced co-pending application Ser. No. 10\/083,075.","As previously described, each base term  may have one or more corresponding sets of expanded terms (e.g., corresponding to different levels of expansion). Further, for some embodiments, the types of sets of related terms may be determined, at least in part, by the field being searched. For example, depending upon the term expansion attribute , terms used to search a logical field may have a single or multiple levels of expansion (e.g., one or more sets of expanded terms). If the field is multi-level expandable, then the base term may be expanded differently with different levels of expansion. For example, as illustrated in the exemplary set of expanded terms shown in , a base term such as cancer, may have only two associated \u201clow level\u201d expanded terms and five associated \u201chigh level\u201d expanded terms. Of course, the different expansion levels and the number of associated expanded terms shown are exemplary only, and the exact number of levels and the associated expanded terms may vary, for example, depending on the term, depending on a particular embodiment, and may even vary with time (e.g., as the expanded term repository  is periodically or otherwise updated). The expansion level to be used for any particular query may be set as a default value, specified by a user issuing the query, and or determined by one or more other parameters, such as one or more credentials of the user (e.g., user ID, a role of the user, etc.).",{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 3A","b":["300","120","122","150","300"]},"The method  begins at step , by receiving a query. At step , the query is parsed to determine whether the query includes conditions involving text search. If the query contains text searching conditions, a loop of operations (-) to be performed for each text search condition is entered at step . For each text search condition in the query, the system extracts the base search term at step  and, at step , a set of expanded terms related to the base search term is retrieved, based on context. Depending on the embodiment, the set of expanded terms may be retrieved from one or more repositories of expanded terms.","For example, for some embodiments, multiple expanded term repositories may be maintained and from which repository expanded terms are selected may depend upon one or more parameters indicative of the context of the query. Examples of parameters indicative of the context of the query include, but are not limited to, an administrator configuration that specifies one or more repositories of expanded terms available for term expansion, one or more user credentials, and a level of expansion. The level of expansion may be specified by a user or calculated\/selected based on one or more other parameters described herein. A set of expanded terms may also be selected based on particular search criteria, such as a field or table name, or a particular instance value included in a search condition. Further, in some cases, a user-specified set of terms for expanding a base search term may be provided.","Further, for some embodiments, the exact set or number of terms used for term expansion may be, alternatively or additionally, determined based on one or more parameters indicative of a state of an environment in which the query is to be executed. For example, one parameter indicative of a state of an environment in which the query is to be executed may be a workload of the system on which the query is to be processed. For example, it may be desirable to limit term expansion to fewer terms when the system is heavily loaded, as determined by available system resources, such as available processing power, memory and\/or network bandwidth. For some embodiments, a level of expansion may be selected based on any combination of one or more of these environmental parameters.","However, the environment in which the query is to be executed may refer, not only to the computer system and\/or network in which the query is to be executed, but also to the time (time of day and\/or date) when the query is to be executed. For example, it may be desirable to limit term expansion to fewer terms during peak operating times than are used during off-peak operating times. Peak and off-peak operating times may be user defined as certain dates and\/or times of day (e.g., overnight and weekends may be defined as off-peak). Therefore, for some embodiments, a level of expansion may be determined, at least in part, based on the time of day and\/or date.","Further, for some embodiments, in addition to, or instead of, retrieving expanded terms from a repository, expanded terms may be generated by an algorithm that receives, as input, a search term. For example, the algorithm may take a base term and expand the base term by modifying the base term to include singular and plural, different tenses, different types of words (e.g., the term test may be expanded to include tests, testing, tester, tested, and the like). The algorithm may also receive, as input, a parameter indicative of the context of the search, which may affect the number of expanded terms generated.","Regardless of how the expanded terms are obtained, at step , the query is modified to include conditions based on the expanded terms. Once the operations - have been performed for each text search condition, the modified query may be executed at step . As will be described in greater detail below, instead of, or in addition to, executing the query, the query may be saved for later execution.","As previously described, depending on the embodiment, any combination of a number of different parameters may be examined to determine what set of expanded terms should be used for expansion. For example,  illustrates exemplary operations  for selecting a set of expanded terms based on (at least) the base search term and an expansion level. The operations  begin at step , for example, by detecting a search condition involving a field for which term expansion is enabled and, at step , a search term is extracted from the condition. At step , an expansion level is obtained, for example, as a default value, specified by a user, or determined by one or more parameters indicative of a context of the query, as previously described. At step , a set of expanded search terms is retrieved based on the search term, expansion level (and\/or other parameters). At step , the set of expanded terms is returned.","As previously described, a variety of term expansion related functions may be performed via one or more application programming interface function calls. For example,  illustrates a table  of exemplary functions that may be included in the API , according to one embodiment of the present invention, and used to implement some of the methods described herein.","As illustrated, the API  may include functions allowing the system to retrieve a set of expanded terms (e.g., GetExpandedTerms), given a specified search term and level of expansion, and functions returning the available levels of expansion for a given term (e.g., GetExpansionLevels). The API  may also include a set of functions that allow for maintenance of the expanded term repository , for example, by an administrator. For example, the API may include functions for adding new sets of expanded terms to the expanded term repository , given a search term, expansion level, and list of expanded terms. and expansion level (e.g., BuildExpandedTerms), as well as functions for adding or deleting terms from existing sets of expanded terms (e.g., AddExpandedTerms and DeleteExpandedTerms).","Those skilled in the art will realize that the exact API functions and function names provided, parameters passed to and from the functions, and the exact functionality performed thereby may vary widely with different implementations, and that various functions may be combined in a single function or separated into separate functions as a designer sees fit. Therefore, while the following references may refer to the specific exemplary functions listed in , it should be understood that actual sequences and functions used to perform any of the following operations will likely vary widely with different implementations. Various sequences of one or more of the API functions may be called to accomplish some the operations described herein, for example, for generation of GUI screens and\/or for expanded queries built using GUI screens, such as the GUI screens described below, with reference to .",{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 5A","b":["500","505","510"]},"For example, in response to pressing an advanced button , the user may be presented with another GUI screen  shown in , allowing the user to customize the term expansion routine. As illustrated, the user may select a desired term expansion level from the dropdown menu  (e.g., LOW, MEDIUM, HIGH, etc.), resulting in a corresponding list of expansion terms being displayed in a selection list . For example, when selecting a LOW expansion level, only a few additional search terms may be presented, while selecting a HIGH expansion a more comprehensive list of expanded terms may be presented, as shown in . As illustrated, regardless of the expansion level, the user may also be able to narrow a search by selecting (e.g., via ADD and REMOVE buttons) specific terms from the list  to include in the expansion, as well as specify NO TERM EXPANSION.","Additionally, a SECTIONS tab  may allow a user to further control or specify context sensitive term expansion. For example, via the SECTIONS tab , the user may be able to choose which sections of a document or fields of a database specified term expansion should apply to. In other words, different types of expansion (e.g., different levels, static or dynamic as described below) may be applied depending upon the section or the field being searched, which may be particularly useful for terms that may have different meanings in different contexts.","For example, the term \u201cIN\u201d could be a gene, an abbreviation for Indiana, or the common term which is often a preposition. When running a query, IN may be expanded differently depending upon whether it is run on a gene description section or a state field. In the first instance, IN may be expanded to proteins and genes related to IN, whereas in the second case it could be expanded to list cities or zip codes in Indiana. In this manner, the base term may be expanded according to the context in which it is being searched which, in some cases, may be determined by examining a name of the field or table being searched. For example, if the query involves searching a table or field related to genetic research, the first type of term expansion (gene related) may be appropriate. On the other hand, if the query involves searching a table related to demographic data, the second type of expansion (state related) may be appropriate. In any case, such context-sensitive term expansion may assist in expanding the search term while still focusing the search to the user's desired concept and limiting the results to only those associated with that concept.","In some situations, a set of expanded terms related to a term in a query may be modified (e.g., updated to add new terms based on new relational information, such as the co-occurrence of terms) after the query is built, but before the query is executed. For example, as previously described, queries (or query portions) may be saved for later reuse (e.g., to be executed or modified to form a new query). The concepts of saving and reuse of query portions are described in co-pending U.S. patent application Ser. No. 10\/264,188, entitled \u201cSQL Query Construction Using Durable Query Components,\u201d filed Oct. 3, 2002, herein incorporated by reference in its entirety. Depending on the situation, it may be desirable for the query, when executed, to be expanded based on the modified set of expanded terms (e.g., to include the most recent relational information). On the other hand, at times the user may be only interested in searching for the exact terms that were present when the query was built (e.g., the user would like to be able to retrieve the same results set).","In an effort to accommodate both situations, embodiments of the present invention may allow a user to specify whether the term expansion should be static (e.g., using the set of expanded terms existing at the time the query was built) or dynamic (using the set of expanded terms existing at the time the query is executed). For example, if static expansion is chosen, the exact set of expansion terms may be saved with the query (or the query may be modified to include conditions base on the exact set of expansion terms prior to saving). On the other hand, if dynamic expansion is chosen, a pointer (or \u201clink\u201d) to the set of expansion terms may be generated. The pointer may comprise any suitable type data object, such as a URL, directory path, address, or any other type object, that points to or otherwise identifies the set of expansion terms. In any case, sufficient information to recreate the pointer may be saved with the query such that, when the query is later retrieved, the current set of expansion terms may be retrieved using the pointer. Thus, the current set of expansion terms may reflect any changes made since the query was saved.","The effect of dynamic and static linking may be described with reference to , which illustrates a saved query  including conditions with both dynamic links (double lines) and a static link (single line) to different sets of expanded search terms (-). As illustrated, the saved query  may be used to generate a regional sales report (e.g., for a business enterprise) for a specific product line sold in Midwestern states during the past year. The expanded search terms  and  may include terms related to states in the Midwest (e.g., a list of states, zip codes, and\/or cities) and to different products in a common product line (e.g., different model numbers), respectively, while the expanded search terms  may include expanded terms for the last year (e.g., months in the year by name or number).","Because the list of states defined to be in the Midwest may occasionally change (e.g., to include or remove Ohio) and the product line may be updated periodically (e.g., to include or remove different model numbers), the saved query  may be dynamically linked to expanded terms  and .  illustrate how the expanded terms set associated with Midwest might periodically be updated to add or delete OHIO from the set. For example, when the query is first built (at a time T), the set of expanded terms for Midwest may include OHIO (shown as ), while after the query is built (at a time T), Ohio may be removed from the set of expanded terms for the Midwest (shown as ), for example, due to a reorganization of Sales Regions. Providing a dynamic link to the set of expanded terms for Midwest ensures that each time the query is executed only the latest expanded term sets would be used. On the other hand, the different months of a year are not likely to change, so the set of extended search terms  may be statically linked to the saved query .","While the foregoing is directed to embodiments of the present invention, other and further embodiments of the invention may be devised without departing from the basic scope thereof, and the scope thereof is determined by the claims that follow."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["So that the manner in which the above recited features, advantages and objects of the present invention are attained and can be understood in detail, a more particular description of the invention, briefly summarized above, may be had by reference to the embodiments thereof which are illustrated in the appended drawings.","It is to be noted, however, that the appended drawings illustrate only typical embodiments of this invention and are therefore not to be considered limiting of its scope, for the invention may admit to other equally effective embodiments.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIGS. 2B and 2C"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIGS. 5A-5C"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIGS. 6B and 6C"}]},"DETDESC":[{},{}]}
