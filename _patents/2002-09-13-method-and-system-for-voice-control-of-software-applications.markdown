---
title: Method and system for voice control of software applications
abstract: In one embodiment of the present invention, a voice control application transmits data to a voice server about a first execution state of an application program resident in the memory of an electronic device having a first graphical display. The voice control application also transmits an audio waveform encoding of a voice command defining a second execution state of the application program. The voice server performs a speech recognition process upon the audio waveform encoding and transmits a reply to the electronic device for causing the second execution state of the application program. The voice control program, in response to the response, automatically causes the second execution state of the application program having a second graphical display.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07421390&OS=07421390&RS=07421390
owner: Sun Microsystems, Inc.
number: 07421390
owner_city: Santa Clara
owner_country: US
publication_date: 20020913
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["The present invention relates to the field of electronic devices. More specifically, embodiments of the present invention are directed to controlling software applications using voice commands.","Speech recognition has become an important growth sector in the computer industry. The goal of speech recognition is to allow users to interact with computers using natural speech. A variety of disciplines are involved in designing a speech recognition application including: acoustics, signal processing, pattern recognition, phonetics, linguistics, and computer science. Therefore, in order to provide an acceptable level of performance, speech recognition applications are complex programs that typically are computationally intensive. Due to the complexity of speech recognition applications, early implementations of speech recognition software were usually implemented on dedicated speech recognition servers. A typical speech recognition server is a high-performance rack mounted computer system that shares the processing load among multiple processors. Thus, initial speech recognition applications were limited to expensive, high performance computer systems.","More recently, advances in desktop computer performance have facilitated more widespread use of speech recognition technology. Specifically, advances in desktop CPU performance, memory size, and storage capacity enable real-time speech recognition capabilities on desktop scale devices. Thus, users can dictate documents and navigate the computer desktop using their voice. However, handheld devices, such as cellular telephones and personal digital assistants, do not yet provide the comparable levels of performance required by these types of applications.","Additionally, many users find the process of installing and adjusting speech recognition software burdensome. For example, in order to provide optimal performance, the speech recognition application typically needs to be \u201ctrained\u201d to recognize the unique nuances of a particular user's voice. This can involve hours of training and correcting the system in order to attain acceptable speech recognition quality. Thus, many computer users regard speech recognition applications as being impractical either due to their hardware requirements or due to the effort associated with installing and training the software. Typically, a special software interface is required in order to control existing software applications using speech recognition. Therefore, until a software interface is created, users cannot use spoken commands to control their software.","Waveform analysis is a simplified implementation of speech recognition technology. Waveform analysis software is typically used on devices having limited hardware capabilities such as cellular phones and Personal Digital Assistants (PDAs) and is programmed by the user to recognize commands spoken by the user. Waveform analysis software attempts to match a user's spoken command with a previously recorded waveform of the command. If the waveform of the spoken command matches the recorded waveform, the software recognizes the waveform and may perform an action associated with the spoken command. Thus, waveform analysis compares waveforms as a whole rather than analyzing the sound components, known as phonemes, of the spoken command. Furthermore, waveform analysis is typically applied to a set of narrowly focused, simple actions such as voice dialing rather than the more general purpose speech recognition software described above.","Another application of speech recognition technology involves voice portal services. Voice portals provide users with automated services and information using a voice interface. Typically, a user calls a voice portal and hears a list of options that they can choose from using voice commands. Users calling a voice portal can choose from a variety of information options including stock quotes, weather and traffic reports, horoscopes, movie and television schedules, and airline arrival and departure information. Services provided by voice portals include restaurant reservations, airline ticket purchases, and Internet navigation.","A typical voice portal system utilizes vast arrays of hardware for receiving telephone calls and processing the voice stream in order to perform some action based upon the user's commands.  shows a typical prior art voice portal system. In , a user  calls a voice portal server  using phone system . Phone system  can be either a wireless cellular phone system or a Public Switched Telephone Network (PSTN). Upon calling voice portal server , a user  typically hears a menu of options. User  chooses one of the menu options by speaking a command. Voice portal server  interprets the spoken command and performs an action in response. This is similar to a previous technology in which a user hears a menu of options and indicates a preference by pressing the touch tone keys on their telephone.","In one embodiment, voice portal server  utilizes a Voice Extensible Markup Language (VoiceXML) interpreter comprising an Automated Speech Recognition (ASR) component , a Text to Speech (TTS) component , an audio play component , a Dual-Tone Multi-Frequency (DTMF) component , and a telephone network interface . ASR component  can be speech recognition software as described above, TTS component  is used to convert text into audio to be output to user . Audio play component  controls the playback of pre-recorded audio outputs from server  such as audio menus of options available to user . DTMF component  allows a user to input commands using the touch tone buttons on a telephone to choose from a menu of options. Telephone component  is for controlling telephone connections between voice portal server  and both phone system . A Voice Over Internet Protocol (VoIP)  interface provides an interface to voice applications connecting to the voice portal  over an Internet Protocol network connection.","In an exemplary communications session, user  utilizes voice portal server  as an intermediary to access content or services provided by an Application Web server . For example, user  initiates communications with voice server  using phone system  and sends a vocal command to server  which is interpreted by ASR component . A textual version of the vocal command is created by ASR component  and a request is sent to Application Web server  via Internet . Application server  then sends a reply to voice portal server . An audio equivalent of the reply from application server  can then be generated by TTS component  and audio component  and sent to user . Usually, the reply to user  is a menu of options from which user  indicates a preference in order to continue the session with application server .","While voice portal systems provide speech recognition functionality to users, they are limited in the variety of services they can provide. Most voice portal services provide a fixed set of capabilities to their users that are defined by the available menu options. Thus, user options are defined by the service provider and are usually limited to general services and information, such as weather reports, stock quotes, etc. More importantly, the user cannot control or access application programs resident upon their own computers using voice portal services. Another limitation of system  is that the output data is only in the form of speech making it hard to present certain types of data, such as large lists, to the user.","Another emerging speech recognition technology utilizes special purpose speech recognition hardware processors that are typically installed within cellular phones and PDAs. These embedded chips allow a user to initiate actions upon their devices using voice commands. However, this necessitates installing the hardware chip in the user's device, which may not be an option for a device the user is already using due to, for example, a limitation of the device's hardware architecture. Additionally, the hardware chips typically provide a limited range of speech recognition capability and are thus limited to simple applications such as voice dialing.","In order for a user to control the visual interface of application running on small form factor handheld electronic devices (e.g., cellular telephones and PDAs), a user typically navigates the application using a keypad and\/or special soft function keys. This can be tedious and time consuming for users due to the limited nature of the display and software control capabilities built into such devices. For example, a user may have to enter long sequences of key-presses to navigate from the main menu of a cellular telephone to the particular display desired by the user. Alternatively, or in conjunction with a keypad, PDAs can provide handwriting recognition pads to facilitate user input, however, with small form factor devices such as cellular telephones, there is not always enough space to include handwriting recognition pads.","Accordingly, a need exists for a method and system that facilitates voice control of software applications but does not require modifying or re-writing the software applications. An additional need exists for a system that meets the above need and facilitates voice control of software applications upon handheld wireless devices without necessitating the installation of speech recognition hardware upon the wireless devices. A need further exists for a system which meets the above stated needs and facilitates voice control of software applications without necessitating the installation of complex speech recognition and\/or voice synthesis software upon the handheld wireless devices.","In one embodiment of the present invention, a voice control application transmits data to a voice server about a first execution state of an application program resident in the memory of an electronic device displaying a first graphical user interface. The voice control application also transmits an audio waveform encoding of a voice command requesting a second execution state of the application program. The voice server performs a speech recognition process upon the audio waveform encoding and the voice server transmits a reply to the electronic device containing information necessary for causing the second execution state of the application program. The voice control program interprets the response and causes the application program to enter the second execution state and display a second graphical user interface. It is appreciated that the second graphical user interface may contain one or more data items obtained and transferred from the voice server.","The following example shows how voice commands are used to control a visual calendar application running on an electronic device in accordance with one embodiment of the present invention. A user speaks a command \u201cWhat's happening on July first\u201d. A voice control application on the electronic device records the speech and creates a waveform encoding of the voice command. The voice control application opens a data connection to a voice server and transmits information about the current execution state of the active application (e.g., the visual calendar application) and the encoded waveform data of the voice command.","The voice server receives the data and passes the encoded waveform through a voice recognition process that converts the waveform into the textual equivalent, \u201cWhat's happening on July first\u201d. The voice server compares the textual equivalent of the spoken command with a list of keywords that can be used in the context of the calendar application (e.g., \u201cwhat's happening,\u201d \u201cJuly,\u201d and \u201cfirst\u201d). A set of keywords is associated with a particular execution state of the application with which the user is interacting. The voice server determines a second execution state of the calendar application that is associated with the command \u201cWhat's happening on July first\u201d. The voice server then creates a list of operations to be performed upon the electronic device to cause the calendar application to transition from the current execution state to the second execution state and transmits the list of operations to the electronic device.","The voice control application receives the operation list and executes each operation in sequence. For example, if the calendar application does not provide an Application Programming Interface (API), the voice server sends a sequence of commands (e.g., key press commands) which the voice control application uses to cause the calendar application to transition from the current execution state to the second execution state (e.g., the list of appointments for July first). The voice control application interfaces with the keypad controller to simulate the keypad commands the user would execute to control the calendar application manually. If the calendar application has a programming interface, then the voice control application can use this interface to cause the calendar application to go directly to the list of appointments display for July first.","Some operations sent by the voice server may not require action in the calendar application. For example, the operation list might include voice annotations to give the user audio feedback such as playing the following messages: \u201cGoing to July first,\u201d and \u201cHere are your appointments for July first\u201d when the appointment list is finally displayed. This, for example, can give the user audio feedback that the voice server correctly interpreted the command.","Reference will now be made in detail to embodiments of the present invention, examples of which are illustrated in the accompanying drawings. While the present invention will be described in conjunction with the following embodiments, it will be understood that they are not intended to limit the present invention to these embodiments alone. On the contrary, the present invention is intended to cover alternatives, modifications, and equivalents that may be included within the spirit and scope of the present invention as defined by the appended claims. Furthermore, in the following detailed description of the present invention, numerous specific details are set forth in order to provide a thorough understanding of the present invention. However, embodiments of the present invention may be practiced without these specific details. In other instances, well-known methods, procedures, components, and circuits have not been described in detail so as not to unnecessarily obscure aspects of the present invention.","The present invention is a method and system for voice control of software applications. Using embodiments of the present invention, a user can control software on electronic devices with voice commands without installing special speech recognition software or speech recognition hardware upon the electronic device. This is advantageous because many electronic devices, especially handheld electronic devices such as cellular telephones and PDAs, lack the memory, processing power, or storage capacity to utilize speech recognition software, or the physical capacity to install a speech recognition hardware device. Embodiments of the present invention utilize a voice server to receive the user's voice command and send commands back to the electronic device for controlling software applications stored upon the user's electronic device.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 2","FIG. 2"],"b":["200","210","215","220","210","212","210","210","215","210","215","220"]},"In one embodiment of the present invention, message  comprises execution state data  that describes a first execution state of an application program (e.g., application program ) resident upon electronic device . For example, if a calendar application is operating on a handheld device (e.g., a cellular telephone) and is displaying the main menu of the application, voice control application  sends execution state data telling voice server  that the main menu of the calendar application is being displayed. Furthermore, message  comprises an audio waveform encoding  of a voice command describing a second execution state of application program . For example, a user inquiry of \u201cWhat are my appointments for July first?\u201d is a request for a second execution state of the calendar application in which the July first appointments are displayed. There are a variety of implementations for creating and recording audio waveform data that can be used with embodiments of the present invention. Sending a waveform facilitates sending the user's voice commands without the necessity of installing speech recognition software upon electronic device . Speech recognition software can require significant resources that may not be available on electronic device  such as storage, memory, and processing power.","Upon receiving message , voice server  determines the first execution state of application program  (e.g., the main menu of the calendar application) from execution state data . Voice server  also performs a speech recognition process upon waveform encoding  using speech recognition component . In one embodiment, speech recognition component  receives waveform encoding  and, using speech recognition software, performs an analysis of the user's voice command. Furthermore, in one embodiment, speech recognition component  creates a textual equivalent  of waveform encoding . For example, if a user gives a voice command, \u201cWhat are my appointments for July first\u201d, voice server  converts the waveform encoding of the voice command into a textual equivalent  of the spoken command using speech recognition component .","In one embodiment, voice server  compares textual equivalent  to a command list . In one embodiment, command list  comprises lists of command keywords that are specifically associated with particular states of the application (e.g., application ) with which the user is interacting. In other words, command list  is a list of commands that are unique to the possible execution states of application program . In one embodiment, each command or keyword on command list  is associated with a particular execution state of the current application program.  shows an exemplary textual equivalent of a spoken command (e.g., textual equivalent ) and an exemplary command list (e.g., command list ). In , command list  further comprises a list of command keywords (e.g., command keywords of ), a list of associated execution states (e.g., execution state list of ), and a list of commands (e.g., controller commands of ).","Voice server  compares the textual equivalent of the user's spoken command to the keywords in command keyword list to identify the second execution state of application program  that is described in the user's spoken command. In one embodiment, voice server  attempts to match textual equivalent  to keywords in command list . Referring to , voice server  compares the spoken command of textual equivalent  (e.g., \u201cWhat are my appointments for July first?\u201d) with the list and matches the words \u201cWhat are my appointments for,\u201d \u201cJuly,\u201d and \u201cfirst\u201d from textual equivalent . Then, voice server  determines the second execution state of application program  by referencing execution state list and finding the current execution state (e.g., \u201cmain menu\u201d) and the destination execution state corresponding to the command \u201cwhat are my appointments for\u201d and command parameters \u201cJuly\u201d and \u201cfirst\u201d from list (e.g., execution state=calendar\/appointments\/appointment month view\/July\/1st\/day view).","In one embodiment, voice server  then determines a list of operations to cause application program  to transition from the first execution state (e.g., the main menu), as described in execution state data , to the second application state (e.g., execution state=calendar\/appointments\/appointment month view\/July\/1st\/day view), which is identified in command list . The list of operations may comprise a single operation or a series of operations. In the embodiment of , the list of operations is determined by associating an execution state from list with a series of control commands from list . In the embodiment of , list comprises a list of keypad operations a user might enter manually in order to navigate from the main menu display to the appointment display for July first. However, in other embodiments of the present invention, the controller commands of list may comprise controller commands for other interfaces such as a touch screen, API interface commands, etc., depending on the type of interface used on electronic device .","Referring again to , a user manually navigating to the appointments display from the main menu might press the down arrow key once to select the phone book option. Pressing the down arrow key again results in the messages option being selected. Pressing the down arrow key again results in the calendar option being selected. The user then presses the * key to open the calendar interface. Pressing the * key again opens the appointments interface, and the appointment month view interface is then displayed. The user presses the * key again to open the appointment month view interface and then presses the down arrow key six times until the interface for the month of July is displayed. The user presses the * key to select the July interface, and presses the * key again to select the interface for the first day of July. Finally, the user presses the * to open the July first interface. At this time, the user can view the appointments for July first on electronic device .","However, many users find the plurality of key presses necessary to manually navigate the interface bothersome and inconvenient. The present invention uses list to determine a list of operations for causing the second execution state of application program  to be entered. Thus, in the example of , this list of operations comprises the plurality of <down arrow>and <*>commands the user would manually enter on electronic device  in order to navigate to the July first appointments display.","In accordance with embodiments of the present invention, voice server  then sends reply  to electronic device. In embodiments of the present invention, reply  comprises an application command list  and audio message . In accordance with embodiments of the present invention, reply  may be a single message, or a series of discreet messages to electronic device . Application command list  is a list of operations for causing application program  to transition from its first execution state (e.g., main menu of the calendar application) to a second execution state (e.g., calendar\/appointments\/appointment month view\/July\/1st\/day view).","In one embodiment, application command list  comprises a list of controller commands (e.g., keypad controller commands or touch screen controller commands) which are used by voice control application  for causing application program  to transition from its first execution state to the second execution state. For example, the keypad controller commands from controller command list are transmitted in application command list  and are executed by voice control application  to simulate the keypad commands the user would manually enter on electronic device  in order to control application program  (e.g., to navigate from the first execution state of application program  to the second execution state). Voice control application  then implements the keypad controller commands from application command list  to cause application program to transition from the first execution state to the second execution state. For example, for a user to manually navigate from the main menu of the calendar application to the July first display, the user might have to manually enter a lengthy series of keypad entries. This can be time consuming and bothersome to some users. The present invention allows the user to navigate to the July first display directly using voice commands that replicate the keypad entries for the user.","In one embodiment, the display screen of electronic device  sequences through the displays a user would see if manually navigating from the first execution state of application program  to the second execution state. In another embodiment, voice control application  implements the sequence of keypad commands and causes application program  to navigate to the second execution state in a manner that is transparent to the user. Referring to the previous example, upon receiving reply  from voice server , voice control application  causes application program  (e.g., the calendar application) to transition from the first execution state (e.g., the main menu display) to the second execution state (e.g., the appointment list view for July first) using the keypad commands from application command list  without flashing through the sequence of displays.","In another embodiment of the present invention, application command list  comprises an application programming interface (API) command. Voice control application  uses the API command to cause application program  to transition to the second execution state. For example, the API command of application command list  may enable voice control application  to cause application program  to transition directly from the first execution state to the second execution state. Referring to the previous example, upon receiving reply  from voice server , voice control application  causes application program  (e.g., the calendar application) to transition directly from the first execution state (e.g., the main menu display) to the second execution state (e.g., the appointment list view for July first).","In accordance with embodiments of the present invention, reply  may further comprise audio message . Audio message  is an annotated message for giving the user audio feedback of what is happening. For example, if voice server  is performing a lengthy process, audio message  can let the user know that the desired process is being performed.","Additionally, audio message  can provide confirmation to the user that their voice command was properly understood by voice server  and is being executed. For example, if the user asks \u201cWhat are my appointments for July first?\u201d audio message  may be, \u201cRetrieving appointments for July first.\u201d In one embodiment, audio message  may actually read the users appointments to the user. For example, audio message  may play the following audio prompts: \u201cGoing to July first\u201d, \u201cYou have two appointments for July first\u201d, \u201cYou have a 10:00 AM weekly staff meeting\u201d, and \u201cYou have a 2:00 PM conference call with Steve.\u201d","In one embodiment, audio message  is an audio waveform encoding. This allows electronic device  to play back audio message  without the necessity of installing text-to-speech software upon electronic device . Text-to-speech software can require significant resources that may not be available on electronic device  such as storage, memory, and processing power.","In so doing, embodiments of the present invention provide a system which facilitates voice control of software applications and which does not require modifying the software application being controlled. In particular, the present invention facilitates voice control of software application visual interfaces. Furthermore, embodiments of the present invention facilitate voice control of software applications on handheld wireless devices and do not require installation of speech recognition and\/or speech synthesis software upon those devices. This is advantageous because many handheld wireless devices lack the storage, memory, and processing power to run speech recognition or speech synthesis software with an acceptable level of performance. Additionally, the present invention allows a user to control software applications on handheld devices using both speech and visual interfaces.","In one embodiment of the present invention, such as when a user has not initiated an application program upon electronic device , the present invention can be used to select and initiate a software application using voice commands. Thus, in one embodiment of the present invention, message  comprises waveform encoding  and application list . Waveform encoding  comprises an audio waveform encoding  of a voice command describing an execution state of application program .","Application list  is a list of software applications stored upon electronic device . A user speaks a command into electronic device  for initiating one of the application programs stored upon electronic device . For example, a user is at the main menu of the operating system of electronic device  and speaks a voice command (e.g., \u201ccalendar,\u201d or \u201cWhat are my appointment for July first?\u201d). Voice control application  sends a waveform encoding of the user's voice command (e.g., waveform encoding ) and a list of software applications stored upon electronic device  (e.g., application list ).","Voice server  performs a speech recognition process upon waveform encoding  using speech recognition component . In one embodiment, speech recognition component  receives waveform encoding  and, using speech recognition software, performs an analysis of the user's voice command. In one embodiment, speech recognition component  creates a textual equivalent  of waveform encoding .","In embodiments of the present invention, voice server  then compares textual equivalent  with a plurality of command lists (e.g., command lists ). For example, textual equivalent  is compared with each command list that corresponds to a software application listed in application list  to determine which software application the user wants to initiate. In one embodiment, voice server  attempts to match textual equivalent  to keywords in command list ","In one embodiment, upon matching textual equivalent with a keyword from command list , voice server  then determines a sequence of steps to initiate application program  upon electronic device . In one embodiment, voice server  sends an audio message to electronic device allowing the user to determine whether the voice server  has identified the correct application program. This allows the user to terminate the current operation if, for example, voice server  attempts to initiate a calendar application when the user actually wants to initiate an address book application.","In one embodiment of the present invention, voice server  then sends reply  to electronic device . Reply  comprises application command list , and audio message . Application command list  is a series of commands that allow voice control application  to initiate application program  upon electronic device .","Thus, embodiments of the present invention facilitate controlling software applications using voice commands. More specifically, the present invention allows a user to initiate software applications using voice commands. Embodiments of the present invention allow controlling software using voice commands without the necessity of installing special speech recognition hardware or software on the user's electronic device. This is advantageous for users of small form factor electronic devices such as cellular telephones and Personal Digital Assistants that may lack the memory, storage capacity, or processing power to obtain a suitable level of performance from locally installed speech recognition software.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIGS. 4A","FIG. 4A","FIG. 2"],"b":["4","4","400","405","210","210"]},"In step  of , the voice command is encoded as audio waveform data (e.g., waveform encoding  of ). There are a variety of formats for capturing waveform data that can be utilized with embodiments of the present invention.","In step  of , the audio waveform data and application state information are combined in a data message. In one embodiment, a data file of the waveform encoding of the user's voice command is combined with application state data in a data message (e.g., message  of ). While the present embodiment recites encoding the voice command as audio waveform data, the present invention is well suited for utilizing other methods for sending the voice command. In one embodiment, application state data comprises execution state data (e.g., execution state data  of ) about an application running on the electronic device. In another embodiment, application state data comprises execution state data about a software operating system operating on electronic device  as well as a list of applications (e.g., application list  of ) stored upon electronic device .","In step  of , a data connection is opened with a voice server. In one embodiment, the electronic device opens a wireless data connection with a voice server. In one embodiment, a user calls a voice server (e.g., voice server  of ) and provides a username and password. However, embodiments of the present invention are well suited for other methods for opening a data connection with the voice server.","In step  of , the data message is transmitted to the voice server. The electronic device transmits the data message containing the waveform encoding of the user's voice command as well as application state data. Again, in one embodiment, the data message is transmitted wirelessly by electronic device .","In step  of , the voice server receives the data message.","In step  of , the waveform data is converted into text form. Embodiments of the present invention utilize speech recognition software (e.g., speech recognition component  of ) to convert the waveform data into a text form (e.g., textual equivalent  of ).","In step  of , the text form is compared with a command list. In one embodiment of the present invention, the text form of the user's voice command is compared to a list of command keywords (e.g., command list  of ). In one embodiment, a unique list of command keywords exists for each application stored upon electronic device . Voice server attempts to match words in textual equivalent  with command keywords in command list  to determine the meaning of the user's voice command. In one embodiment, each command keyword in command list  is associated with a particular execution state of the application program associated with command list . When voice server  matches a word from textual equivalent  with a command keyword from command list , the execution state associated with the command keyword is interpreted to be the intended meaning of the user's voice command.","In step  of , an operations list (e.g., application command list  of ) is built. In embodiments of the present invention, upon determining the execution state of the application programs in step , voice server  creates a list of operations which will cause application program  to transition from its current execution state (as defined by the application state data it received from electronic device ) to a second execution state (as defined by command list ). In one embodiment, electronic device  is not currently running an application program and may be displaying the main menu of its operating system. Application command list  then comprises a list of operations for initiating application program  from the current application state of the software operating system of electronic device . This list of operations causes application program  to enter a first execution state. In another embodiment, application command list  comprises a list of operations for causing a currently running application program to transition from its current execution state to a second execution state In step  of , a reply message is transmitted to the electronic device. In embodiments of the present invention, voice server  transmits data (e.g., reply  of ) to electronic device . In one embodiment, reply  comprises application command list  and an appended audio message . In another embodiment, reply  comprises a sequence of commands and audio messages (e.g., command 1, audio message 1, command 2, audio message 2). Audio message  is for providing audio feedback to the user. For example, audio message  can repeat textual equivalent  of the user's spoken command in order to ensure that voice recognition component  correctly converted the spoken command into text. In another embodiment, audio message can be an audio reply to the user's voice command. For example, if the user's command is \u201cWhat are my appointments for July first\u201d, audio message  may comprise a reply of \u201cYou have no appointments for July first\u201d. In one embodiment, reply  is a single data message from voice server  to electronic device  that has multiple parts. However, in other embodiments of the present invention, reply  can comprise a plurality of discreet communications from voice server  to electronic device .","In step  of , the electronic device receives the reply message.","In step  of , an operation is retrieved from the reply message. In embodiments of the present invention, voice control application  utilizes the commands from reply  to control application program . In one embodiment, voice control application  causes application program  to transition from a first execution state to a second execution state. In another embodiment, voice control application  causes a software operating system on electronic device  to initiate a first execution state of application program . Voice control application program  retrieves the first operation from reply  and executes it.","In step  of , a logic operation is performed to determine which type of operation is to be performed. The first operation from reply message may be to play a first audio message to the user. Alternatively, the first operation may be to execute an operation from application command list . If the operation is an audio operation type, method  proceeds to step . If the operation is an application command, method  proceeds to step .","In step  of , a voice prompt is played. If the operation being performed is to play an audio voice message, voice control application  causes electronic device  to play the voice prompt. Upon playing the audio voice message, method  proceeds to step  to determine whether another operation is to be performed.","In step  of , an application command is executed. If the operation being performed is an application command, voice control application  executes the application command. In one embodiment, the application command can be a keypad controller command. Voice control application  executes the keypad controller command to simulate a keypad entry the user would perform in order to, for example, cause application program  to transition from a first execution state to a second execution state. Thus, in embodiments of the present invention, application command list  can comprise a sequence of keypad controller commands which simulate a series of keypad entries a user would perform in order to control application program . However, while the present embodiment recites keypad controller commands, embodiments of the present invention are well suited for sending other types of commands (e.g., touch screen controller commands) in application command list . In another embodiment, the application command may be an Application Programming Interface command for causing application program  to transition to a second execution state.","In step  of , a logic operation is performed to determine whether another operation is to be performed from the operations list. If there are no other operations to be performed from application command list , method  ends. If there is another operation to be performed on application command list , method  returns to step  to get the next operation from application command list .","Thus, embodiments of the present invention provide a method for voice control of software applications resident on a portable device wherein the voice recognition is performed remotely. The method of the present invention allows a user to control software application using their voice without the necessity of installing speech recognition software upon their electronic devices. Furthermore, the user does not have to install dedicated speech recognition hardware upon their electronic devices. Because of the above reasons, the present invention is well suited for providing voice control of software applications upon small form factor handheld electronic devices such as cellular telephones and PDAs. Additionally, the present invention does not require altering or re-writing existing software applications in order to control them using spoken commands.","The preferred embodiment of the present invention, a method and system for voice control of software applications, is thus described. While the present invention has been described in particular embodiments, it should be appreciated that the present invention should not be construed as limited by such embodiments, but rather construed according to the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated in and form a part of this specification, illustrate embodiments of the present invention and, together with the description, serve to explain the principles of the invention. Unless specifically noted, the drawings referred to in this description should be understood as not being drawn to scale.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIGS. 4A","b":["4","4"]}]},"DETDESC":[{},{}]}
