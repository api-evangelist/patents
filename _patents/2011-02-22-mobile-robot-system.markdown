---
title: Mobile robot system
abstract: A robot system includes a mobile robot having a controller executing a control system for controlling operation of the robot, a cloud computing service in communication with the controller of the robot, and a remote computing device in communication with the cloud computing service. The remote computing device communicates with the robot through the cloud computing service.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09014848&OS=09014848&RS=09014848
owner: iRobot Corporation
number: 09014848
owner_city: Bedford
owner_country: US
publication_date: 20110222
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This U.S. patent application claims priority under 35 U.S.C. \u00a7119(e) to U.S. Provisional Application 61\/346,612, filed on May 20, 2010; U.S. Provisional Application 61\/356,910, filed on Jun. 21, 2010; U.S. Provisional Application 61\/428,717, filed on Dec. 30, 2010; U.S. Provisional Application 61\/428,734, filed on Dec. 30, 2010; U.S. Provisional Application 61\/428,759, filed on Dec. 30, 2010; and U.S. Provisional Application 61\/429,863, filed on Jan. 5, 2011. The disclosures of these prior applications are considered part of the disclosure of this application and are hereby incorporated by reference in their entireties.","This disclosure relates to mobile robot systems incorporating cloud computing.","A robot is generally an electro-mechanical machine guided by a computer or electronic programming. Mobile robots have the capability to move around in their environment and are not fixed to one physical location. An example of a mobile robot that is in common use today is an automated guided vehicle or automatic guided vehicle (AGV). An AGV is generally a mobile robot that follows markers or wires in the floor, or uses a vision system or lasers for navigation. Mobile robots can be found in industry, military and security environments. They also appear as consumer products, for entertainment or to perform certain tasks like vacuum cleaning and home assistance.","One aspect of the disclosure provides a robot system that includes a mobile robot having a controller executing a control system for controlling operation of the robot, a cloud computing service in communication with the controller of the robot, and a remote computing device in communication with the cloud computing service. The remote computing device communicates with the robot through the cloud computing service.","Implementations of the disclosure may include one or more of the following features. In some implementations, the remote computing device executes an application for producing a layout map of a robot operating environment. The remote computing device may store the layout map in external cloud storage using the cloud computing service. In some examples, the controller of the robot accesses the layout map through the cloud computing service for issuing drive commands to a drive system of the robot.","The remote computing device may execute an application (e.g., a software program or routine) providing remote teleoperation of the robot. For example, the application may provide controls for at least one of driving the robot, altering a pose of the robot, viewing video from a camera of the robot, and operating a camera of the robot (e.g., moving the camera and\/or taking snapshots or pictures using the camera).","In some implementations, the remote computing device executes an application that provides video conferencing between a user of the computing device and a third party within view of a camera of the robot. The remote computing device may execute an application for scheduling usage of the robot. Moreover, the remote computing device may execute an application for monitoring usage and operation of the robot. The remote computing device may comprise a tablet computer optionally having a touch screen.","Another aspect of the disclosure provides a robot system that includes a mobile robot having a controller executing a control system for controlling operation of the robot, a computing device in communication with the controller, a cloud computing service in communication with the computing device, and a portal in communication with cloud computing service.","Implementations of the disclosure may include one or more of the following features. In some implementations, the portal comprises a web-based portal providing access to content. The portal may receive robot information from the robot through the cloud computing service. Moreover, the robot may receive user information from the portal through the cloud computing service.","In some examples, the computing device includes a touch screen (such as with a tablet computer). The computing device may execute an operating system different from an operating system of the controller. For example, the controller may execute an operating system for robot control while the computing device may execute a business enterprise operating system. In some examples, the computing device executes at least one application that collects robot information from the robot and sends the robot information to the cloud computing service.","The robot may include a base defining a vertical center axis and supporting the controller and a holonomic drive system supported by the base. The drive system has first, second, and third drive wheels, each trilaterally spaced about the vertical center axis and each having a drive direction perpendicular to a radial axis with respect to the vertical center axis. The may also include an extendable leg extending upward from the base and a torso supported by the leg. Actuation of the leg causes a change in elevation of the torso. The computing device can be detachably supported above the torso. In some examples, the robot includes a neck supported by the torso and a head supported by the neck. The neck may be capable of panning and tilting the head with respect to the torso. The head may detachably support the computing device.","Another aspect of the disclosure provides a robot system that includes a mobile robot having a controller executing a control system for controlling operation of the robot, a computing device in communication with the controller, a mediating security device controlling communications between the controller and the computing device, a cloud computing service in communication with the computing device, and a portal in communication with cloud computing service.","In some examples, the mediating security device converts communications between a computing device communication protocol of the computing device and a robot communication protocol of the robot. Moreover, the mediating security device may include an authorization chip for authorizing communication traffic between the computing device in the robot.","The computing device may communicate wirelessly with the robot controller. In some examples, the computing device is releasably attachable to the robot. An exemplary computing device includes a tablet computer.","The portal may be a web-based portal that provides access to content (e.g., news, weather, robot information, user information, etc.). In some examples, the portal receives robot information from the robot through the cloud computing service. In additional examples, the robot receives user information from the portal through the cloud computing service. The computing device may access cloud storage using the cloud computing service. The computing device may execute at least one application that collects robot information from the robot and sends the robot information to the cloud computing service.","One aspect of the disclosure provides a method of operating a mobile robot that includes receiving a layout map corresponding to an environment of the robot, moving the robot in the environment to a layout map location on the layout map, recording a robot map location on a robot map corresponding to the environment and produced by the robot, determining a distortion between the robot map and the layout map using the recorded robot map locations and the corresponding layout map locations, and applying the determined distortion to a target layout map location to determine a corresponding target robot map location.","Implementations of the disclosure may include one or more of the following features. In some implementations, the method includes receiving the layout map from a cloud computing service. The method may include producing the layout map on an application executing on a remote computing device and storing the layout map on a remote cloud storage device using the cloud computing service.","In some examples, the method includes determining a scaling size, origin mapping, and rotation between the layout map and the robot map using existing layout map locations and recorded robot map locations, and resolving a robot map location corresponding to the target layout map location. The method may further include applying an affine transformation to the determined scaling size, origin mapping, and rotation to resolve the target robot map location.","In some implementations, the method includes determining a triangulation between layout map locations that bound the target layout map location. The method may further include determining a scale, rotation, translation, and skew between a triangle mapped in the layout map and a corresponding triangle mapped in the robot map and applying the determined scale, rotation, translation, and skew to the target layout map location to determine the corresponding robot map point.","The method, in some examples, includes determining distances between all layout map locations and the target layout map location, determining a centroid of the layout map locations, determining a centroid of all recorded robot map locations, and for each layout map location, determining a rotation and a length scaling to transform a vector running from the layout map centroid to the target layout location into a vector running from the robot map centroid to the target robot map location.","The method may include producing the robot map using a sensor system of the robot. In some implementations, the method includes emitting light onto a scene of the environment, receiving reflections of the emitted light off surfaces of the scene, determining a distance of each reflecting surface, and constructing a three-dimensional depth map of the scene. The method may include emitting a speckle pattern of light onto the scene and receiving reflections of the speckle pattern from the scene. In some examples, the method includes storing reference images of the speckle pattern as reflected off a reference object in the scene, the reference images captured at different distances from the reference object. The method may further include capturing at least one target image of the speckle pattern as reflected off a target object in the scene and comparing the at least one target image with the reference images for determining a distance of the reflecting surfaces of the target object. In some examples, method includes determining a primary speckle pattern on the target object and computing at least one of a respective cross-correlation and a decorrelation between the primary speckle pattern and the speckle patterns of the reference images. The method may include maneuvering the robot with respect to the target object based on the determined distances of the reflecting surfaces of the target object.","In some implementations, the method includes determining a time-of-flight between emitting the light and receiving the reflected light and determining a distance to the reflecting surfaces of the scene. The method may include emitting the light onto the scene in intermittent pulses. Moreover, the method may include altering a frequency of the emitted light pulses.","The details of one or more implementations of the disclosure are set forth in the accompanying drawings and the description below. Other aspects, features, and advantages will be apparent from the description and drawings, and from the claims.","Like reference symbols in the various drawings indicate like elements.","Mobile robots can interact or interface with humans to provide a number of services that range from home assistance to commercial assistance and more. In the example of home assistance, a mobile robot can assist elderly people with everyday tasks, including, but not limited to, maintaining a medication regime, mobility assistance, communication assistance (e.g., video conferencing, telecommunications, Internet access, etc.), home or site monitoring (inside and\/or outside), person monitoring, and\/or providing a personal emergency response system (PERS). For commercial assistance, the mobile robot can provide videoconferencing (e.g., in a hospital setting), a point of sale terminal, interactive information\/marketing terminal, etc.","Referring to , in some implementations, a mobile robot  includes a robot body  (or chassis) that defines a forward drive direction F. The robot  also includes a drive system , an interfacing module , and a sensor system , each supported by the robot body  and in communication with a controller  that coordinates operation and movement of the robot . A power source  (e.g., battery or batteries) can be carried by the robot body  and in electrical communication with, and deliver power to, each of these components, as necessary. For example, the controller  may include a computer capable of >1000 MIPS (million instructions per second) and the power source  provides a battery sufficient to power the computer for more than three hours.","The robot body , in the examples shown, includes a base , at least one leg  extending upwardly from the base , and a torso  supported by the at least one leg . The base  may support at least portions of the drive system . The robot body  also includes a neck  supported by the torso . The neck  supports a head , which supports at least a portion of the interfacing module . The base  includes enough weight (e.g., by supporting the power source  (batteries) to maintain a low center of gravity CGof the base  and a low overall center of gravity CGof the robot  for maintaining mechanical stability.","Referring to FIGS.  and A-C, in some implementations, the base  defines a trilaterally symmetric shape (e.g., a triangular shape from the top view). For example, the base  may include a base chassis  that supports a base body  having first, second, and third base body portions , , corresponding to each leg of the trilaterally shaped base  (see e.g., ). Each base body portion , , can be movably supported by the base chassis  so as to move independently with respect to the base chassis  in response to contact with an object.","The trilaterally symmetric shape of the base  allows bump detection 360\u00b0 around the robot . Each base body portion , , can have an associated contact sensor e.g., capacitive sensor, read switch, etc.) that detects movement of the corresponding base body portion , , with respect to the base chassis .","In some implementations, the drive system  provides omni-directional and\/or holonomic motion control of the robot . As used herein the term \u201comni-directional\u201d refers to the ability to move in substantially any planar direction, i.e., side-to-side (lateral), forward\/back, and rotational. These directions are generally referred to herein as x, y, and \u03b8z, respectively. Furthermore, the term \u201cholonomic\u201d is used in a manner substantially consistent with the literature use of the term and refers to the ability to move in a planar direction with three planar degrees of freedom, i.e., two translations and one rotation. Hence, a holonomic robot has the ability to move in a planar direction at a velocity made up of substantially any proportion of the three planar velocities (forward\/back, lateral, and rotational), as well as the ability to change these proportions in a substantially continuous manner.","The robot  can operate in human environments (e.g., environments typically designed for bipedal, walking occupants) using wheeled mobility. In some implementations, the drive system  includes first, second, and third drive wheels , , equally spaced (i.e., trilaterally symmetric) about the vertical axis Z (e.g., 120 degrees apart); however, other arrangements are possible as well. Referring to , the drive wheels , , may define a transverse arcuate rolling surface (i.e., a curved profile in a direction transverse or perpendicular to the rolling direction D), which may aid maneuverability of the holonomic drive system . Each drive wheel , , is coupled to a respective drive motor , , that can drive the drive wheel , , in forward and\/or reverse directions independently of the other drive motors , , . Each drive motor -can have a respective encoder  (), which provides wheel rotation feedback to the controller . In some examples, each drive wheels , , is mounted on or near one of the three points of an equilateral triangle and having a drive direction (forward and reverse directions) that is perpendicular to an angle bisector of the respective triangle end. Driving the trilaterally symmetric holonomic base  with a forward driving direction F, allows the robot  to transition into non forward drive directions for autonomous escape from confinement or clutter and then rotating and\/or translating to drive along the forward drive direction F after the escape has been resolved.","Referring to , in some implementations, each drive wheel  includes inboard and outboard rows ,  of rollers , each have a rolling direction Dperpendicular to the rolling direction Dof the drive wheel . The rows ,  of rollers  can be staggered (e.g., such that one roller  of the inboard row  is positioned equally between two adjacent rollers  of the outboard row . The rollers  provide infinite slip perpendicular to the drive direction the drive wheel . The rollers  define an arcuate (e.g., convex) outer surface  perpendicular to their rolling directions D, such that together the rollers  define the circular or substantially circular perimeter of the drive wheel . The profile of the rollers  affects the overall profile of the drive wheel . For example, the rollers  may define arcuate outer roller surfaces  that together define a scalloped rolling surface of the drive wheel  (e.g., as treads for traction). However, configuring the rollers  to have contours that define a circular overall rolling surface of the drive wheel  allows the robot  to travel smoothly on a flat surface instead of vibrating vertically with a wheel tread. When approaching an object at an angle, the staggered rows ,  of rollers  (with radius r) can be used as treads to climb objects as tall or almost as tall as a wheel radius R of the drive wheel .","In the examples shown in , the first drive wheel is arranged as a leading drive wheel along the forward drive direction F with the remaining two drive wheels , trailing behind. In this arrangement, to drive forward, the controller  may issue a drive command that causes the second and third drive wheels , to drive in a forward rolling direction at an equal rate while the first drive wheel slips along the forward drive direction F. Moreover, this drive wheel arrangement allows the robot  to stop short (e.g., incur a rapid negative acceleration against the forward drive direction F). This is due to the natural dynamic instability of the three wheeled design. If the forward drive direction F were along an angle bisector between two forward drive wheels, stopping short would create a torque that would force the robot  to fall, pivoting over its two \u201cfront\u201d wheels. Instead, travelling with one drive wheel forward naturally supports or prevents the robot  from toppling over forward, if there is need to come to a quick stop. When accelerating from a stop, however, the controller  may take into account a moment of inertia I of the robot  from its overall center of gravity CG.","In some implementations of the drive system , each drive wheel , ,  has a rolling direction Dradially aligned with a vertical axis Z, which is orthogonal to X and Y axes of the robot . The first drive wheel can be arranged as a leading drive wheel along the forward drive direction F with the remaining two drive wheels , trailing behind. In this arrangement, to drive forward, the controller  may issue a drive command that causes the first drive wheel to drive in a forward rolling direction and the second and third drive wheels , to drive at an equal rate as the first drive wheel , but in a reverse direction.","In other implementations, the drive system  can be arranged to have the first and second drive wheels , positioned such that an angle bisector of an angle between the two drive wheels , is aligned with the forward drive direction F of the robot . In this arrangement, to drive forward, the controller  may issue a drive command that causes the first and second drive wheels , to drive in a forward rolling direction and an equal rate, while the third drive wheel drives in a reverse direction or remains idle and is dragged behind the first and second drive wheels , . To turn left or right while driving forward, the controller  may issue a command that causes the corresponding first or second drive wheel , to drive at relatively quicker\/slower rate. Other drive system  arrangements can be used as well. The drive wheels , , may define a cylindrical, circular, elliptical, or polygonal profile.","Referring again to , the base  supports at least one leg  extending upward in the Z direction from the base . The leg(s)  may be configured to have a variable height for raising and lowering the torso  with respect to the base . In some implementations, each leg  includes first and second leg portions ,  that move with respect to each other (e.g., telescopic, linear, and\/or angular movement). Rather than having extrusions of successively smaller diameter telescopically moving in and out of each other and out of a relatively larger base extrusion, the second leg portion , in the examples shown, moves telescopically over the first leg portion , thus allowing other components to be placed along the second leg portion  and potentially move with the second leg portion  to a relatively close proximity of the base . The leg  may include an actuator assembly  () for moving the second leg portion  with respect to the first leg portion . The actuator assembly  may include a motor driver in communication with a lift motor and an encoder , which provides position feedback to the controller .","Generally, telescopic arrangements include successively smaller diameter extrusions telescopically moving up and out of relatively larger extrusions at the base  in order to keep a center of gravity CGof the entire leg  as low as possible. Moreover, stronger and\/or larger components can be placed at the bottom to deal with the greater torques that will be experienced at the base  when the leg  is fully extended. This approach, however, offers two problems. First, when the relatively smaller components are placed at the top of the leg , any rain, dust, or other particulate will tend to run or fall down the extrusions, infiltrating a space between the extrusions, thus obstructing nesting of the extrusions. This creates a very difficult sealing problem while still trying to maintain full mobility\/articulation of the leg . Second, it may be desirable to mount payloads or accessories on the robot . One common place to mount accessories is at the top of the torso . If the second leg portion  moves telescopically in and out of the first leg portion, accessories and components could only be mounted above the entire second leg portion , if they need to move with the torso . Otherwise, any components mounted on the second leg portion  would limit the telescopic movement of the leg .","By having the second leg portion  move telescopically over the first leg portion , the second leg portion  provides additional payload attachment points that can move vertically with respect to the base . This type of arrangement causes water or airborne particulate to run down the torso  on the outside of every leg portion ,  (e.g., extrusion) without entering a space between the leg portions , . This greatly simplifies sealing any joints of the leg . Moreover, payload\/accessory mounting features of the torso  and\/or second leg portion  are always exposed and available no matter how the leg  is extended.","Referring to , the leg(s)  support the torso , which may have a shoulder  extending over and above the base . In the example shown, the torso  has a downward facing or bottom surface  (e.g., toward the base) forming at least part of the shoulder  and an opposite upward facing or top surface , with a side surface  extending therebetween. The torso  may define various shapes or geometries, such as a circular or an elliptical shape having a central portion  supported by the leg(s)  and a peripheral free portion  that extends laterally beyond a lateral extent of the leg(s) , thus providing an overhanging portion that defines the downward facing surface . In some examples, the torso  defines a polygonal or other complex shape that defines a shoulder, which provides an overhanging portion that extends beyond the leg(s)  over the base .","The robot  may include one or more accessory ports  (e.g., mechanical and\/or electrical interconnect points) for receiving payloads. The accessory ports  can be located so that received payloads do not occlude or obstruct sensors of the sensor system  (e.g., on the bottom and\/or top surfaces ,  of the torso , etc.). In some implementations, as shown in , the torso  includes one or more accessory ports  on a rearward portion  of the torso  for receiving a payload in the basket , for example, and so as not to obstruct sensors on a forward portion  of the torso  or other portions of the robot body .","An external surface of the torso  may be sensitive to contact or touching by a user, so as to receive touch commands from the user. For example, when the user touches the top surface  of the torso , the robot  responds by lowering a height Hof the torso with respect to the floor (e.g., by decreasing the height Hof the leg(s)  supporting the torso ). Similarly, when the user touches the bottom surface  of the torso , the robot  responds by raising the torso  with respect to the floor (e.g., by increasing the height Hof the leg(s)  supporting the torso ). Moreover, upon receiving a user touch on forward, rearward, right or left portions of side surface  of the torso , the robot  responds by moving in a corresponding direction of the received touch command (e.g., rearward, forward, left, and right, respectively). The external surface(s) of the torso  may include a capacitive sensor in communication with the controller  that detects user contact.","Referring to , in some implementations, the torso  includes a torso body  having a top panel , a bottom panel , a front panel , a back panel , a right panel and a left panel . Each panel , , , , , may move independently with respect to the other panels. Moreover, each panel , , , , , may have an associated motion and\/or contact sensor , , , , , in communication with the controller  that detects motion and\/or contact with respective panel.","Referring again to  and , the torso  supports the neck , which provides panning and tilting of the head  with respect to the torso . In the examples shown, the neck  includes a rotator  and a tilter . The rotator  may provide a range of angular movement \u03b8(e.g., about the Z axis) of between about 90\u00b0 and about 360\u00b0. Other ranges are possible as well. Moreover, in some examples, the rotator  includes electrical connectors or contacts that allow continuous 360\u00b0 rotation of the head  with respect to the torso  in an unlimited number of rotations while maintaining electrical communication between the head  and the remainder of the robot . The tilter  may include the same or similar electrical connectors or contacts allow rotation of the head  with respect to the torso  while maintaining electrical communication between the head  and the remainder of the robot . The rotator  may include a rotator motor  coupled to or engaging a ring  (e.g., a toothed ring rack). The tilter  may move the head at an angle \u03b8(e.g., about the Y axis) with respect to the torso  independently of the rotator . In some examples that tilter  includes a tilter motor , which moves the head  between an angle \u03b8of \u00b190\u00b0 with respect to Z-axis. Other ranges are possible as well, such as \u00b145\u00b0, etc. The robot  may be configured so that the leg(s) , the torso , the neck , and the head  stay within a perimeter of the base  for maintaining stable mobility of the robot . In the exemplary circuit schematic shown in , the neck  includes a pan-tilt assembly  that includes the rotator  and a tilter  along with corresponding motor drivers , and encoders , ","The head  may be sensitive to contact or touching by a user, so as to receive touch commands from the user. For example, when the user pulls the head  forward, the head  tilts forward with passive resistance and then holds the position. More over, if the user pushes\/pulls the head  vertically downward, the torso  may lower (via a reduction in length of the leg ) to lower the head . The head  and\/or neck  may include strain gauges and\/or contact sensors  () that sense user contact or manipulation.",{"@attributes":{"id":"p-0086","num":"0085"},"figref":["FIGS. 8A-8G","FIGS. 8A-8C"],"b":["100","120","410","420","430","440","460","200","120","500","105","136","140","145","330","340","450","480","500","140","120","150","200","150","151","152","156","138","154","152","156","138","160","310","320"],"i":["a","a ","a","b ","b"]},"With reference to  and , in some implementations, the head  supports one or more portions of the interfacing module . The head  may include a dock  for releasably receiving one or more computing tablets , also referred to as a web pad or a tablet PC, each of which may have a touch screen . The web pad  may be oriented forward, rearward or upward. In some implementations, web pad  includes a touch screen, optional I\/O (e.g., buttons and\/or connectors, such as micro-USB, etc.) a processor, and memory in communication with the processor. An exemplary web pad  includes the IPAD\u00ae by Apple, Inc. In some examples, the web pad and  functions as the controller  or assist the controller  and controlling the robot . In some examples, the dock  includes a first computing tablet fixedly attached thereto (e.g., a wired interface for data transfer at a relatively higher bandwidth, such as a gigabit rate) and a second computing tablet removably connected thereto. The second web pad may be received over the first web pad as shown in , or the second web pad may be received on an opposite facing side or other side of the head  with respect to the first web pad . In additional examples, the head  supports a single web pad , which may be either fixed or removably attached thereto. The touch screen  may detected, monitor, and\/or reproduce points of user touching thereon for receiving user inputs and providing a graphical user interface that is touch interactive. In some examples, the web pad  includes a touch screen caller that allows the user to find it when it has been removed from the robot .","In some implementations, the robot  includes multiple web pad docks  on one or more portions of the robot body . In the example shown in , the robot  includes a web pad dock  optionally disposed on the leg  and\/or the torso . This allows the user to dock a web pad  at different heights on the robot , for example, to accommodate users of different height, capture video using a camera of the web pad  in different vantage points, and\/or to receive multiple web pads  on the robot .","The interfacing module  may include a camera  disposed on the head  (see e.g., ), which can be used to capture video from elevated vantage point of the head  (e.g., for videoconferencing). In the example shown in , the camera  is disposed on the neck . In some examples, the camera  is operated only when the web pad , is detached or undocked from the head . When the web pad , is attached or docked on the head  in the dock  (and optionally covering the camera ), the robot  may use a camera of the web pad for capturing video. In such instances, the camera  may be disposed behind the docked web pad  and enters an active state when the web pad  is detached or undocked from the head  and an inactive state when the web pad  is attached or docked on the head .","The robot  can provide videoconferencing (e.g., at 24 fps) through the interface module  (e.g., using a web pad , the camera , the microphones , and\/or the speakers ). The videoconferencing can be multiparty. The robot  can provide eye contact between both parties of the videoconferencing by maneuvering the head  to face the user. Moreover, the robot  can have a gaze angle of <5 degrees (e.g., an angle away from an axis normal to the forward face of the head ). At least one 3-D image sensor  and\/or the camera  on the robot  can capture life size images including body language. The controller  can synchronize audio and video (e.g., with the difference of <50 ms). In the example shown in , robot  can provide videoconferencing for people standing or sitting by adjusting the height of the web pad  on the head  and\/or the camera  (by raising or lowering the torso ) and\/or panning and\/or tilting the head . The camera  may be movable within at least one degree of freedom separately from the web pad . In some examples, the camera  has an objective lens positioned more than 3 feet from the ground, but no more than 10 percent of the web pad height from a top edge of a display area of the web pad . Moreover, the robot  can zoom the camera  to obtain close-up pictures or video about the robot . The head  may include one or more speakers  so as to have sound emanate from the head  near the web pad  displaying the videoconferencing.","In some examples, the robot  can receive user inputs into the web pad  (e.g., via a touch screen), as shown in . In some implementations, the web pad  is a display or monitor, while in other implementations the web pad  is a tablet computer. The web pad  can have easy and intuitive controls, such as a touch screen, providing high interactivity. The web pad  may have a monitor display  (e.g., touch screen) having a display area of 150 square inches or greater movable with at least one degree of freedom.","The robot  can provide EMR integration, in some examples, by providing video conferencing between a doctor and patient and\/or other doctors or nurses. The robot  may include pass-through consultation instruments. For example, the robot  may include a stethoscope configured to pass listening to the videoconferencing user (e.g., a doctor). In other examples, the robot includes connectors  that allow direct connection to Class II medical devices, such as electronic stethoscopes, otoscopes and ultrasound, to transmit medical data to a remote user (physician).","In the example shown in , a user may remove the web pad  from the web pad dock  on the head  for remote operation of the robot , videoconferencing (e.g., using a camera and microphone of the web pad ), and\/or usage of software applications on the web pad . The robot  may include first and second cameras , on the head  to obtain different vantage points for videoconferencing, navigation, etc., while the web pad  is detached from the web pad dock .","Interactive applications executable on the controller  and\/or in communication with the controller  may require more than one display on the robot . Multiple web pads  associated with the robot  can provide different combinations of FACETIME\u00ae (i.e., video calling) by Apple, Inc., Telestration, HD look at this-cam (e.g., for web pads  having built in cameras), can act as a remote operator control unit (OCU) for controlling the robot  remotely, and\/or provide a local user interface pad.","Referring again to , the interfacing module  may include a microphone  (e.g., or micro-phone array) for receiving sound inputs and one or more speakers  disposed on the robot body  for delivering sound outputs. The microphone  and the speaker(s)  may each communicate with the controller . In some examples, the interfacing module  includes a basket , which may be configured to hold brochures, emergency information, household items, and other items.","Referring to ,  and , to achieve reliable and robust autonomous movement, the sensor system  may include several different types of sensors which can be used in conjunction with one another to create a perception of the robot's environment sufficient to allow the robot  to make intelligent decisions about actions to take in that environment. The sensor system  may include one or more types of sensors supported by the robot body , which may include obstacle detection obstacle avoidance (ODOA) sensors, communication sensors, navigation sensors, etc. For example, these sensors may include, but not limited to, proximity sensors, contact sensors, three-dimensional (3D) imaging\/depth map sensors, a camera (e.g., visible light and\/or infrared camera), sonar, radar, LIDAR (Light Detection And Ranging, which can entail optical remote sensing that measures properties of scattered light to find range and\/or other information of a distant target), LADAR (Laser Detection and Ranging), etc. In some implementations, the sensor system  includes ranging sonar sensors  (e.g., nine about a perimeter of the base ), proximity cliff detectors , contact sensors , a laser scanner , one or more 3-D imaging\/depth sensors , and an imaging sonar .","There are several challenges involved in placing sensors on a robotic platform. First, the sensors need to be placed such that they have maximum coverage of areas of interest around the robot . Second, the sensors may need to be placed in such a way that the robot  itself causes an absolute minimum of occlusion to the sensors; in essence, the sensors cannot be placed such that they are \u201cblinded\u201d by the robot itself. Third, the placement and mounting of the sensors should not be intrusive to the rest of the industrial design of the platform. In terms of aesthetics, it can be assumed that a robot with sensors mounted inconspicuously is more \u201cattractive\u201d than otherwise. In terms of utility, sensors should be mounted in a manner so as not to interfere with normal robot operation (snagging on obstacles, etc.).","In some implementations, the sensor system  includes a set or an array of proximity sensors ,  in communication with the controller  and arranged in one or more zones or portions of the robot  (e.g., disposed on or near the base body portion , , of the robot body ) for detecting any nearby or intruding obstacles. The proximity sensors ,  may be converging infrared (IR) emitter-sensor elements, sonar sensors, ultrasonic sensors, and\/or imaging sensors (e.g., 3D depth map image sensors) that provide a signal to the controller  when an object is within a given range of the robot .","In the example shown in , the robot  includes an array of sonar-type proximity sensors  disposed (e.g., substantially equidistant) around the base body  and arranged with an upward field of view. First, second, and third sonar proximity sensors , , are disposed on or near the first (forward) base body portion , with at least one of the sonar proximity sensors near a radially outer-most edge of the first base body . Fourth, fifth, and sixth sonar proximity sensors , , are disposed on or near the second (right) base body portion , with at least one of the sonar proximity sensors near a radially outer-most edge of the second base body . Seventh, eighth, and ninth sonar proximity sensors , , are disposed on or near the third (right) base body portion , with at least one of the sonar proximity sensors near a radially outer-most edge of the third base body . This configuration provides at least three zones of detection.","In some examples, the set of sonar proximity sensors  (e.g., -) disposed around the base body  are arranged to point upward (e.g., substantially in the Z direction) and optionally angled outward away from the Z axis, thus creating a detection curtain  around the robot . Each sonar proximity sensor -may have a shroud or emission guide  that guides the sonar emission upward or at least not toward the other portions of the robot body  (e.g., so as not to detect movement of the robot body  with respect to itself). The emission guide  may define a shell or half shell shape. In the example shown, the base body  extends laterally beyond the leg , and the sonar proximity sensors  (e.g., -) are disposed on the base body  (e.g., substantially along a perimeter of the base body ) around the leg . Moreover, the upward pointing sonar proximity sensors  are spaced to create a continuous or substantially continuous sonar detection curtain  around the leg . The sonar detection curtain  can be used to detect obstacles having elevated lateral protruding portions, such as table tops, shelves, etc.","The upward looking sonar proximity sensors  provide the ability to see objects that are primarily in the horizontal plane, such as table tops. These objects, due to their aspect ratio, may be missed by other sensors of the sensor system, such as the laser scanner  or imaging sensors , and as such, can pose a problem to the robot .","The upward viewing sonar proximity sensors  arranged around the perimeter of the base  provide a means for seeing or detecting those type of objects\/obstacles. Moreover, the sonar proximity sensors  can be placed around the widest points of the base perimeter and angled slightly outwards, so as not to be occluded or obstructed by the torso  or head  of the robot , thus not resulting in false positives for sensing portions of the robot  itself. In some implementations, the sonar proximity sensors  are arranged (upward and outward) to leave a volume about the torso  outside of a field of view of the sonar proximity sensors  and thus free to receive mounted payloads or accessories, such as the basket . The sonar proximity sensors  can be recessed into the base body  to provide visual concealment and no external features to snag on or hit obstacles.","The sensor system  may include or more sonar proximity sensors  (e.g., a rear proximity sensor ) directed rearward (e.g., opposite to the forward drive direction F) for detecting obstacles while backing up. The rear sonar proximity sensor may include an emission guide  to direct its sonar detection field .","Moreover, the rear sonar proximity sensor can be used for ranging to determine a distance between the robot  and a detected object in the field of view of the rear sonar proximity sensor (e.g., as \u201cback-up alert\u201d). In some examples, the rear sonar proximity sensor is mounted recessed within the base body  so as to not provide any visual or functional irregularity in the housing form.","Referring to , in some implementations, the robot  includes cliff proximity sensors  arranged near or about the drive wheels , , , so as to allow cliff detection before the drive wheels , , encounter a cliff (e.g., stairs). For example, a cliff proximity sensors  can be located at or near each of the radially outer-most edges -of the base bodies -and in locations therebetween. In some cases, cliff sensing is implemented using infrared (IR) proximity or actual range sensing, using an infrared emitter  and an infrared detector  angled toward each other so as to have an overlapping emission and detection fields, and hence a detection zone, at a location where a floor should be expected. IR proximity sensing can have a relatively narrow field of view, may depend on surface albedo for reliability, and can have varying range accuracy from surface to surface. As a result, multiple discrete sensors can be placed about the perimeter of the robot  to adequately detect cliffs from multiple points on the robot . Moreover, IR proximity based sensors typically cannot discriminate between a cliff and a safe event, such as just after the robot  climbs a threshold.","The cliff proximity sensors  can detect when the robot  has encountered a falling edge of the floor, such as when it encounters a set of stairs. The controller  (executing a control system) may execute behaviors that cause the robot  to take an action, such as changing its direction of travel, when an edge is detected. In some implementations, the sensor system  includes one or more secondary cliff sensors (e.g., other sensors configured for cliff sensing and optionally other types of sensing). The cliff detecting proximity sensors  can be arranged to provide early detection of cliffs, provide data for discriminating between actual cliffs and safe events (such as climbing over thresholds), and be positioned down and out so that their field of view includes at least part of the robot body  and an area away from the robot body . In some implementations, the controller  executes cliff detection routine that identifies and detects an edge of the supporting work surface (e.g., floor), an increase in distance past the edge of the work surface, and\/or an increase in distance between the robot body  and the work surface. This implementation allows: 1) early detection of potential cliffs (which may allow faster mobility speeds in unknown environments); 2) increased reliability of autonomous mobility since the controller  receives cliff imaging information from the cliff detecting proximity sensors  to know if a cliff event is truly unsafe or if it can be safely traversed (e.g., such as climbing up and over a threshold); 3) a reduction in false positives of cliffs (e.g., due to the use of edge detection versus the multiple discrete IR proximity sensors with a narrow field of view). Additional sensors arranged as \u201cwheel drop\u201d sensors can be used for redundancy and for detecting situations where a range-sensing camera cannot reliably detect a certain type of cliff.","Threshold and step detection allows the robot  to effectively plan for either traversing a climb-able threshold or avoiding a step that is too tall. This can be the same for random objects on the work surface that the robot  may or may not be able to safely traverse. For those obstacles or thresholds that the robot  determines it can climb, knowing their heights allows the robot  to slow down appropriately, if deemed needed, to allow for a smooth transition in order to maximize smoothness and minimize any instability due to sudden accelerations. In some implementations, threshold and step detection is based on object height above the work surface along with geometry recognition (e.g., discerning between a threshold or an electrical cable versus a blob, such as a sock). Thresholds may be recognized by edge detection. The controller  may receive imaging data from the cliff detecting proximity sensors  (or another imaging sensor on the robot ), execute an edge detection routine, and issue a drive command based on results of the edge detection routine. The controller  may use pattern recognition to identify objects as well. Threshold detection allows the robot  to change its orientation with respect to the threshold to maximize smooth step climbing ability.","The proximity sensors ,  may function alone, or as an alternative, may function in combination with one or more contact sensors  (e.g., bump switches) for redundancy. For example, one or more contact or bump sensors  on the robot body  can detect if the robot  physically encounters an obstacle. Such sensors may use a physical property such as capacitance or physical displacement within the robot  to determine when it has encountered an obstacle. In some implementations, each base body portion , , of the base  has an associated contact sensor  (e.g., capacitive sensor, read switch, etc.) that detects movement of the corresponding base body portion , , with respect to the base chassis  (see e.g., ). For example, each base body -may move radially with respect to the Z axis of the base chassis , so as to provide 3-way bump detection.","Referring again to ,  and , in some implementations, the sensor system  includes a laser scanner  mounted on a forward portion of the robot body  and in communication with the controller . In the examples shown, the laser scanner  is mounted on the base body  facing forward (e.g., having a field of view along the forward drive direction F) on or above the first base body (e.g., to have maximum imaging coverage along the drive direction F of the robot). Moreover, the placement of the laser scanner on or near the front tip of the triangular base  means that the external angle of the robotic base (e.g., 300 degrees) is greater than a field of view  of the laser scanner  (e.g., \u02dc285 degrees), thus preventing the base  from occluding or obstructing the detection field of view  of the laser scanner . The laser scanner  can be mounted recessed within the base body  as much as possible without occluding its fields of view, to minimize any portion of the laser scanner sticking out past the base body  (e.g., for aesthetics and to minimize snagging on obstacles).","The laser scanner  scans an area about the robot  and the controller , using signals received from the laser scanner , creates an environment map or object map of the scanned area. The controller  may use the object map for navigation, obstacle detection, and obstacle avoidance. Moreover, the controller  may use sensory inputs from other sensors of the sensor system  for creating object map and\/or for navigation.","In some examples, the laser scanner  is a scanning LIDAR, which may use a laser that quickly scans an area in one dimension, as a \u201cmain\u201d scan line, and a time-of-flight imaging element that uses a phase difference or similar technique to assign a depth to each pixel generated in the line (returning a two dimensional depth line in the plane of scanning) In order to generate a three dimensional map, the LIDAR can perform an \u201cauxiliary\u201d scan in a second direction (for example, by \u201cnodding\u201d the scanner). This mechanical scanning technique can be complemented, if not supplemented, by technologies such as the \u201cFlash\u201d LIDAR\/LADAR and \u201cSwiss Ranger\u201d type focal plane imaging element sensors, techniques which use semiconductor stacks to permit time of flight calculations for a full 2-D matrix of pixels to provide a depth at each pixel, or even a series of depths at each pixel (with an encoded illuminator or illuminating laser).","The sensor system  may include one or more three-dimensional (3-D) image sensors  in communication with the controller . If the 3-D image sensor  has a limited field of view, the controller  or the sensor system  can actuate the 3-D image sensor in a side-to-side scanning manner to create a relatively wider field of view to perform robust ODOA. Referring to  and , in some implementations, the robot  includes a scanning 3-D image sensor mounted on a forward portion of the robot body  with a field of view along the forward drive direction F (e.g., to have maximum imaging coverage along the drive direction F of the robot). The scanning 3-D image sensor can be used primarily for obstacle detection\/obstacle avoidance (ODOA). In the example shown, the scanning 3-D image sensor is mounted on the torso  underneath the shoulder  or on the bottom surface  and recessed within the torso  (e.g., flush or past the bottom surface ), as shown in , for example, to prevent user contact with the scanning 3-D image sensor . The scanning 3-D image sensor  can be arranged to aim substantially downward and away from the robot body , so as to have a downward field of view  in front of the robot  for obstacle detection and obstacle avoidance (ODOA) (e.g., with obstruction by the base  or other portions of the robot body ). Placement of the scanning 3-D image sensor on or near a forward edge of the torso  allows the field of view of the 3-D image sensor  (e.g., \u02dc285 degrees) to be less than an external surface angle of the torso  (e.g., 300 degrees) with respect to the 3-D image sensor , thus preventing the torso  from occluding or obstructing the detection field of view  of the scanning 3-D image sensor . Moreover, the scanning 3-D image sensor (and associated actuator) can be mounted recessed within the torso  as much as possible without occluding its fields of view (e.g., also for aesthetics and to minimize snagging on obstacles). The distracting scanning motion of the scanning 3-D image sensor is not visible to a user, creating a less distracting interaction experience. Unlike a protruding sensor or feature, the recessed scanning 3-D image sensor will not tend to have unintended interactions with the environment (snagging on people, obstacles, etc.), especially when moving or scanning, as virtually no moving part extends beyond the envelope of the torso .","In some implementations, the sensor system  includes additional 3-D image sensors  disposed on the base body , the leg , the neck , and\/or the head . In the example shown in , the robot  includes 3-D image sensors  on the base body , the torso , and the head . In the example shown in , the robot  includes 3-D image sensors  on the base body , the torso , and the head . In the example shown in , the robot  includes 3-D image sensors  on the leg , the torso , and the neck . Other configurations are possible as well. One 3-D image sensor  (e.g., on the neck  and over the head ) can be used for people recognition, gesture recognition, and\/or videoconferencing, while another 3-D image sensor  (e.g., on the base  and\/or the leg ) can be used for navigation and\/or obstacle detection and obstacle avoidance.","A forward facing 3-D image sensor  disposed on the neck  and\/or the head  can be used for person, face, and\/or gesture recognition of people about the robot . For example, using signal inputs from the 3-D image sensor  on the head , the controller  may recognize a user by creating a three-dimensional map of the viewed\/captured user's face and comparing the created three-dimensional map with known 3-D images of people's faces and determining a match with one of the known 3-D facial images. Facial recognition may be used for validating users as allowable users of the robot . Moreover, one or more of the 3-D image sensors  can be used for determining gestures of person viewed by the robot , and optionally reacting based on the determined gesture(s) (e.g., hand pointing, waving, and or hand signals). For example, the controller  may issue a drive command in response to a recognized hand point in a particular direction.","The 3-D image sensors  may be capable of producing the following types of data: (i) a depth map, (ii) a reflectivity based intensity image, and\/or (iii) a regular intensity image. The 3-D image sensors  may obtain such data by image pattern matching, measuring the flight time and\/or phase delay shift for light emitted from a source and reflected off of a target.","In some implementations, reasoning or control software, executable on a processor (e.g., of the robot controller ), uses a combination of algorithms executed using various data types generated by the sensor system . The reasoning software processes the data collected from the sensor system  and outputs data for making navigational decisions on where the robot  can move without colliding with an obstacle, for example. By accumulating imaging data over time of the robot's surroundings, the reasoning software can in turn apply effective methods to selected segments of the sensed image(s) to improve depth measurements of the 3-D image sensors . This may include using appropriate temporal and spatial averaging techniques.","The reliability of executing robot collision free moves may be based on: (i) a confidence level built by high level reasoning over time and (ii) a depth-perceptive sensor that accumulates three major types of data for analysis\u2014(a) a depth image, (b) an active illumination image and (c) an ambient illumination image. Algorithms cognizant of the different types of data can be executed on each of the images obtained by the depth-perceptive imaging sensor . The aggregate data may improve the confidence level a compared to a system using only one of the kinds of data.","The 3-D image sensors  may obtain images containing depth and brightness data from a scene about the robot  (e.g., a sensor view portion of a room or work area) that contains one or more objects. The controller  may be configured to determine occupancy data for the object based on the captured reflected light from the scene. Moreover, the controller , in some examples, issues a drive command to the drive system  based at least in part on the occupancy data to circumnavigate obstacles (i.e., the object in the scene). The 3-D image sensors  may repeatedly capture scene depth images for real-time decision making by the controller  to navigate the robot  about the scene without colliding into any objects in the scene. For example, the speed or frequency in which the depth image data is obtained by the 3-D image sensors  may be controlled by a shutter speed of the 3-D image sensors . In addition, the controller  may receive an event trigger (e.g., from another sensor component of the sensor system , such as proximity sensor , , notifying the controller  of a nearby object or hazard. The controller , in response to the event trigger, can cause the 3-D image sensors  to increase a frequency at which depth images are captured and occupancy information is obtained.","In some implementations, the robot includes a sonar scanner  for acoustic imaging of an area surrounding the robot . In the examples shown in , the sonar scanner  is disposed on a forward portion of the base body .","Referring to , B and , in some implementations, the robot  uses the laser scanner or laser range finder  for redundant sensing, as well as a rear-facing sonar proximity sensor for safety, both of which are oriented parallel to the ground G. The robot  may include first and second 3-D image sensors , (depth cameras) to provide robust sensing of the environment around the robot . The first 3-D image sensor is mounted on the torso  and pointed downward at a fixed angle to the ground G. By angling the first 3-D image sensor downward, the robot  receives dense sensor coverage in an area immediately forward or adjacent to the robot , which is relevant for short-term travel of the robot  in the forward direction. The rear-facing sonar provides object detection when the robot travels backward. If backward travel is typical for the robot , the robot  may include a third 3D image sensor  facing downward and backward to provide dense sensor coverage in an area immediately rearward or adjacent to the robot .","The second 3-D image sensor is mounted on the head , which can pan and tilt via the neck . The second 3-D image sensor can be useful for remote driving since it allows a human operator to see where the robot  is going. The neck  enables the operator tilt and\/or pan the second 3-D image sensor to see both close and distant objects. Panning the second 3-D image sensor increases an associated horizontal field of view. During fast travel, the robot  may tilt the second 3-D image sensor downward slightly to increase a total or combined field of view of both 3-D image sensors , , and to give sufficient time for the robot  to avoid an obstacle (since higher speeds generally mean less time to react to obstacles). At slower speeds, the robot  may tilt the second 3-D image sensor upward or substantially parallel to the ground G to track a person that the robot  is meant to follow. Moreover, while driving at relatively low speeds, the robot  can pan the second 3-D image sensor to increase its field of view around the robot . The first 3-D image sensor can stay fixed (e.g., not moved with respect to the base ) when the robot is driving to expand the robot's perceptual range.","In some implementations, at least one of 3-D image sensors  can be a volumetric point cloud imaging device (such as a speckle or time-of-flight camera) positioned on the robot  at a height of greater than 1 or 2 feet above the ground (or at a height of about 1 or 2 feet above the ground) and directed to be capable of obtaining a point cloud from a volume of space including a floor plane in a direction of movement of the robot (via the omni-directional drive system ). In the examples shown in , the first 3-D image sensor can be positioned on the base  at height of greater than 1 or 2 feet above the ground and aimed along the forward drive direction F to capture images (e.g., volumetric point cloud) of a volume including the floor while driving (e.g., for obstacle detection and obstacle avoidance). The second 3-D image sensor is shown mounted on the head  (e.g., at a height greater than about 3 or 4 feet above the ground), so as to be capable of obtaining skeletal recognition and definition point clouds from a volume of space adjacent the robot . The controller  may execute skeletal\/digital recognition software to analyze data of the captured volumetric point clouds.","Referring again to FIGS.  and A-C, the sensor system  may include an inertial measurement unit (IMU)  in communication with the controller  to measure and monitor a moment of inertia of the robot  with respect to the overall center of gravity CGof the robot .","The controller  may monitor any deviation in feedback from the IMU  from a threshold signal corresponding to normal unencumbered operation. For example, if the robot begins to pitch away from an upright position, it may be \u201cclothes lined\u201d or otherwise impeded, or someone may have suddenly added a heavy payload. In these instances, it may be necessary to take urgent action (including, but not limited to, evasive maneuvers, recalibration, and\/or issuing an audio\/visual warning) in order to assure safe operation of the robot .","Since robot  may operate in a human environment, it may interact with humans and operate in spaces designed for humans (and without regard for robot constraints). The robot  can limit its drive speeds and accelerations when in a congested, constrained, or highly dynamic environment, such as at a cocktail party or busy hospital. However, the robot  may encounter situations where it is safe to drive relatively fast, as in a long empty corridor, but yet be able to decelerate suddenly, as when something crosses the robots' motion path.","When accelerating from a stop, the controller  may take into account a moment of inertia of the robot  from its overall center of gravity CGto prevent robot tipping. The controller  may use a model of its pose, including its current moment of inertia. When payloads are supported, the controller  may measure a load impact on the overall center of gravity CGand monitor movement of the robot moment of inertia. For example, the torso  and\/or neck  may include strain gauges to measure strain. If this is not possible, the controller  may apply a test torque command to the drive wheels  and measure actual linear and angular acceleration of the robot using the IMU , in order to experimentally determine safe limits.","During a sudden deceleration, a commanded load on the second and third drive wheels , (the rear wheels) is reduced, while the first drive wheel (the front wheel) slips in the forward drive direction and supports the robot . If the loading of the second and third drive wheels , (the rear wheels) is asymmetrical, the robot  may \u201cyaw\u201d which will reduce dynamic stability. The IMU  (e.g., a gyro) can be used to detect this yaw and command the second and third drive wheels , to reorient the robot .","Referring to  and A, in some implementations, the robot  includes multiple antennas. In the examples shown, the robot  includes a first antenna and a second antenna both disposed on the base  (although the antennas may be disposed at any other part of the robot , such as the leg , the torso , the neck , and\/or the head ). The use of multiple antennas provide robust signal reception and transmission. The use of multiple antennas provides the robot  with multiple-input and multiple-output, or MIMO, which is the use of multiple antennas for a transmitter and\/or a receiver to improve communication performance. MIMO offers significant increases in data throughput and link range without additional bandwidth or transmit power. It achieves this by higher spectral efficiency (more bits per second per hertz of bandwidth) and link reliability or diversity (reduced fading). Because of these properties, MIMO is an important part of modern wireless communication standards such as IEEE 802.11n (Wifi), 4G, 3GPP Long Term Evolution, WiMAX and HSPA+. Moreover, the robot  can act as a Wi-Fi bridge, hub or hotspot for other electronic devices nearby. The mobility and use of MIMO of the robot  can allow the robot to come a relatively very reliable Wi-Fi bridge.","MIMO can be sub-divided into three main categories, pre-coding, spatial multiplexing or SM, and diversity coding. Pre-coding is a type of multi-stream beam forming and is considered to be all spatial processing that occurs at the transmitter. In (single-layer) beam forming, the same signal is emitted from each of the transmit antennas with appropriate phase (and sometimes gain) weighting such that the signal power is maximized at the receiver input. The benefits of beam forming are to increase the received signal gain, by making signals emitted from different antennas add up constructively, and to reduce the multipath fading effect. In the absence of scattering, beam forming can result in a well defined directional pattern. When the receiver has multiple antennas, the transmit beam forming cannot simultaneously maximize the signal level at all of the receive antennas, and pre-coding with multiple streams can be used. Pre-coding may require knowledge of channel state information (CSI) at the transmitter.","Spatial multiplexing requires a MIMO antenna configuration. In spatial multiplexing, a high rate signal is split into multiple lower rate streams and each stream is transmitted from a different transmit antenna in the same frequency channel. If these signals arrive at the receiver antenna array with sufficiently different spatial signatures, the receiver can separate these streams into (almost) parallel channels. Spatial multiplexing is a very powerful technique for increasing channel capacity at higher signal-to-noise ratios (SNR). The maximum number of spatial streams is limited by the lesser in the number of antennas at the transmitter or receiver. Spatial multiplexing can be used with or without transmit channel knowledge. Spatial multiplexing can also be used for simultaneous transmission to multiple receivers, known as space-division multiple access. By scheduling receivers with different spatial signatures, good separability can be assured.","Diversity Coding techniques can be used when there is no channel knowledge at the transmitter. In diversity methods, a single stream (unlike multiple streams in spatial multiplexing) is transmitted, but the signal is coded using techniques called space-time coding. The signal is emitted from each of the transmit antennas with full or near orthogonal coding. Diversity coding exploits the independent fading in the multiple antenna links to enhance signal diversity. Because there is no channel knowledge, there is no beam forming or array gain from diversity coding. Spatial multiplexing can also be combined with pre-coding when the channel is known at the transmitter or combined with diversity coding when decoding reliability is in trade-off.","In some implementations, the robot  includes a third antenna and\/or a fourth antenna and the torso  and\/or the head , respectively (see e.g., ). In such instances, the controller  can determine an antenna arrangement (e.g., by moving the antennas -, as by raising or lowering the torso  and\/or rotating and\/or tilting the head ) that achieves a threshold signal level for robust communication. For example, the controller  can issue a command to elevate the third and fourth antennas , by raising a height of the torso . Moreover, the controller  can issue a command to rotate and\/or the head  to further orient the fourth antenna with respect to the other antennas -","Referring to , in some implementations, the controller  executes a control system , which includes a control arbitration system and a behavior system in communication with each other. The control arbitration system allows applications  to be dynamically added and removed from the control system , and facilitates allowing applications  to each control the robot  without needing to know about any other applications . In other words, the control arbitration system provides a simple prioritized control mechanism between applications  and resources  of the robot . The resources  may include the drive system , the sensor system , and\/or any payloads or controllable devices in communication with the controller .","The applications  can be stored in memory of or communicated to the robot , to run concurrently on (e.g., a processor) and simultaneously control the robot . The applications  may access behaviors  of the behavior system . The independently deployed applications  are combined dynamically at runtime and to share robot resources  (e.g., drive system , arm(s), head(s), etc.) of the robot . A low-level policy is implemented for dynamically sharing the robot resources  among the applications  at run-time. The policy determines which application  has control of the robot resources  required by that application  (e.g. a priority hierarchy among the applications ). Applications  can start and stop dynamically and run completely independently of each other. The control system  also allows for complex behaviors  which can be combined together to assist each other.","The control arbitration system includes one or more resource controllers , a robot manager , and one or more control arbiters . These components do not need to be in a common process or computer, and do not need to be started in any particular order. The resource controller  component provides an interface to the control arbitration system for applications . There is an instance of this component for every application . The resource controller  abstracts and encapsulates away the complexities of authentication, distributed resource control arbiters, command buffering, and the like. The robot manager  coordinates the prioritization of applications , by controlling which application  has exclusive control of any of the robot resources  at any particular time. Since this is the central coordinator of information, there is only one instance of the robot manager  per robot. The robot manager  implements a priority policy, which has a linear prioritized order of the resource controllers , and keeps track of the resource control arbiters  that provide hardware control. The control arbiter  receives the commands from every application  and generates a single command based on the applications' priorities and publishes it for its associated resources . The control arbiter  also receives state feedback from its associated resources  and sends it back up to the applications . The robot resources  may be a network of functional modules (e.g. actuators, drive systems, and groups thereof) with one or more hardware controllers. The commands of the control arbiter  are specific to the resource  to carry out specific actions.","A dynamics model  executable on the controller  can be configured to compute the center for gravity (CG), moments of inertia, and cross products of inertia of various portions of the robot  for the assessing a current robot state. The dynamics model  may also model the shapes, weight, and\/or moments of inertia of these components. In some examples, the dynamics model  communicates with the inertial moment unit  (IMU) or portions of one (e.g., accelerometers and\/or gyros) disposed on the robot  and in communication with the controller  for calculating the various center of gravities of the robot . The dynamics model  can be used by the controller , along with other programs  or behaviors  to determine operating envelopes of the robot  and its components.","Each application  has an action selection engine  and a resource controller , one or more behaviors  connected to the action selection engine , and one or more action models  connected to action selection engine . The behavior system provides predictive modeling and allows the behaviors  to collaboratively decide on the robot's actions by evaluating possible outcomes of robot actions. In some examples, a behavior  is a plug-in component that provides a hierarchical, state-full evaluation function that couples sensory feedback from multiple sources with a-priori limits and information into evaluation feedback on the allowable actions of the robot. Since the behaviors  are pluggable into the application  (e.g., residing inside or outside of the application ), they can be removed and added without having to modify the application  or any other part of the control system . Each behavior  is a standalone policy. To make behaviors  more powerful, it is possible to attach the output of multiple behaviors  together into the input of another so that you can have complex combination functions. The behaviors  are intended to implement manageable portions of the total cognizance of the robot .","The action selection engine  is the coordinating element of the control system  and runs a fast, optimized action selection cycle (prediction\/correction cycle) searching for the best action given the inputs of all the behaviors . The action selection engine  has three phases: nomination, action selection search, and completion. In the nomination phase, each behavior  is notified that the action selection cycle has started and is provided with the cycle start time, the current state, and limits of the robot actuator space. Based on internal policy or external input, each behavior  decides whether or not it wants to participate in this action selection cycle. During this phase, a list of active behavior primitives is generated whose input will affect the selection of the commands to be executed on the robot .","In the action selection search phase, the action selection engine  generates feasible outcomes from the space of available actions, also referred to as the action space. The action selection engine  uses the action models  to provide a pool of feasible commands (within limits) and corresponding outcomes as a result of simulating the action of each command at different time steps with a time horizon in the future. The action selection engine  calculates a preferred outcome, based on the outcome evaluations of the behaviors , and sends the corresponding command to the control arbitration system and notifies the action model  of the chosen command as feedback.","In the completion phase, the commands that correspond to a collaborative best scored outcome are combined together as an overall command, which is presented to the resource controller  for execution on the robot resources . The best outcome is provided as feedback to the active behaviors , to be used in future evaluation cycles.","Received sensor signals from the sensor system  can cause interactions with one or more behaviors  to execute actions. For example, using the control system , the controller  selects an action (or move command) for each robotic component (e.g., motor or actuator) from a corresponding action space (e.g., a collection of possible actions or moves for that particular component) to effectuate a coordinated move of each robotic component in an efficient manner that avoids collisions with itself and any objects about the robot , which the robot  is aware of. The controller  can issue a coordinated command over robot network, such as an EtherIO network, as described in U.S. Ser. No. 61\/305,069, filed Feb. 16, 2010, the entire contents of which are hereby incorporated by reference.","The control system  may provide adaptive speed\/acceleration of the drive system  (e.g., via one or more behaviors ) in order to maximize stability of the robot  in different configurations\/positions as the robot  maneuvers about an area.","In some implementations, the controller  issues commands to the drive system  that propels the robot  according to a heading setting and a speed setting. One or behaviors  may use signals received from the sensor system  to evaluate predicted outcomes of feasible commands, one of which may be elected for execution (alone or in combination with other commands as an overall robot command) to deal with obstacles. For example, signals from the proximity sensors  may cause the control system  to change the commanded speed or heading of the robot . For instance, a signal from a proximity sensor  due to a nearby wall may result in the control system  issuing a command to slow down. In another instance, a collision signal from the contact sensor(s) due to an encounter with a chair may cause the control system  to issue a command to change heading. In other instances, the speed setting of the robot  may not be reduced in response to the contact sensor; and\/or the heading setting of the robot  may not be altered in response to the proximity sensor .","The behavior system may include a speed behavior  (e.g., a behavioral routine executable on a processor) configured to adjust the speed setting of the robot  and a heading behavior  configured to alter the heading setting of the robot . The speed and heading behaviors  may be configured to execute concurrently and mutually independently. For example, the speed behavior  may be configured to poll one of the sensors (e.g., the set(s) of proximity sensors , ), and the heading behavior  may be configured to poll another sensor (e.g., the kinetic bump sensor).","Referring to , the behavior system may include a torso touch teleoperation behavior (e.g., a behavioral routine executable on a processor) configured to react to a user  touching the torso  for teleoperation (e.g., guiding the robot ). The torso touch teleoperation behavior may become active when the sensor system  detects that the torso has received contact (e.g., human contact) for at least a threshold time period (e.g., 0.25 seconds). For example, the motion and\/or contact sensor , , , , , in communication with the controller  and associated with the corresponding top panel , a bottom panel , a front panel , a back panel , a right panel and a left panel of the torso body  can detect motion and\/or contact with the respective panel, as shown in . Once active, the torso touch teleoperation behavior receives a contact force direction (e.g., as sensed and computed from an ellipse location of the touch) and issues a velocity command to the drive system  in local X\/Y coordinates (taking advantage of the holonomic mobility). Obstacle detection and obstacle avoidance behaviors may be turned off for while the torso touch teleoperation behavior is active. If the sensed touch location, force, or direction changes, the torso touch teleoperation behavior changes the velocity command to correspond with the sensed contact force direction. The torso touch teleoperation behavior may execute a stop routine when the sensor system  no longer senses contact with the robot  for a threshold period of time (e.g., 2 seconds). The stop routine may cause the drive system  to stop driving after about 0.5 seconds if the sensor system  no longer senses contact with the robot  (e.g., with the torso ). The torso touch teleoperation behavior may provide a delay in stopping the robot  to allow moving the touch point without having to wait for a trigger period of time.","The torso touch teleoperation behavior may issue assisted drive commands to the drive system  that allow the user to push the robot  while receiving drive assistance from the drive system  (e.g., partial velocity commands that by themselves cannot move the robot , but assist movement of the robot  by the user).","The torso touch teleoperation behavior may receive sensor signals from the touch sensor system  (e.g., buttons, capacitive sensors, contact sensors, etc.), a portion of which may be disposed on the torso  (and elsewhere on the robot , such as the head ). The torso touch teleoperation behavior may position the torso  at a height Hof between 3 and 5 feet from the ground G, so as to place at least a portion of the touch sensor system  at an accessible height for a typical user.","In some implementations, the torso touch teleoperation behavior recognizes user touching to place the robot  and particular pose. For example, when the user  pushes down on the torso , the sensor system  detects the downward force on the torso  and sends corresponding signals to the controller . The torso touch teleoperation behavior receives indication of the downward force on the torso  and causes the control system  to issue a command to decrease the length Hof the leg , thereby lowering the height Hof the torso . Similarly, when the user  pushes\/pulls up on the torso , the torso touch teleoperation behavior receives indication of the upward force on the torso  from the sensor system  and causes the control system  to issue a command to increase the length Hof the leg , thereby increasing the height Hof the torso .","When the user  pushes, pulls and\/or rotates the head , the torso touch teleoperation behavior may receive indication from the sensor system  (e.g., from strain gages\/motion\/contact sensors  on the neck ) of the user action and may respond by causing the control system  to issue a command to move the head  accordingly and thereafter hold the pose.","In some implementations, the robot  provides passive resistance and\/or active assistance to user manipulation of the robot . For example, the motors , ,  actuating the leg  and the neck  passive resistance and\/or active assistance to user manipulation of the robot  to provide feedback to the user of the manipulation as well as assistance for moving relatively heavy components such as raising the torso . This allows the user to move various robotic components without having to bear the entire weight of the corresponding components.","The behavior system may include a tap-attention behavior (e.g., a behavioral routine executable on a processor) configured to focus attention of the robot  toward a user. The tap-attention behavior may become active when the sensor system  detects that the torso  (or some other portion of the robot ) has received contact (e.g., human contact) for less than a threshold time period (e.g., 0.25 seconds). Moreover, the tap-attention behavior may only become active when the torso touch teleoperation behavior is inactive. For example, a sensed touch on the torso  for 0.2 seconds will not trigger the torso touch teleoperation behavior , but will trigger the tap-attention behavior . The tap-attention behavior may use a contact location on the torso  and cause the head  to tilt and\/or pan (via actuation of the neck ) to look at the user. A stop criteria for the behavior can be reached when the head  reaches a position where it is looking in the direction of the touch location.","In some implementations, the behavior system includes a tap-stop behavior (e.g., a behavioral routine executable on a processor) configured to stop the drive system  from driving (e.g., bring the robot  to a stop). The tap-stop behavior may become active when the sensor system  detects that the torso  has received contact (e.g., human contact) and issues a zero velocity drive command to the drive system , cancelling any previous drive commands. If the robot is driving and the user wants it to stop, the user can tap the torso  (or some other portion of the robot ) or a touch sensor. In some examples, the tap-stop behavior can only be activated if higher priority behaviors, such as the torso touch teleoperation behavior and the tap-attention behavior , are not active. The tap-stop behavior may end with the sensor system  no longer detects touching on the torso  (or elsewhere on the robot ).","In some implementations, the robot  includes a mediating security device  (), also referred to as a bridge, for allowing communication between a web pad  and the controller  (and\/or other components of the robot ). For example, the bridge  may convert communications of the web pad  from a web pad communication protocol to a robot communication protocol (e.g., Ethernet having a gigabit capacity). The bridge  may authenticate the web pad  and provided communication conversion between the web pad  and the controller . In some examples, the bridge  includes an authorization chip which authorizes\/validates any communication traffic between the web pad  and the robot . The bridge  may notify the controller  when it has checked an authorized a web pad  trying to communicate with the robot . Moreover, after authorization, the bridge  notify the web pad  of the communication authorization. The bridge  may be disposed on the neck  or head (as shown in ) or elsewhere on the robot .","The Session Initiation Protocol (SIP) is an IETF-defined signaling protocol, widely used for controlling multimedia communication sessions such as voice and video calls over Internet Protocol (IP). The protocol can be used for creating, modifying and terminating two-party (unicast) or multiparty (multicast) sessions including one or several media streams. The modification can involve changing addresses or ports, inviting more participants, and adding or deleting media streams. Other feasible application examples include video conferencing, streaming multimedia distribution, instant messaging, presence information, file transfer, etc. Voice over Internet Protocol (Voice over IP, VoIP) is part of a family of methodologies, communication protocols, and transmission technologies for delivery of voice communications and multimedia sessions over Internet Protocol (IP) networks, such as the Internet. Other terms frequently encountered and often used synonymously with VoIP are IP telephony, Internet telephony, voice over broadband (VoBB), broadband telephony, and broadband phone.",{"@attributes":{"id":"p-0155","num":"0154"},"figref":"FIG. 15","b":["350","100","100","350","100","100"]},{"@attributes":{"id":"p-0156","num":"0155"},"figref":"FIGS. 16A and 16B","b":["1600","1600","100","500","200","310","160","1620","1630"],"i":["a","b"]},"The robot  can provide various core robot features, which may include: mobility (e.g., the drive system ); a reliable, safe, secure robot intelligence system, such as a control system executed on the controller , the power source , the sensing system , and optional manipulation with a manipulator in communication with the controller . The control system can provide heading and speed control, body pose control, navigation, and core robot applications. The sensing system  can provide vision (e.g., via a camera ), depth map imaging (e.g., via a 3-D imaging sensor ), collision detection, obstacle detection and obstacle avoidance, and\/or inertial measurement (e.g., via an inertial measurement unit ).","The computing device  may be a tablet computer, portable electronic device, such as phone or personal digital assistant, or a dumb tablet or display (e.g., a tablet that acts as a monitor for an atom-scale PC in the robot body ). In some examples, the tablet computer can have a touch screen for displaying a user interface and receiving user inputs. The computing device  may execute one or more robot applications , which may include software applications (e.g., stored in memory and executable on a processor) for security, medicine compliance, telepresence, behavioral coaching, social networking, active alarm, home management, etc. The computing device  may provide communication capabilities (e.g., secure wireless connectivity and\/or cellular communication), refined application development tools, speech recognition, and person or object recognition capabilities. The computing device , in some examples utilizes an interaction\/COMS featured operating system, such as ANDROID\u00ae provided by Google Inc., IPAD OS\u00ae provided by Apple, Inc., other smart phone operating systems, or government systems, such as RSS A2.","The cloud  provides cloud computing and\/or cloud storage capabilities. Cloud computing may provide Internet-based computing, whereby shared servers provide resources, software, and data to computers and other devices on demand. For example, the cloud  may be a cloud computing service that includes at least one server computing device, which may include a service abstraction layer and a hypertext transfer protocol wrapper over a server virtual machine instantiated thereon. The server computing device may be configured to parse HTTP requests and send HTTP responses. Cloud computing may be a technology that uses the Internet and central remote servers to maintain data and applications. Cloud computing can allow users to access and use applications  without installation and access personal files at any computer with internet access. Cloud computing allows for relatively more efficient computing by centralizing storage, memory, processing and bandwidth. The cloud  can provide scalable, on-demand computing power, storage, and bandwidth, while reducing robot hardware requirements (e.g., by freeing up CPU and memory usage). Robot connectivity to the cloud  allows automatic data gathering of robot operation and usage histories without requiring the robot  to return to a base station. Moreover, continuous data collection over time can yields a wealth of data that can be mined for marketing, product development, and support.","Cloud storage  can be a model of networked computer data storage where data is stored on multiple virtual servers, generally hosted by third parties. By providing communication between the robot  and the cloudy , information gathered by the robot  can be securely viewed by authorized users via a web based information portal.","The portal  may be a web-based user portal for gathering and\/or providing information, such as personal information, home status information, anger robot status information. Information can be integrated with third-party information to provide additional functionality and resources to the user and\/or the robot . The robot system architecture  can facilitate proactive data collection. For example, applications  executed on the computing device  may collect data and report on actions performed by the robot  and\/or a person or environment viewed by the robot  (using the sensing system ). This data can be a unique property of the robot .","In some examples, the portal  is a personal portal web site on the World Wide Web. The portal  may provide personalized capabilities and a pathway to other content. The portal  may use distributed applications, different numbers and types of middleware and hardware, to provide services from a number of different sources. In addition, business portals  may share collaboration in workplaces and provide content usable on multiple platforms such as personal computers, personal digital assistants (PDAs), and cell phones\/mobile phones. Information, news, and updates are examples of content that may be delivered through the portal . Personal portals  can be related to any specific topic such as providing friend information on a social network or providing links to outside content that may help others.",{"@attributes":{"id":"p-0163","num":"0162"},"figref":"FIG. 16C","b":["1600","1602","1640","1610","310","1604","1620","1640","1642","1644","1646","1648","1644","1602","100","1610","1610","1610","1610","1610","1610","1610","1610","1650","1622","1620","1620","1660","1670","100","1620","1650","1660","1670","1680","1620","1610"],"i":["c","a","b","c","d","e"]},"In some examples, the map builder application can build a map of an environment around the robot  by linking together pictures or video captured by the camera  or 3-D imaging sensor  using reference coordinates, as provided by odometry, a global positioning system, and\/or way-point navigation. The map may provide an indoor or outside street or path view of the environment. For malls or shopping centers, the map can provide a path tour through-out the mall with each store marked as a reference location with additional linked images or video and\/or promotional information. The map and\/or constituent images or video can be stored in the database .","The applications  may seamlessly communicate with the cloud services, which may be customized and extended based on the needs of each user entity. Enterprise developers  may upload cloud-side extensions to the cloud  that fetch data from external proprietary systems for use by an application . The simulator  allows the developers  to build enterprise-scale applications without the robot  or associated robot hardware. Users may use the SDK tools  (e.g., usage monitor and service configurator) to add or disable cloud services.","Referring to , in some circumstances, the robot  receives an occupancy map  of objects  in a scene  and\/or work area , or the robot controller  produces (and may update) the occupancy map  based on image data and\/or image depth data received from an imaging sensor  (e.g., the second 3-D image sensor ) over time. In addition to localization of the robot  in the scene  (e.g., the environment about the robot ), the robot  may travel to other points in a connected space (e.g., the work area ) using the sensor system . The robot  may include a short range type of imaging sensor (e.g., mounted on the underside of the torso , as shown in ) for mapping a nearby area about the robot  and discerning relatively close objects , and a long range type of imaging sensor (e.g., mounted on the head , as shown in ) for mapping a relatively larger area about the robot  and discerning relatively far away objects . The robot  can use the occupancy map  to identify known objects  in the scene  as well as occlusions  (e.g., where an object  should or should not be, but cannot be confirmed from the current vantage point). The robot  can register an occlusion  or new object  in the scene  and attempt to circumnavigate the occlusion  or new object  to verify the location of new object  or any objects  in the occlusion . Moreover, using the occupancy map , the robot  can determine and track movement of an object  in the scene . For example, the imaging sensor , , may detect a new position \u2032 of the object  in the scene  while not detecting a mapped position of the object  in the scene . The robot  can register the position of the old object  as an occlusion  and try to circumnavigate the occlusion  to verify the location of the object . The robot  may compare new image depth data with previous image depth data (e.g., the map ) and assign a confidence level of the location of the object  in the scene . The location confidence level of objects  within the scene  can time out after a threshold period of time. The sensor system  can update location confidence levels of each object  after each imaging cycle of the sensor system . In some examples, a detected new occlusion  (e.g., a missing object  from the occupancy map ) within an occlusion detection period (e.g., less than ten seconds), may signify a \u201clive\u201d object  (e.g., a moving object ) in the scene .","In some implementations, a second object of interest, located behind a detected first object in the scene , may be initially undetected as an occlusion  in the scene . An occlusion  can be area in the scene  that is not readily detectable or viewable by the imaging sensor , , . In the example shown, the sensor system  (e.g., or a portion thereof, such as imaging sensor , , ) of the robot  has a field of view  with a viewing angle \u03b8(which can be any angle between 0 degrees and 360 degrees) to view the scene . In some examples, the imaging sensor  includes omni-directional optics for a 360 degree viewing angle \u03b8; while in other examples, the imaging sensor , , has a viewing angle \u03b8of less than 360 degrees (e.g., between about 45 degrees and 180 degrees). In examples, where the viewing angle \u03b8is less than 360 degrees, the imaging sensor , , (or components thereof) may rotate with respect to the robot body  to achieve a viewing angle \u03b8of 360 degrees. In some implementations, the imaging sensor , , or portions thereof, can move with respect to the robot body  and\/or drive system . Moreover, in order to detect the second object , the robot  may move the imaging sensor , , by driving about the scene  in one or more directions (e.g., by translating and\/or rotating on the work surface ) to obtain a vantage point that allows detection of the second object . Robot movement or independent movement of the imaging sensor , , , or portions thereof, may resolve monocular difficulties as well.","A confidence level may be assigned to detected locations or tracked movements of objects  in the working area . For example, upon producing or updating the occupancy map , the controller  may assign a confidence level for each object  on the map . The confidence level can be directly proportional to a probability that the object  actually located in the working area  as indicated on the map . The confidence level may be determined by a number of factors, such as the number and type of sensors used to detect the object . For example, the contact sensor  may provide the highest level of confidence, as the contact sensor  senses actual contact with the object  by the robot . The imaging sensor  may provide a different level of confidence, which may be higher than the proximity sensor . Data received from more than one sensor of the sensor system  can be aggregated or accumulated for providing a relatively higher level of confidence over any single sensor.","Odometry is the use of data from the movement of actuators to estimate change in position over time (distance traveled). In some examples, an encoder is disposed on the drive system  for measuring wheel revolutions, therefore a distance traveled by the robot . The controller  may use odometry in assessing a confidence level for an object location. In some implementations, the sensor system  includes an odometer and\/or an angular rate sensor (e.g., gyroscope or the IMU ) for sensing a distance traveled by the robot . A gyroscope is a device for measuring or maintaining orientation, based on the principles of conservation of angular momentum. The controller  may use odometry and\/or gyro signals received from the odometer and\/or angular rate sensor, respectively, to determine a location of the robot  in a working area  and\/or on an occupancy map . In some examples, the controller  uses dead reckoning. Dead reckoning is the process of estimating a current position based upon a previously determined position, and advancing that position based upon known or estimated speeds over elapsed time, and course. By knowing a robot location in the working area  (e.g., via odometry, gyroscope, etc.) as well as a sensed location of one or more objects  in the working area  (via the sensor system ), the controller  can assess a relatively higher confidence level of a location or movement of an object  on the occupancy map  and in the working area  (versus without the use of odometry or a gyroscope).","Odometry based on wheel motion can be electrically noisy. The controller  may receive image data from the imaging sensor  of the environment or scene  about the robot  for computing robot motion, independently of wheel based odometry of the drive system , through visual odometry. Visual odometry may entail using optical flow to determine the motion of the imaging sensor . The controller  can use the calculated motion based on imaging data of the imaging sensor  for correcting any errors in the wheel based odometry, thus allowing for improved mapping and motion control. Visual odometry may have limitations with low-texture or low-light scenes , if the imaging sensor  cannot track features within the captured image(s).","Other details and features on odometry and imaging systems, which may combinable with those described herein, can be found in U.S. Pat. No. 7,158,317 (describing a \u201cdepth-of field\u201d imaging system), and U.S. Pat. No. 7,115,849 (describing wavefront coding interference contrast imaging systems), the contents of which are hereby incorporated by reference in their entireties.","When a robot is new to a building that it will be working in, the robot may need to be shown around or provided with a map of the building (e.g., room and hallway locations) for autonomous navigation. For example, in a hospital, the robot may need to know the location of each patient room, nursing stations, etc. In some implementations, the robot  receives a layout map , such as the one shown in , and can be trained to learn the layout map . For example, while leading the robot  around the building, the robot  may record specific locations corresponding to locations on the layout map . The robot  may display the layout map  on the web pad  and when the user takes the robot  to a specific location, the user can tag that location on the layout map  (e.g., using a touch screen or other pointing device of the web pads ). The user may choose to enter a label for a tagged location, like a room name or a room number. At the time of tagging, the robot  may store the tag, with a point on the layout map  and a corresponding point on a robot map , such as the one shown in .","Using the sensor system , the robot  may build the robot map  as it moves around. For example, the sensor system  can provide information on how far the robot  has moved and a direction of travel. The robot map  may include fixed obstacles in addition to the walls provided in the layout map . The robot  may use the robot map  to execute autonomous navigation. In the robot map at , the \u201cwalls\u201d may not look perfectly straight, for example, due to detected packing creates along the wall in the corresponding hallway and\/or furniture detected inside various cubicles. Moreover, rotational and resolution differences may exist between the layout map  and the robot map .","After map training, when a user wants to send the robot  to a location, the user can either refer to a label\/tag (e.g., enter a label or tag into a location text box displayed on the web pad ) or the robot  can display the layout map  to the user on the web pad  and the user may select the location on the layout map . If the user selects a tagged layout map location, the robot  can easily determine the location on the robot map  that corresponds to the selected location on the layout map  and can proceed to navigate to the selected location.","If the selected location on the layout map  is not a tagged location, the robot  determines a corresponding location on the robot map . In some implementations, the robot  computes a scaling size, origin mapping, and rotation between the layout map  and the robot map  using existing tagged locations, and then applies the computed parameters to determine the robot map location (e.g., using an affine transformation or coordinates).","The robot map  may not be the same orientation and scale as the layout map . Moreover, the layout map may not be to scale and may have distortions that vary by map area. For example, a layout map  created by scanning a fire evacuation map typically seen in hotels, offices, and hospitals is usually not to drawn scale and can even have different scales in different regions of the map. The robot map  may have its own distortions. For example, locations on the robot map  may been computed by counting wheel turns as a measure of distance, and if the floor was slightly slippery or turning of corners caused extra wheel, inaccurate rotation calculations may cause the robot  to determine inaccurate locations of mapped objects.","A method of mapping a given point  on the layout map  to a corresponding point  on the robot map  may include using existing tagged  points to compute a local distortion between the layout map  and the robot map  in a region (e.g., within a threshold radius) containing the layout map point. The method further includes applying a distortion calculation to the layout map point  in order to find a corresponding robot map point . The reverse can be done if you are starting with a given point on the robot map  and want to find a corresponding point on the layout map , for example, for asking the robot for its current location.",{"@attributes":{"id":"p-0178","num":"0177"},"figref":["FIG. 18C","FIGS. 18B and 18C"],"b":["1800","100","1810","1820","1802","1810","100","1804","100","1812","1810","1806","1822","1820","100","1808","1820","1810","1822","1812","1810","1814","1824","1814","1810","1814"],"i":["c ","c ","c ","c ","c "]},"Referring to , in some implementations, the method includes using tagged layout map points  (also referred to recorded layout map locations) to derive a triangulation of an area inside a bounding shape containing the tagged layout map points , such that all areas of the layout map  are covered by at least one triangle  whose vertices are at a tagged layout map points . The method further includes finding the triangle  that contains the selected layout map point  and determining a scale, rotation, translation, and skew between the triangle  mapped in the layout map  and a corresponding triangle  mapped in the robot map  (i.e., the robot map triangle with the same tagged vertices). The method includes applying the determined scale, rotation, translation, and skew to the selected layout map point  in order to find a corresponding robot map point .",{"@attributes":{"id":"p-0180","num":"0179"},"figref":"FIG. 19C","b":["1900","1924","1902","1904","1906"]},"Referring to , in another example, the method includes determining the distances of all tagged points  in the layout map  to the selected layout map point  and determining a centroid  of the layout map tagged points . The method also includes determining a centroid  of all tagged points  on the robot map . For each tagged layout map point , the method includes determining a rotation and a length scaling needed to transform a vector  that runs from the layout map centroid  to the selected layout point  into a vector  that runs from the robot map centroid  to the robot map point . Using this data, the method further includes determining an average rotation and scale. For each tagged layout map point , the method further includes determining an \u201cideal robot map coordinate\u201d point by applying the centroid translations, the average rotation, and the average scale to the selected layout map point . Moreover, for each tagged layout map point , the method includes determining a distance from that layout map point  to the selected layout map point  and sorting the tagged layout map points  by these distances, shortest distance to longest. The method includes determining an \u201cinfluence factor\u201d for each tagged layout map point , using either the inverse square of the distance between each tagged layout map point  and the selected layout map point . Then for each tagged layout map point , the method includes determining a vector which is the difference between the \u201cideal robot map coordinate\u201d point and robot map point , prorated by using the influence factors of the tagged layout map points . The method includes summing the prorated vectors and adding them to \u201cideal robot map coordinate\u201d point for the selected layout map point . The result is the corresponding robot map point  on the robot map . In some examples, this method\/algorithm includes only the closest N tagged layout map point  rather than all tagged layout map point .",{"@attributes":{"id":"p-0182","num":"0181"},"figref":"FIG. 20C","b":["2000","1924","1810","1820","2002","2004","2006","2006"]},"Referring again to , although the robot  may operate autonomously, a user may wish to control or manage the robot  through an application . For example, a user may wish to control or define movement of the robot  within an environment or scene , as by providing navigation points on a map. In some implementations, the map builder application allows the user to create an occupancy map  () or a layout map  () of a scene  based on sensor data generated by the sensor system  of one or more robots  in the scene . In some examples, robot maps  can be post-processed to produce one or more vector-based layout maps . The map builder application may allow the user to customize the maps ,  (e.g., lining up walls that should look parallel, etc). Moreover, annotations recognizable by the robot  and by the application (and\/or other applications ) can be added to the maps , . In some implementations, the map builder application may store robot map data, layout map data, user-defined objects, and annotations securely in the cloud storage  on the cloud , using a cloud service. Relevant data sets may be pushed from the cloud services to the appropriate robots  and applications .","In some implementations, the mapping and navigation application () allows users to specifying a destination location on a layout map  and request the robot  to drive to the destination location. For example, a user may execute the mapping and navigation application on a computing device, such as a computer, tablet computer, mobile device, etc, which is in communication with the cloud . The user can access a layout map  of the environment about the robot , mark or otherwise set a destination location on the layout map , and request the robot  to move to the destination location. The robot  may then autonomously navigate to the destination location using the layout map  and\/or a corresponding robot map . To navigate to the destination location, the robot  may rely on its ability to discern its local perceptual space (i.e., the space around the robot  as perceived through the sensor system ) and execute an object detection obstacle avoidance (ODOA) strategy.","Referring to FIGS.  and A-D, in some implementations, the robot  (e.g., the control system  shown in ) classifies its local perceptual space into three categories: obstacles (black) , unknown (gray) , and known free (white) . Obstacles  are observed (i.e., sensed) points above the ground G that are below a height of the robot  and observed points below the ground G (e.g., holes, steps down, etc.). Known free  corresponds to areas where the 3-D image sensors  can see the ground G. Data from all sensors in the sensor system  can be combined into a discretized 3-D voxel grid. The 3-D grid can then be analyzed and converted into a 2-D grid  with the three local perceptual space classifications.  provides an exemplary schematic view of the local perceptual space of the robot  while stationary. The information in the 3-D voxel grid has persistence, but decays over time if it is not reinforced. When the robot  is moving, it has more known free area  to navigate in because of persistence.","An object detection obstacle avoidance (ODOA) navigation strategy for the control system  may include either accepting or rejecting potential robot positions that would result from commands. Potential robot paths  can be generated many levels deep with different commands and resulting robot positions at each level.  provides an exemplary schematic view of the local perceptual space of the robot  while moving. An ODOA behavior () can evaluate each predicted robot path . These evaluations can be used by the action selection engine  to determine a preferred outcome and a corresponding robot command. For example, for each robot position  in the robot path , the ODOA behavior can execute a method for object detection and obstacle avoidance that includes identifying each cell in the grid  that is in a bounding box around a corresponding position of the robot , receiving a classification of each cell. For each cell classified as an obstacle or unknown, retrieving a grid point corresponding to the cell and executing a collision check by determining if the grid point is within a collision circle about a location of the robot . If the grid point is within the collision circle, the method further includes executing a triangle test of whether the grid point is within a collision triangle (e.g., the robot  can be modeled as triangle). If the grid point is within the collision triangle, the method includes rejecting the grid point. If the robot position is inside of a sensor system field of view of parent grid points on the robot path , then the \u201cunknown\u201d grid points are ignored because it is assumed that by the time the robot  reaches those grid points, it will be known.","The method may include determining whether any obstacle collisions are present within a robot path area (e.g., as modeled by a rectangle) between successive robot positions  in the robot path , to prevent robot collisions during the transition from one robot position  to the next.",{"@attributes":{"id":"p-0188","num":"0187"},"figref":["FIG. 21C","FIG. 21C","FIG. 21B"],"b":["100","405","510","450","450","200","100","405","100","450","450","100","510","100","100","100","450","450","100","2106","450","450","100","100"],"i":["a","b","a","b ","a","b ","a","b "]},"Referring to , in some examples, given a large number of possible trajectories with holonomic mobility, the ODOA behavior may cause robot to choose trajectories where it will (although not currently) see where it is going. For example, the robot  can anticipate the sensor field of view orientations that will allow the control system  to detect objects. Since the robot can rotate while translating, the robot can increase the sensor field of view  while driving.","By understanding the field of view  of the sensor system  and what it will see at different positions, the robot  can select movement trajectories that help it to see where it is going. For example, when turning a corner, the robot  may reject trajectories that make a hard turn around the corner because the robot  may end up in a robot position  that is not sensor system field of view  of a parent robot position  and of which it currently has no knowledge of, as shown in . Instead, the robot  may select a movement trajectory that turns to face a desired direction of motion early and use the holonomic mobility of the drive system  to move sideways and then straight around the corner, as shown in .","In some examples, the mapping and navigation application () provides teleoperation functionality. For example, the user can drive the robot  using video waypoint driving (e.g., using one or more of the cameras or imaging sensors , ). The user may alter a height Hof the leg  to raise\/lower the height Hof the torso  () to alter a view field of one of the imaging sensors  and\/or pan and\/or tilt the robot head  to alter a view field of a supported camera  or imaging sensor , (see e.g., ). Moreover, the user can rotate the robot about its Z-axis using the drive system  to gain other fields of view of the cameras or imaging sensors , . In some examples, the mapping and navigation application allows the user to switch between multiple layout maps  (e.g., for different environments or different robots ) and\/or manage multiple robots  on one layout map . The mapping and navigation application may communicate with the cloud services API to enforce policies on proper robot usage set forth by owners or organizations of the robots .","Referring again to , in some implementations, the video conferencing application allows a user to initiate and\/or participate in a video conferencing session with other users. In some examples, the video conferencing application allows a user to initiate and\/or participate in a video conferencing session with a user of the robot , a remote user on a computing device connected to the cloud  and\/or another remote user connected to the Internet using a mobile handheld device. The video conferencing application may provide an electronic whiteboard for sharing information, an image viewer, and\/or a PDF viewer.","The scheduling application allows users to schedule usage of one or more robots . When there are fewer robots  than the people who want to use them, the robots  become scarce resources and scheduling may be needed. Scheduling resolves conflicts in resource allocations and enables higher resource utilization. The scheduling application can be robot-centric and may integrate with third party calendaring systems, such as MICROSOFT OFFICE OUTLOOK\u00ae by the Microsoft Corporation or GOOGLE CALENDAR by Google Inc. In some examples, the scheduling application communicates with the cloud  through one or more cloud services to dispatch robots  at pre-scheduled times. The scheduling application may integrate time-related data (e.g., maintenance schedule, etc.) with other robot data (e.g., robot locations, health status, etc.) to allow selection of a robot  by the cloud services for missions specified by the user.","In one scenario, a doctor may access the scheduling application on a computing device (e.g., a portable tablet computer or hand held device) in communication with the cloud  for scheduling rounds at a remote hospital later in the week. The scheduling application can schedule robots  in a similar manner to allocating a conference room on a electronic calendar. The cloud services manage the schedules. If in the middle of the night, the doctor gets a call that a critical patient at a remote hospital needs to be seen, the doctor can request a robot  using the scheduling application and\/or send a robot  to a patient room using the mapping and navigation application . The doctor may access medical records on his computing device (e.g., by accessing the cloud storage ) and video or imagery of the patient using the video conferencing application . The cloud services may integrate with robot management, an electronic health record systems and medical imaging systems. The doctor may control movement of the robot  remotely to interact with the patient. If the patent speaks only Portuguese, the video conferencing application may automatically translate languages or a 3rd party translator may join the video conference using another computing device in communication with the cloud  (e.g., via the Internet). The translation services can be requested, fulfilled, recorded, and billed using the cloud services.","The usage\/statistics application can be a general-purpose application for users to monitor robot usage, produce robot usage reports, and\/or manage a fleet of robots . This application may also provide general operating and troubleshooting information for the robot . In some examples, the usage\/statistics application allows the user to add\/disable services associated with use of the robot , register for use of one or more simulators , modify usage policies on the robot, etc.","In another scenario, a business may have a fleet of robots  for at least one telepresence application. A location manager may monitor a status of one or more robots  (e.g., location, usage and maintenance schedules, battery info, location history, etc.) using the usage\/statistics application executing on a computing device in communication with the cloud  (e.g., via the Internet). In some examples, the location manager can assist a user with a robot issue by sharing a user session. The location manager can issue commands to any of the robots  using an application  to navigate the corresponding robot , speak through the robot  (i.e., telepresence), enter into a power-saving mode (e.g., reduce functionality), find a charger, etc. The location manager or a user can use applications  to manage users, security, layout maps , video view fields, add\/remove robots to\/from the fleet, and more. Remote operators of the robot  can schedule\/reschedule\/cancel a robot appointment (e.g., using the scheduling application ) and attend a training course using a simulated robot that roams a simulated space (e.g., using the simulator  executing on a cloud server).","The SDK libraries  may include one or more source code libraries for use by developers  of applications . For example, a visual component library can provide graphical user interface or visual components having interfaces for accessing encapsulated functionality. Exemplary visual components include code classes for drawing layout map tiles and robots, video conferencing, viewing images and documents, and\/or displaying calendars or schedules. A robot communication library (e.g., a web services API) can provide a RESTful (Representational State Transfer), JSON (JavaScript Object Notation)-based API for communicating directly with the robot . The robot communication library can offer Objective-C binding (e.g., for iOS development) and Java binding (e.g., for ANDROID\u00ae development). These object-oriented APIs allow applications  to communicate with the robot , while encapsulating from the developers  underlying data transfer protocol(s) of the robot . A person following routine of the robot communication library may return a video screen coordinate corresponding to a person tracked by the robot . A facial recognition routine of the robot communication library may return a coordinate of a face on a camera view of the camera  and optionally the name of the recognized tracked person. Table 1 provides an exemplary list of robot communication services.",{"@attributes":{"id":"p-0198","num":"0197"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Service","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Database Service","List all available map databases on the robot 100."]},{"entry":["Create Database","Create a robot map database."]},{"entry":"Service"},{"entry":["Delete Database","Delete a robot map database."]},{"entry":"Service"},{"entry":["Map List Service","Return a list of maps from a map database on"]},{"entry":[{},"the robot 100."]},{"entry":["Map Service","Return a specific robot map."]},{"entry":["Create Map Service","Create a robot map in a database."]},{"entry":["Delete Map Service","Delete a robot map from a database."]},{"entry":["Create Tag Service","Create a tag for a map in a database (e.g., by"]},{"entry":[{},"providing x, y, and z coordinates of the tag position"]},{"entry":[{},"an orientation angle of the robot, in radians, and a"]},{"entry":[{},"brief description of the tag)."]},{"entry":["Delete Tag Service","Delete a tag for a map in a database."]},{"entry":["List Tags Service","List tags for a specified map in a specified database."]},{"entry":["Cameras Service","List available cameras 320, 450 on the robot 100."]},{"entry":["Camera Image","Take a snapshot from a camera 320, 450 on the"]},{"entry":["Service","robot 100."]},{"entry":["Robot Position","Return a current position of the robot 100. The"]},{"entry":["Service","position can be returned as:"]},{"entry":[{},"x -- a distance along an x-axis from an origin"]},{"entry":[{},"(in meters)."]},{"entry":[{},"y -- a distance along a y-axis from an origin"]},{"entry":[{},"(in meters)."]},{"entry":[{},"theta -- an angle from the x-axis, measured"]},{"entry":[{},"counterclockwise in radians."]},{"entry":["Robot Destination","Sets a destination location of the robot 100 and"]},{"entry":["Service","commands the robot 100 to begin moving to that"]},{"entry":[{},"location."]},{"entry":["Drive-To-Tag","Drives the robot 100 to a tagged destination"]},{"entry":["Service","in a map."]},{"entry":["Stop Robot Service","Commands the robot 100 to stop moving."]},{"entry":["Robot Info Service","Provide basic robot information (e.g., returns a"]},{"entry":[{},"dictionary of the robot information)."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"A cloud services communication library may include APIs that allow applications  to communicate with the cloud  (e.g., with cloud storage , applications servers , databases  and the simulator ) and\/or robots  in communication with the cloud . The cloud services communication library can be provided in both Objective-C and Java bindings. Examples of cloud services APIs include a navigation API (e.g., to retrieve positions, set destinations, etc.), a map storage and retrieval PAI, a camera feed API, a teleoperation API, a usage statistics API, and others.","A cloud services extensibility interface may allow the cloud services to interact with web services from external sources. For example, the cloud services may define a set of extension interfaces that allow enterprise developers  to implement interfaces for external proprietary systems. The extensions can be uploaded and deployed to the cloud infrastructure. In some examples, the cloud services can adopt standard extensibility interface defined by various industry consortiums.","The simulator  may allow debugging and testing of applications  without connectivity to the robot . The simulator  can model or simulate operation of the robot  without actually communicating with the robot  (e.g., for path planning and accessing map databases). For executing simulations, in some implementations, the simulator  produces a map database (e.g., from a layout map ) without using the robot . This may involve image processing (e.g., edge detection) so that features (like walls, corners, columns, etc) are automatically identified. The simulator  can use the map database to simulate path planning in an environment dictated by the layout map .","A cloud services extension uploader\/deployer may allow users upload extensions to the cloud , connect to external third party user authentication systems, access external databases or storage (e.g., patient info for pre-consult and post-consult), access images for illustration in video conferencing sessions, etc. The cloud service extension interface may allow integration of proprietary systems with the cloud .","Various implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and\/or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and\/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.","These computer programs (also known as programs, software, software applications or code) include machine instructions for a programmable processor, and can be implemented in a high-level procedural and\/or object-oriented programming language, and\/or in assembly\/machine language. As used herein, the terms \u201cmachine-readable medium\u201d and \u201ccomputer-readable medium\u201d refer to any computer program product, apparatus and\/or device (e.g., magnetic discs, optical disks, memory, Programmable Logic Devices (PLDs)) used to provide machine instructions and\/or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term \u201cmachine-readable signal\u201d refers to any signal used to provide machine instructions and\/or data to a programmable processor.","Implementations of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer program products, i.e., one or more modules of computer program instructions encoded on a computer readable medium for execution by, or to control the operation of, data processing apparatus. The computer readable medium can be a machine-readable storage device, a machine-readable storage substrate, a memory device, a composition of matter effecting a machine-readable propagated signal, or a combination of one or more of them. The term \u201cdata processing apparatus\u201d encompasses all apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers. The apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them. A propagated signal is an artificially generated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus.","A computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, and it can be deployed in any form, including as a stand alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.","The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit).","Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks. However, a computer need not have such devices. Moreover, a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio player, a Global Positioning System (GPS) receiver, to name just a few. Computer readable media suitable for storing computer program instructions and data include all forms of non volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto optical disks; and CD ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.","Implementations of the subject matter described in this specification can be implemented in a computing system that includes a back end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front end component, e.g., a client computer having a graphical user interface or a web browser through which a user can interact with an implementation of the subject matter described is this specification, or any combination of one or more such back end, middleware, or front end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (\u201cLAN\u201d) and a wide area network (\u201cWAN\u201d), e.g., the Internet.","The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.","While this specification contains many specifics, these should not be construed as limitations on the scope of the invention or of what may be claimed, but rather as descriptions of features specific to particular implementations of the invention. Certain features that are described in this specification in the context of separate implementations can also be implemented in combination in a single implementation. Conversely, various features that are described in the context of a single implementation can also be implemented in multiple implementations separately or in any suitable sub-combination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a sub-combination or variation of a sub-combination.","Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain circumstances, multi-tasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.","A number of implementations have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the disclosure. Accordingly, other implementations are within the scope of the following claims. For example, the actions recited in the claims can be performed in a different order and still achieve desirable results."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 4B","FIG. 4A"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 4C","FIG. 4A"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 5C"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 5D","FIG. 5C"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 6B"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 6C","FIG. 6B"]},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIGS. 8A-8G"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIGS. 10A-10E"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIGS. 16A-16C"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 17A"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 17B"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 18A"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 18B","FIG. 18A"]},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 18C"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 19A"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 19B","FIG. 19A"]},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 19C"},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 20A"},{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 20B","FIG. 20A"]},{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 20C"},{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 21A"},{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 21B"},{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 21C"},{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 21D"},{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 21E"},{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 21F"}]},"DETDESC":[{},{}]}
