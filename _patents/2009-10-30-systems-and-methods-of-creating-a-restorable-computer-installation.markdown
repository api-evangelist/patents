---
title: Systems and methods of creating a restorable computer installation
abstract: A method for creating a restorable computer installation includes performing a master software installation on a master drive in a computer system using sources of files available to an end-user. A source package is created including files that cannot be restored from the sources of files used in the master software installation. A file is excluded from the source package. Restore information is included in a catalog record of a catalog file, the catalog record corresponding to each file in the master software installation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08661433&OS=08661433&RS=08661433
owner: Hewlett-Packard Development Company, L.P.
number: 08661433
owner_city: Houston
owner_country: US
publication_date: 20091030
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["RELATED PATENT DATA","Cross-Reference to Related Application","BACKGROUND","DETAILED DESCRIPTION"],"p":["This application claims priority to PCT Patent Application Serial No. PCT\/US2009\/062768, which was filed on Oct. 30, 2009 which is herein included by reference in its entirety for all purposes.","Computer systems generally require the installation of software including an operating system to perform computing tasks. Software is generally licensed to be installed by a manufacturer or vendor (OEM, original equipment manufacturer) of a computer, or by an end-user. When an end-user installs and configures the software, it may be difficult for technical support to know the logical state of a software installation. Furthermore, there are cases when, e.g., an OEM licensing model is not available, thus making it very difficult to direct the end-user to \u201crestore to factory settings.\u201d","An embodiment of a method as disclosed herein for creating a restorable computer installation includes performing a master software installation on a master drive in a computer system using sources of files available to an end-user. A source package is created including files that cannot be restored from the sources of files used in the master software installation. A file is excluded from the source package. Restore information is included in a catalog record of a catalog file, the catalog record corresponding to each file in the master software installation.","Embodiments of the method  and computer-readable medium  as disclosed herein create a restorable computer installation that configures a computer to a \u201cfactory\u201d or well-known configuration while working within relevant licensing structures. Embodiments as disclosed herein may be useful, for example, in a Virtual Desktop Infrastructure (VDI) environment where an OEM may not be licensed to have an end-uses employ cloning techniques to restore from a backup DVD provided by the OEM. In a VDI environment, there are no OEM operating system (OS) licenses for virtual machine (VM) based clients.","Further, embodiments of the method  and computer-readable medium  as disclosed herein remove the need to have special \u201cpost-installation\u201d tasks (e.g., scripts, executable programs, etc.) that are run after a successful unattended installation, for example to modify access control lists or registry settings. It is to be understood that as used herein, the word \u201cscript\u201d means a program or sequence of instructions that is interpreted or carried out by another program rather than by the computer (in contrast to a compiled program which is carried out by the computer).","As mentioned above, previous methods for attempting to create a well known computer installation were unsatisfactory. Those methods included unattended installations and scripting. Unattended installations and scripting may be combined for complex setups, but such combinations are very difficult to set up. Further, it is difficult to verify that the installation will work as expected in each case. Such installations generally fail more than 10% of the time.","An unattended installation \u201creplays\u201d an installation scenario without any user input. However, there is currently no easy way to use unattended installations for complex setups. Building the unattended installation input files requires much effort, as it may be necessary to have an in-depth understanding of the OS and computer architecture in use, for example, to add the necessary set of driver files used to operate hard disk drives if this set of files is not provided in the media used to install the OS to be restored. One other drawback of unattended installations is that the result of the installation may not be what was expected when the unattended installation was designed. Although there may be many causes of unexpected configurations, some of them may be that the user did not provide sources that were used to create an unattended.txt input file, as well as complex interactions between software and hardware. An example of a complex interaction between software and hardware may be found in Plug and Play systems in a Windows OS installation.","Another drawback of unattended installations manifests itself when the installation is made on a variety of computer hardware combinations. For example, computers may have different motherboards, processors, video cards, sound cards, memory and peripherals. Designing an unattended installation to yield a well known software configuration for the myriad of potential hardware combinations becomes complex and difficult to validate\/qualify, if even possible.","The present inventor has provided herein a method and computer-readable medium to rebuild a complete and consistent \u201cend-user\u201d licensed software installation without having to provide sources that include licensed or copyrighted software.","As will become apparent upon reference to the present disclosure, embodiments disclosed herein: simplify the complexity of managing and\/or supporting an end-user based licensing model; and significantly reduce the amount of data to be transferred\/shipped in order to restore some factory\/well-known settings. Further, information technology (IT) support teams operating from a central location and supporting remote (e.g., non-technical) users may use embodiments as disclosed herein in order to support, restore or deploy pre-configured settings for the remote users' computers.","Embodiments of the method and computer-readable medium  as disclosed herein eliminate a requirement to rebuild an installation on a real (physical or virtual) client that will be used with the rebuilt drive. In embodiments of the method, a target drive  can be rebuilt from any client that can run a rebuilder application (according to embodiments herein) and that can access a target drive . This makes it possible for an end-user to prepare a target drive  that will be made available to actual users of the drive, without having a \u201creal\u201d client at hand when running the rebuilder application.","Further, embodiments of the present disclosure are in contrast to \u201cOEM licensing\u201d models where an operating system is pre-installed and shipped with a computer system ; and\/or where recovery media (having embedded thereon the files that were pre-installed on the target computer) are shipped with the target computer.","It is to be understood that embodiments of the present disclosure may ease operating system (OS) installation\/configuration when no OS is shipped with the target computer.","Referring now to  and  together, an embodiment of the method for creating a restorable computer installation is generally designated at reference numeral  of . A master software installation is performed on a master drive  in a computer system  using sources of files  available to an end-user, as shown at reference numeral .","In embodiments herein, the master software installation may include an operating system, a file system, application or combinations thereof. A non-limiting example of a source of files  available to an end-user includes an end-user licensed version of an OS stored on media or an internet I location. It is to be understood that \u201cmedia\u201d includes any computer-readable object on which data can be stored. Non-limitative examples of media include: hard drives, removable drives, CD-ROM or CD-R discs, DVDs, flash memory, USB drives, floppy disks, shared folders available through a network link, magnetic tape, and the like. Another non-limiting example of a source of files  available to an end-user is an installation CD that contains word processing software purchased by an end-user. An example embodiment as disclosed herein may use one or more installation media, e.g., a Microsoft\u00ae Windows\u2122 XP installation CD or a Microsoft\u00ae Windows\u2122 Vista installation DVD.","A further example of a source of files  available to an end-user is the internet I. A successful master software installation may include additional sources of files that are not provided by the source media. For example, OS source media may not include up-to-date drivers. The internet I may be a source of drivers and other files available to an end-user.","In an embodiment, the method may further include configuring the computer system  to achieve desired functionality, including setting firewall rule(s), configuring policy\/ies, creating user account(s), creating script(s), applying security to a file, setting access rights, and other configuration tasks.","Embodiments disclosed herein may include running a cataloger application on the computer system . The cataloger application may create a catalog file on an external storage. Non-limitative examples of the external storage are a network share, a USB drive, an external hard disk drive, a recordable optical drive (CD-R, DVD-R), magnetic tape, floppy disks, etc. The catalog file may include a catalog record corresponding to each file on the master drive . The cataloger application may record in the catalog file an identifying code (an example of which is shown at reference numeral  in ) corresponding to each of the sources of files that are present on the master drive . The identifying code  may be sufficiently specific to identify, for example, a specific version of an installation CD or DVD, or a universal resource locator (URL). Validation code may also be used, e.g., MD5 hash of files or set of files, etc.","Referring also to , in an embodiment, the cataloger application may record metadata and rules in the catalog file. Non-limiting examples of metadata include: master boot record (MBR), number of partitions, registry, and configuration information, and the like. It is to be understood that rules may depend on user input, e.g., the number of partitions to process in the source drive, whether it should be processed to force partitioning\/formatting of the target drive , etc. The catalog record may further contain security information (for example, an access control list (ACL)) for each file. The target drive  will have the same or substantially the same security information as the master drive  for each object of a file system restored on the target drive .","Referring again to , in embodiments herein, the cataloger application may scan each file installed on the master drive  and record a corresponding entry in the catalog file. For each catalog record corresponding to each file in the master software installation, the cataloger application may record restore information. The restore information may include an identification of the source of the file (for example, the source repository  may be installation media (CD\/DVD), a URL, etc.), an example of the identification being shown at reference numeral . The restore information may further include a path to a folder containing the file on the source, an example of which is shown at reference numeral , a path to a folder containing the file on the master drive , an example of which is shown at reference numeral , and a method of restoration (for example, instruction to download from the internet I), an example of which is shown at reference numeral .","In an embodiment, the cataloger application determines if each file having an entry in the catalog file can be restored from the sources of files  used for the master software installation. If so, then details are added to the corresponding catalog entry in order to specify how to restore the file from the source. For example, the cataloger application may use \u201cextract\u201d functions from Windows application programming interface (API) (LZExpand and the like) to extract a copy of a file that is a good candidate to be the source for an installed file, compare the extracted and the installed files, and if they match, record the validated source in the catalog entry for the installed file.","The catalog file may include an existing catalog file that the OS\/software installation procedure uses. For example, the layout.inf file on a Windows XP installation CD contains a list of the files and the corresponding destination folder for the files after a Windows setup procedure. An algorithm or rule that is known to be used during installation may be used in populating the catalog file. For example, the Windows XP installation media contains in its \\I386 folder all source files as LZCompressed files. Names of the LZCompressed files are the same as the names of destination files except that the last letter of the extension is replaced by a \u201c_\u201d character. To illustrate: the source file for Explorer.exe is \\I1386\\\\explorer.ex_. A catalog entry for Explorer.exe may contain details such as (\u201cmeta code\u201d): Destination Path=(partition1)\\Windows\\System32; Source Path=\\I386\\explorer.ex_; Source repository=1; Restoring method=LZExpand. In an embodiment, the catalog file may be built, and the source path details may be recorded at the same time by a single application.","The catalog file can also include a \u201cSource Repository\u201d section containing details such as:",{"@attributes":{"id":"p-0031","num":"0030"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"[Source Repositories]"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Source Repository ID = 1"},{"entry":"Source Repository 1 Media type= Optical Disk"},{"entry":"Source Repository 1 Friendly Name= \u201cWindows 7 Ultimate x86 dvd"},{"entry":"x15-65921\u201d"},{"entry":"Source Repository 1 Validation Method 1 = File details;"},{"entry":"File=\/sources\/install.wim; Date=2009\/07\/14 10:26:40; Size=2188587580;"},{"entry":"Source Repository 1 Validation Method 2 = Volume Label; Label="},{"entry":"GRMCULFRER_EN_DVD;"},{"entry":"Source Repository 1 Validation Method 3 = Volume Serial Number;"},{"entry":"SN= E3C9-2C86;"},{"entry":"Source Repository ID=2"},{"entry":"Source Repository 2 Media type= URL; link="},{"entry":"ftp:\/\/ftp.hp.com\/pub\/softpaq\/sp42001-42500\/sp42486.exe"},{"entry":"Source Repository 2 Friendly Name= \u201cBroadcom Wireless LAN Driver"},{"entry":"for Microsoft Windows Vista\u201d"},{"entry":"Source Repository 2 Validation Method 1 = MD5sum; Source="},{"entry":"ftp:\/\/ftp.hp.com\/pub\/softpaq\/sp42001-42500\/sp42486.exe;"},{"entry":"hash=cc509290681412d68c245c4bcf006fa9"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Referring still to , embodiments as disclosed herein include a step of including restore information in a catalog record of the catalog file, the catalog record corresponding to each file in the master software installation, as shown at reference numeral . Restore information includes identification  of the source repository  and method of restoration  for each file in the master software installation.","Embodiments as disclosed herein may include creating a source package  including a file or files that cannot be restored from the sources of files used in the master software installation, as shown at reference numeral . The catalog record corresponding to a file in the source package  indicates that the may be restored from the source package . In an example of an embodiment, the cataloger application may create the source package  by storing a file in a .zip archive file to be recorded on a CD. In a further embodiment, the cataloger application creates the source package ; while in yet another embodiment, a packager application may create the source package .","It is to be understood that the cataloger application may be run on-line or off-line. As used herein, running the cataloger application on-line means running the cataloger application on the computer upon which the master software installation has been made and used to operate the computer. In the on-line case, the master software installation computer is booted off the drive on which the master software installation has been made. Correlatively, running the cataloger application off-line means the master software installation computer boots off of a separate drive from the drive on which the master software installation is made, and accesses the drive containing the master software installation as an \u201cextra\u201d or secondary data drive, but not as a system drive. For example, if using Microsoft\u00ae Windows\u2122 systems, when running the cataloger application in the \u201coff-line\u201d case, the drive containing the master software installation would then usually not be mounted as the C: drive.","Further, it is to be understood that one or more files may be excluded from the source package , as shown at reference numeral . An example of a file that may be excluded from the source package  is a file that is unlicensed to ship. However, the identification  of the source repository  for the source and a method of restoration  for the file that is unlicensed to ship may be stored in the catalog file.","The source package  may include files that have been generated by the master software installation (e.g., registry database files and configuration files) and that are needed to operate a system when operated off the target (restored) drive. These files are copied from the master drive  to the source package .","An embodiment as disclosed herein may include storing a copy of a special disk sector (for example, master boot record (MBR), or volume boot record (VBR)) in at least one specific file embedded in the source package . Alternatively, partitioning tools may be used that are available in an end-user copy of sources listed in the catalog file to restore the MBR and VBR, or in the system used to operate the application that will perform the restore\/rebuild operation.","Embodiments as disclosed herein may further include recording details about a master software installation file system in a catalog file or in another file. The details about the file system may include, for example: type of file system, boot entries processing rules, quantity of partitions, size of partitions in e.g., megabytes (MB) or percentage of total disk space, etc.","In some embodiments of the present disclosure, the catalog file can embed rules that would be processed prior to or after rebuilding the files of which the master software installation is composed. Some examples of \u201cpre-processing\u201d rules for rebuilding include: creating and formatting a defined number of partitions with their size (in MB or percentage of disk space), formatting existing partitions, activating a given partition (making it the boot partition), and the like. Examples of \u201cpost-processing\u201d rules include: process boot entries, change data related to disk signature in configuration entries (such as Registry Databases), modify mount point table, change access rights to some files or folders, and the like.","The cataloger application may execute certain rules prior to or after creating the catalog file. Non limiting examples of pre-processing rules for cataloging include: making a backup of registry or configuration file(s), and modifying the registry or configuration file(s) in the master software installation. These pre-processing rules for cataloging may be configured, e.g., by user input or by configuration data. An example of a post-processing rule for the cataloger application is restoring the backup of original registry or configuration files after the catalog file has been built.","The catalog file built by the cataloger application can also embed details about the operating system installed in the master software installation. These details may be used to enforce some rules when restoring the software installation on the target drive . For example, if the OS is Microsoft\u00ae Windows\u2122 XP, the rules related to adapting the boot entries would have to process the boot.ini file, and if the OS is Microsoft\u00ae Windows\u2122 Vista or Microsoft\u00ae Windows\u2122 7, the rules related to adapting the boot entries would have to process BCD (Boot Configuration Data) entries.","In an embodiment of the method, the restorable computer installation is configured to be restored by running a rebuilder application. The present disclosure also includes a computer-readable medium  (as shown in ) encoded with a data structure configured to run as the rebuilder application for restoring the computer installation. It is to be understood that computer-readable medium  may be any suitable media, including but not limited to hard drives, removable drives, CD-ROM or CD-R discs, DVDs, flash memory, USB drives, floppy disks, shared folders available through a network link, magnetic tape, and\/or the like.","The rebuilder application may be configured to validate that the end-user possesses or can access each of the sources included in the catalog file that is not in the source package . The rebuilder application may interrupt running of the rebuilder application, or display a warning if the end-user does not possess or cannot access each of the sources included in the catalog file. It is assumed that the end-user can access the source package  file. Using the catalog file as an instruction set, the rebuilder may further replicate the master software installation on the target drive  using the following sources: the end-user copy of sources listed in the catalog file (which may include sources available through a network link), and the source package  as the source for files not available in the end-user copy of sources listed in the catalog file.","In an embodiment of the present disclosure, prior to replicating the master software installation on the target drive , the rebuilder application may be configured to create a partition on the target drive  and\/or format the target drive  and\/or mount the target drive . The partitioning, formatting, and\/or mounting is configured to be accomplished using: a set of functions or software tools available with the OS under which the rebuilder application runs; an end-user copy of sources; or code contained within the rebuilder application.","It is to be understood that the target drive  may be any repository that is configured to contain a complete and consistent software or operating system installation including a real fixed or removable disk drive, a virtual disk drive, a local folder, or remote folder.","Examples of suitable repositories for the target drive  include, but are not limited to:","a fixed hard disk drive (HOD) connected to the computer running the rebuilder application; the connection can be made through a Serial Advanced Technology Attachment (SATA) cable or connector, a Parallel Advanced Technology Attachment (PATA) cable or connector, a Small Computer System Interface (SCSI) cable or connector, etc.;","an external HOD connected to the computer running the rebuilder application; the connection can be made through a Universal Serial Bus (USB) cable or connector, a firewire (IEEE 1384) cable, etc.;","a Virtual Disk file such as VMWare\u00ae .vmdk files, Microsoft\u00ae .vhd files, Hewlett-Packard\u00ae Image Manager .vol files, etc.; the file is made available to the computer running the rebuilder application through a virtualization software that makes the file appear as a disk drive; and","a set of shared folders available to the computer running the rebuilder application. Each folder in the set may be a partition on the target drive . Usually, such a repository would be built by sharing the root folders of each of the partitions of a physical or virtual drive so that the computer running the rebuilder application can have full control of these folders. In the case where shared folders are used, some of the operations are not available to the rebuilder application, such as partitioning and formatting (because these operations are available when using disk repositories, not when using folder repositories). The operations that are not available in this case would then have to be performed by the end-user, perhaps manually, and usually prior to running the rebuilder application. Due to these limitations, using shared folders as the repository for target drive  could be made unavailable by the rebuilder application if the master software installation to rebuild does not allow use of a shared folders repository. The catalog the could contain instructions to not allow use of a shared folders repository.","The rebuilder application may be instructed by rules in catalog file to partition the target drive  prior to replicating the master software installation on the target drive  using a set of functions provided by the OS operating the computer that runs the rebuilder application, provided by components included in the master software installation, or by using code contained within the rebuilder application. In a case where the partitioning code is contained within the rebuilder application, the rebuilder application may be configured with the system support directly within the rebuilder application so that it can perform file-system based operations even if the OS that runs the rebuilder application cannot access the kind of the system used in target drive . For example, a rebuilder application running on Windows OS could embed third extended the subsystem (ext3) support in order to rebuild a target drive  containing a Linux installation installed on an ext3 file system.","Similarly, the rebuilder application could embed support to mount a specific file system even if the OS that operates the computer that runs the rebuilder application does not have such support to mount the file system. For example, a rebuilder application running on Windows OS could embed Unix file system (ufs) support in order to rebuild a target drive  containing a FreeBSD installation installed on a Unix the system.","Referring now to , embodiments of the method and computer-readable medium  as disclosed herein allow providing to end-users a self-contained environment , if desired. Self-contained environment  may use an open-source operating system  to boot (operate) a computer available to the end-user and to run the rebuilder application from the self-contained environment . For example, a self-contained environment  may include: a bootable Linux OS, a rebuilder application (as a Linux executable file), the catalog file, and the source package . In embodiments disclosed herein, the self-contained environment  is at least as available for distribution as each of the components in the environment  is available for distribution.","The end-user may install (copy) the self-contained environment  on, e.g., a USB stick\/drive (or any bootable drive, such as a CD-R or DVD-R) so that a computer available to the end-user can boot off the self-contained environment . The self-contained environment  could boot a computer at the end-user site. It is to be understood that the computer can be the actual target computer (on-line case) or any other computer having access to the target drive  (off-line case). In the off-line case, after rebuilding the target drive , the target drive  would be connected to the target computer which will boot off the target drive .","In embodiments including the self-contained environment , the rebuilder application may run (from the self-contained environment  that booted the computer) and rebuild the target drive . The rebuilder application would ascertain that the end-user possesses or has access to each of the sources included in the catalog file. For example, an embodiment including a self-contained environment  could restore a Microsoft\u00ae Windows\u2122 based target drive , as long as the environment  and\/or the rebuilder application provides access to the file system that is specified (e.g., as a rule) in the catalog file to be used by the target drive , and is able to perform the needed adaptations, such as modifying the registry.","It is to be understood that a file system on the target drive  may differ from the source file system. For example, a Windows XP installation may have an NTFS source file system, yet have a FAT32 target file system. In this example, security information may be lost, but the file system on the target drive  will operate in a suitable manner.","The rebuilder application may be instructed by some entries in the catalog file to validate and correct or modify configuration data on the target drive . Validating and correcting or modifying configuration data may include modifying a registry or a system setting on a target drive . If a Microsoft\u00ae Windows\u2122 OS is on the target drive , the rebuilder application may use, for example, an off-line registry (load-hive) mechanism to modify the registry in target drive . In another example, the rebuilder application may modify or remove the letters associated with partitions, reset the known disk drives, etc.","In an embodiment, the rebuilder application may be instructed by entries in the catalog file to validate and modify the OS in the boot configuration entries for a target drive , so that a boot operation will be possible from the active (bootable) partition of target drive  when the active partition is used as a system partition. In a non-limitative example, the rebuilder application may be instructed to validate and modify a Windows 2000\/XP\/2003 boot.ini entry for a target partition. The rebuilder application may modify boot data entries on the target drive  so that the OS on the drive will have the correct behavior: for example, the rebuilder application may modify \u201cBoot Configuration Data\u201d used with Windows\u2122 Vista, Windows\u2122 7, Windows\u2122 2008 and with (U)EFI based computers. In another example, the rebuilder application may modify Linux loader configurations.","According to embodiments as disclosed herein, after running the rebuilder application, each device operable by the master software installation is operable by a computer booted off the target drive , as the target drive  is, functionally, an exact copy of the source drive. If the master software installation can operate heterogeneous hardware, the target drive  can also operate the same hardware platforms. For example, if the master software installation can operate VMWare VMs, HP t5730 thin\/streaming clients, and one model of Blade PC or Workstation, the target drive  after the rebuilder application is completed will also be able to operate these devices.","It is to be understood that after the target drive  has been restored, an end-user may enter post-deployment details, e.g., the computer name, product keys, etc.","Further, as is apparent from the disclosure herein, the present disclosure also includes circuitry suitable for performing embodiments of the present disclosure. It is to be understood that this circuitry (non-limiting examples of which are shown in ) may include, but is not limited to software, hardware, and firmware, either alone or in any combination or frequency thereof.","While several embodiments have been described in detail, it will be apparent to those skilled in the art that the disclosed embodiments may be modified. Therefore, the foregoing description should be considered as providing one or more illustrative examples."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Features and advantages of embodiments of the present disclosure will become apparent by reference to the following detailed description and drawings, in which like reference numerals correspond to similar, though perhaps not identical, components. For the sake of brevity, reference numerals or features having a previously described function may or may not be described in connection with other drawings in which they appear.",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
