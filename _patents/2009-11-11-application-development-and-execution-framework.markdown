---
title: Application development and execution framework
abstract: An application repository is provided. The application repository comprises a first computer having a processor and a memory, a data store, a plurality of applications stored in the data store, and a billing apportionment module stored in the memory. Each application contains an instruction to invoke a run-time license tracking application programming interface (API), the plurality of applications comprising a first application. The billing apportionment module, when executed by the processor, receives a first run-time license tracking report generated by invocation of the run-time license tracking application programming interface by the first application executing on one of a second computer and a mobile electronic device, determines a first application usage fee to bill to an account associated with a user of the first application, bills the first application usage fee to the account associated with a user of the first application, determines a first usage fee share based in part on the first application usage fee and on the first run-time tracking report, and transfers the first usage fee share to an account associated with the first application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09466052&OS=09466052&RS=09466052
owner: Sprint Communications Company L.P.
number: 09466052
owner_city: Overland Park
owner_country: US
publication_date: 20091111
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","STATEMENT REGARDING FEDERALLY SPONSORED RESEARCH OR DEVELOPMENT","REFERENCE TO A MICROFICHE APPENDIX","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["None.","Not applicable.","Not applicable.","Computer programs and\/or software may be created to perform limited but useful functions on a wide variety of different processors, for example desktop computers, laptop computers, mobile phones, personal digital assistants (PDAs), media players, and other electronic devices. In some contexts, such software may be referred to as applications and\/or \u201capps.\u201d Applications may be developed and tested by individuals and\/or small teams of developers working on their own, without the support of an on-going business concern.","In an embodiment, an application repository is disclosed. The application repository comprises a first computer having a processor and a memory, a data store, a plurality of applications stored in the data store, and a billing apportionment module stored in the memory. Each application contains an instruction to invoke a run-time license tracking application programming interface (API), the plurality of applications comprising a first application. The billing apportionment module, when executed by the processor, receives a first run-time license tracking report generated by invocation of the run-time license tracking application programming interface by the first application executing on one of a second computer and a mobile electronic device, determines a first application usage fee to bill to an account associated with a user of the first application, bills the first application usage fee to the account associated with a user of the first application, determines a first usage fee share based in part on the first application usage fee and on the first run-time tracking report, and transfers the first usage fee share to an account associated with the first application.","In an embodiment, an application repository is disclosed. The application repository comprises a first computer having a processor and a memory, a data store, a plurality of applications stored in the data store, and a billing apportionment module stored in the memory. Each application contains an instruction to invoke a run-time license tracking application programming interface (API), the plurality of applications comprising a first application of a first tier and a second application of a second tier. The billing apportionment module, when executed by the processor, receives a first run-time license tracking report generated by invocation of the run-time license tracking application programming interface by the first application executing on one of a second computer and a mobile electronic device, wherein the first run-time license tracking report identifies the first application as a first tier application. The billing apportionment module further receives a second run-time license tracking report generated by invocation of the run-time license tracking application programming interface by the second application executing on one of the second computer and the mobile electronic device, wherein the second run-time license tracking report identifies the second application as a second tier application. The billing apportionment module further determines a first application usage fee to bill to an account associated with a user of the first application, bills the first application usage fee to the account associated with a user of the first application. The billing apportionment module further determines a first usage fee share based in part on the first application usage fee, on the first run-time tracking report, and on the second run-time tracking report. The billing apportionment module further transfers the first usage fee share to an account associated with the first application, determines a second usage fee share based in part on the first application usage fee, on the first run-time tracking report, and on the second run-time tracking report, and transfers the second usage fee share to an account associated with the second application.","In an embodiment, an application repository is disclosed. The application repository comprises a first computer having a processor and a memory, a data store, a plurality of applications stored in the data store, a billing apportionment module stored in the memory, and a run-time analysis module stored in the memory. Each application contains an instruction to invoke a run-time license tracking application programming interface (API), the plurality of applications comprising a first application. The billing apportionment module, when executed by the processor, receives a first run-time license tracking report generated by invocation of the run-time license tracking application programming interface by the first application executing on one of a second computer and a mobile electronic device. The run-time analysis module, when executed by the processor, receives at least a portion of the run-time license tracking report from the billing apportionment module and analyzes the portion of the run-time license tracking report to one of refine a user profile associated with the second computer or the mobile electronic device and to accumulate marketing statistics.","These and other features will be more clearly understood from the following detailed description taken in conjunction with the accompanying drawings and claims.","It should be understood at the outset that although illustrative implementations of one or more embodiments are illustrated below, the disclosed systems and methods may be implemented using any number of techniques, whether currently known or in existence. The disclosure should in no way be limited to the illustrative implementations, drawings, and techniques illustrated below, but may be modified within the scope of the appended claims along with their full scope of equivalents.","The present disclosure teaches an application development and execution framework. The current paradigm for developing applications may be referred to as \u201cclosed-garden\u201d software development wherein requirements, schedules, deliverables, intellectual property rights may be negotiated between one or more developer organizations and an enterprise, for example a computer company and\/or a telecommunications operating company, before any productive software development begins. The \u201cclosed-garden\u201d software development approach may comprise the enterprise certifying developers and\/or applications before deploying applications to a user community. Applications may comprise software that is composed of one or more software components, one or more subroutines, one or more software modules, one or more classes and\/or objects, and one or more link libraries comprised of software components, subroutines, and\/or software modules. Applications may be comprised of a plurality of components and some of these components themselves may be comprised of a plurality of components. The composition of components within components may be referred to as nesting of components, and the contained components may be referred to in some contexts as nested components. The application development and execution framework taught by the present disclosure promotes an ecosystem for \u201copen-garden\u201d software development, where developers are not directly coupled with enterprises and where developers may not be certified by the enterprise before development begins or even later. In this ecosystem, innovation and progress may occur more rapidly and more economically than in the \u201cclosed-garden\u201d paradigm.","The application development and execution framework provides tools for searching a repository or database of components, for discovering the functionality and features of the contained components, and for composing new applications and\/or new components at least in part based on the components stored in the repository. The application development and execution framework provides tools to promote developers identifying and evaluating the suitability of foundational applications and\/or componentware, stored in the repository and\/or database, from which to construct their own applications. The application development and execution framework provides tools for developers to build automated run-time license tracking into their applications so they can get paid for their development efforts. The application development and execution framework provides access to the tools for developers through a user interface, for example a graphical user interface (GUI) and\/or through a web based interface. In an embodiment, the application development and execution framework may provide an application programming interface for developers to access the tools.","The application development and execution framework provides tools for end users to browse applications, to access reviews and\/or appraisals of applications by peers, to post reviews of applications, and to download applications stored in an application repository. In an embodiment, the application development and execution framework provides interfaces for the end user to evaluate applications and analyze the costs and\/or price points of applications. The application development and execution framework further provides an application that interacts with the applications downloaded from the application repository to determine a usage fee to bill the user for use of the applications, and to determine a usage share of the usage fee to distribute out to one or more developers. By creating an \u201copen-garden\u201d ecosystem that promotes developers receiving a share of the revenues generated by their applications, it is hoped that the variety and the quality of applications available to end users will increase. It is further hoped that the growth of applications may promote communications services growth, for example promoting the growth of wireless data services. For example, developers who would otherwise be reluctant to develop and share software components, perhaps through concerns about being fairly rewarded for their efforts, may be encouraged by the automated and explicitly defined revenue sharing model of the execution framework to diligently develop and offer their software developments.","Turning now to , a framework  for application development and execution is described. In an embodiment, the framework  comprises an application repository , one or more developers , a first electronic device , and a second electronic device  that may communicate via a network . In an embodiment, the application repository  may be coupled to a data store , for example, but not by way of limitation, a database. In an embodiment, the first electronic device  may be one of a mobile device selected from a mobile phone, a personal digital assistant (PDA), a media player, and another mobile device. An embodiment of a mobile phone is discussed further hereinafter. In an embodiment, the second electronic device  may be one of a desktop computer, a laptop computer, and a tablet computer. Computers are discussed further hereinafter. The network  may be provided by a public switched telephone network, a public data network, a private network, and combinations thereof. The framework  promotes the efficient and rapid development and distribution of applications developed by developers  for use by the electronic devices , . Additionally, the framework  provides a revenue sharing model that provides incentives to the developers .","The first electronic device  may communicate with the network  via a wireless communication link provided by a base transceiver station (BTS) . The base transceiver station  may provide the wireless communication link with the first electronic device  based on one or more of a code division multiple access (CDMA) technology, a global system for mobile communication (GSM) technology, a universal mobile telecommunication system (UMTS) technology, a worldwide interoperability for microwave access (WiMAX) technology, a long-term evolution (LTE) technology, or another wireless communication technology. In some embodiments, in some contexts the first electronic device  may be referred to as a WiMAX mobile phone, a LTE mobile phone, a CDMA mobile phone, a GSM mobile phone, or a UMTS mobile phone, depending upon the wireless communication technology employed to establish the wireless communication link between the base transceiver station  and the first electronic device . Alternatively, a femtocell (not shown) may provide the wireless communication link with the first electronic device . In another embodiment, the first electronic device  may communicate with the network  via a wireless communication link provided by an access point (not shown) based on one or more of a WiFi technology and a Bluetooth technology. In another embodiment, the first electronic device  may communicate with the network  via a contactless communication link provided by a point-of-sale terminal or other contactless communication terminal. It is understood that in an embodiment, the framework  may comprise other numbers of BTS's  and other number of electronic devices , . In an embodiment, the second electronic device  may communicate with the network  via a wired link. In an embodiment, the second electronic device  may communicate with the network  via a wireless communication link provided by an access point or a wireless local area network (LAN) base station, wherein the access point or wireless local area network base station is coupled to the network  by a wired link.","In an embodiment, the application repository  may be implemented on one or more computers. In an embodiment, the application repository  comprises a developer kit , a discovery tool , a distribution tool , a centralator module , and a reporting module  that are stored in one more memories and executed on one or more processors of the application repository . While in , the application repository  is represented as separate from the data store , in another embodiment, the abstraction of the application repository  may also be considered to include the data store . In an embodiment, one or more of the developer kit , the discovery tool , the distribution tool , the centralator module , and the reporting module  may be combined. In an embodiment, one or more of the developer kit , the discovery tool , the distribution tool , the centralator module , and the reporter module  may be implemented as two or more components and\/or modules.","The developer kit  provides tools for the developers  to create applications that may be deposited in the application repository  and distributed by the application repository . The developer kit , for example, may provide tools to promote a developer  embedding a real-time license application programming interface (RTL API) in an application, whereby the developer  may share in revenue realized from distribution and execution of the application. The developer kit  may provide tools to create and edit metadata associated with the application.","The discovery tool  may comprise a developer application programming interface  that promotes the developers  browsing the application repository  and\/or the data store  to identify and research the capabilities of applications stored in the data store . The developers  may choose to build new applications composed of one or more applications provided by the application repository . An application that may be selected by an end user to deploy on the electronic device ,  may be referred to as a first tier application, an accumulative application, and\/or a primary application. An application that may be embedded within a first tier application may be referred to as a second tier application, a foundational application, and\/or componentware. In an embodiment, a first tier application may call a second tier application, for example an application that determines a location of the first electronic device  by interaction with a wireless communication network comprised within the network , for example via the wireless communication link provided by the BTS , to determine a location of the first electronic device . The subject application may use the location of the first electronic device  to provide location based services functionality, for example to obtain local restaurant information and\/or medical services information from a content server . It is understood that, under some circumstances, an application may play the role of both a first tier application and of a second tier application.","The artifacts associated with an application stored in the application repository  and\/or the data store  may include one or more code files and\/or binary files needed to build and use the application, for example within an application developed by the developer , as well as metadata describing the functionality of the application, the interface of the application, the execution environment prerequisites of the application, a list of target execution devices, a list of devices on which the application has been tested, documentation of testing performed on the application. In an embodiment, the first tier applications and the second tier applications stored in the application repository  and\/or the data store  may be targeted to execute on fourth generation wireless electronic devices, for example on a fourth generation mobile phone. In an embodiment, the metadata may comprise a definition of a revenue sharing model associated with deployment of the application. The revenue sharing model may specify one or more different revenue sharing models including a fixed share per use, a one-time non-exclusive license fee, a percentage of the overall royalty paid by end users, a combination minimum fixed amount plus a percentage of revenues above this minimum, a combination of a percentage of revenues up to a maximum fixed amount, a fixed price per unit of time\u2014for example a fixed price per week, a fixed price per month, a fixe price per year\u2014a progressive share schedule where the revenue share per use is less for higher number of uses per unit time than for lower number of uses per unit time, and other revenue share models.","The metadata may further comprise feedback information from developers  who have embedded the subject application in one or more of their applications. The feedback may comprise ratings of the quality and\/or efficiency of the subject application, ratings of the ease of integrating the subject application into another application, and ratings of the accuracy of the description of the functionality of the subject application. The feedback information may comprise statistical data describing the number of different applications into which the subject application has been embedded, the number of electronic devices ,  that include the subject application embedded in at least one application stored in the electronic devices , , the number of times the subject application is invoked per unit of time, the number of times the subject application is invoked on average per application into which the subject application has been embedded, and the like statistical data. The metadata may comprise a listing of all applications into which the subject application has been embedded. The metadata may comprise documentation of testing performed by developers  who have embedded the subject application in one or more of their applications.","The distribution tool  may comprise a user interface  that a user of the electronic devices ,  may use to download a first tier application from the application repository , for example from the data store . The user interface  may provide methods to search the data store  for first tier applications to provide a desired functionality. The user interface  may promote searching based on categories of functionality, for example shopping functionality, media functionality, gaming functionality, problem solving functionality, and others. The user interface  may promote searching based on names and\/or keywords.","The user interface  may further provide methods to research and evaluate a first tier application before purchasing and\/or installing on to the electronic devices , . The user interface  may present user ratings of the first tier application, for example an averaged satisfaction rating, a range of user satisfaction ratings. The user interface  may provide textual descriptions and\/or reviews provided by users. The user interface  may provide a list of target electronic devices on which the subject application may execute. The user interface  may present statistics on the number of users who have installed the subject first tier application, how many times per day the subject first tier application is executed, how long the subject first tier application has been released to the application repository , how many user problem reports have been reported against the subject first tier application, and the like. The user interface  may provide a tool for users to submit reviews and\/or comments on first tier applications they have used. In an embodiment, the user interface  may authenticate the electronic devices ,  as having previously downloaded and installed a subject first tier application before permitting the electronic devices ,  to submit a review and\/or comments on the subject first tier application.","The centralator module , hereinafter referred to as the centralator module , may provide a variety of mediation functions to support the developer kit , the discovery tool , the distribution tool , and the reporting module . Additionally, the centralator module  manages the revenue extraction from the electronic devices ,  and the distribution of revenue shares to first tier and second tier applications. In some contexts, the centralator module  may be referred to as a billing apportionment module and\/or component. In some contexts, the centralator module  may be referred to as a run-time analysis module and\/or component. Alternatively, in an embodiment, the functionality attributed to the centralator module  above may be portioned and allocated to three or more separate modules and\/or components.","In an embodiment, the electronic devices ,  may download and install a first application  that embeds a call to the real-time license application programming interface. Each time the first electronic device  invokes the first application , the first application  calls and\/or executes the real-time license application programming interface , and the real-time license application programming interface  causes a use log or journal entry to be created. In an embodiment, the first electronic device  may transmit the use log associated with the first application  to the application repository  and to the centralator module  proximate to the time that the first application  is invoked. Alternatively, the first application  may accumulate use logs associated with the first application , as well as other applications downloaded to the first electronic device , and periodically transmit the accumulation of use logs to the application repository , to the data store , and\/or to the centralator module , for example once per day, once per week, once per month, or some other periodic interval. Alternatively, the first application  may accumulate use logs and transmit the accumulated use logs to the application repository , to the data store , and\/or to the centralator module  in response to a request from the centralator module  at a time determined by the centralator module . In an embodiment, the use logs may be transmitted to the application repository , to the data store , and\/or to the centralator module  in a run-time tracking report. The use logs may include information identifying the first application . It is understood that descriptions of the interactions of the first electronic device  with the application repository  and\/or the data store  apply equally to the second electronic device .","In an embodiment, the first application  may be considered to be a first tier application and\/or an accumulative application and may encapsulate one or more second tier applications and\/or foundational applications, for example the first application  may embed calls or invocations of the second tier applications. The second tier applications may each embed a call to the real-time license application programming interface . When the second tier application is invoked by the first tier application, the second tier application calls and\/or executes the real-time license application programming interface , and the real-time license application programming interface  causes a use log or journal entry to be created. In an embodiment, the real-time license application programming interface  may include information about the terms under which the electronic devices ,  downloaded the subject application in the use log. In an embodiment, the real-time license application programming interface  may include information identifying the electronic devices ,  on which the subject application executed and or information identifying a user associated with the electronic devices ,  on which the subject application executed.","The use log created by the call to the real-time license application programming interface  by the second tier application may be sent to the application repository  and to the centralator module  in any of the methods described above. Alternatively, the use log created by the call to the real-time license application programming interface  by the second tier application may be combined with the use log created by the call to the real-time license application programming interface  by the first tier application. The use log created by the call to the real-time license application programming interface  by the second tier application may include information identifying the first tier application that called and\/or invoked the second tier application as well as information identifying the subject second tier application.","In some contexts, the real-time license application programming interface  may be referred to as a run-time license tracking application programming interface. In the event that a second tier application that is encapsulated in the first tier application is not called during execution of the first tier application, for example, in the case where the call to the second tier application is located in an alternative execution path that is not executed during the subject execution of the first tier application, then the run-time license tracking application programming interface  embedded in the second tier application is not invoked and no use log associated with the second tier application is created.","In an embodiment, when the centralator module  receives one or more use logs and\/or run-time license tracking reports, the centralator module  may determine a usage fee associated with executing the first application  and bill the usage fee to an account, for example a wireless communication subscription account associated with the first electronic device . Alternatively, the first electronic device  may have purchased a non-exclusive run-time license to execute the first application  for a one time fee, in which case the centralator module  may still determine a usage fee associated with executing the first application , but not bill the usage fee to the account associated with the first electronic device . The usage fee, although not billed, in this case may promote allocating revenue shares to either the developer  that developed and deposited the first application  in the application repository  and\/or the data store  or that developed and deposited a second tier application invoked by the first application .","The metadata associated with the first tier applications, for example the first application , and second tier applications stored in the data store  may include information defining a billing model and\/or a revenue sharing model for use by the centralator module  in determining usage fees, billing usage fees, and determining usage fee shares for distribution to the developers . The billing model and\/or revenue sharing model may be defined by the developer  that deposited the subject application, either first or second tier, in the application repository  and\/or the data store . In an embodiment, the centralator module  may promote a bidding and\/or auction mechanism where an electronic device ,  may transmit a bid and\/or offer defining an alternative billing model to the billing model deposited with the subject application by the developer  and the developer  is notified by the centralator module  of the alternative offer to either accept or reject.","The revenue sharing model associated with a first tier application may define a fixed share for each second tier application invoked by the subject application. For example, a first tier application invoking three second tier applications: application A, application B, and application C, may define a revenue share of 20% of the usage fee for each of the three second tier applications, thereby reserving a 40% revenue share of the usage fee to itself. Alternatively, the revenue sharing model associated with the first tier application may define a fixed share between the first tier application and all second tier applications and define the revenue share among the second tier application according to a flexible and\/or a dynamic rule. For example, the first tier application may reserve a 40% revenue share of the usage fee to itself and allocate the remaining 60% revenue share to be shared among the second tier applications invoked by the subject first tier application based on how many times each second tier application is invoked. For example, if application A is not invoked, if application B is invoked twice, and application C is invoked four times, the revenue share for application A may be 0% of the usage fee, the revenue share for application B may be 20% of the usage fee, and the revenue share for application C may be 40% of the usage fee. The revenue sharing model defined for the first tier application may be guided and\/or constrained by the revenue sharing models previously defined for the second tier applications invoked by the first tier application.","The centralator module  further may determine a first usage fee share and deposit funds equal to the first usage fee share in an account associated with the developer  that developed and deposited the first application  in the application repository  and\/or the data store . In the event that the first application  invoked a second tier application, the centralator module  further may determine a second usage fee share and deposit funds equal to the second usage fee share in an account associated with the developer  that developed and deposited the second tier application in the application repository  and\/or the data store . The centralator module  may determine usage fees and usage fee shares based on metadata associated with and\/or linked with the first application , other first tier applications, and second tier applications stored in the application repository  and\/or the data store . In an embodiment, the centralator module  may determine usage fees on a periodic basis, for example hourly, daily, weekly, monthly, quarterly, yearly, or some other periodic basis.","In an embodiment, the reporting module  analyzes the usage fees billed to the electronic devices ,  and the usage fee shares distributed to the developers  to produce a variety of financial reports and statistical reports. In an embodiment, the reporting module  may periodically publish a report identifying and ranking the top ten revenue receiving first tier applications and\/or second tier applications. Such a report may promote excitement and engagement among the developers , to encourage the developers  to continue to develop new, useful applications. Alternatively, in an embodiment, the reporting module  may periodically publish a comprehensive report documenting the revenue received from the electronic devices ,  and the distribution of revenue to the developers  for all of the first tier and second tier applications stored in the application repository  and\/or the data store . In an embodiment, the reporting module  may periodically publish a report identifying and ranking the ten most frequently invoked first tier and\/or second tier applications. Alternatively, in an embodiment, the reporting module  may periodically publish a comprehensive report documenting the frequency of invocation of all first and second tier applications stored in the application repository  and\/or the data store . In an embodiment, the reporting module  may periodically publish a report documenting the number of electronic devices ,  on which each of the first and\/or second tier applications are installed. In an embodiment, the reporting module  may periodically publish other reports based on analyzing the usage of the application repository . Publishing any of the reports identified above may comprise transmitting an email including the subject information to any of the developers , the devices , , and others. Publishing any of the reports identified above periodically may comprise daily publishing, weekly publishing, monthly publishing, quarterly publishing, yearly publishing, or some other periodic interval effective for informing the user community and the developer community of the status of the application repository .","Turning now to , the data store  is discussed. The data store  may comprise a plurality of first tier applications  and a plurality of second tier applications . In some cases, an application may play the role of both a first tier application , for example when an electronic device ,  installs the subject application for stand-alone execution, and a second tier application , for example when another application embeds and invokes the subject application. The first application  may comprise one of the first tier applications . A second application  may comprise one of the second tier applications . Both the first application  and the second application  may embed a call to the run-time license application programming interface . The first application  may be associated by the data store  with a first metadata , and the second application  may be associated by the data store  with a second metadata . As described above, the metadata may comprise a variety of information including, but not limited to, a billing model, a revenue share model, statistics associated with the subject application, review information, installation instructions, lists of target electronic devices, and other information.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 3","b":["106","106","106","106"]},"The first electronic device  includes a display  and a touch-sensitive surface and\/or keys  for input by a user. The first electronic device  may present options for the user to select, controls for the user to actuate, and\/or cursors or other indicators for the user to direct. The first electronic device  may further accept data entry from the user, including numbers to dial or various parameter values for configuring the operation of the handset. The first electronic device  may further execute one or more software or firmware applications in response to user commands. These applications may configure the first electronic device  to perform various customized functions in response to user interaction. Additionally, the first electronic device  may be programmed and\/or configured over-the-air, for example via the base transceiver station , a wireless access point, or a peer first electronic device .","The first electronic device  may execute a web browser application which enables the display  to show a web page. The web page may be obtained via communication with a content server  at least partially over the wireless communications link provided by the base transceiver station , by a wireless network access node, by a peer first electronic device  or by any other wireless communication network or system.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 4","b":["106","106","106","106","502","504","106","506","508","510","512","514","516","518","520","522","524","526","528","530","532","534","536","538","102","502","504","518"]},"The DSP  or some other form of controller or central processing unit operates to control the various components of the first electronic device  in accordance with embedded software or firmware stored in memory  or stored in memory contained within the DSP  itself. In addition to the embedded software or firmware, the DSP  may execute other applications stored in the memory  or made available via information carrier media such as portable data storage media like the removable memory card  or via wired or wireless network communications. The application software may comprise a compiled set of machine-readable instructions that configure the DSP  to provide the desired functionality, or the application software may be high-level software instructions to be processed by an interpreter or compiler to indirectly configure the DSP .","The antenna and front end unit  may be provided to convert between wireless signals and electrical signals, enabling the first electronic device  to send and receive information from a radio access network (RAN) or some other available wireless communications network or from a peer first electronic device . In an embodiment, the antenna and front end unit  may include multiple antennas to support beam forming and\/or multiple input multiple output (MIMO) operations. As is known to those skilled in the art, MIMO operations may provide spatial diversity which can be used to overcome difficult channel conditions and\/or increase channel throughput. The antenna and front end unit  may include antenna tuning and\/or impedance matching components, RF power amplifiers, and\/or low noise amplifiers.","The RF transceiver  provides frequency shifting, converting received RF signals to baseband and converting baseband transmit signals to RF. In some descriptions a radio transceiver or RF transceiver may be understood to include other signal processing functionality such as modulation\/demodulation, coding\/decoding, interleaving\/deinterleaving, spreading\/despreading, inverse fast Fourier transforming (IFFT)\/fast Fourier transforming (FFT), cyclic prefix appending\/removal, and other signal processing functions. For the purposes of clarity, the description here separates the description of this signal processing from the RF and\/or radio stage and conceptually allocates that signal processing to the analog baseband processing unit  and\/or the DSP  or other central processing unit. In some embodiments, the RF transceiver , portions of the antenna and front end , and the analog baseband processing unit  may be combined in one or more processing units and\/or application specific integrated circuits (ASICs).","The analog baseband processing unit  may provide various analog processing of inputs and outputs, for example analog processing of inputs from the microphone  and the headset port  and outputs to the earpiece speaker  and the headset port . To that end, the analog baseband processing unit  may have ports for connecting to the built-in microphone  and the earpiece speaker  that enable the first electronic device  to be used as a mobile phone. The analog baseband processing unit  may further include a port for connecting to a headset or other hands-free microphone and speaker configuration. The analog baseband processing unit  may provide digital-to-analog conversion in one signal direction and analog-to-digital conversion in the opposing signal direction. In some embodiments, at least some of the functionality of the analog baseband processing unit  may be provided by digital processing components, for example by the DSP  or by other central processing units.","The DSP  may perform modulation\/demodulation, coding\/decoding, interleaving\/deinterleaving, spreading\/despreading, inverse fast Fourier transforming (IFFT)\/fast Fourier transforming (FFT), cyclic prefix appending\/removal, and other signal processing functions associated with wireless communications. In an embodiment, for example in a code division multiple access (CDMA) technology application, for a transmitter function the DSP  may perform modulation, coding, interleaving, and spreading, and for a receiver function the DSP  may perform despreading, deinterleaving, decoding, and demodulation. In another embodiment, for example in an orthogonal frequency division multiplex access (OFDMA) technology application, for the transmitter function the DSP  may perform modulation, coding, interleaving, inverse fast Fourier transforming, and cyclic prefix appending, and for a receiver function the DSP  may perform cyclic prefix removal, fast Fourier transforming deinterleaving, decoding, and demodulation. In other wireless technology applications, yet other signal processing functions and combinations of signal processing functions may be performed by the DSP .","The DSP  may communicate with a wireless network via the analog baseband processing unit . In some embodiments, the communication may provide Internet connectivity, enabling a user to gain access to content on the Internet and to send and receive e-mail or text messages. The input\/output interface  interconnects the DSP  and various memories and interfaces. The memory  and the removable memory card  may provide software and data to configure the operation of the DSP . Among the interfaces may be the USB port  and the infrared port . The USB port  may enable the first electronic device  to function as a peripheral device to exchange information with a personal computer or other computer system. The infrared port  and other optional ports such as a Bluetooth interface or an IEEE 802.11 compliant wireless interface may enable the first electronic device  to communicate wirelessly with other nearby handsets and\/or wireless base stations.","The input\/output interface  may further connect the DSP  to the vibrator  that, when triggered, causes the first electronic device  to vibrate. The vibrator  may serve as a mechanism for silently alerting the user to any of various events such as an incoming call, a new text message, and an appointment reminder.","The keypad  couples to the DSP  via the interface  to provide one mechanism for the user to make selections, enter information, and otherwise provide input to the first electronic device . Another input mechanism may be the touch screen LCD , which may also display text and\/or graphics to the user. The touch screen LCD controller  couples the DSP  to the touch screen LCD .","The CCD camera  enables the first electronic device  to take digital pictures. The DSP  communicates with the CCD camera  via the camera controller . The GPS sensor  is coupled to the DSP  to decode global positioning system signals, thereby enabling the first electronic device  to determine its position. In another embodiment, a camera operating according to a technology other than charge coupled device cameras may be employed. Various other peripherals may also be included to provide additional functions, e.g., radio and television reception.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 5","FIG. 6"],"b":["602","502","502","604","604","604","606","106","608","610","612","608","106","610","106","612","106"]},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 6","b":["780","780","782","784","786","788","790","792","782"]},"It is understood that by programming and\/or loading executable instructions onto the computer system , at least one of the CPU , the RAM , and the ROM  are changed, transforming the computer system  in part into a particular machine or apparatus having the novel functionality taught by the present disclosure. It is fundamental to the electrical engineering and software engineering arts that functionality that can be implemented by loading executable software into a computer can be converted to a hardware implementation by well known design rules. Decisions between implementing a concept in software versus hardware typically hinge on considerations of stability of the design and numbers of units to be produced rather than any issues involved in translating from the software domain to the hardware domain. Generally, a design that is still subject to frequent change may be preferred to be implemented in software, because re-spinning a hardware implementation is more expensive than re-spinning a software design. Generally, a design that is stable that will be produced in large volume may be preferred to be implemented in hardware, for example in an application specific integrated circuit (ASIC), because for large production runs the hardware implementation may be less expensive than the software implementation. Often a design may be developed and tested in a software form and later transformed, by well known design rules, to an equivalent hardware implementation in an application specific integrated circuit that hardwires the instructions of the software. In the same manner as a machine controlled by a new ASIC is a particular machine or apparatus, likewise a computer that has been programmed and\/or loaded with executable instructions may be viewed as a particular machine or apparatus.","The secondary storage  is typically comprised of one or more disk drives or tape drives and is used for non-volatile storage of data and as an over-flow data storage device if RAM  is not large enough to hold all working data. Secondary storage  may be used to store programs which are loaded into RAM  when such programs are selected for execution. The ROM  is used to store instructions and perhaps data which are read during program execution. ROM  is a non-volatile memory device which typically has a small memory capacity relative to the larger memory capacity of secondary storage . The RAM  is used to store volatile data and perhaps to store instructions. Access to both ROM  and RAM  is typically faster than to secondary storage .","I\/O devices  may include printers, video monitors, liquid crystal displays (LCDs), touch screen displays, keyboards, keypads, switches, dials, mice, track balls, voice recognizers, card readers, paper tape readers, or other well-known input devices.","The network connectivity devices  may take the form of modems, modem banks, Ethernet cards, universal serial bus (USB) interface cards, serial interfaces, token ring cards, fiber distributed data interface (FDDI) cards, wireless local area network (WLAN) cards, radio transceiver cards such as code division multiple access (CDMA), global system for mobile communications (GSM), long-term evolution (LTE), worldwide interoperability for microwave access (WiMAX), and\/or other air interface protocol radio transceiver cards, and other well-known network devices. These network connectivity devices  may enable the processor  to communicate with an Internet or one or more intranets. With such a network connection, it is contemplated that the processor  might receive information from the network, or might output information to the network in the course of performing the above-described method steps. Such information, which is often represented as a sequence of instructions to be executed using processor , may be received from and outputted to the network, for example, in the form of a computer data signal embodied in a carrier wave.","Such information, which may include data or instructions to be executed using processor  for example, may be received from and outputted to the network, for example, in the form of a computer data baseband signal or signal embodied in a carrier wave. The baseband signal or signal embodied in the carrier wave generated by the network connectivity devices  may propagate in or on the surface of electrical conductors, in coaxial cables, in waveguides, in an optical conduit, for example an optical fiber, or in the air or free space. The information contained in the baseband signal or signal embedded in the carrier wave may be ordered according to different sequences, as may be desirable for either processing or generating the information or transmitting or receiving the information. The baseband signal or signal embedded in the carrier wave, or other types of signals currently used or hereafter developed, may be generated according to several methods well known to one skilled in the art.","The processor  executes instructions, codes, computer programs, scripts which it accesses from hard disk, floppy disk, optical disk (these various disk based systems may all be considered secondary storage ), ROM , RAM , or the network connectivity devices . While only one processor  is shown, multiple processors may be present. Thus, while instructions may be discussed as executed by a processor, the instructions may be executed simultaneously, serially, or otherwise executed by one or multiple processors.","In an embodiment, some or all of the functionality disclosed above may be provided as a computer program product. The computer program product may comprise one or more computer readable storage medium having computer usable program code embodied therein implementing the functionality disclosed above. The computer program product may comprise data, data structures, files, executable instructions, and other information. The computer program product may be embodied in removable computer storage media and\/or non-removable computer storage media. The removable computer readable storage medium may comprise, without limitation, a paper tape, a magnetic tape, magnetic disk, an optical disk, a solid state memory chip, for example analog magnetic tape, compact disk read only memory (CD-ROM) disks, floppy disks, jump drives, digital cards, multimedia cards, and others. The computer program product may be suitable for loading, by the computer system , at least portions of the contents of the computer program product to the secondary storage , to the ROM , to the RAM , and\/or to other non-volatile memory and volatile memory of the computer system . The processor  may process the executable instructions and\/or data in part by directly accessing the computer program product, for example by reading from a CD-ROM disk inserted into a disk drive peripheral of the computer system . The computer program product may comprise instructions that promote the loading and\/or copying of data, data structures, files, and\/or executable instructions to the secondary storage , to the ROM , to the RAM , and\/or to other non-volatile memory and volatile memory of the computer system .","While several embodiments have been provided in the present disclosure, it should be understood that the disclosed systems and methods may be embodied in many other specific forms without departing from the spirit or scope of the present disclosure. The present examples are to be considered as illustrative and not restrictive, and the intention is not to be limited to the details given herein. For example, the various elements or components may be combined or integrated in another system or certain features may be omitted or not implemented.","Also, techniques, systems, subsystems, and methods described and illustrated in the various embodiments as discrete or separate may be combined or integrated with other systems, modules, techniques, or methods without departing from the scope of the present disclosure. Other items shown or discussed as directly coupled or communicating with each other may be indirectly coupled or communicating through some interface, device, or intermediate component, whether electrically, mechanically, or otherwise. Other examples of changes, substitutions, and alterations are ascertainable by one skilled in the art and could be made without departing from the spirit and scope disclosed herein."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["For a more complete understanding of the present disclosure, reference is now made to the following brief description, taken in connection with the accompanying drawings and detailed description, wherein like reference numerals represent like parts.",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
