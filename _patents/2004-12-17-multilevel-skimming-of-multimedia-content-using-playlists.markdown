---
title: Multi-level skimming of multimedia content using playlists
abstract: A skimmed or preview version of multimedia content is provided to a client computer by a server computer using playlists. The skimmed version of multimedia content can be presented to a user of a client computer in less time than presenting the entire multimedia content would require. The server computer maintains skimming information that identifies particular segments of the multimedia content corresponding to the skimmed version. The server computer uses the skimming information to generated a playlist, which in turn is used by the server computer to access the appropriate segments of the multimedia content and provided the segments to the client computer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07069311&OS=07069311&RS=07069311
owner: Microsoft Corporation
number: 07069311
owner_city: Redmond
owner_country: US
publication_date: 20041217
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION","General Network Structure","Streaming Media","Exemplary Computer Environment","Generating Skimmed Versions","Skimmed Version Presentation","User Experience","CONCLUSION"],"p":["This is a continuation of Application Ser. No. 09\/498,439, filed Feb. 4, 2000, entitled \u201cMulti-Level Skimming of Multimedia Content Using Playlists\u201d, which is hereby incorporated by reference herein, and it is now U.S. Pat. No. 6,868,440.","This invention relates to networked client\/server systems and to methods of streaming and rendering multimedia content in such systems. More particularly, the invention relates to generating, maintaining and providing multiple skimmed versions of multimedia content using playlists.","Multimedia streaming\u2014the continuous delivery of synchronized media data like video, audio, text, and animation\u2014is a critical link in the digital multimedia revolution. Today, streamed media is primarily about video and audio, but a richer, broader digital media era is emerging with a profound and growing impact on the Internet and digital broadcasting.","Synchronized media means multiple media objects that share a common timeline. Video and audio are examples of synchronized media\u2014each is a separate data stream with its own data structure, but the two data streams are played back in synchronization with each other. Virtually any media type can have a timeline. For example, an image object can change like an animated .gif file, text can change and move, and animation and digital effects can happen over time. This concept of synchronizing multiple media types is gaining greater meaning and currency with the emergence of more sophisticated media composition frameworks implied by MPEG-4, Dynamic HTML, and other media playback environments.","The term \u201cstreaming\u201d is used to indicate that the data representing the various media types is provided over a network to a client computer on a real-time, as-needed, basis, rather than being pre-delivered in its entirety before playback. Thus, the client computer renders streaming data as it is received from a network server, rather than waiting for an entire \u201cfile\u201d to be delivered.","In comparison to text-based or paper-based presentations, multimedia presentations can be very advantageous. Synchronized audio\/visual presentations, for example, are able to capture and convey many subtle factors that are not perceivable from paper-based documents. Even when the content is a spoken presentation, an audio\/visual recording captures gestures, facial expressions, and various speech nuances that cannot be discerned from text or even from still photographs.","Although streaming multimedia content compares favorably with textual content in most regards, one disadvantage is that it requires significant time for viewing. It cannot be \u201cskimmed\u201d like textural content. Thus, a \u201csummarized\u201d or \u201cskimmed\u201d version of the multimedia content would be very helpful.","Various technologies are available for \u201csummarizing\u201d or \u201cpreviewing\u201d different types of median content. For example, technology is available for removing pauses from spoken audio content. Audio content can also be summarized with algorithms that detect \u201cimportant\u201d parts of the content as identified by pitch emphasis. Similarly, techniques are available for removing redundant or otherwise \u201cunimportant\u201d portions or frames of video content. Similar schemes can be used with other types of media streams, such as animation streams and script streams.","Although such previewing techniques are available, these techniques typically require a significant amount of processing power to be performed and a significant amount of time to be completed. Such constraints make it difficult to generate previews \u201con the fly\u201d as the data is being streamed to its destination.","One solution is to pre-generate and store a \u201cpreview\u201d version of the multimedia content, thereby reducing the impact of \u201con the fly\u201d calculations. However, generating and storing such a preview version creates a storage problem. The multimedia content itself frequently requires a significant amount of storage space. By storing an additional preview version of the multimedia content, the storage space requirements are increased further, thereby generating significant constraints on the media storage device. This problem is exacerbated if multiple preview versions are generated and stored.","The invention described below addresses these disadvantages of previewing multimedia content, providing an improved way to generate and maintain such preview content.","A system includes a multimedia server computer that can provide multimedia content, as well as skimmed versions of the multimedia content, to one or more client computers. A skimmed version of the multimedia content is a preview or summary of the multimedia content that can be presented to a user in less time than presenting the entire multimedia content would require.","One or more skimmed versions of multimedia content are provided by the server computer using playlists. Skimming information is maintained by the server computer for each skimmed version, the skimming information identifying particular segments of the multimedia content for a particular skimmed version. The server computer (or alternatively the client computer) uses the skimming information to generate a playlist of multimedia segments of the multimedia content. Rather than maintaining the actual segments of the multimedia content, the playlist identifies segments of the multimedia content. The playlist is used by the server computer to access the appropriate segments of the multimedia content and provide such segments to the client computer(s).","Additionally, a user can select different skimmed versions that he or she will be presented with. The user can make such selections prior to or during presentation of a skimmed version of the multimedia content. Upon selecting a different skimmed version, one of the server computer or the client computer generates a playlist for the newly selected skimmed version and determines a location in the new playlist that corresponds to the location being presented in the current playlist. Presentation of the new skimmed version then begins at the corresponding location in the new playlist.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 1","FIG. 1"],"b":["102","104","106"]},"Multimedia server  has access to streaming media content in the form of different media streams. These media streams can be individual media streams (e.g., audio, video, graphical, etc.), or alternatively composite media streams including multiple such individual streams. Some media streams might be stored as files  in a database or other file storage system, while other media streams  might be supplied to the server on a \u201clive\u201d basis from other data source components through dedicated communications channels or through the Internet itself.","Multimedia server  also has access to data or information identifying different skimmed versions of the media streams. This \u201cskimming\u201d information identifies different segments of media streams that are part of a particular skimmed version of that stream. Multiple skimming versions or \u201cskimming levels\u201d can be maintained for each media stream. By using the skimming information to identify portions of media streams, storage space requirements are reduced because the data of the media streams need not be duplicated.","In the discussions to follow, the multimedia content available to the client computers  is discussed as being streaming media. However, it should be noted that the invention can also be used with \u201cpre-delivered\u201d media rather than streaming media, such as media previously stored at the client computers  via the network , via removable magnetic or optical disks, etc.","In this discussion, the term \u201ccomposite media stream\u201d describes synchronized streaming data that represents a segment of multimedia content. The composite media stream has a timeline that establishes the speed at which the content is rendered. The composite media steam can be rendered to produce a plurality of different types of user-perceivable media, including synchronized audio or sound, video graphics or motion pictures, animation, textual content, command script sequences, or other media types that convey time-varying information or content in a way that can be sensed and perceived by a human. A composite media stream comprises a plurality of individual media streams representing the multimedia content. Each of the individual media streams corresponds to and represents a different media type and each of the media streams can be rendered by a network client to produce a user-perceivable presentation using a particular presentation medium. The individual media streams have their own timelines, which are synchronized with each other so that the media streams can be rendered simultaneously for a coordinated multimedia presentation. The individual timelines define the timeline of the composite stream.","There are various standards for streaming media content and composite media streams. \u201cAdvanced Streaming Format\u201d (ASF) is an example of such a standard, including both accepted versions of the standard and proposed standards for future adoption. ASF specifies the way in which multimedia content is stored, streamed, and presented by the tools, servers, and clients of various multimedia vendors. ASF provides benefits such as local and network playback, extensible media types, component download, scalable media types, prioritization of streams, multiple language support, environment independence, rich inter-stream relationships, and expandability. Further details about ASF are available from Microsoft Corporation of Redmond, Wash.","Regardless of the streaming format use, an individual data stream contains a sequence of digital data sets or units that are rendered individually, in sequence, to produce an image, sound, or some other stimuli that is perceived by a human to be continuously varying. For example, an audio data stream comprises a sequence of sample values that are converted to a pitch and volume to produce continuously varying sound. A video data stream comprises a sequence of digitally-specified graphics frames that are rendered in sequence to produce a moving picture.","Typically, the individual data units of a composite media stream are interleaved in a single sequence of data packets. Various types of data compression might be used within a particular data format to reduce communications bandwidth requirements.","The sequential data units (such as audio sample values or video frames) are associated with both delivery times and presentation times, relative to an arbitrary start time. The delivery time of a data unit indicates when the data unit should be delivered to a rendering client. The presentation time indicates when the value should be actually rendered. Normally, the delivery time of a data unit precedes its presentation time.","The presentation times determine the actual speed of playback. For data streams representing actual events or performances, the presentation times correspond to the relative times at which the data samples were actually recorded. The presentation times of the various different individual data streams are consistent with each other so that the streams remain coordinated and synchronized during playback.","In the discussion below, the invention will be described in the general context of computer-executable instructions, such as program modules, being executed by one or more conventional personal computers. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations, including hand-held devices, multiprocessor systems, microprocessor-based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like. In a distributed computer environment, program modules may be located in both local and remote memory storage devices.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 2","FIG. 1"],"b":["130","130","102","104"]},"Computer  includes one or more processors or processing units , a system memory , and a bus  that couples various system components including the system memory  to processors .","The bus  represents one or more of any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures. The system memory includes read only memory (ROM)  and random access memory (RAM) . A basic input\/output system (BIOS) , containing the basic routines that help to transfer information between elements within computer , such as during start-up, is stored in ROM . Computer  further includes a hard disk drive  for reading from and writing to a hard disk, not shown, a magnetic disk drive  for reading from and writing to a removable magnetic disk , and an optical disk drive  for reading from or writing to a removable optical disk  such as a CD ROM or other optical media. The hard disk drive , magnetic disk drive , and optical disk drive  are connected to the bus  by an SCSI interface  or some other appropriate interface. The drives and their associated computer-readable media provide nonvolatile storage of computer readable instructions, data structures, program modules and other data for computer . Although the exemplary environment described herein employs a hard disk, a removable magnetic disk  and a removable optical disk , it should be appreciated by those skilled in the art that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, random access memories (RAMs) read only memories (ROM), and the like, may also be used in the exemplary operating environment.","A number of program modules may be stored on the hard disk, magnetic disk , optical disk , ROM , or RAM , including an operating system , one or more application programs , other program modules , and program data . A user may enter commands and information into computer  through input devices such as keyboard  and pointing device . Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are connected to the processing unit  through an interface  that is coupled to the bus . A monitor  or other type of display device is also connected to the bus  via an interface, such as a video adapter . In addition to the monitor, personal computers typically include other peripheral output devices (not shown) such as speakers and printers.","Computer  operates in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be another personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to computer , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets, and the Internet. In the described embodiment of the invention, remote computer  executes an Internet Web browser program such as the \u201cInternet Explorer\u201d Web browser manufactured and distributed by Microsoft Corporation of Redmond, Wash.","When used in a LAN networking environment, computer  is connected to the local network  through a network interface or adapter . When used in a WAN networking environment, computer  typically includes a modem  or other means for establishing communications over the wide area network , such as the Internet. The modem , which may be internal or external, is connected to the bus  via a serial port interface . In a networked environment, program modules depicted relative to the personal computer , or portions thereof, may be stored in the remote memory storage device. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","Generally, the data processors of computer  are programmed by means of instructions stored at different times in the various computer-readable storage media of the computer. Programs and operating systems are typically distributed, for example, on floppy disks or CD-ROMs. From there, they are installed or loaded into the secondary memory of a computer. At execution, they are loaded at least partially into the computer's primary electronic memory. The invention described herein includes these and other various types of computer-readable storage media when such media contain instructions or programs for implementing the steps described below in conjunction with a microprocessor or other data processor. The invention also includes the computer itself when programmed according to the methods and techniques described below. Furthermore, certain sub-components of the computer may be programmed to perform the functions and steps described below. The invention includes such sub-components when they are programmed as described. In addition, the invention described herein includes data structures, described below, as embodied on various types of memory media.","For purposes of illustration, programs and other executable program components such as the operating system are illustrated herein as discrete blocks, although it is recognized that such programs and components reside at various times in different storage components of the computer, and are executed by the data processor(s) of the computer.","Multiple preview or skimmed versions of multimedia content can be created, such versions being referred to as being different \u201cskimming levels\u201d. Each of these different skimming levels provides a different level of detail of the multimedia content, and thus typically includes a different total presentation time. For example, a first skimming level may represent little of the original multimedia content and have a presentation time of 15 minutes rather than the 2 hour presentation time of the entire multimedia content. A second skimming level may represent more of the original multimedia content and have a presentation time of 1 hour.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 3","FIG. 2","FIG. 1","FIG. 1"],"b":["200","202","202","130","202","102","106","200","202","106"]},"Skimming generator  processes the multimedia content  to create multiple (m) skimming levels , , and  corresponding to the multimedia content . Skimming generator  separates the multimedia content into multiple segments and generates the multiple skimming levels \u2013 using various combinations of these segments. Each of the skimming levels \u2013 comprises a different set of these multimedia segments. Skimming generator  uses any of a variety of conventional summarizing or previewing technologies (e.g., pitch analysis to detect important parts of audio content and similar techniques to identify important parts of video content) to generate the skimming levels \u2013.","The results of the various previewing techniques for different streams may identify different portions of the multimedia content that are more important. In the illustrated example, this situation is resolved by using a composite scoring method to identify which segments are more important (and thus are kept as part of the skimmed version), and which segments are less important (and thus are not included as part of the skimmed version).","Alternatively, the results of one of the previewing techniques on a single data stream may be used to identify which segments are to be dropped. For example, a single data stream (e.g., the audio stream) may be evaluated, with the results of that evaluation being used to identify which segments of the audio stream (and corresponding segments of the video and other steams) are dropped without any evaluation of the corresponding segments of the other streams.","Skimming information for each of the skimming levels \u2013 is then stored in multimedia file . This skimming information can be, for example, identifies of particular segments of the multimedia content, importance rankings for each of multiple segments of the multimedia content, etc. Additionally, an indication of the total number m of skimming levels is also stored in multimedia file .","In the illustrated example, the multimedia content  is received by skimming generator  as multimedia file . Thus, skimming generator  stores the skimming information for each of the skimming levels \u2013 back into the same data file as the multimedia content  is stored in","In the example illustrated in , multimedia file  is an ASF file. Multimedia file  includes a header portion  and a data portion . Header portion  contains data representing various control and identifying information regarding the multimedia file . Data portion  contains the multimedia content as well as the skimming information for each of the skimming levels \u2013.","The skimming level generation process identifies different segments of the multimedia content  for each of the different levels \u2013. Skimming generator  then stores data identifying these different segments in the data portion  of multimedia file . Alternatively, a linear separation technique could be used to delineate the segments, such as each segment being a 5-second portion of the multimedia content.","Alternatively, rather than storing identifiers of particular segments of the multimedia content, skimming generator  could generate particular \u201crankings\u201d for each segment of the multimedia content. These rankings are generated using the conventional summarizing or previewing technologies to identify which portions of the multimedia content are more important than which others or alternatively could be generated manually. The different portions are then assigned a particular rank or weight (e.g., \u201chigh\u201d, \u201cmedium\u201d, and \u201clow\u201d; or any of an infinite number of rankings (such as real number values between zero and one)). These rankings can then be subsequently used to dynamically identify which segments should be presented for a particular skimming level.","Additionally, skimming generator  identifies the relationship between the presentation timeline of the original multimedia content and the segments identified by the skimming information. This relationship may be stored as an additional stream in multimedia file , or alternatively as one or more index tables associated with multimedia file . The relationship is a mapping of presentation times of the skimmed version to the original multimedia content, indicating for any presentation time of the skimmed version, what the corresponding presentation time of the original multimedia content is. For example, the data 35 seconds into the skimmed version may correspond to 120 seconds into the original multimedia content. This stored relationship thus allows the server (or client) computer, during subsequent playback of a skimmed version, to identify the current presentation point with respect to the original multimedia content. A similar mapping is maintained for presentation times of the original multimedia content to locations of the skimmed version (e.g., presentation times, byte offsets into the skimmed stream, segment identifiers, etc.).",{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 4","b":["210","210","212","210","212","214","214","214"]},"Data portion  includes data representing multiple (x) streams , , , , and . Streams \u2013 include media stream data for the multimedia content, such as audio data and video data of a composite media stream, as well as skimming streams that include skimming information for the multimedia content.","In the illustrated example, streams  and  are skimming streams that include \u201cmarkers\u201d (e.g., time ranges) used to identify the segments of the multimedia content. The markers can be used to generate a \u201cplaylist\u201d identifying particular segments of the multimedia content that are to be provided for the corresponding skimming level. A playlist includes a reference to the multimedia content, as well as start and end times for one or more segments of the multimedia content. Alternatively, a skimming stream may include rankings or weights for each of multiple segments of the multimedia content.","In the illustrates playlists of , the segments are identified by start and end times corresponding to the timeline of the original multimedia content. Thus, the playlist  identified by stream  indicates the first five seconds (0\u20135) of the multimedia content, as well as the seventh through ninth seconds (7\u20139) seventeenth through twenty-second seconds (1714 22), thirty-seventh through forty-sixth second (37\u201346), fifty-second through sixty-first seconds (52\u201361), and seventy-second through seventy-seventh seconds (72\u201377) of the multimedia content. Similarly, the playlist  identified by stream  indicates the first four seconds (0\u20134) of the multimedia content, as well as the twenty-second through twenty-seventh seconds (22\u201327), thirty-second through thirty-ninth seconds (32\u201339), and fifty-second through fifty-seventh seconds (52\u201357) of the multimedia content.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 5","FIG. 5","FIG. 3","FIG. 5","FIGS. 3 and 4"],"b":"202"},"Initially, multimedia content is received by skimming generator  (step ). Skimming generator  then determines which segments of the multimedia content correspond to a skimming level (step ). As discussed above, the generation of different segments can be accomplished using any of a variety of conventional previewing techniques.","Skimming generator  also stores skimming information identifying the segments determined in step  as a stream of multimedia file  corresponding to the multimedia content (step ). Skimming generator  then checks whether additional skimming levels are to be generated (step ). The number of skimming levels and their levels of detail can be pre-programmed into skimming generator , or alternatively can be manually input by a user.","When providing a skimmed version of the multimedia content to a user, server computer  of  accesses multimedia file  of  for the stream \u2013 corresponding to the requested skimming level. Server computer  then generates a playlist for that stream that identifies which of the segments of the multimedia content are to be provided to the client as the skimmed version. Alternatively, the client computer could generate the playlist.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 6","b":["104","280","280"]},"Multimedia player  communicates with a multimedia presentation module  of server computer . Multimedia presentation module  streams the multimedia content to multimedia play  for presentation to the user. Multimedia presentation module  can stream the entire multimedia content to multimedia player  for presentation. Additionally, multimedia presentation module  can distinguish between streams of multimedia content and streams that contain skimming information. Multimedia presentation module  uses the skimming information to transmit a skimmed version of the multimedia content to the multimedia player  as well.","Multimedia presentation module  includes a skimming module  and a location identifier module . Skimming module  controls the provision of skimming level options to the user, allowing the user to select (via the interface of multimedia player ) a skimmed version for presentation. Additionally, skimming module  also provides multimedia presentation module  with the control to access skimming information and provide the segment(s) of the multimedia content corresponding to the skimming information to client computer .","In the illustrated example, skimming module  accesses the skimming information (e.g., in multimedia file  of ) corresponding to a user-selected skimming level. Skimming module  uses this information to generate a playlist for the skimming level. Multimedia presentation module  uses the playlist generated by skimming module  to identify which segments of the multimedia content to provide to the client computer  as the selected skimmed version of the multimedia content. Alternatively, rather than comprising skimming information from which a playlist is generated, the stream in multimedia file  could comprise a playlist that can be accessed by skimming module  \u201cas is\u201d, without requiring any additional generating step.","Alternatively, in situations where the skimming information is a rank for each segment of the multimedia content, skimming module  uses the rankings to generate an appropriate playlist. Skimming module  uses a user-selected skimming level as a threshold for generating the playlist. For example, skimming module  includes in the playlist any segments having a ranking equal to or greater than the threshold.","A user, through the interface provided by multimedia player , is able to select different skimmed versions by selecting a different skimming level. This selection can occur prior to being presented with a skimmed version and\/or while being presented with a skimmed version.","When a user changes the skimming level, multimedia player  provides, to multimedia presentation module , information identifying the current presentation time of the multimedia segment being provided to the user. This current time information could be a reference to the original multimedia content (e.g., 36 minutes and 20 seconds into the original multimedia content), or alternatively an identification of the current segment of the skimmed version being presented and an offset into that segment (e.g., five seconds into the third segment of the skimmed version).","Location identifier module  uses the information provided by multimedia player  (either current presentation time or current segment and offset) to determine a new location in the playlist of the newly selected skimming level. As discussed above, a mapping of each skimmed version to the original multimedia presentation is part of (or stored separately but corresponding to) the multimedia file  that includes the skimming information. Using these mappings, location identifier module  is able to identify the location in the new skimmed version to which the current location of the current skimmed version corresponds.","Location identifier module  identifies the location in the new playlist by accessing the mapping for the current skimmed version using the current location in the current skimmed version. The mapping (e.g., an index table) identifies a location in the original multimedia content that corresponds to the current location in the current skimmed version. The identified location from the original multimedia content is then used to access the mapping for the new skimmed version, which identifies a location in the new skimmed version that corresponds to the identified location of the original multimedia content, and thus to the current location in the current skimmed version.","Alternatively, additional mappings can be maintained that alleviate the necessity for such a \u201ctwo-step\u201d lookup process. Direct skimmed version to skimmed version mappings can be generated and maintained (either by server  or by skimming generator  of ) that map locations in one skimmed version to corresponding locations of other skimmed versions.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 7","b":["104","280","280","288","102","288","280","288","280"]},"Multimedia presentation module  includes a skimming module  that controls the provision of skimming level options to the user. Skimming module  allows the user to select (via the interface of multimedia player ), a skimmed version for presentation. Skimming module  also provides the skimming information corresponding to the multimedia content to playlist generator  of client . Multimedia player  communicates a user-selection of a skimming level to playlist generator , which in turn uses the skimming information to generate a playlist for the skimming level. This generated playlist is transferred to multimedia presentation module  of server , which in turn uses the generated playlist to identify which segments of the multimedia content to provide to the client computer  as the selected skimming version of the multimedia content.","Additionally, a user is able, through the interface provided by multimedia player , to change the skimmed version he or she is being presented with. The user can select an initial skimming level and\/or change the current skimming level while being presented with a skimmed version. When a user changes the skimming level, location identifier module  determines the proper location within the playlist of the newly selected skimming level.","When a user changes the skimming level, multimedia player  provides, to location identifier module , information identifying the current presentation time of the multimedia segment being provided to the user. Location identifier module  uses this information to determine a new location in the playlist of the newly selected skimming level in a manner analogous to location identifier module  of .",{"@attributes":{"id":"p-0080","num":"0079"},"figref":["FIG. 8","FIG. 8","FIG. 6","FIG. 8","FIG. 8","FIG. 8","FIG. 6"],"b":["104","102"]},"Initially, the client computer  receives a user request for multimedia content (step ). The request can be initiated by the user in any of a variety of conventional manners, such as selection of a multimedia title in a graphical user interface (GUI), a menu selection a command-line input, etc. Client computer  communicates the user request to server computer  (step ), such as by sending a message to server computer .","Server computer , upon receipt of the request, accesses the multimedia file corresponding to the request and provides the skimming level information regarding the multimedia content to client computer  (step ). Client computer  presents the skimming level information to the user (step ). Based on the presented information, the user can select one of the skimming levels. Client computer  receives the skimming level selection (step ) and communicates the selection to server computer  (step ).","Server computer , upon receipt of the skimming level selection, accesses the skimming information and generates the playlist for the selected skimming level (step ). Alternatively, the playlist could be generated by client computer  as discussed above with reference to . Server computer  then provides the segments of the multimedia content that are identified by the playlist generated in step  to client computer  (step ). These segments are received by client computer , which in turn presents the segments to the user (step ).","Various optimizations may also be implemented to improve the quality of the presentation of the multimedia content when streaming the segments of the multimedia content identified by a playlist to client computer . One such optimization is pre-buffering of the multimedia content at client computer . Subsequent segments of multimedia content can be buffered at client computer  while current segments are being presented to the user. Thus client computer  can seamlessly switch from presentation of the current segments to presentation of the next segments in the playlist.","Additionally, multimedia content may be streamed as multiple frames, including independent frames and dependent frames. Independent frames include all of the information necessary to present (e.g., display video or play audio) a frame (or sample) of data, while dependent frames identify only differences between the dependent frame and one or more previous frames (either dependent or independent). Playlists may include segments that begin at either independent frames or dependent frames. If the beginning of a segment is at a dependent frame, then additional information prior to the beginning of that segment is needed in order to generate the appropriate data for the dependent frame.","This situation can be resolved in a variety of different manners. In one implementation, the additional information (e.g., the previous independent frame and possibly intervening dependent frames) is transmitted from server computer  to client computer . This can result in a noticeable pause to the user while the additional information is processed. In another implementation, if the beginning points for segments are known in advance, additional \u201cspecialized\u201d independent frames can be generated as necessary in advance that include the necessary additional information. In this implementation, the specialized independent frames is transmitted to client computer  along with the first dependent frame of the segment, thereby alleviating client computer  from having to process additional information spread over potentially numerous independent and dependent frames.",{"@attributes":{"id":"p-0087","num":"0086"},"figref":["FIG. 9","FIG. 9","FIG. 9","FIG. 6"],"b":["102","332","338","104"]},"Initially, server computer  receives an indication of a new skimming level request (step ). Upon receipt of the indication, server computer  generates a playlist for the newly selected skimming level (step ). Server computer  then identifies the current location in the current playlist that is being presented to the user (step ). Using this current location, server computer  determines the corresponding location in the playlist for the new skimming level (step ). Server computer  then determines the start location within the new playlist (step ). Server computer then provides the segments of the multimedia content identified by the new playlist to the client computer beginning at the start location (step ).","In the illustrated embodiment, the start location within the new playlist determined in step  is the beginning of the segment corresponding to the location identified in step . For example, if the user requests a new skimming level at a presentation time that corresponds to five seconds into the seventh segment of the new playlist, then the start location is determined in step  to be the beginning of the seventh segment of the new playlist. Alternatively, the start location cold be determined in step  to be five seconds into the seventh segment of the new playlist.",{"@attributes":{"id":"p-0090","num":"0089"},"figref":["FIG. 10","FIG. 1","FIG. 6","FIG. 7"],"b":["352","104","352","280","352","354","356","358"]},"Video screen  is the region of the UI within which the video portion of the multimedia content is rendered. If the multimedia content does not include video data, screen  displays static or dynamic images representing the content. For audio, content, for example, a dynamically changing frequency wave that represents an audio signal can be displayed in screen .","Graphics screen  is the region of the UI within which the graphics portion of the multimedia content is rendered. The graphics portion can include, for example, a set of slides or presentation foils that correspond to the video portion. If the multimedia content does not include graphics data, then the graphics screen  is left blank (or an indication given that no graphics are available).","Text screen  is the region of the UI within which the text portion of the multimedia content is rendered. The text portion can include, for example, a table of contents that outlines the multimedia content. If the multimedia content does not include text data, then the text screen  is left blank (or an indication given that no graphics are available).","The UI window  also includes a command bar , shuttle controls , a volume control , summary level selectors , , and , and content information space . Command bar  lists familiar UI commands, such as \u201cFile\u201d, \u201cView\u201d, and so forth.","Shuttle controls  allow the user to control playback of the multimedia content. Shuttle controls  include a stop button, a pause button, rewind buttons, a play button, and fast forward buttons. Selection of the fast forward (or rewind buttons) cause the multimedia player to jump ahead or back in the media presentation by a predetermined amount (e.g., one second, five seconds, to the next segment, etc.). The play, stop, and pause buttons cause their conventional functions to be performed by media player .","Three different summary buttons , , and  are included corresponding to different summary levels. Selection of summary button  causes multimedia player  to present a skimmed version of the multimedia content having a first level of detail to the user. Similarly, selection of summary button  causes multimedia player  to present a skimmed version of the multimedia content having a second level of detail, while selection of summary button  causes multimedia player  to present a skimmed version of the multimedia content having a third level of detail.","The user can actuate one of the summary buttons \u2013 via a UI actuation mechanism, such as a pointer or by tabbing to the desired play button and hitting the \u201center\u201d key. Upon selection of a summary button, the multimedia player presents the skimmed version of the multimedia content corresponding to the selected skimming level.","Similarly, the user can actuate any of the buttons of the shuttle controls  via a UI actuation mechanism, such as a pointer or by tabbing to the desired play button and hitting the \u201center\u201d key. Upon selection of a button, the multimedia player performs the requested action (e.g., stops or pauses playback, rewinds, etc.).","Volume control  allows the user to adjust the volume of the audio portion of the multimedia content.","Content information space  lists information pertaining to the multimedia content being rendered on the screens \u2013. The content information space includes the show name, author and copyright information, and tracking\/timing data.",{"@attributes":{"id":"p-0101","num":"0100"},"figref":["FIG. 11","FIG. 1","FIG. 6","FIG. 7"],"b":["104","382","280"]},"Many of the components of UI window  are analogous to those of UI window  of . Like UI window  of , UI window  includes a video screen , a graphics screen , a text screen , a command bar , shuttle controls , a volume control , and content information space . Each of these is analogous to the corresponding components of UI  of .","UI  also has a menu  associated with skimming button . In this illustration, menu  is a drop-down or pull-down menu that opens beneath skimming button  in response to actuation of a tab . Alternatively, menu  may be invoked by placing a pointer over skimming button  and right clicking a mouse button.","Menu  lists multiple skimming levels from which a user can select. In the illustrated example, five skimming levels are listed: level  (15 minute presentation duration), level  (30 minutes presentation duration), level  (45 minute presentation duration), level  (1 hour presentation duration), and level  (1 \u00bd presentation time). The user can select one of the listed skimming levels to instruct the multimedia player to present the corresponding preview content. The user can select a new skimming level after the multimedia player has begun presentation by invoking the menu and selecting the new level. In response, the multimedia player presents a new skimmed version corresponding to the new skimming level.",{"@attributes":{"id":"p-0105","num":"0104"},"figref":"FIGS. 10 and 11"},"The invention provides multi-level skimming of multimedia content using playlist. A playlist for a skimmed version of the multimedia content is generated from skimming information maintained along with the multimedia content. The skimming information advantageously identifies segments of the multimedia content, thereby conserving storage space by eliminating the need to duplicate storage of the actual segments.","Although the invention has been described in language specific to structural features and\/or methodological steps, it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features or steps described. Rather, the specific features and steps are disclosed as preferred forms of implementing the claimed invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention is illustrated by way of example and not limitation in the figures of the accompanying drawings. The same numbers are used throughout the figures to reference like components and\/or features.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
