---
title: Detecting malware using stored patterns
abstract: In one embodiment, a method includes identifying a plurality of portions of a file and comparing the plurality of portions of the file to a plurality of stored patterns. The plurality of stored patterns include portions of known malware. The method also includes determining, from the plurality of portions of the file and based on the comparing of the plurality of portions of the file to the plurality of stored patterns, a set of matching portions. The set of matching portions include one or more of the plurality of portions of the file. In addition, the method includes determining a score for each portion in the set of matching portions and providing information regarding the set of matching portions. The information includes the scores determined for each portion of the set of matching portions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08635700&OS=08635700&RS=08635700
owner: Raytheon Company
number: 08635700
owner_city: Waltham
owner_country: US
publication_date: 20111206
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DESCRIPTION OF EXAMPLE EMBODIMENTS"],"p":["Malware (such as viruses, trojans, and other malicious software) has become increasingly difficult to protect against. Various methods have been used to combat malware but more sophisticated malware continues to abound. Malware has been included in often-used types of files, such as word processing, spreadsheet, presentation, and multimedia files. Some malware is difficult to detect using traditional methods because they are embedded in such files. The use of virus signatures to detect malware has been prevalent, but the signatures are very specific and are difficult to maintain in light of obfuscation and other techniques employed by malware authors. This leaves systems vulnerable.","In one embodiment, a method executed by at least one processor includes identifying a plurality of portions of a file and comparing the plurality of portions of the file to a plurality of stored patterns. The plurality of stored patterns include portions of known malware. The method also includes determining, from the plurality of portions of the file and based on the comparing of the plurality of portions of the file to the plurality of stored patterns, a set of matching portions. The set of matching portions include one or more of the plurality of portions of the file. In addition, the method includes determining a score for each portion in the set of matching portions and providing information regarding the set of matching portions. The information includes the scores determined for each portion of the set of matching portions.","In some embodiments, each score may be a ranking of a likelihood that each respective portion in the set of matching portions is associated with malware. Comparing the plurality of portions of the file to the plurality of stored patterns may include comparing byte sequences or text strings. Each score may be determined based on the frequency with which each respective portion in the set of matching portions occurs in the plurality of stored patterns. The information may be provided to a human analyst to assist in determining whether the file is malware.","In one embodiment, a system includes at least one computer-readable medium and one or more processors that are configured to identify a plurality of portions of a file. The one or more processors are configured to compare the plurality of portions of the file to a plurality of stored patterns. The plurality of stored patterns include portions of known malware. The one or more processors are configured to determine, from the plurality of portions of the file and based on the comparing of the plurality of portions of the file to the plurality of stored patterns, a set of matching portions. The set of matching portions include one or more of the plurality of portions of the file. The one or more processors are configured to determine a score for each portion in the set of matching portions and provide information regarding the set of matching portions. The information includes the scores determined for each portion of the set of matching portions.","Depending on the specific features implemented, some embodiments may exhibit some, none, or all of the following technical advantages. In certain embodiments, malware detection may be enhanced by detecting malware in files for which virus signatures are inadequate or ineffective. Malware detection may also be enhanced by more easily adapting to new techniques used by malware authors. Other technical advantages will be readily apparent to one skilled in the art from the following figures, description and claims.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 1A","FIG. 1B","FIG. 1C"],"b":["100","100","14","15","20","10","10","10","16","14","15","10","12","20","20","26","28","29","10","20","30","22","24","29","25","14","15","25","25","30","25","29"]},"In some embodiments, users - are clients, human users, or other entities that participate in a communication session. Users - may communicate with other users via network . A communication session may include an e-mail session, an instant messaging session, a peer-to-peer messaging session, a chat session, or other messaging sessions. Aspects of system , in various embodiments, may also be used in contexts where files are uploaded. For example, some or all of system  may be utilized in File Transfer Protocol (FTP) sessions, Wiki sessions, online message boards (such as forums), or other interactive environments. Users - may also be browsing the Internet.","Terminal  may include any suitable type of processing device that is capable of receiving and\/or storing files. In some embodiments, terminal  represents a personal computer that may be used to access network . Alternatively, terminal  may be representative of a cellular telephone, an electronic notebook, a laptop, a personal digital assistant (PDA), or any other suitable device (wireless or otherwise: some of which can perform web browsing), component, or element capable of accessing one or more elements within system . Interface , which may be provided in conjunction with the items listed above, may further comprise any suitable interface for a human user such as a video camera, a microphone, a keyboard, a mouse, or any other appropriate equipment according to particular configurations and arrangements. In addition, interface  may be a unique element designed specifically for communications involving system . Such an element may be fabricated or produced specifically for matching applications involving a user.","Display , in some embodiments, is a computer monitor. Alternatively, display  may be a projector, speaker, or other device that allows users - to appreciate information that system  transmits.","Network  comprises one or more communicative platforms operable to exchange data or information emanating from users -. Network  could be a plain old telephone system (POTS). Transmission of information emanating from the user may be assisted by management associated with server  or manually keyed into a telephone or other suitable electronic equipment. In other embodiments, network  could be any packet data network offering a communications interface or exchange between any two nodes in system . Network  may include any suitable combination of a local area network (LAN), metropolitan area network (MAN), wide area network (WAN), wireless local area network (WLAN), virtual private network (VPN), the Internet, intranet, and any other appropriate architecture or system that facilitates communications in a network or telephonic environment, including a combination of any networks or systems described above. In various embodiments, network connections  may include, but are not limited to, wired and\/or wireless mediums which may be provisioned with routers and firewalls.","Server  is operable to receive from and to communicate information to terminal . In some embodiments, server  may comprise a plurality of servers or other equipment, each performing different or the same functions in order to receive and communicate information to terminal . Server  may include software and\/or algorithms to achieve the operations for processing, communicating, delivering, gathering, uploading, maintaining, and\/or generally managing data, as described herein. Additionally or alternatively, such operations and techniques may be achieved by any suitable hardware, component, device, application specific integrated circuit (ASIC), additional software, field programmable gate array (FPGA), server, processor, algorithm, erasable programmable ROM (EPROM), electrically erasable programmable ROM (EEPROM), or any other suitable object that is operable to facilitate such operations. In some embodiments, server  may comprise one or more clusters of virtual or hardware-based computing nodes, a distributed computing infrastructure, or other suitable forms of providing a software service using multiple computers. In some embodiments, server  may offer one or more services to users  and  via network  such as a messaging service, an e-mail service, an instant messaging service, a peer-to-peer messaging service, a chat service, an FTP service, a Wiki service, an online message board (such as a forum), or other interactive services.","Memory  may include any suitable combination of volatile or non-volatile memory. In some embodiments, memory  may include any suitable combination of one or more databases, file systems, tables, stacks, heaps, or other suitable storage structures. Memory  may store patterns , received files , and scoring data . Each of these examples are described below in greater detail.","In some embodiments, patterns  may be portions of files (e.g., such as previously received files  or other files) known to be malware or that contain malware. Patterns  may be used to determine whether content of received files  correspond to known malware. Patterns  may be text strings (i.e., a set of ASCII characters) and\/or byte sequences. For example, if a MICROSOFT WORD document is known to contain malware (such as a macro), text or byte patterns of the malicious component(s) of the document may be stored as patterns . Such malicious components may include an exploit, shellcode, and\/or a payload.","Patterns  may also be determined from metadata related to files that are known to be or contain malware. Patterns  may be scored and the scores may be stored with patterns  in memory . In some embodiments, the scores may indicate the likelihood that the pattern  is associated with known malware. For example, the scores may be rankings (such as high, medium, and low). As another example, the scores may be values that numerically represent a statistical correlation of the presence of pattern  in files known to be malware. The scores may be determined by analyzing a set of files known to be malware and performing statistical correlations regarding the presence of patterns  in the set of files known to be malware.","In some embodiments, files  may include one or more of the following in any suitable combination: data files, data records, email messages, attachments to email messages, and any other suitable target object for which malware detection may be appropriate. Users -, using terminals , may send or receive files , such as word processing or multimedia files, via network  and server . For example, a user  may receive a MICROSOFT WORD file  sent from user  via server . Sending user  may have included (either knowingly or unknowingly) malware in file . As described below, analysis module  may be used to determine whether file  is malware or if file  should be considered as potential malware. Analysis module  may access or be provided files  in any other suitable manner.","In some embodiments, scoring data  may include scores associated with stored patterns . The scores may reflect the likelihood that a pattern of stored patterns  is associated with malware. For example, scoring data  may include rankings (such as \u201chigh,\u201d medium,\u201d and \u201clow\u201d) indicating the likelihood that a pattern  is associated with malware. Scoring data  may be changed over time, depending the content of stored patterns . For example, as portions of malware are added to stored patterns , scoring data  may change. A score for a pattern  may be based on the statistical correlation between that pattern and files known to be malware.","Analysis module , which may be implemented using any suitable combination of hardware, firmware, and software, may be or include one or more tools that identify and classify files or programs (such as malware). For example, analysis module  may be or include the YARA malware identification and classification tool. Analysis module  may be configured to analyze files  sent or received by users  and  to determine whether the files are malware or are potential malware. Files  received by server  that will be processed by analysis module  may be stored in memory .","In some embodiments, analysis module  may generate one or more scores for a file  sent or received by user  or  by comparing portions of file  (such as text strings, byte sequences, or hexadecimal strings) to patterns  taken from files known to be malware. The scores may be stored in scoring data  that contains scoring data. The scores may indicate whether there is a match or close correspondence between the portions of file  and patterns  and\/or indicate the likelihood that the portions of file  is associated with known malware. For example, analysis module  may determine that a portion of file  matches a byte sequence that corresponds to an exploit stored in patterns . Analysis module  may determine the score stored with the matching pattern  to the portion of file . As discussed above, examples of the scores may include rankings (such as \u201chigh\u201d, \u201cmedium\u201d, and \u201clow\u201d) or include values that numerically represent a statistical correlation of the presence of pattern  in files known to be malware.","In some embodiments, the scores may be compared to one or more thresholds. File , score(s) associated with file , and\/or threshold(s) (e.g., that are compared to scores associated with file ) may be stored in scoring data . File  may be determined to be potential malware or actual malware based on this comparison. For example, if a score is higher than the threshold, then file  may be determined to be potential malware. As another example, if the score is at or below the threshold, then file  may be determined not to be potential malware. A threshold may be set indicating that if a certain number of portions of file  are associated with scores that are higher than other thresholds, then the file should be considered potential malware. For example, analysis module  may be configured to indicate that file  is potential malware if it determines that three or more portions of file  receive at least a \u201cmedium\u201d score as a result of comparing portions of file  to patterns .","In some embodiments, analysis module  may be configured to cause information regarding portions of file  that match patterns  to be sent to review module . Such information may include one or more of: file , the matching portions of file , a description of the matching portions of file  (e.g., whether the matching portions of file  is an exploit, a shellcode, a payload, metadata, or a name of a known malware fragment), score(s) corresponding to the matching portions of file , the aspects of patterns  that matched with the matching portions of file , or other information about file . This may be used by a human analyst to further analyze file . For example, the human analyst may examine a portion of file  that matched with patterns  as well as a ranking associated with that portion to facilitate a determination of whether file  is malware.","In some embodiments, analysis module  may be located in terminals  such that file(s)  may be analyzed at a terminal . Memory  may be located at terminal  as well or memory  may be located at server . For example, if memory  is located at terminal , information used by analysis module  when analyzing file  (such as patterns  from files known to be malware) may be available at terminal . As another example, if aspects of memory , such as patterns , are stored on server , analysis module  located in terminal  may communicate with server  to receive such information before or while analyzing file  located at terminal .","Review module , which may be implemented using any suitable combination of hardware, firmware, and software, may receive files  that have been compared to patterns  and have been associated with scores by analysis module  as well as information used or generated by analysis module  when analyzing files . Review module  may provide access to file  and information regarding files  to a human analyst. As examples, the information provided by review module  may include scores associated with files  and information regarding the context in which file  was found (e.g., original directory, network location, originator of the file, and e-mail message to which the file was attached). This may provide an advantage in that new malware techniques may be discovered by a human analyst. This may also provide an advantage because the human analyst may be able to determine that file  is actually malware and system  may learn from the techniques used in the malware. As an example, the information may be provided to a human analyst using analysis console  of  (discussed below).",{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 2","FIG. 1C","FIG. 2","FIGS. 1A-1C"],"b":["25","23","29"]},"At step , in some embodiments, files known to be malware may be analyzed. For example, server  may receive files in communications from users - of . It may be determined that some or all of the files are malware. In some embodiments, such a determination may be based on one or more malware detection schemes (e.g., signature scanning, heuristic analysis, and behavioral analysis), on a review of the files by a human analyst, and\/or on other factors. The files known be malware may be stored by server  of . In some embodiments, the files may be processed before, during, or after being stored. For example, statistical analysis may be performed on characteristics of the files known to be malware. Data regarding statistical correlations may be generated as a result of processing the files.","At step , in some embodiments, patterns  from files known to be malware (analyzed at step ) may be stored in server . Patterns  stored at this step may be aspects of malware analyzed at step . Examples of such aspects stored at this step may include: exploits, shellcode, payload, and metadata. Patterns  stored at this step may be identified by a human analyst or by automated processes (e.g., signature scanning, heuristic analysis, and behavioral analysis). Scores associated with the patterns  may also be stored at step  may also be stored at this step. In some embodiments, the scores may indicate the likelihood that the patterns  are associated with known malware. For example, the scores may be rankings (such as high, medium, and low). As another example, the scores may be values that numerically represent a statistical correlation of the presence of the patterns  in files known to be malware. The scores may be determined by analyzing a set of files known to be malware and performing statistical correlations regarding the presence of the patterns  in the set of files known to be malware. As examples, one or more aspects of the following scoring information may be stored at this step:\n\n","At step , in some embodiments, one or more files  are received at server  from a user, such as one of users  or . As examples, a user may submit a message or other communication that includes one or more files . Server  may be configured to determine whether or not the file(s)  received at this step is suspected to be malware and\/or may be configured to provide information regarding the file(s) to a human analyst to facilitate the human analyst's determination of whether the file(s) are malware. The file(s)  received at step  may be stored by server  in memory .","At step , in some embodiments, the file(s)  received at step  may be compared to the patterns stored at step . This may be accomplished by analysis module  of . The comparison may be performed to determine which portions of the file  match any of the patterns  stored at step . In some embodiments, matches may be determined when there is a close resemblance between a portion of the file  and a pattern . This may be determined using a threshold. For example, a threshold may specify that an 80% correspondence between a portion of a file  and a pattern  would indicate a match. This may be advantageous, in some embodiments, because malware may be detected even if it has been modified. For example, malware may evolve by changing items such as the payload. Signature-based detection may not detect such malware because part of the malware has changed. The exploit used by the evolving malware may remain the same. Matching the patterns  stored at step  may provide the ability to detect evolving malware because one of the patterns  used to match may be the exploit pattern of the evolving malware.","At step , in some embodiments, one or more scores may be determined for the portions of the file  received at step  that match with the patterns  stored at step  (determined at step ). This step may be performed by analysis module  of . The scores may be determined based on the scores stored with the patterns  at step . For example, if a portion of the file  matched an exploit pattern  stored at step , the score assigned to the exploit pattern (e.g., a ranking of \u201cmedium\u201d) may be also assigned to the portion of the file . In some embodiments, the portion of the file  may be scored based on scores of other portions of the file . For example, a first portion of the file  may be matched with an exploit pattern  that has a stored ranking of \u201clow\u201d. A second portion of the file  may be matched with a payload pattern  that has a stored ranking of \u201chigh\u201d. The score for the first portion of the file  may be a rank of \u201cmedium\u201d due to the presence of the payload pattern . As another example, if numerical values are used for scores, then a score for a particular portion of the file  may be increased, decreased, averaged, or otherwise modified based on the presence or lack of matches of other portions of the file to other stored patterns . The determined scores may reflect the frequency with which each portion matches patterns  in files known to be malware.","In some embodiments, a portion of the file  may be given a relatively higher score if the matching pattern  has a higher statistical correlation with files that are known to be malware than other patterns . For example, a portion of the file  that matches patterns  that are present in multiple files known to be malware may be assigned a score with a higher value in proportion to the number of corresponding files known to be malware. As another example, such a portion of the file  may be assigned a score that corresponds to a ranking, such as a \u201chigh\u201d or \u201cmedium\u201d rank. In some embodiments, the scores may be weighted. For example, the scores associated with certain patterns  may be weighted more than others because they may be a better indicator of whether a file  is potential malware or not.","At step , in some embodiments, the score(s) determined at step  may be compared to one or more thresholds. This step may be performed by analysis module  of . One or more scores determined at step  may be combined into an overall score at this step. For example, the scores may be summed. As another example, the scores may be averaged. As another example, the scores may be summed and normalized. In some embodiments, where the scores include ranks such as \u201chigh,\u201d \u201cmedium,\u201d and \u201clow,\u201d the scores may be combined by using the highest rank or the rank that appears most often. For example, if there were two portions of the file that were scored as \u201clow,\u201d three portions of the file that were scored \u201cmedium,\u201d and one portion of the file that was scored as \u201chigh,\u201d then an overall score of \u201cmedium\u201d may be determined. If the highest score is taken, then the overall score in this example would be determined to be \u201chigh.\u201d If the overall score is greater than the threshold then step  may be performed. If the overall score is less than or equal to the threshold then step  may be performed. The threshold may be determined by a given set of tolerance parameters that may be configured to classify a file as potential or suspected malware. For example, if the threshold is set higher, then there would be a correspondingly lower tolerance for determining that a file  is potential malware using the example scoring method discussed above. If the threshold is set lower, then there would be a correspondingly higher tolerance for determining that a file  is potential malware using the same example scoring method. The threshold may vary based on the context associated with the file(s)  received at step . For example, one threshold may be set if the file  was received as part of an email whereas another threshold may be set for a file  that was downloaded from a local or corporate intranet.","In some embodiments, multiple thresholds may be used at step . For example, if an overall score of the scores determined at step  is below two thresholds or equal to the lower of the two thresholds, the file  may be determined not to be potential malware. In this example, if the overall score is between the two thresholds or equal to the higher of the two thresholds, the file  may be determined to be potentially malware. Further, if the overall score is above the two thresholds, then the file  may be considered as highly likely to be malware. In some embodiments, comparison to multiple thresholds may occur on each scored portion of the file  rather than on an overall score for the file . For example, if there were two portions of the file  that were scored as \u201clow,\u201d three portions of the file  that were scored \u201cmedium,\u201d and one portion of the file  that was scored as \u201chigh,\u201d then a threshold of \u201cmedium\u201d may be compared to each of these scores. Another threshold may be set such that if the threshold compared to each portion is met or exceeded three times, then the file  should be considered as potential malware. In this example, four portions of the file  met or exceeded the threshold of \u201cmedium.\u201d As a result, the file  may be considered potential malware.","At step , in some embodiments, the file(s)  received at step  may be processed. This may occur because it has been determined that the file(s)  received at step  are not potential malware. The file(s)  may have been determined not to be potential malware by determining that score(s) generated for the file(s)  at step  are not greater than a threshold. Processing the file(s)  at this step may include different actions depending on the context associated with the file(s)  received at step . For example, if a file  received at step  is an attachment to an e-mail, then processing the file  at step  may include allowing the e-mail with the attachment to be delivered or received. If a file  received at step  was downloaded as part of a file transfer session, then processing the file  at this step may include allowing the file to remain stored and not deleting the file .","At step , in some embodiments, the file(s)  received at step  may be determined to be potential malware or actual malware. This may be performed by analysis module  of . For example, if the sum of the scores generated at step  was determined to be greater than the threshold at step , then the file  at step  may be determined to be potential malware. At step , in some embodiments, remedial action may be performed in response to determining that the file  received at step  is potential malware. For example, such actions may include removing the file , sanitizing the file , quarantining the file , and\/or sending the file  for review by human analysts. For example, in a messaging context, an indication that the attachment should be removed may be sent to a mail server or agent, which may then remove the attachment from the message that is to be delivered at this step. In some embodiments, actions such as removing attachments from messages may be performed by server  and the modified message may be sent back to a mail server or agent for delivery or an edited message may be sent by server . As another example, if server  was being used as a service by another entity (such as a desktop or network security agent), a report may be sent to the entity that may include the determination that the file  is potential malware and information related to the determination (such as the scoring data or the matching patterns ).","At step , in some embodiments, file(s)  determined to be potential malware may be sent for further analysis. For example, the file(s)  may be sent to a human analyst for further analysis. Information generated or used in steps - may also be sent to a human analyst, such as: the file , the matching portions of the file , a description of the matching portions of the file  (e.g., whether the matching portions of file is an exploit, a shellcode, a payload, metadata, or a name of a known malware fragment), score(s) corresponding to the matching portions of the file , the matching patterns  determined at step , or information about the file  (e.g., name, type, size, date created, and date modified). This may be used by a human analyst to further analyze the file . For example, the human analyst may examine a portion of the file  that matched with patterns  stored at step  as well as a ranking associated with that portion to facilitate a determination of whether the file  is malware.","In some embodiments, steps , , , and  may not be performed. For example, after performing step , step  may be performed and information may be sent to a human analyst to review the file  received at step . This may be advantageous in that it may provide a human analyst with a beneficial research tool that may automate analysis. In some embodiments, if the human analyst determines that the file  is malware, then step  may be performed even though steps , , and  were not performed.",{"@attributes":{"id":"p-0044","num":"0114"},"figref":"FIG. 3","b":["300","310","320","320","330","340","350","360","370","380","320","330","380","330","380","320","330","380","330","380","330","380","330","380"]},"Networks  and , in some embodiments, may be communicative platforms operable to exchange data or information. In some embodiments, the networks may include packet data networks offering communication interfaces or exchanges between any two nodes in system . Networks  and  may each be or include any local area network (LAN), metropolitan area network (MAN), wide area network (WAN), wireless local area network (WLAN), virtual private network (VPN), intranet, Internet, plain old telephone system (POTS), or any other appropriate architecture or system that facilitates communications in a network or telephonic environment, including a combination of any networks or systems described above. The networks may also include wireless technology such as WiMAX, LTE, or any of a variety of cellular data networks. In some embodiments, networks  and  may each include firewalls or other equipment or software that create security zones and\/or secure networks such as DMZs. One or more of blocks - may be located in one more of such security zones and\/or secure networks in some embodiments. For example, analysis console  may be in a DMZ that is separate from ingest block  and detection block . As another example, ingest block  may be in a different security zone than detection block .","As described above, embodiments of the present disclosure are operable to detect malware. In particular, embodiments of the present disclosure are operable to detect malware in one or more files. A file may include one or more of the following in any suitable combination: a data file, a data record, an email message, an attachment to an email message, and any other suitable target object for which malware detection may be appropriate.","In operation, in some embodiments, ingest block  may receive a file or set of files from network . In some embodiments, a file may include several files embedded within the file. For example, a ZIP file or other archive or compressed file type, may be received by ingest block . Ingest block  may extract and cause to be analyzed the files that are contained within the received ZIP file. Ingest block  may analyze the file(s) and determine one or more tests that should be performed on the file(s) in order to determine whether the file is malware. Detection blocks  may perform the test(s) that were determined by ingest block  in accordance with scheduling performed by scheduler block . Disposition block  may utilize the results of the tests performed by detection blocks  to determine what should be done with the file(s). In some cases, disposition block  will send the file(s) to analysis console  for further review by a human analyst. In some embodiments, disposition block  may respond to the results of detection blocks  regardless of whether it sends the file(s) to analysis console . For example, disposition block  may determine that the file(s) should be quarantined and send the file to server block  to quarantine the file. In some embodiments, disposition block  may also determine that the file(s) are not malware and may perform suitable corresponding actions with nodes coupled to external network . For example, disposition block  may cause the delivery of a message to which the analyzed file(s) were attached in response to the determination by disposition block  that the file(s) are not malware.","In some embodiments, detection blocks  may apply various techniques of malware detection. Detection blocks  may be implemented on a variety of types of hardware. They may be configured in a blade architecture or on physical hosts. Detection blocks  may also be configured utilizing clusters or other suitable distributed computing architectures. Detection blocks  may utilize virtualization or may themselves be virtual machines. Detection blocks  may be used to apply a variety of malware detection schemes to a file (which, in some embodiments, may include one or more URLs). In some embodiments, some of detection blocks  may be specialized such that each detection node may be configured to apply a type of malware detection scheme. For example, a detection block  may be configured to apply behavior-based malware detection schemes while another detection block  may be configured to apply metadata-based detection schemes where metadata of a file is analyzed. In yet another example, a detection block  may be configured to analyze a file by comparing it to stored patterns taken from files known to be malware, as described above with respect to  and .","Some or all of system , in some embodiments, may be utilized to detect malware in a variety of contexts. In some embodiments, accessing a \u201cfile\u201d may comprise accessing one or more URLs. For example, aspects of system  may be used to detect malware in a messaging environment. Suitable messaging environments include, but are not limited to, an e-mail environment, an instant messaging environment, a peer-to-peer messaging environment, a chat environment, or other messaging environments. Aspects of system , in some embodiments, may also be used in contexts where files are uploaded. For example, some or all of system  may be utilized in File Transfer Protocol (FTP) sessions, Wiki sessions, online message boards (such as forums), or other interactive environments. Aspects of system  may also be used in a Web browsing context. In such a context, some or all of system  may analyze requested Web pages and determine if they are malicious. System  may be used to detect malware in these and other contexts utilizing suitable configurations of ingest block . For example, if the context is an e-mail context, then ingest block  may be configured as a Mail Transfer Agent (MTA) that is able to handle e-mail messages. Configured in this manner, ingest block  may analyze a message, an attachment to the message, or both the message and any attachment(s) to the message. When some or all of system  operates in a context where files are uploaded, such as in an FTP session, ingest block  may be configured to access the file(s) associated with the FTP session and perform analysis on the file(s). When aspects of system  are used in a Web browsing context, ingest block  may be configured to retrieve an address associated with an Internet site or files associated with the Internet site and analyze such items.","In some embodiments, some or all of system  may be provided as a service to various agents. For example, an agent analyzing traffic passing through a particular boundary of a network may transmit certain traffic (such as one or more files) to aspects of system  for analysis and these or other aspects of system  may report to the agent the results of the analysis. As another example, an agent residing on a workstation or laptop computer used by end users may similarly transmit one or more files to some or all of system  for analysis and receive the results of the analysis. A particular example of such an agent is a client-located module capable of analyzing the downloaded contents of web-based email (e.g., GMAIL by GOOGLE; HOTMAIL by WINDOWS, or any other suitable web-based email program). As another example, a collaborative environment such as one associated with a cross-domain document management system (e.g., RAYTHEON's CHAIN environment) may utilize this service to check files hosted on the platform for malware. In some embodiments, aspects of system  may be offered as a service using Web service technology, such as Javascript-based Application Programming Interfaces (APIs), Simple Object Access Protocol (SOAP) Remote Procedure Calls (RPCs), and\/or other suitable network based APIs.",{"@attributes":{"id":"p-0051","num":"0121"},"figref":["FIG. 4","FIGS. 1A-1C","FIG. 2"],"b":["400","400","400","3","400"]},"Computer system  may have one or more input devices  (which may include a keypad, keyboard, mouse, stylus, or other input devices), one or more output devices  (which may include one or more displays, one or more speakers, one or more printers, or other output devices), one or more storage devices , and one or more storage medium . An input device  may be external or internal to computer system . An output device  may be external or internal to computer system . A storage device  may be external or internal to computer system . A storage medium  may be external or internal to computer system . In some embodiments, terminals  and server  of  may be implemented using some or all of the components described above included in computer system .","System bus  couples subsystems of computer system  to each other. Herein, reference to a bus encompasses one or more digital signal lines serving a common function. The present disclosure contemplates any suitable system bus  including any suitable bus structures (such as one or more memory buses, one or more peripheral buses, one or more a local buses, or a combination of the foregoing) having any suitable bus architectures. Example bus architectures include, but are not limited to, Industry Standard Architecture (ISA) bus, Enhanced ISA (EISA) bus, Micro Channel Architecture (MCA) bus, Video Electronics Standards Association local (VLB) bus, Peripheral Component Interconnect (PCI) bus, PCI-Express bus (PCI-X), and Accelerated Graphics Port (AGP) bus.","Computer system  includes one or more processors  (or central processing units (CPUs)). A processor  may contain a cache  for temporary local storage of instructions, data, or computer addresses. Processors  are coupled to one or more storage devices, including memory . Memory  may include random access memory (RAM)  and read-only memory (ROM) . Data and instructions may transfer bidirectionally between processors  and RAM . Data and instructions may transfer unidirectionally to processors  from ROM . RAM  and ROM  may include any suitable computer-readable storage media.","Computer system  includes fixed storage  coupled bi-directionally to processors . Fixed storage  may be coupled to processors  via storage control unit . Fixed storage  may provide additional data storage capacity and may include any suitable computer-readable storage media. Fixed storage  may store an operating system (OS) , one or more executables (EXECs) , one or more applications or programs , data  and the like. Fixed storage  is typically a secondary storage medium (such as a hard disk) that is slower than primary storage. In appropriate cases, the information stored by fixed storage  may be incorporated as virtual memory into memory . In some embodiments, fixed storage  may include network resources, such as one or more storage area networks (SAN) or network-attached storage (NAS). In some embodiments, memory , storage structures , and analysis module  of  as well as blocks - of  may be implemented using configurations such as the description of memory  above.","Processors  may be coupled to a variety of interfaces, such as, for example, graphics control , video interface , input interface , output interface , and storage interface , which in turn may be respectively coupled to appropriate devices. Example input or output devices include, but are not limited to, video displays, track balls, mice, keyboards, microphones, touch-sensitive displays, transducer card readers, magnetic or paper tape readers, tablets, styli, voice or handwriting recognizers, biometrics readers, or computer systems. Network interface  may couple processors  to another computer system or to network . Network interface  may include wired, wireless, or any combination of wired and wireless components. Such components may include wired network cards, wireless network cards, radios, antennas, cables, or any other appropriate components. With network interface , processors  may receive or send information from or to network  in the course of performing steps of some embodiments. Some embodiments may execute solely on processors . Some embodiments may execute on processors  and on one or more remote processors operating together. In some embodiments, processors  may be used to implement analysis module  of  and\/or may perform the steps specified in instructions or code included in analysis module  of  as well as blocks - of .","In a network environment, where computer system  is connected to network , computer system  may communicate with other devices connected to network . Computer system  may communicate with network  via network interface . For example, computer system  may receive information (such as a request or a response from another device) from network  in the form of one or more incoming packets at network interface  and memory  may store the incoming packets for subsequent processing. Computer system  may send information (such as a request or a response to another device) to network  in the form of one or more outgoing packets from network interface , which memory  may store prior to being sent. Processors  may access an incoming or outgoing packet in memory  to process it, according to particular needs.","Some embodiments involve one or more computer-storage products that include one or more tangible, computer-readable storage media that embody software for performing one or more steps of one or more processes described or illustrated herein. In some embodiments, one or more portions of the media, the software, or both may be designed and manufactured specifically to perform one or more steps of one or more processes described or illustrated herein. In addition or as an alternative, in some embodiments, one or more portions of the media, the software, or both may be generally available without design or manufacture specific to processes described or illustrated herein. Example computer-readable storage media include, but are not limited to, CDs (such as CD-ROMs), FPGAs, floppy disks, optical disks, hard disks, holographic storage devices, ICs (such as ASICs), magnetic tape, caches, PLDs, RAM devices, ROM devices, semiconductor memory devices, and other suitable computer-readable storage media. In some embodiments, software may be machine code which a compiler may generate or one or more files containing higher-level code which a computer may execute using an interpreter.","As an example and not by way of limitation, memory  may include one or more tangible, non-transitory, computer-readable storage media embodying software and computer system  may provide particular functionality described or illustrated herein as a result of processors  executing the software. Memory  may store and processors  may execute the software. Memory  may read the software from the computer-readable storage media in mass storage device  embodying the software or from one or more other sources via network interface . When executing the software, processors  may perform one or more steps of one or more processes described or illustrated herein, which may include defining one or more data structures for storage in memory  and modifying one or more of the data structures as directed by one or more portions the software, according to particular needs. In some embodiments, memory , storage structures , and analysis module  of  as well as blocks - of  may be implemented using configurations such as the description of memory  above.","In some embodiments, the described processing and memory elements (such as processors  and memory ) may be distributed across multiple devices such that the operations performed utilizing these elements may also be distributed across multiple devices. For example, software operated utilizing these elements may be run across multiple computers that contain these processing and memory elements. Other variations aside from the stated example are contemplated involving the use of distributed computing. In addition or as an alternative, computer system  may provide particular functionality described or illustrated herein as a result of logic hardwired or otherwise embodied in a circuit, which may operate in place of or together with software to perform one or more steps of one or more processes described or illustrated herein. The present disclosure encompasses any suitable combination of hardware and software, according to particular needs.","Although several embodiments have been illustrated and described in detail, it will be recognized that modifications and substitutions are possible without departing from the spirit and scope of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["For a more complete understanding of the present disclosure and its advantages, reference is made to the following descriptions, taken in conjunction with the accompanying drawings, in which:",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 1B","FIG. 1A"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 1C","FIG. 1A"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
