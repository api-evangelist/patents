---
title: Controlling a GUI display for a plug-in
abstract: Methods, systems, and computer program products are provided for controlling a GUI display for a plug-in in an application supporting plug-ins. Embodiments include receiving, at run time, in the application from the plug-in a request to display a GUI object; responsive to the request, retrieving an XML representation of the GUI object; and displaying the GUI object in dependence upon the retrieved XML representation of the GUI object. Typical embodiments also include receiving from the plug-in a request to retrieve user input responsive to the GUI object; and returning to the plug-in responsive user input.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09137188&OS=09137188&RS=09137188
owner: International Business Machines Corporation
number: 09137188
owner_city: Armonk
owner_country: US
publication_date: 20080710
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS","Introduction","Controlling a GUI Display for a Plug-In"],"p":["This application is a continuation application of and claims priority from U.S. patent application Ser. No. 10\/815,214 filed on Mar. 31, 2004.","1. Field of the Invention","The field of the invention is data processing, or, more specifically, methods, systems, and products for controlling a GUI display for a plug-in.","2. Description of Related Art","Many software infrastructures allow customers to write custom pluggable software components (\u201cplug-ins\u201d) to meet their individual software needs. If a single static graphical user interface (\u201cGUI\u201d) manages the software system, plug-ins are not able to use the product's GUI because such GUIs do not extend interfaces through applications so as to make GUI functions accessible to plug-ins. GUIs often do not extend interfaces through applications so as to make GUI functions accessible to plug-ins because an application supporting plug-ins often has a proprietary look and fell effected through its GUI, a proprietary look and feel that may be the subject of considerable investment on the part of its developer. Some applications support plug-ins with text-based configuration files or even hard code configuration parameters, requiring recompilation of the application in order to incorporate a plug-in. Other applications use web services portlets to support GUIs, requiring development of separate GUI functions for the plug-ins. Both these approaches risk GUI style differences from the supporting application because they both put full GUI control in the hands of the plug-in. GUI styles in plug-ins that differ from the GUI style of a supporting application are undesirable because the hosting parent supporting application may lose control of the overall look and feel of its GUI presentation to users.","Methods, systems, and products are disclosed to provide GUI extensibility into an application supporting plug-ins so that a plug-in developer can use GUI functions whose operations may be controlled by the application so as to maintain the consistent look and feel of a particular application. More particularly, methods, systems, and computer program products are provided for controlling a GUI display for a plug-in in an application supporting plug-ins. Embodiments include receiving, at run time, in the application from the plug-in a request to display a GUI object; responsive to the request, retrieving an XML representation of the GUI object; and displaying the GUI object in dependence upon the retrieved XML representation of the GUI object. Typical embodiments also include receiving from the plug-in a request to retrieve user input responsive to the GUI object; and returning to the plug-in responsive user input.","Typical embodiments of the invention also include installing the plug-in in the application, including configuring the application with the location of at least one XML representation of at least one GUI object. Typical embodiments also include providing through the application for the plug-in access to a subset of a set of GUI objects supported by a GUI environment. Many embodiments include providing GUI functions for the plug-in through a GUI API in the application, wherein receiving, at run time, in the application from the plug-in a request for display of a GUI object includes receiving a GUI API call from the plug-in. Typical embodiments include parsing the retrieved representation of the GUI object, wherein displaying the GUI object include displaying the GUI object in dependence upon the parsed representation of the GUI object. Typical embodiments also include publishing XML syntax for representing XML GUI objects operable by a plug-in through the application.","The foregoing and other objects, features and advantages of the invention will be apparent from the following more particular descriptions of exemplary embodiments of the invention as illustrated in the accompanying drawings wherein like reference numbers generally represent like parts of exemplary embodiments of the invention.","The present invention is described to a large extent in this specification in terms of methods for controlling a GUI display for a plug-in. Persons skilled in the art, however, will recognize that any computer system that includes suitable programming means for operating in accordance with the disclosed methods also falls well within the scope of the present invention. Suitable programming means include any means for directing a computer system to execute the steps of the method of the invention, including for example, systems comprised of processing units and arithmetic-logic circuits coupled to computer memory, which systems have the capability of storing in computer memory, which computer memory includes electronic circuits configured to store data and program instructions, programmed steps of the method of the invention for execution by a processing unit.","The invention also may be embodied in a computer program product, such as a diskette or other recording medium, for use with any suitable data processing system. Embodiments of a computer program product may be implemented by use of any recording medium for machine-readable information, including magnetic media, optical media, transmission media, or other suitable media. Persons skilled in the art will immediately recognize that any computer system having suitable programming means will be capable of executing the steps of the method of the invention as embodied in a program product. Persons skilled in the art will recognize immediately that, although most of the exemplary embodiments described in this specification are oriented to software installed and executing on computer hardware, nevertheless, alternative embodiments implemented as firmware or as hardware are well within the scope of the present invention.","Methods, systems, and computer program products for controlling a GUI display for a plug-in in an application supporting plug-ins are described with reference to the drawings beginning with .  sets forth a block diagram of automated computing machinery represented as a computer () useful in controlling a GUI display for a plug-in in an application supporting plug-ins according to embodiments of the present invention. The computer () of  includes at least one computer processor () or \u2018CPU\u2019 as well as random access memory () (\u201cRAM\u201d). Stored in RAM () is an application program () and a plug-in (). Application programs include particular computer software instructions for controlling a GUI display for a plug-in in accordance with embodiments of the present invention. A plug-in hardware or software module typically adds a specific feature or service to an application.","The application () of  operates generally by receiving, at run time, from the plug-in a request to display a GUI object; retrieving an XML representation of the GUI object; and displaying the GUI object in dependence upon the retrieved XML representation of the GUI object. In the example of , the application () has standards of appearance for its GUI display, and the application () may operate in computer () by retrieving an XML representation of a GUI object that complies with the application's standards of appearance for the GUI display. By having standards of appearance and retrieving for requesting plug-ins XML representations of GUI objects that comply with the application's standards of appearance, application () maintains control of the overall look and feel of its GUI presentation to users. Any application may support a plug-in. Examples of applications that often support plug-ins are email clients such as Microsoft Outlook\u2122 and browsers such as Microsoft Internet Explorer\u2122. Popular plug-ins for Internet Explorer include, for example: the Flash\u2122 plug-in from Macromedia, Inc.; the QuickTime\u2122 plug-in from Apple Computer, Inc., and the RealPlayer\u2122 plug-in from RealNetworks, Inc.","Also stored in RAM () is an operating system (). Operating systems useful in computers according to embodiments of the present invention include Unix, Linux, Microsoft NT\u2122, and many others as will occur to those of skill in the art. As discussed in more detail below, operating system () includes GUI functions () operable through an application programming interface (\u201cAPI\u201d) provided by the operating system.","The computer () of  includes computer memory () coupled through a system bus () to processor () and to other components of the computer. Computer memory () may be implemented as a hard disk drive (), optical disk drive (), electrically erasable programmable read-only memory space (so-called \u2018EEPROM\u2019 or \u2018Flash\u2019 memory) (), RAM drives (not shown), or as any other kind of computer memory as will occur to those of skill in the art.","The example computer () of  includes a communications adapter () for implementing connections for data communications (), including connection through networks, to other computers (), servers, clients, administrative devices, or sleeping devices. Communications adapters implement the hardware level of connections for data communications through which local devices and remote devices or servers send data communications directly to one another and through networks. Examples of communications adapters include modems for wired dial-up connections, Ethernet (IEEE 802.3) adapters for wired LAN connections, and 802.11b adapters for wireless LAN connections.","The example computer of  includes one or more input\/output interface adapters (). Input\/output interface adapters in computers implement user-oriented input\/output through, for example, software drivers and computer hardware such as graphics adapters for controlling output to display devices () such as computer display screens, as well as user input from user input devices () such as keyboards and mice. GUI functions () operate graphics adapters to provide GUI environments for applications and plug-ins.","The term \u201cGUI object\u201d is used in this specification as a generic term for a part of a GUI that allows the user to interface with the application and operating system. GUI objects display information and support user interaction with the GUI. Examples of GUI objects include buttons, dialog boxes, pop-up windows, pull-down menus, icons, scroll bars, resizable window edges, progress indicators, selection boxes, windows, tear-off menus, menu bars, toggle switches, forms and other GUI objects that will occur to those of skill in the art. For further explanation of GUI objects, refer to  which depicts a graphical user interface (\u201cGUI\u201d) on a local host running an exemplary data communication application, more particularly, in the example of , a browser. The browser of  includes a GUI toolbar () with a Back button, a Forward button, and buttons for refreshing the display, searching, printing, and stopping web page retrievals, each of which is a GUI object. The browser of  also includes a horizontal menu () containing the menu items File, Edit, View, Bookmark (called \u2018Favorites\u2019 on some browsers), Tools, and Help. The horizontal menu () is a GUI object and each of the menu items is also a GUI object. The browser of , as depicted, has been operated to point to a web site named \u201cSomeSearchEngine.com,\u201d as shown in the title bar of the browser display (). The title bar is the title bar for a GUI window. The GUI window is a GUI object and the title bar is a GUI object.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3"],"b":["126","104","102","140","130","140","130","128","102"]},"The locations within the computer system of the application configuration data (), the XML representation () of GUI objects, and the plug-in () are not limitations of the invention. The file system (), the configuration data (), the XML representation (), and the plug-in () can be located anywhere in cyberspace that can be located with a Universal Resource Locator (\u201cURL\u201d). Some applications, for example, expose an API for GUI functions through a web services portlet, and in such systems a plug-in may execute on another computer located remotely across a network from the computer the application is on.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 4","FIG. 4"],"b":["126","104","102","140","128","104","130","404","104","130","140"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 3","FIG. 4"],"b":["126","104","102"]},"Both of the exemplary systems of  operate generally by receiving, at run time, in the application from the plug-in a request to display a GUI object; retrieving an XML representation () of the GUI object in response to the request; and displaying the GUI object in dependence upon the retrieved XML representation of the GUI object. In both of the illustrated exemplary systems of , application () has standards of appearance () for its GUI display (), and retrieving an XML representation () of the GUI object is carried out by retrieving an XML representation () of the GUI object that complies with the application's standards of appearance () for the GUI display (). By having standards of appearance and retrieving for requesting plug-ins XML representations of GUI objects that comply with the application's standards of appearance (), application () in the system of  and in the system of  maintains control of the overall look and feel of its GUI presentation to users.","The application () of  includes a plug-in display engine (). The plug-in display engine () includes GUI functions (). A GUI function is a software routine that displays and administers GUI objects, displaying GUI objects on displays () operated through GUI adapters () and adapter drivers () and retrieving user input () through input adapters () such as, for example, mouse adapters and keyboard adapters operated by input adapter drivers (). The plug-in display engine () exposes an API () for the plug-in () to use in accessing the GUI functions (). The plug-in display engine also includes rules () governing the scope of the GUI functionality that is made accessible to the plug-in (). Examples of rules () governing the scope of the GUI functionality that is made accessible to the plug-in () include:\n\n","The plug-in display engine () of  operates generally by providing through the application () for the plug-in () access to a subset of a set of GUI objects supported by a GUI environment. In the example of , an overall GUI environment is provided by an operating system () which provides GUI functions (). The GUI functions () of the operating system () are accessible to the application () through an API () exposed to the application by the operating system (). Subject to the rules (), the plug-in display engine () provides through its GUI functions () all or a portion of the GUI functions () of the overall GUI environment. While in the example of , the operating system () provides the overall GUI environment for the application (), this is not a limitation of the scope of the invention. GUI environments may be provided by applications, as a toolset at the application level outside the operating system or any other application, and otherwise as will occur to those of skill in the art.","As just mentioned above, the plug-in display engine of  () provides through its GUI functions () all or a portion of the GUI functions () of the overall GUI environment. Because a plug-in display engine may not support all the GUI functions of a particular GUI environment like a particular operating system for example, developers of applications that support plug-ins according to the present invention can publish a list of GUI objects supported by the application, the list comprising a subset of the set of GUI objects supported by a GUI environment. A list of supported GUI objects advantageously allows plug-in developers to write plug-ins for applications that support plug-in according to embodiments of the present invention. Developers of applications supporting plug-ins may advantageously publish XML syntax for representing XML GUI objects operable by a plug-in through the application. Exemplary ways of publishing XML syntax for representing XML GUI objects include XML Document Type Definitions (\u201cDTDs\u201d) and XML schema. Such a DTD or schema may be published by storing the DTD or schema at a location in cyberspace, such as, for example, a location identified by a URL such as: http:\/\/www.gui.obj\/guiObjects\/syntax.dtd. Then, when a DTD named \u201csyntax.dtd\u201d is stored at the location identified by that URL, any XML document can use that DTD to determine syntax for representing GUI object by including these declarations in the XML document, for example:",{"@attributes":{"id":"p-0032","num":"0034"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?xmlversion=\u201c1.0\u201d?>"]},{"entry":[{},"<!DOCTYPE guiObjects SYSTEM"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u201chttp:\/\/www.gui.obj\/guiObjects\/syntax.dtd\u201d>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The exemplary system of  operates generally by providing GUI functions () for the plug-in () through a GUI API () in the application (). At run time, the plug-in requests display of GUI objects by calling GUI functions through the API (). The plug-in display engine () receives requests for display of GUI objects as GUI API calls from the plug-in (). In response to requests for display of GUI objects, the plug-in display engine () of  retrieves XML representations () of the GUI objects from a file system () and displays the GUI objects in dependence upon the retrieved XML representations by calling GUI functions () in the operating system () through an API (). In the example of , the GUI functions () display the GUI objects through a driver () and an adapter ().","In the example of , the plug-in display engine also receives from the plug-in () requests to retrieve user input () responsive to displayed GUI objects. Requests to retrieve user input may be implemented synchronously as blocking calls that wait for user input. Alternatively, requests to retrieve user input may be implemented as calls that register the plug-in or a software object in the plug-in as a listener with the plug-in display engine (). The plug-in display engine () returns to the plug-in responsive user input made available to the plug-in display engine through an adapter (), driver () and GUI functions () in the operating system.",{"@attributes":{"id":"p-0035","num":"0037"},"figref":["FIG. 5","FIG. 5"],"b":["126","104","102","302","304","130","102","312","312","126","312","102"]},"The method of  also includes parsing the retrieved representation of the GUI object, where displaying the GUI object further comprises displaying the GUI object in dependence upon the parsed representation of the GUI object. Here is an example of an XML representation of GUI objects:",{"@attributes":{"id":"p-0037","num":"0039"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<window title=\u201cMyWindow\u201d location=\u201c0,0\u201d size= \u201c200,300\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<dialogBox displayText= \u201cDisplay Something?>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<button type=YesButton \/>"]},{"entry":[{},"<button type=NoButton \/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/dialogBox>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/window>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"This example describes a window entitled \u201cMyWindow\u201d configured to display in the top left area of a display screen sized at 200 by 300 pixels. The window is represented to contain a dialogue box that will display the text \u201cDisplay Something?\u201d The dialogue box is represented to contain two buttons, a Yes button and a No button. The method of  also includes displaying () the GUI object in dependence upon the retrieved XML representation of the GUI object. A plug-in display engine is unlikely to operate directly against XML in text form, however. The exemplary XML representation of a window may therefore be parsed, for example, into the following structure expressed, for example, in C, C++, or Java:",{"@attributes":{"id":"p-0039","num":"0041"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"struct GUI_STRUCTURE"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TypeCode type = WINDOW;"]},{"entry":[{},"string title = \u201cMyWindow\u201d;"]},{"entry":[{},"int locationX = 0;"]},{"entry":[{},"int location Y = 0"]},{"entry":[{},"int sizeX = 200;"]},{"entry":[{},"int sizeY = 300;"]},{"entry":[{},"struct"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TypeCode type = DIALOGUE_BOX;"]},{"entry":[{},"string displayText = \u201cDisplay Something?\u201d"]},{"entry":[{},"struct"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"TypeCode type = YES_BUTTON;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"struct"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"TypeCode type = NO_BUTTON;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The method of  also includes receiving () from the plug-in () a request to retrieve user input responsive to the GUI object and returning () to the plug-in responsive user input. In the GUI window described above, for example, user input may select or operate one of the buttons to display something or refrain from displaying something.","In view of these descriptions of exemplary embodiments, readers will recognize that embodiments of the present invention advantageously provide GUI extensibility into an application supporting plug-ins so that a plug-in developer can use GUI functions whose operations may be controlled by the application so as to maintain the consistent look and feel of an application. It will be understood from the foregoing description that modifications and changes may be made in various embodiments of the present invention without departing from its true spirit. The descriptions in this specification are for purposes of illustration only and are not to be construed in a limiting sense. The scope of the present invention is limited only by the language of the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
