---
title: Host visibility as a network service
abstract: At a data switching device in a data center, it is detected whether a host has connected to a cloud computing network of which the data switching device and the data center are components. The detection is performed without directly communicating with the host. The data switching device determines properties of the host and generates a message comprising data representative of the properties of the host. The message is sent from the data switching device to a node in the cloud computing network that is configured to manage components of the cloud computing network associated with the host.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09100298&OS=09100298&RS=09100298
owner: Cisco Technology, Inc.
number: 09100298
owner_city: San Jose
owner_country: US
publication_date: 20110523
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","DESCRIPTION OF EXAMPLE EMBODIMENTS"],"p":["The present disclosure relates to cloud computing.","\u201cCloud computing\u201d can be defined as Internet-based computing in which shared resources, software and information are provided to client or user computers or other devices on-demand from a pool of resources that are communicatively available via the Internet, or other electronic network. Cloud computing is envisioned as a way to democratize access to resources and services, letting users efficiently purchase as many resources as they need and\/or can afford.","In some possible implementations, cloud computing comprises dynamically linking backend resources (e.g., memory, processors, etc.) to provide web-based services, applications, and data storage on-demand via a cloud computing network. This approach has the potential effect of providing services at lower cost than current options, and with less complexity, greater scalability, and wider reach. However, keeping track of the potentially thousands of compute and associated devices (switches, firewalls, etc.) as services are brought up and torn down on those compute devices can be daunting. Indeed, network management of cloud computing systems currently rely on orchestration tools that learn about cloud elements within a given Data Center, make all placement decisions for all cloud elements within the Data Center, and render and provision the cloud service request by communicating directly with each cloud element in the Data Center. Keeping track of such a dynamic environment is a significant challenge, especially as demand for cloud computing services continues to increase.","Overview","Techniques are disclosed herein to provide host visibility as a network service in a cloud computing network environment. In one embodiment, at a data switching device, e.g., an Access Switch, in a Data Center, it is detected whether a host has connected to a cloud computing network of which the data switching device and Data Center are components. The detection is performed without directly querying the host. At the data switching device, properties of the host are determined and a message is generated comprising data representative of the properties of the host. The message is sent from the data switching device to a node in the cloud computing network that is configured to manage components of the cloud computing network. In so doing, a new connection of a computing device to, or a disconnection of the computing device from a cloud computing network, is detected without communicating directly with the computing device. As a result, network operators can gain insight into precisely whether, which, and how devices (compute, storage, etc.) are being utilized in the cloud computing network and take appropriate, automated, action.","Example Embodiments",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1","b":["100","120","125","125","131","132","133","134","135","136","125","120"]},"Each Data Center ,  (and using Data Center  as an example) may comprise DC Edge routers ,  (as mentioned), a firewall , and a load balancer . These elements operate together to enable \u201cpods\u201d ()-(), (), etc., which respectively include multiple cloud resource devices ()-(), ()-(), ()-(), to communicate effectively through the network topology  and provide computing and storage services to, e.g., clients , which may be other Data Centers or even stand alone computers, as shown. One way to implement such a cloud computing environment is via a publish-subscribe system. In such a system, the cloud resource devices ()-(), ()-(), ()-() publish their services, capabilities, etc., and clients  make requests for those services or resources. That is, clients  become subscribers to the resources that are provided by the cloud resource devices . Significantly, the clients  themselves may have no knowledge of which specific cloud resource device(s)  actually provides the desired service (e.g., compute, storage, etc.). Also shown in Data Center  is a Management Node , the function of which is, generally, to control and\/or configure, among other things, the firewall  and load balancer  to optimize operation of the Data Center  or to apply particular policies as appropriate.","Still referring to , each Data Center pod, e.g., (), may comprise one or more aggregation nodes (), (), etc. that are in communication with the multiple cloud resource devices  via Access Switches (), (), as may be appropriate. Aggregation nodes  may be configured to aggregate the functionality of the cloud resource devices  such that DC Edge routers , , etc. need not keep track of the potentially thousands of individual machine that constitute the cloud resource devices . A firewall  and load balancer  may also be furnished for each pod  to ensure security and improve efficiency of connectivity with upper layers of network topology . That is, specific pod-based policies might be desired for selected pods, which policies can be applied via firewall . Likewise, load balancing among the Access Switches  and thus individual cloud resource devices  can be effected via load balancer . These latter two entities, firewall  and load balancer  can be configured the same for all pods or can be configured differently depending on the needs of the service provider or clients . A Management Node  may also be provided within each pod, and such a node may be configured, like Management Node  to control\/configure the firewall  and load balancer  in its associated pod.","Cloud resource devices  themselves may be web or application servers, storage devices such as disk drives, or any other computing resource that might be of use or interest to an end user, such as client . In this regard, each of the cloud resource devices  may function as a \u201chost\u201d for one or more such applications. Thus, a host in the context of the instant disclosure may be considered to be a provisioned server or storage device (among other possible devices) that is configured with software to perform one or more tasks on behalf of an end user, such as client . Those skilled in the art will appreciate that the term \u201chost\u201d can be used to represent either a physical hardware device, or a virtual machine that that may operate on a physical device.","In some instances, a host can be provisioned manually, as follows. A server administrator builds a selected server and then connects that server to the network. In the case of , connection may be via an associated Access Switch . Thereafter, the server administrator might communicate the insertion of the server to a network administrator. The server administrator may likewise communicate the insertion of the server to a security administrator. When those steps (operations) are complete, the network administrator can provision the network for the server (e.g., configures Access Switch  to become aware of the server's presence) and the security administrator can provision appropriate security services for the server, e.g., by configuring firewall  with appropriate policies. After the forgoing operations are completed, the server is online and becomes available for use by clients .","Precisely how this physical server might thereafter be used, however, may become unknown to the network provider. That is, an end user may, for instance, instantiate a virtual machine on one of the provisioned servers, and that virtual machine may subsequently be migrated to yet another online, provisioned, server or host. Accordingly, an issue arises, from a network management perspective, as to how to monitor when a given host becomes connected or disconnected from the network and precisely where, logically and physically, the connection or disconnection has occurred.","In accordance with an embodiment, rather than manually determining when and where a given host becomes connected or disconnected from the network, a network node, e.g., an associated Access Switch , is configured to detect the insertion of a new node (i.e., a host including, possibly, a virtual machine) in the cloud computing network. Although the remainder of this description will assume that it is an Access Switch  that performs the detection of a new host (and other functions described herein), those skilled in the art will appreciate that other nodes may be employed to perform these functions, such as core\/aggregation switch  or DC Edge Routers -.","More specifically, the Access Switch  (although, again, the particular node could be a node other than an Access Switch) is configured to include Host Detection and Signaling Logic  whose functionality is described in detail below. In one possible embodiment, each of the Access Switches  includes an instance of Host Detection and Signaling Logic  so that a given Access Switch  can monitor the activities of hosts, i.e., the activities of respective cloud resource devices  to which the Access Switch is connected.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2A","b":["180","230","180","210","220","230","240","225","225","225","180","180"]},"Processor  may be a programmable processor (microprocessor or microcontroller) or a fixed-logic processor. In the case of a programmable processor, any associated memory (e.g., ) may be of any type of tangible processor readable memory device (e.g., random access, read-only, etc.) that is encoded with or stores instructions that can implement the Host Detection and Signaling Logic . Alternatively, processors  may be comprised of a fixed-logic processing device, such as an application specific integrated circuit (ASIC) or digital signal processor that is configured with firmware comprised of instructions or logic that cause the processor to perform the functions described herein. Thus, Host Detection and Signaling Logic  may be encoded in one or more tangible computer readable storage media for execution, such as with fixed logic or programmable logic (e.g., software\/computer instructions executed by a processor) and any processor may be a programmable processor, programmable digital logic (e.g., field programmable gate array) or an ASIC that comprises fixed digital logic, or a combination thereof. In general, any process logic may be embodied in one or more processor- or computer-readable storage media that is encoded with instructions for execution by a processor that, when executed by the processor, are operable to cause the processor to perform the functions described herein.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2B","b":["195","197","195","250","210","260","280","180","195","270","270","230"]},"To address the complexity and expansive nature of a cloud computing network like that shown in , embodiments described herein provide a signaling mechanism that informs the network when new hosts join the network. In one possible embodiment, not only is the newly connected host detected, but other parameters associated with the new node or host are captured. Such parameters may include, e.g., a media access controller (MAC) address, virtual MAC address Internet Protocol (IP) address, VLAN identifier (ID) or interface via which the node or host connects. In dynamic environments, not all of these properties will necessarily be known when the (new) host first joins the network, especially in the case where a virtual machine might be migrated from one physical device to another. In accordance with one possible implementation, one way to learn about a newly-connected host without directly communicating with that host for that purpose, is to actively snoop on packets that traverse, e.g., Access Switch . As noted, cloud resource devices  are employed by clients . As such, there will ultimately be exchanges of data between a given client  and a given cloud resource device  or host that is performing tasks on behalf of client . In a packet switched network like a cloud computing network that is often operable via the Internet, data in the form of discrete packets is passed between the client  and cloud resource device or host . These packets can be investigated and monitored to determine whether a new host has come on line, as well as to obtain selected measurements about the host, as will be explained further below.","As mentioned earlier, cloud computing networks may implement publish-subscribe busses or channels. These busses or channels can be in-band or out-of-band. In accordance with one possible implementation, a publish-subscribe bus can be exploited to carry information associated with a given host that is gleaned from packet snooping. The information can be consumed by the cloud computing network or by proprietary applications operating within the cloud to monitor the behavior of the several hosts that are operating within a given logical space. In the specific embodiment described herein, this information is consumed by one or more Management Nodes , .","As a high-level example, once a host is provisioned, information about the host can be consumed by, e.g., a Management Node ,  to verify that the provisioning was as expected. The gathering of information in this manner can also be used as a trigger point to initiate further actions. For example, firewalls and load balancers can be adjusted according to any newly detected host as well as in accordance with any policy that might be applicable.","Thus, again, the methodology and apparatus described herein enable the automatic discovery of a new host that is added to a network. This automatic discovery is accomplished not by communicating directly with the host, but instead by performing packet snooping or sniffing as the host exchanges data with another entity. The snooped packets may include a rich set of information that can help to identify and characterize the newly-connected host. For example, packet snooping can result in the automatic discovery of the addressing properties of a host.","In one possible implementation, and as shown in , Host Detection and Signaling Logic  is configured to operate on Access Switch . With reference to  as well, Access Switch  may be considered a first hop network switch relative to a cloud resource device . Thus, because of the proximity of Access Switch  to a host (cloud resource device ), Access Switch  may be a particularly suitable location to instantiate the Host Detection and Signaling Logic . In accordance with an embodiment, Host Detection and Signaling Logic  is configured to apply one or more packet snooping methodologies to the packets that flow through the Access Switch via, e.g., its network interface . More particularly, Host Detection and Signaling Logic  can be configured to trap Address Resolution Protocol (ARP)\/Gratuitous-ARP messages and, thus, automatically learn the address of the host from the trapped message. ARP messages may also be used to, e.g., determine a given host's media access controller (MAC) address knowing only its current IP address.","Similarly, in Data Centers where Dynamic Host Configuration Protocol (DHCP) is used, DHCP snooping can be employed by Host Detection and Signaling Logic  to learn, e.g., the address of the host. Other snooping methodologies can also be leveraged, such as Label Distribution Protocol (LDP), to gather host details in environments where that is feasible. Moreover, besides learning the address of the host, it is also possible to determine the specific physical port\/interface via which the host is connected to the Access Switch. Those skilled in the art will appreciate that any methodology by which packets passing through Access Switch  can be examined (snooped) can be employed in connection with the methodologies described herein.","Furthermore, packet snooping can also be employed to monitor packets on a virtual local area network (VLAN) or port basis. As such, it is possible to monitor data on a per port, set of ports or VLAN basis. With such multiple monitoring capabilities it is thus possible to avoid extraneous or duplicate detections of a new host joining the network. In conditions where duplicates occur, such duplicates can be reconciled such that only one event (e.g., \u201cnew host detected\u201d) can be generated and sent to the node consuming the information, e.g., Management Node . As mentioned, the information itself can be exposed through a publish-subscribe system that uses, e.g., eXtensible Markup Presence Protocol (XMPP), to exchange messages. Alternatively, the information can be exposed through a separate Application Programming Interface (API) configured to allow a node to request and obtain the information from the Host Detection and Signaling Logic  operating on Access Switch . This exposing of the information gleaned about the host is characterized by the signaling portion of the Host Detection and Signaling Logic  and the Host Detection, Signaling and Management Logic .","Also, in platforms where advanced capabilities are available and desired, per host usage measurements can be published (or accessed via an API) at regular intervals. Such usage measurements may include, but need not be limited to, the number of bytes\/packets sent by the host, the number of bytes\/packets received by the host, the total number of bytes\/packets sent and received by the host, and how many different nodes the host is communicating with. Other usage measurements might be indicative of services operating on a given host connected to a given port. These measurements could be used for traffic analysis, performance monitoring and trouble shooting.","Reference is now made to , which shows a flow chart depicting an example series of steps (operations) for performing host detection and signaling in accordance with one possible implementation. That is, the steps (operations) shown in , as well as those shown in , B, A and B, may be performed by Host Detection and Signaling Logic  operating in conjunction with Access Switch .","At step , a new host connecting to the network is detected. Detection can be performed by packet snooping and determining, e.g., that packets containing a new MAC or IP address are flowing in the network. A new MAC or IP address is indicative of a new host being connected. At step , properties of the host can likewise be detected. That is, using still further packet snooping methods, an IP address, port number (e.g., related to Transmission Control Protocol\/User Datagram Protocol (TCP\/UDP)), and VLAN tag associated with a data session being supported by the host can all be obtained and associated with the new host. The physical port of the Access Switch can also be determined.","At step , the properties of the host can be packaged into a host connection message and made available for publication via, e.g., an XMPP-based publish-subscribe mechanism. Management Nodes ,  can operate an appropriate XMPP client and thus obtain the published host connection message. Alternatively, the host properties information can be made available via an API such that management nodes ,  can gain access to the information at predetermined intervals, or upon request. Ultimately, and as shown at step , the generated host connection message is sent to another node in the network, such as Management Node , , where the information can be aggregated with other information about hosts being serviced by other Access Switches . Those skilled in the art should appreciate that the host connection message need not necessarily be passed to another node, but may instead be processed directly in the Access Switch or other node in which the Host Detection and Signaling Logic  is instantiated.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 3B","b":["195","197","230","350","360","195","197","195","195","270"]},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 4A","b":["410","420"]},"At step  the generated host usage message is forwarded to another node such as Management Node  or .",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 4B","b":["195","197","270","230","440","450","195","197"]},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 5A","b":["510","180","230","230"]},"At step , a host disconnection message can be generated. Such a message will comprise data representative of host properties such as IP address, or MAC address, among others, so that the recipient of the host disconnection message will know which host has been disconnected from the network. At step  the generated host disconnection message is sent to, e.g., Management Node  or .",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 5B","b":["195","197","270","230","540","550","195","197","195"]},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 6","b":["195","197","270","610","180","195","197","180","195","197","620","195","197","630","195","197"]},"Thus, as explained herein, the described methodologies and apparatus are configured to automatically determine when a host connects to a network, such as a cloud computing network. Automation is made possible by packet snooping mechanisms that are implemented close to where the host connects, such as an Access Switch. The packet snooping enables the methodology to capture the host's IP address, MAC address, and port number, etc., which information can then be published or otherwise made available to a network management entity, such a Management Node. The management entity can then make suitable adjustments to network components in light of the newly-connected host. Periodic measures of host usage can also be published, or otherwise made available, such that the management node can still further adjust network component as may be need to accommodate the host. Ultimately, it may also be detected when the host becomes disconnected from the network such that the management node can make appropriate adjustments in light of the disconnection.","Although the system and method are illustrated and described herein as embodied in one or more specific examples, it is nevertheless not intended to be limited to the details shown, since various modifications and structural changes may be made therein without departing from the scope of the apparatus, system, and method and within the scope and range of equivalents of the claims. Accordingly, it is appropriate that the appended claims be construed broadly and in a manner consistent with the scope of the apparatus, system, and method, as set forth in the following."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
