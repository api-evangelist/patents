---
title: System for scheduling and monitoring computer processes
abstract: A job scheduling device providing a consistent set of application programming interfaces (APIs) compiled and linked into an individual or suite of programs to provide scheduling services on a single computer or across multiple computing platforms, includes a GUI API for retrieving and validated job parameters, a job scheduling API for allocating jobs based on the job parameters, and an enterprise scheduling agent hosted on one or more nodes of the computer platforms. An enterprise communication agent sends messages containing jobs from a computer executing a program utilizing the job scheduling device to the enterprise scheduling agent on a selected node where the job is to execute. Then, the enterprise scheduling agent retrieves job parameters and launches the job on the selected node. The enterprise scheduling agent maintains a local job repository containing job information for each job run on its corresponding node and sends messages to a job data management API to maintain a central job repository containing information on jobs executed on all nodes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07386586&OS=07386586&RS=07386586
owner: Computer Associates Think, Inc.
number: 07386586
owner_city: Islandia
owner_country: US
publication_date: 19981222
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["1. Field of the Invention","This invention relates to the scheduling and monitoring of computer processes. The invention is more particularly related to the submission of jobs for execution. The invention is still further related to the submission, scheduling and monitoring of jobs across multiple networked computer platforms (nodes) and the provision of a common interface for programs submitting to the jobs.","The invention is still further related to a job scheduler that maintains local job repositories having detailed job histories for each node and a central job repository maintaining detailed job history across an enterprise. The invention is yet further related to the provision of a scheduling agent on each computer platform to start execution of each job submitted.","2. Discussion of the Background","Modern computer systems are utilized for a wide range of tasks. Many tasks are simple and are executed in real time. However, some tasks require long execution times, or must be performed at various intervals or at inconvenient times (when a system where a task is running has a light tasking load, early morning or weekend hours, for example).","Basic scheduling devices have been utilized to run certain programs or jobs at various intervals or at specified run times. However, these systems do not provide adequate service or integrate seamlessly into any specific product line, nor provide appropriate service between multiple computing platforms in a networked environment.","Accordingly, it is an object of this invention to provide a job scheduling apparatus for scheduling jobs.","It is another object of the present invention to provide a job scheduling apparatus that provides job scheduling services across multiple computing platforms, and control over the execution of a job submitted;","It is yet another object of the present invention to provide a scheduling agent on each respective node of a computer network for accepting and managing jobs submitted to the respective node;","It is another object of this invention to provide a command line that may be utilized to determine job status and issue job control commands to jobs executing on a node in an enterprise.","It is another object of this invention to provide a seamless job scheduling device for plural software products having a common format for submission and scheduling of jobs, and to provide consistent application programming interfaces to the software products utilizing the job scheduling device.","It is yet another object of this invention to provide a single job scheduling and administrative tool for all POEMS enabled products (Platinum point products, for example) under a common application programming interface that specifically and efficiently targets job scheduling requirements of the products.","It is yet another object of the present invention to provide a common graphical user interface (Microsoft Foundation Class (MFC), for example) to, schedule and list all jobs and common APIs used by a GUI component and the agent.","Referring now to the drawings, wherein like reference numerals designate identical or corresponding parts throughout the several views, and more particularly to  thereof, there is illustrated an implementation of the present invention providing a job scheduling and administrative tool for POEMS enabled products (Platinum point products, for example) under a common application programming interface.","In , a suite of point products  (point products  . . . n), each including a point product GUI , are linked together with various POEMS enabling application programming interfaces (API's), and a Platinum Enterprise Communicator (PEC) . At least one Lightweight Enterprise Scheduler (LES) agent  is installed on a node. The point product GUI  provides a user interface to the point product  and communicates user selections by sending job data to a GUI API .","The GUI API  incorporates LES provided property pages, performs data checks and job allocation, and calls relevant scheduling functions in the job scheduling API  according to the job parameters. The GUI API  is used by the point product GUI .","The job scheduling API  performs scheduling services, allocates and defines jobs submitted and distributes jobs by initiating a PEC message to an LES agent on a selected node to run the job (LES node , , for example). Inter-process communications are performed via the PEC . The Job Scheduling API is preferably used by the point product GUI .","The LES agent  initiates processing of the job as requested by the Job Scheduling API . The present invention may be implemented across multiple computing platforms and\/or nodes, and an LES agent is installed on each node on which jobs run (LES agents  . . . n).","Each LES Agent updates a local job repository  that maintains job information on each job submitted to it's respective node. The local job repositories are installed on each node where jobs run and may be implemented using SQL*Anywhere (a database product having a small footprint, for efficiency of resources). Other SQL products and various database\/repository configurations may be substituted.","A central job repository  maintains a super set of job data on all jobs submitted to each node in the system. The central job repository is maintained by a job data management API , and is implemented in a Relational Database Management System (RDBMS), Dex, or other data repository or management system.","The job data management API  selects, inserts, updates, or deletes jobs and job histories. Both local and central job repositories are updated by job data management API. Also, the job data management API  is used internally by the job scheduler and the LES agent. The job scheduling API reformats data into PEC message format.","A location of the central job repository  is determined by RDEX (Relational Data Exchange). If no DEX (Data Exchange) information is available, the SDM (Software Delivery Manager) install prompts are utilized for table location information. Configuration files for set up of the POEMS environment, PEC , LES agents, etc. are maintained on a same node as the central job repository, each client machine, and on each node where jobs run.","Each of the Central and local job repositories are automatically updated by LES. The point products themselves only interact with the API's and are not concerned with the details of either type of repository.","A point product API  is provided to allow access by each point product to determine job status, job logfile, perform setup and cancel functions (jobs), update the job logfile, and retrieve job parameters as the job runs. In the POEMS configuration, this API is utilized by the point product executable (point product , for example).","An LES command line  provides command line access to job administration functions (by communicating with a job administration API ), including determine job status, and setup, cancel, or update a job logfile and retrieve job parameters.","The job administration API  deletes, cancels, reruns, or copies existing jobs. This API is used internally by the LES command line  and a job folder  (containing a list of jobs, that may be viewed in various formats).","Each of the point product API , Job Scheduling API , Job Data Management API , and Job Administration API , communicate as needed with any of LES agents installed on nodes  . . . n via PEC messages.","The PEC messages are provided in a format to communicate between LES enabled workstations and the various APIs.","A calendaring API  is provided to manage calendar functions and is used internally by other API's and the point product GUI.","The POEMS enabled point products and LES agents installed on nodes of a computing network or system provide common job scheduling services, hereinafter referred to as the Lightweight Enterprise Scheduler (LES). The LES allows a user to schedule a new job, delete a job, cancel a running job, and re-run a job.","A sample LES job flow is provided in the following steps:\n\n",{"@attributes":{"id":"p-0099","num":"0113"},"figref":"FIG. 2","b":"170","ul":{"@attributes":{"id":"ul0003","list-style":"none"},"li":{"@attributes":{"id":"ul0003-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0004","list-style":"none"},"li":["1. Communication Module \u2014Sends and receives PEC messages from the Job Distribution API to the point product and from the point product to the Job Distribution API.","2. Job Management Module \u2014The LES kernel. This part of the agent sets up the internal environment and memory, launches the job, runs the job, and manages job processes.","3. Data Management Module \u2014Updates and deletes data from the Local and Central Repositories ( and , respectively).\n\nA low-level function API  is available to all agent modules. This low-level API handles all internal functions, file management, and messages.\n"]}}}},{"@attributes":{"id":"p-0100","num":"0117"},"figref":"FIG. 3","b":["300","320","320","320","340","340"],"i":["a ","b ","a ","b"]},"To prevent the RT server from delivering the same job message to more than one agent, the LES agent registers as PTLES_<nodeaddress> datagroup. This registration identifies each LES agent with a unique datagroup so that messages may be routed to nodes of a datagroup corresponding to the message.","Each LES Agent subscribes to the current node address (hostname) messages, so each sender should also specify which node will receive the message. Proper message routing is illustrated in , which illustrates the RT server  passing the message  to Receive1 module , and Receive module not receiving a copy. An RT Server runs on each machine where processes are managed, provides PEC routing to a correct destination.",{"@attributes":{"id":"p-0103","num":"0120"},"figref":["FIG. 5","FIG. 1"],"b":["500","160","520","530","510","510","500"],"i":["a","b"]},{"@attributes":{"id":"p-0104","num":"0121"},"figref":"FIG. 6","b":["500","530","500","530","510"]},{"@attributes":{"id":"p-0105","num":"0122"},"figref":["FIG. 7A","FIG. 1"],"b":["705","710","1","180","710"]},"At step , the local job repository is synchronized with the central job repository . For example, The synchronization process updates the central job repository to reflect each entry in the local job repository, this process assures that the central job repository maintains records for each job across the enterprise.","At step , a history row is added for all expired jobs (both central and local). Information on expired jobs is maintained for historical purposes.","At step , PEC call back functions are initialized. The PEC callback functions provide the appropriate API interface allowing communication with the PEC .","At step , a synchronization timeout is computed and setup. The synchronization timeout is utilized to control how long to wait to connect to the other repository.","As illustrated in , once the LES agent is started, it begins performing receipt and startup of job processes selected to be run on the node on which the LES is installed. At step , the LES agent computes and performs setup of a next job to run, and then enters a wait loop , where the LES agent waits for one of a PEC message, Synchronization timeout, and a timeout on a next job to run.","When the wait loop times out on a next job to run, step  is performed, which includes running the current job (next job that timedout), updating a start status of the job, and creating a run history row (updating and creating actions are performed in both local and central repositories).","When the loop times out on a synchronization, a Central\/Local synchronization program is executed (synchronizes Local with central, and central with local).","When the loop receives a PEC message, the LES agent performs the action contained in the PEC message, step . PEC messages received by the LES agent include messages to run a job, cancel a job, update job status, request job parameters (Job parameters are information that a product would need, user name, db name, set by point product and stored in the LES API in an area of the LES db where point products can use for whatever they want).","Upon completion of either the job timeout, synchronization timeout, or PEC message action (steps , , and , respectively), the LES agent computes and sets up a next job to run (repeating step ), and re-enters the wait loop .","When the POEMS Scheduling Service is utilized to add a job, the point product GUI  calls the Job Scheduling API  to submit the job.","The API performs the following steps:\n\n","The Agent performs the following steps:\n\n","The LES agent is maintained in an hierarchically organized directory structure, one example being illustrated in . A top level directory $PLATHOME  contains all relevant directories containing files related to Platinum products (other products could alternatively be used). A POEMS root directory, $ptroot  maintains all directories and files related to enabling POEMS.","A cfgref  directory maintains a configuration file configuration files , for example.","A shlib*  directory maintains all *.lib, and *.so files, which are shared libraries.","A bin  directory separately maintains each of a ptles* files , *.dll , and *sql.dll  files. The ptles* files  include ptlesag, ptlestp, ptlestab, and other related files. The *.dll  maintains each of dynamic link libraries, and *sql.*  maintains LES queries for LES functions.","A log  directory maintains a ptlesag.log  logfile (that includes a diagnostic log, info about runs, and errors).","In one embodiment, as illustrated in , the Platinum Security Model requires that many applications\/point products be run as a specific user in order to succeed.","An AutoLogin API provides a way to run jobs as a specific operating system user without querying the user at run-time or hard-coding the UNIX user as part of the job.","To take advantage of this feature, an application may utilize an PtLESSetJobCommand( ) function and pass a username and role to LES. If the username and role are set to NULL, LES runs the job as the default platinum user (or other default user). Otherwise LES tries to retrieve the userid and password by calling the AutoLogin API and passing the username and role as Requested User and Requested Role, the operating system as Resource Type, and the job instance name as Resource Instance.","Entering Login Information in AutoLogin","In the AutoLogin embodiment, an administrator signs in as \u201croot\u201d to set up the LES\/OS resources.","From the POEMS Director:\n\n","The command line interface included in LES performs administrative functions, including:\n\n","The command line interface utilizes the following format:\n\n","Note: The -a option is for all actions; the -j option is for all actions except List; the others are optional.","Ptlescmd is the LES command line interface used to delete a job, cancel a job run, list jobs (all jobs, by product code, by status, and\/or node), and rerun a job immediately.","Table 1 provides a listing of the ptlescmd command line supported options.",{"@attributes":{"id":"p-0133","num":"0176"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Command Line Options",{},{}]},{"entry":["and Arguments","If Omitted","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["-a [action]","Error","Executes a given action."]},{"entry":[{},{},"Action can have any of the"]},{"entry":[{},{},"following values:"]},{"entry":[{},{},{"u":["d","c","l"]}]},{"entry":[{},{},{"u":"r"}]},{"entry":["-j [jobid]","Error (except","The job ID of the job to be"]},{"entry":[{},"with \u201clist\u201d","acted on. In one"]},{"entry":[{},"action","embodiment, this is a"]},{"entry":[{},{},"required option (except with"]},{"entry":[{},{},"List action)."]},{"entry":["-c [cleanupprocess]",{},"The name of the process to"]},{"entry":[{},{},"be executed after deleting a"]},{"entry":[{},{},"job. If a delete action is"]},{"entry":[{},{},"specified and no cleanup"]},{"entry":[{},{},"process name is given, then"]},{"entry":[{},{},"no cleanup will take place"]},{"entry":[{},{},"on UNIX after deleting the"]},{"entry":[{},{},"job. On NT this option will"]},{"entry":[{},{},"check the registry for an"]},{"entry":[{},{},"existing cleanup process and"]},{"entry":[{},{},"execute it after deleting"]},{"entry":[{},{},"the job."]},{"entry":["-r [runnumber]","Error","In one embodiment, this"]},{"entry":[{},{},"number is required with"]},{"entry":[{},{},"Cancel action to define"]},{"entry":[{},{},"which run of the specified"]},{"entry":[{},{},"job will be generated."]},{"entry":["-p [product_code]",{},"Used only when product code"]},{"entry":[{},{},"is specified with List"]},{"entry":[{},{},"action, a list of all the"]},{"entry":[{},{},"jobs with this specific"]},{"entry":[{},{},"product code will be"]},{"entry":[{},{},"generated."]},{"entry":["-s [status]",{},"Used only when status is"]},{"entry":[{},{},"specified with List action,"]},{"entry":[{},{},"a list of all the jobs with"]},{"entry":[{},{},"this specific status will be"]},{"entry":[{},{},"generated."]},{"entry":["-n [node]",{},"Used only when node is"]},{"entry":[{},{},"specified with List action,"]},{"entry":[{},{},"a list of all the jobs on"]},{"entry":[{},{},"this node will be generated."]},{"entry":["-b [buffersize]","Default value","This option is mainly needed"]},{"entry":[{},"is 1024","when the user knows that the"]},{"entry":[{},{},"number of elements to be"]},{"entry":[{},{},"retrieved is large."]},{"entry":[{},{},"(>100,000). The default"]},{"entry":[{},{},"value is 1024 (1K)."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{}},"action is one of the following: delete, cancel, rerun, and list.\n\n","letter is the letter for one of the options listed in the Command Line Supported Options table.","option_name is the name of one of the options listed in the Command Line Supported Options table.","Table 2 provides a set of example command lines and a corresponding description.",{"@attributes":{"id":"p-0138","num":"0182"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Command Line","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ptlescmd -a delete 123","Deletes job 123 and all its runs"]},{"entry":["-c cleanup.exe","then runs the process cleanup.exe"]},{"entry":["ptlescmd -a delete -j 134","Deletes job 134 and all its runs"]},{"entry":["ptlescmd -a list","Lists all jobs"]},{"entry":["ptlescmd -a list -n","Lists all jobs on the node ="]},{"entry":["dimultra","\u2018dimultra\u2019"]},{"entry":["ptlescmd -a list -p TSR","Lists all jobs with the product"]},{"entry":[{},"code = \u2018TSR\u2019"]},{"entry":["ptlescmd -a list -s running","Lists all jobs and their running"]},{"entry":[{},"runs"]},{"entry":["ptlescmd -a list -p TSR","Lists all jobs of product code ="]},{"entry":["-s completed","\u2018TSR\u2019 and their completed runs"]},{"entry":["ptlescmd -a cancel -j 234","Cancels run 3 of job 234"]},{"entry":"-r 3"},{"entry":["ptlescmd -a rerun -j 345","Reruns job 345 immediately"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":"Note: Valid status values include: Completed, Failed, Notstarted, Preempted, Running and Stopped."}]}}}}},"LES jobs stay in the central and local repositories until the user deletes them. The user can delete, rerun, or cancel a running job at any time by right-clicking on the Poems director\/Job folder  and selecting the appropriate option. A delete option removes the job and all the runs and history of the job. The point product may provide a cleanup process executable that removes all the point product files related to the job. This executable, if available, is run by the agent before removing the job and job history.","LES provides job modification options including Rerun Job and Update Job. The Rerun Job option allows a user to rerun the job with a different start time. A PtLESUpdateJob( ) function allows updates for all GUI fields.","Context variables, such as %C(PLATHOME) or the environment variable %E(FUS_HOME) etc., which are resolved by the agent before running the job command.","The UNIX username is set from the GUI point product as part of the job. The agent does not need the password because the agent is running as root (the agent has the set_root_ID bit).","Context Variables","Context variables are keyword identifiers that may be used on the command line. The LES agent converts these variables according to the context of the current job and job parameters passed. The LES agent inserts these context variables, forms the command line, and then executes the command line.\n\n","Keyword Context Variable:\n\n","Environment Variable:\n\n","Filename Variable:\n\n",{"@attributes":{"id":"p-0147","num":"0197"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["\/* Identifier","Value","Description *\/"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\/* JOB_ID-Env","_JobRecord.joid","Job ID *\/"]},{"entry":["\/* GROUP_ID-Env","_JobRecord.groupid","Group *\/"]},{"entry":["\/* HOSTNAME","_JobRecord.node","Hostname *\/"]},{"entry":["\/* INSTANCE-Env","_JobRecord.instance","Instance name *\/"]},{"entry":["\/* USERNAME","_JobRecord.username","User name *\/"]},{"entry":["\/* OWNER","_JobRecord.owner","Owner *\/"]},{"entry":["\/* PASSWORD-Env","_JobRecord.password","Password *\/"]},{"entry":["\/* CONNECT_STR","_JobRecord.connectstring","ConnectStrin *\/"]},{"entry":["\/* JOB_OWNER","_JobRecord.jobowner","JobOwner *\/"]},{"entry":["\/* OBJECT","_JobRecord.object","Object name *\/"]},{"entry":["\/* PRODUCT CODE","_JobRecord.productcode","Product Code *\/"]},{"entry":["\/* PRODUCT","_JobRecord.productversion","Product Version *\/"]},{"entry":"VERSION"},{"entry":["\/* DESCRIPTION","_JobRecord.description","Description *\/"]},{"entry":["\/* EMAIL_ADDR","_JobRecord.notification","E mail Address *\/"]},{"entry":[{},"email"]},{"entry":["\/* TYPE","_JobRecord.type","Type *\/"]},{"entry":["\/* C_SCRIPT","_JobRecord.completion","Completion"]},{"entry":[{},"script","script *\/"]},{"entry":["\/* F_SCRIPT","_JobRecord.failedscript","Failed script *\/"]},{"entry":["\/* PLATHOME","_Installation directory","Install dir *\/"]},{"entry":["\/* USERROLE-Env","_JobRecord.userrole","User role *\/"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{}},"The GUI API is utilized by the point product  and the point product GUI  for a number of functions, including:\n\n","Table 4 provides sample code for invoking the GUI API to implement to the above discussed processes.",{"@attributes":{"id":"p-0150","num":"0206"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Step","Sample Code"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Allocate a job and","PtLESJobHandle job = PtLESJobAlloc();"]},{"entry":["override defaults","PtLESSetJobTZNode (job, PTLES_TZLOCAL);"]},{"entry":["Setup property","CpropertySheet sheet;"]},{"entry":["sheet and pages","CptLESJobSchedulingPage LESpage"]},{"entry":[{},"(CptLESJobSchedulingPage::AsPage, job);"]},{"entry":[{},"Sheet.AddPage (LESpage);"]},{"entry":["Set product job","PtLESSetJobParam (job, key, value);"]},{"entry":"info"},{"entry":["Customize the","LESpage SetRunWhen (CPtLESJobSchedulingPa"]},{"entry":["page's data","ge::RunImmediately);"]},{"entry":[{},"LESpage.SetRunWhenState (CPtLESJobSchedul"]},{"entry":[{},"ingPage::Disable);"]},{"entry":["When the sheet","In the sheet's OK handler:"]},{"entry":["exits, validate the","if (LESpage.ValidateData())"]},{"entry":["data, and submit","sheet.m_LESPage-"]},{"entry":["the job",">SubmitJob(\u201cnodename\u201d, groupID, TRUE)."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":[{},{},{},{}],"b":["140","130"]},"The following tables list functions by type and provide a brief description of each function. The baseline functions are utilized to provide basic information for the job scheduling processes, and are listed with a description in Table 5.",{"@attributes":{"id":"p-0152","num":"0208"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 5"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Baseline Functions"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Function","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["User Name","User name under which to run the job. In"]},{"entry":[{},"one embodiment, the scheduler must be run as"]},{"entry":[{},"root in order to use this function. If it"]},{"entry":[{},"is run as root and the User Name field is"]},{"entry":[{},"null, the scheduler will automatically mark"]},{"entry":[{},"the job as failed."]},{"entry":["Node","Indexed on central table. Specifies the"]},{"entry":[{},"node used to run this job."]},{"entry":["Command","The command line to execute. Because of"]},{"entry":[{},"database VARCHAR size limitations, this may"]},{"entry":[{},"be split into 2 pieces by the API and"]},{"entry":[{},"reassembled to invoke."]},{"entry":["Product Code","Code identifier of the product used to"]},{"entry":[{},"create the job. This should be the code"]},{"entry":[{},"assigned and used by the PLATINUM PAR"]},{"entry":[{},"tracking system."]},{"entry":["Product Version","Version number of the product used to create"]},{"entry":[{},"the job."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"The optional functions, listed and described in Table 6, are not required and are utilized (defined) as appropriate for a specific point product.",{"@attributes":{"id":"p-0154","num":"0210"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 6"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Optional Functions"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Function","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["GroupID","Strategy group ID"]},{"entry":[{},"Use the function PtLESCreateGroup to get"]},{"entry":[{},"the GroupId."]},{"entry":["ReTryInterval","After a preempted run, this is the number"]},{"entry":[{},"of minutes to wait before attempting to"]},{"entry":[{},"rerun the job. If zero, the job will not"]},{"entry":[{},"be rerun after being preempted."]},{"entry":[{},"A preempted run is a job that did not run"]},{"entry":[{},"because the point product determined that"]},{"entry":[{},"it should not run due to point product"]},{"entry":[{},"specific operating rules."]},{"entry":["RetryCount","Number of retry attempts to make if the"]},{"entry":[{},"job was preempted or was unable to start."]},{"entry":[{},"If zero, the job will, not be rerun after"]},{"entry":[{},"preemption or start failure. This does"]},{"entry":[{},"not control reruns after a point product"]},{"entry":[{},"failure."]},{"entry":["N_retrys","Number of failed (point product) runs to"]},{"entry":["(RecurFailThreshold)","accept before the job is no longer"]},{"entry":[{},"rescheduled. This value is moved to"]},{"entry":[{},"\u201cRecurFailureCount\u201d upon job creation and"]},{"entry":[{},"every time the job runs successfully."]},{"entry":[{},"This field helps control runaway job"]},{"entry":[{},"rescheduling for jobs that never run"]},{"entry":[{},"correctly."]},{"entry":[{},"See \u201cRecurFailureCount\u201d for more"]},{"entry":[{},"information."]},{"entry":["RecurFailCount","This function counts job failure for a"]},{"entry":[{},"given number of successive runs. It is"]},{"entry":[{},"decremented each time the job fails and"]},{"entry":[{},"reset to its original value"]},{"entry":[{},"(RecurFailureThreshold) each time a job is"]},{"entry":[{},"successful. If the value ever gets to"]},{"entry":[{},"zero, the job will not be rescheduled."]},{"entry":["Instance","Database instance to run against."]},{"entry":[{},"Optional for database-related point"]},{"entry":[{},"products."]},{"entry":["Owner","Optional user ID for point product use"]},{"entry":[{},"(For RDBMS product, this would be the"]},{"entry":[{},"owner.)"]},{"entry":["Cred_value","Optional user password."]},{"entry":[{},"Encrypted\/decrypted by API set and get."]},{"entry":["ConnectString","Optional database connect string or name."]},{"entry":["JobOwner","For future use related to security (Only"]},{"entry":[{},"the owner of the job can make changes.)"]},{"entry":["Object","Optional object name for point product"]},{"entry":[{},"use."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Table 7 lists internal functions that may be set by a user via the LES GUI.",{"@attributes":{"id":"p-0156","num":"0212"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 7"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"GUI Functions"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Function","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["JobId","Unique job ID. Each unique ID is generated"]},{"entry":[{},"on the central control server. The IDs are"]},{"entry":[{},"unique within the nodes managed by that"]},{"entry":[{},"central server."]},{"entry":[{},"Use the function PtLESSubmitJob to set the"]},{"entry":[{},"JobID. The JobID cannot be zero."]},{"entry":["Next_Start","Indexed on local node. This is the next"]},{"entry":[{},"time, in GMT, to run this job. Time_t"]},{"entry":[{},"timestamp is set using the calendar and"]},{"entry":[{},"recurrence information the next time the"]},{"entry":[{},"job is started. If = \u22121, this job is to be"]},{"entry":[{},"run immediately."]},{"entry":["TimeZone","1 = Use time zone of the node where the job"]},{"entry":[{},"will run."]},{"entry":[{},"2 = Use time zone of the node from which the"]},{"entry":[{},"job is scheduled (local workstation's time"]},{"entry":[{},"zone)"]},{"entry":[{},"This value from Window's time zone"]},{"entry":[{},"convention should be converted to whatever"]},{"entry":[{},"time zone convention LES uses. This"]},{"entry":[{},"function is used to convert the time to"]},{"entry":[{},"GMT. The API will retrieve the time zone's"]},{"entry":[{},"offset from GMT and adjust the time to GMT."]},{"entry":["WSTimeZone","Time zone of the workstation from which"]},{"entry":[{},"this job is scheduled. This is used by the"]},{"entry":[{},"scheduler to adjust the time if"]},{"entry":[{},"TimeZoneNode = 2."]},{"entry":["NotificationEmail","Email address where job completion"]},{"entry":[{},"notification will be sent."]},{"entry":["CompletionScript","Script to run upon successful completion."]},{"entry":["FailedScript","Script to run upon failure."]},{"entry":["Description","Optional job description."]},{"entry":["CalendarId","ID of the calendar to use."]},{"entry":["RecurInterval","This is used to test if the job fails for a"]},{"entry":[{},"given number of successive runs. It is"]},{"entry":[{},"decremented each time the job fails and is"]},{"entry":[{},"reset to its original value"]},{"entry":[{},"(RecurFailureThreshold) each time a job is"]},{"entry":[{},"successful. When the value equals zero,"]},{"entry":[{},"the job will not be rescheduled."]},{"entry":["RecurIncrement","How often to run the job, depending on"]},{"entry":[{},"recurrence interval; \u201cEvery x minutes,"]},{"entry":[{},"every x days, every x months, etc.\u201d"]},{"entry":["EveryWeekday","This flag states to run every day of the"]},{"entry":[{},"week (RecurInterval = Daily). If this is"]},{"entry":[{},"set and RecurInterval = Daily,"]},{"entry":[{},"RecurIncrement is ignored."]},{"entry":["Days_of_Week","Zero padded array. Flags to indicate which"]},{"entry":["(DayOfWeekFlags)","day or days of the week to run the"]},{"entry":[{},"job(0 = Sunday, 6 = Saturday) (RecurInterval ="]},{"entry":[{},"weekly)"]},{"entry":["DayOfMonthFlags","Zero padded array. Flag to indicate which"]},{"entry":[{},"day or days of the month to run the job (1"]},{"entry":[{},"to 31) (RecurInterval = Monthly)"]},{"entry":["LastDayOfMonth","If true, run on the last day of the"]},{"entry":[{},"month(s) (RecurInterval = Monthly or"]},{"entry":[{},"Yearly). The job will run on the last day"]},{"entry":[{},"of the month regardless of which actual day"]},{"entry":[{},"the end of the month falls on (28, 29, 30,"]},{"entry":[{},"or 31). Can be used with or without the"]},{"entry":[{},"DayOfMonthFlags. If set, this takes"]},{"entry":[{},"precedence over the DayOfMonthFlags (i.e.,"]},{"entry":[{},"the job flag for November 30 is off and"]},{"entry":[{},"this is on, the job will run on November"]},{"entry":[{},"30)."]},{"entry":["YearMonth","Month to run (1-12) for yearly interval"]},{"entry":[{},"(RecurInterval = Yearly)"]},{"entry":["TimeOfDayHour","Hour of day (0-23) to run"]},{"entry":["TimeOfDayMinute","Minute of hour (0-59) to run"]},{"entry":["Start_Times","Minutes after each hour flags. Zero-padded"]},{"entry":[{},"flags - one for each minute of the hour."]},{"entry":[{},"This is used to emulate Autosys\u2032 run at x"]},{"entry":[{},"minutes after each hour behavior. Each"]},{"entry":[{},"flag, when on, signifies the job should run"]},{"entry":[{},"at that minute after EVERY hour after the"]},{"entry":[{},"first run which is determined by"]},{"entry":[{},"next_start."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Table 8 provides example code for on how the GUI API  would be utilized by a point product. For example, allocating a job structure requires a point product to define a handle (jh), an array defining the days the job is to run (0=don't run, 1=run; ie, 0, 0, 0, 0, 0, 1, 0 means run on Friday), a userid and password, and a call to the PtLESJobAlloc( ) function.",{"@attributes":{"id":"p-0158","num":"0214"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 8"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Step","Sample Code","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Allocate a","PtLESJobHandle","jh;","run on"]},{"entry":["job","int","days_to_run[ ] =","Friday"]},{"entry":["structure","char","{0,0,0,0,0,1,0);"]},{"entry":[{},{},"userid[20],"]},{"entry":[{},{},"password [20];"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"jh = PtLESJobAlloc ( );",{}]},{"entry":["Set","PtLESSetJobDescription (jh, \u201csmith\u201d,","Retry every"]},{"entry":["parameters","\u201cTablespaceReorg\u201d, \u201cWeekly run\u201d);","10 min for"]},{"entry":["for the","PtLESSetJobCommand (jh, \u201creorg.exe\u201d);","an hour"]},{"entry":["job","PtLESSetJobProdInfo (jh, \u201cTsreorg\u201d,","every week"]},{"entry":[{},"\u201c2.07\u201d)","at 10 pm"]},{"entry":[{},"PtLESSetJobInstanceInfo (jh, \u201cora73\u201d,"]},{"entry":[{},"userid, password, \u201cpayrl.world\u201d);"]},{"entry":[{},"PtLESSetJobObject (jh,\u201cpayroll\u201d);"]},{"entry":[{},"PtLESSetJobRetry(jh, 10, 6);"]},{"entry":[{},"PtLESSetJobTZNode (jh,PTLES"]},{"entry":[{},"TZLOCAL); PtLESSetJobRunRules (jh,"]},{"entry":[{},"PTLES_RECURWEEKS, 1, 0 days_to_run,"]},{"entry":[{},"NULL, NULL 0, 0, 0, 22, 0);"]},{"entry":["Submit the","PtLESSubmitJob (jh,\u201cdimultra\u201d,101,0);","node"]},{"entry":["job on two","PtLESSubmitJob (jh,\u201cdimsparc\u201d,101,1)","dimultra"]},{"entry":["nodes",{},"node"]},{"entry":[{},{},"dimsparc"]},{"entry":["Clean up","PtLESJobDealloc (jh)"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The calendaring API is utilized internally by other APIs and provides comprehensive calendaring functions. For example, main use of the Calendaring API is to allow users to input calendaring information for a specific job run.","Job Administration API","As discussed above, the job administration API  deletes, cancels, reruns, or copies existing jobs. In addition, it allows other APIs to determine job status, and setup, cancel, or update a job logfile and retrieve job parameters. For example, one process within the Job Administration API is the PtLESCancelJob utilized to stop currently running jobs. The PtLESCancelJob first performs a check on a specified node to see if the job is running, and issues a stop command to the corresponding LES agent if the job is executing.","Job Data Management API","Both the job and the job history are saved in the central repository and the local repository of the node where the job is to be run. Open Database Connectivity (ODBC) is used to select, insert, update, and\/or delete each job or job history.","Point Product API","The Point Product API allows the point product to communicate with the LES Agent. When you use this API, the LES job folder shows more accurate information about your job, the logfile viewer shows the job logfile, and the LES agent manages your point product job, making LES easier to use from a development standpoint.","The functions of this API encapsulate PEC messages to the LES agent to update the job status or logfile, or signal the end of a running job process. The PEC model is adhered to wherein the LES agent and the point product are Rtclients using broadcast communication. PEC Initialization has been performed before calling any of the LES_API functions. In addition, the Point Product should call TptTerm before exiting.","In one embodiment, SIGUSR2 is used as a CANCEL notification signal on all UNIX platforms, and the LES agent ignores this signal by default. Because the child process inherits all signals, the CANCEL event is ignored unless the point product takes action. As a result, conflicts may arise if a user application is using SIGUSR2 for other purposes (but allows for utiliation of standard UNIX toolsets for operations).","The following Environment variables are set before running any point product by the LES Agent:\n\n","Error messages are displayed whenever the agent detects an error. Table 9 lists the errors, consisting of a number and a message. Some of the messages use variables, which appear as % signs in the message text as shown in the following example. These variables are replaced by actual values when the error message displays. For example, in this case the variable % is replaced with the actual constraint and file name when the error message is displayed.",{"@attributes":{"id":"p-0167","num":"0230"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 9"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["PTLES_AGENT-0001","Agent is already running"]},{"entry":["PTLES_AGENT-0002","Cannot get the current node name"]},{"entry":["PTLES_AGENT-0003","Cannot open process table file"]},{"entry":["PTLES_AGENT-0004","Cannot write to process table"]},{"entry":["PTLES_AGENT-0005","Cannot read from process table"]},{"entry":["PTLES_AGENT-0006","Cannot allocate enough memory for the job"]},{"entry":[{},"handle"]},{"entry":["PTLES_AGENT-0007","Unable to free the job handle memory"]},{"entry":["PTLES_AGENT-0008","Unable to find the job attached to this"]},{"entry":[{},"process id (% d)"]},{"entry":["PTLES_AGENT-0009","Unable to read job parameters"]},{"entry":["PTLES_AGENT-0010","Cannot allocate enough memory for the"]},{"entry":[{},"calendar handle"]},{"entry":["PTLES_AGENT-0013","Cannot create a PEC message (TipcMtCreate"]},{"entry":[{},"failed % d)"]},{"entry":["PTLES_AGENT-0014","Unable to find and cancel the job with"]},{"entry":[{},"job_id = % d and run number = % d"]},{"entry":["PTLES_AGENT-0015","The following is not a valid job, cannot"]},{"entry":[{},"cancel this job. (job_id = % d, run number ="]},{"entry":[{},"% d)"]},{"entry":["PTLES_AGENT-0016","Cannot cancel the following job (job_id ="]},{"entry":[{},"% d, run number = % d) system error = % d"]},{"entry":["PTLES_AGENT-0018","Cannot execute job process \u2212 job_id = % d"]},{"entry":[{},"and system error is: % d"]},{"entry":["PTLES_AGENT-0020","Cannot execute job process \u2212 job_id = % d,"]},{"entry":[{},"the user (% s) doesn't exist"]},{"entry":["PTLES_AGENT-0021","Cannot delete the job \u2212 job_id = % d,"]},{"entry":[{},"error = % d"]},{"entry":["PTLES_AGENT-0023","PEC Callback create failed. (pec_error ="]},{"entry":[{},"% d)"]},{"entry":["PTLES_AGENT-0024","Cannot insert the job (job_id = % d) into"]},{"entry":[{},"the Local repository error = % d"]},{"entry":["PTLES_AGENT-0025","Cannot insert a job history, job_id = % d,"]},{"entry":[{},"error = % d, Agent initialization . . ."]},{"entry":[{},"Checking the expired jobs: % s"]},{"entry":["PTLES_AGENT-0027","Cannot connect to the central repository."]},{"entry":[{},"(ODBC-Error = % d)"]},{"entry":["PTLES_AGENT-0028","Cannot connect to the local repository."]},{"entry":[{},"(ODBC-Error = % d)"]},{"entry":["PTLES_AGENT-0029","Calendar insertion error(ODBC-Error = % d)"]},{"entry":["PTLES_AGENT-0030","Cannot update job (% d) (ODBC-Error = % d)"]},{"entry":["PTLES_AGENT-45","The agent is not running"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Table 10 provides example source code for a point product job template and may be considered an example use of the point product API . However, the code presented is not intended to be either a compilable or executable version of the present invention or a complete embodiment thereof, but merely an example representation of some of the features discussed herein.",{"@attributes":{"id":"p-0169","num":"0232"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 10"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/* Platinum Technology Inc"},{"entry":"\u2002* Copyright (C) 1997 Platinum technology Dimeric Lab"},{"entry":"\u2002* All Rights Reserved."},{"entry":"\u2002* PLATINUM Lightweight Enterprise Scheduler example program"},{"entry":"\u2002* using the LBS Point Product API referred to LBS_API"},{"entry":"\u2002* Function source code."},{"entry":"\u2002*\/"},{"entry":"\/* Point Product job template and use of the Point Product API *\/"},{"entry":"\/* system includes *\/"},{"entry":"#include <stdio.h>"},{"entry":"#include <stdlib.h>"},{"entry":"\/* pec include files *\/"},{"entry":"#include <rtworks\/ipc.h>"},{"entry":"#include <ptm\/ptm.h>"},{"entry":"\/* LES_API include files *\/"},{"entry":"#include \u201cptles_size.h\u201d"},{"entry":"#include \u201cptles_ppapi.h\u201d"},{"entry":"\/* edit keys here *\/"},{"entry":"\/* for example purposes the num of keys allowed is limited to 10"},{"entry":"*\/"},{"entry":"#define MAX_KEYS 10"},{"entry":"static char keys[MAX_KEYS] [KEY_L+1]="},{"entry":"{"},{"entry":"\u201ckey 1\u201d, \/* e.g replace key 1 with your key value *\/"},{"entry":"\u201ckey 2\u201d,"},{"entry":"\u201ckey 3\u201d,"},{"entry":"\u201ckey 4\u201d,"},{"entry":"};"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["#define MY_STATUS_RUNNING","1"]},{"entry":["#define MY_STATUS_COMPLETE","2"]},{"entry":["#define MY_STATUS_ABORT","3"]},{"entry":["#define MY_STATUS_CANCELED","4"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"FILE *fplog;"},{"entry":"\/*"},{"entry":"** If user want to cancel this job"},{"entry":"** switch to the following function"},{"entry":"*\/"},{"entry":"void"},{"entry":"cancel_this_job( sig )"},{"entry":"int sig,"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"fprintf(fplog,\u201cUpdate Job Status to STATUS_CANCELED \\n\u201d);"]},{"entry":[{},"if ( PtLESUpdateJobStatus ( MY_STATUS"]},{"entry":[{},"CANCELED) ==LESAPI_FAIL"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":")"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"fprintf(fplog,\u201cPtLESUpdateJobStatus: Error % d\\n\u201d);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"fprintf(fplog,\u201cPoint Product example : Job canceled by user"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"request\\n\u201d);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PtLESUpdateExitStatus(PP_FAILED);"]},{"entry":[{},"TptTerm();"]},{"entry":[{},"fclose(fplog);"]},{"entry":[{},"exit(1);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/* example program demonstrates how a point product *\/"},{"entry":"\/* can use the LES_API to communicate with the LES Agent*\/"},{"entry":"int main( argc,argv )"},{"entry":"int argc;"},{"entry":"char **argv;"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["int rc;","\/* used for error return *\/"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["char pvalue[DATA_L+1];","\/* allocation to hold value of a key-"]},{"entry":"value pair*\/"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["int plan;","\/* length of value *\/"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["int i;","\/* used as a counter *\/"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["int num_items;","\/* num of key-value pairs rec *\/"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"char *plat_home;"},{"entry":"char log_path[PATH_L+1];"},{"entry":"char *les_jobid , *job_id;"},{"entry":"char *les_groupid;"},{"entry":"char *les_runtime;"},{"entry":"char *les_run_number;"},{"entry":"#if defined(DEBUG) && defined(WIN32)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DebugBreak ();"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"#endif"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"job_id = getenv(\u201cLES_JOBID\u201d);"]},{"entry":[{},"plat_home = getenv(\u201cPLATHOME\u201d);"]},{"entry":[{},"if( plat_home != NULL && job_id != NULL )"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"sprintf(log path,\u201c%s\/les\/files\/logdir\/pplogfile_%s.log\u201d,"},{"entry":"plat_home, job_id);"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"strcpy(log_path,\u201cpplogfile.log\u201d);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"fplog = fopen( log_path, \u201cw\u201d);"]},{"entry":[{},"if( fplog == NULL"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"fplog = stderr;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"fprintf(fplog,\u201c. . . Point product example. . ."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":". . . \\n\u201d);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"les_jobid = getenv(\u201cLES_JOBID\u201d);"]},{"entry":[{},"les_groupid = getenv(\u201cLES_GROUPID\u201d);"]},{"entry":[{},"lee_runtime = getenv(\u201cLES_RUNTIME\u201d);"]},{"entry":[{},"\/*"]},{"entry":[{},"** LES V1.1.0 New Env."]},{"entry":[{},"*\/"]},{"entry":[{},"les_run_number = getenv(\u201cLES_RUN_NUMBER\u201d);"]},{"entry":[{},"fprintf(fplog,\u201cENV. VARIABLE SETUP BY PTLES_AGENT : \\n\u201d);"]},{"entry":[{},"if( les_jobid != NULL )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PtLESSetJobId(atoi(les_jobid));"]},{"entry":[{},"fprintf(fplog,\u201c. . . LES_JOBID = %s \\n\u201d, les_jobid);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"if( les_groupid != NULL )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"fprintf(fplog,\u201c. . . LES_GROUPID\u2003=\u2003%s\u2003\\n\u201d,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"les_groupid);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"if( les_runtime != NULL )"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"fprintf(fplog,\u201c. . . LES_RUNTIME\u2003=\u2003%s\u2003\\n\u201d,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"les_runtime);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if( les_run_number != NULL"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"fprintf(fplog,\u201c. . . LES_RUN_NUMBER\u2003=\u2003%s \\n\u201d,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"les_run number);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/* print our any argumente paeeed on the command line *\/"]},{"entry":[{},"fprintf(fplog,\u201cCommand line argument : \\n\u201d);"]},{"entry":[{},"for ( i=1;i < argc;i++)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"fprintf(fplog,\u201cArgument[%d]: %s\\n\u201d,i,argv[i]);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/* To uee the LES_API you always have to call the PEC"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"TptInit function*\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/* to make a connection to the RtServer in main program *\/"]},{"entry":[{},"TptInit(PPROD_API,\u201cV1.1.0\u201d);"]},{"entry":[{},"\/* LES V1.1.0 adapt. Add CANCEL Function *\/"]},{"entry":[{},"PtLESSetJobCancel( &cancel_this_job );"]},{"entry":[{},"fprintf(fplog,\u201cUpdate logfile name : %s \\n\u201d, log_path);"]},{"entry":[{},"\/* Communicate the Point Products Logfile to LES Agent *\/"]},{"entry":[{},"if ( PtLESUpdateLogFileName (log_path)==LESAPI_FAIL )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"fprintf (fplog,\u201cPtLESUpdateLogFileName: Error %d\\n\u201d);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/* Update the Point Product Statue to Running *\/"]},{"entry":[{},"\/* use this function to update status\u2003\u2003\u2003\u2003*\/"]},{"entry":[{},"fprintf(fplog,\u201cUpdate Job Status to STATUS_RUNNING \\n\u201d);"]},{"entry":[{},"if ( PtLESUpdateJobStatus ( MY_STATUS"]},{"entry":[{},"RUNNING)==LESAPI_FAIL"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"}"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"fprintf(fplog,\u201cPtLESUpdateJobStatus: Error %d\\n);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/* The following function call performs the initial"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"communication *\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/* with the LES AGENT\u2003\u2003\u2003\u2003*\/"]},{"entry":[{},"\/* Used to retrieve the point product parms that may be"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"needed to *\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/* be passed"]},{"entry":[{},"*\/"]},{"entry":[{},"\/* stored internally is the jobid and run number"]},{"entry":[{},"\u2003*\/"]},{"entry":[{},"fflush(fplog);"]},{"entry":[{},"fprintf(fplog,\u201cGet Point product Parameters: \\n\u201d);"]},{"entry":[{},"rc=PtLESGetProductParms( 360 \/* TIMEOUT *\/ );"]},{"entry":[{},"if ( rc == LESAPI_FAIL )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"fprintf(fplog,\u201cPtLESGetProductParms: Error %d\\n\u201d,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"PtLESGetErrno ());"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/* Another call to communicate the progress of a job"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"*\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/* to the LES AGENT\u2003\u2003\u2003\u2003*\/"]},{"entry":[{},"fprintf(fplog,\u201cpp_example:Update the STATUS to"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"MY_STATUS_ABORT = %d \\n\u201d, MY_STATUS_ABORT);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if ( PtLESUpdateJobStatus ("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"MY_STATUS_ABORT) ==LESAPI_FAIL )"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"fprintf(fplog,\u201cPtLESUpdateJobStatus: Error"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"%d\\n\u201d);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/* Communicate exit status of point product *\/"]},{"entry":[{},"\/* pre defined to PP_SUCCESS,PP_FAILED,PP_PREMPTED *\/"]},{"entry":[{},"fprintf(fplog,\u201cpp_example : Update the exit status ="]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"%d \\n\u201d, PP_FAILED);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PtLESUpdateExitStatus(PP_FAILED);"]},{"entry":[{},"PtLESDestroyParms();"]},{"entry":[{},"TptTerm();"]},{"entry":[{},"fclose(fplog);"]},{"entry":[{},"exit(1);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/* edit the keys static char string defined before the main"]},{"entry":[{},"* to add point product keys"]},{"entry":[{},"*\/"]},{"entry":[{},"\/* return the no of key value pairs *\/"]},{"entry":[{},"num_items=PtLESGetNumParms();"]},{"entry":[{},"if( num_items==LESAPI_FAIL )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"fprintf(fplog,\u201cPtLESGetNumParms: % d\\n\u201d,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"PtLESGetErrno ());"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"fprintf(fplog,\u201cNo. Parameters received:% d\\n\u201d,num_items);"]},{"entry":[{},"num_items=num_items<MAX_KEYS?num_items:MAX_KEYS;"]},{"entry":[{},"fprintf(fplog,\u201cNo. Parameters received:% d\\n\u201d,num_items);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/* retrieve an print the key value pairs *\/"]},{"entry":[{},"for(i=0; i <num_items; i++)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/* get the length of value in the key-value pair *\/"]},{"entry":[{},"plen= PtLESGetParameterLen(keys [i]);"]},{"entry":[{},"if( plen > 0 )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/* Function used to retrieve the value given*\/"]},{"entry":[{},"\/* a key for the parameter *\/"]},{"entry":[{},"if (PtLESGetParameter(keys [i],pvalue,plen) =="]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"LESAPI_FAIL)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"fprintf(fplog,\u201cPtLESGetParameter: % d\\n,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"PtLESGetErrno ());"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"else \/* print out the key-value pair\u2003\u2003*\/"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"fprintf(fplog,"]},{"entry":[{},"*\\tParameter[%d]: key=%s\u2003\u2003Value=%s"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"len=% d\\n,"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"i,keys[i],pvalue,plen);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/* print out the job Id and the Run Number received *\/"]},{"entry":[{},"fprintf(fplog,\u201cReceived Job Id: %Id\\n\u201d,PtLESGetJobId());"]},{"entry":[{},"fprintf(fplog,\u201cReceived Job Run"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Number:%ld\\n\u201d,PtLESGetJobRunNum());"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/* Another call to communicate the progress of a job *\/"]},{"entry":[{},"\/* to the LES AGENT\u2003\u2003*\/"]},{"entry":[{},"fprintf(fplog,\u201cUpdate Job Status to STATUS_COMPLETED \\n\u201d);"]},{"entry":[{},"if ( PtLESUpdateJobStatus ( MY_STATUS"]},{"entry":[{},"COMPLETE) ==LESAPI_FAIL"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":")"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"fprintf(fplog,\u201cPtLESUpdateJobStatus: Error %d\\n\u201d);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/* Before terminating call PtLESExitStatus *\/"]},{"entry":[{},"\/* Communicate exit status of point product *\/"]},{"entry":[{},"\/* pre defined to PP_SUCCESS,PP_FAILED,PP_PREMPTED *\/"]},{"entry":[{},"\/* free the internal structures allocated by LES_API*\/"]},{"entry":[{},"fprintf(fplog,\u201cSend END_OF_JOB with STATUS SUCCESS to"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"PTLES_AGENT \\n\u201d);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PtLESUpdateExitStatus(PP_SUCCESS);"]},{"entry":[{},"PtLESDestroyParms();"]},{"entry":[{},"\/* terminate connection to RTServer *\/"]},{"entry":[{},"TptTerm();"]},{"entry":[{},"fclose(fplog);"]},{"entry":[{},"return (0);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}\/* eof of main *\/"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The present invention has been implemented utilizing a GUI interface that includes either a window (POEMS Scheduling Service Job Scheduling Window, ) or a property page (Job Scheduling tab property page, ). Other embodiments or arrangements of GUI windows or pages are also applicable, for example, using pull down selection menus instead of radio buttons, as just one example).","The GUI interface allows user input for scheduling specifications for a job to be submitted, including:\n\n","To start a job, a user enters a job description in the Job Description box, selects a run time as either immediate, a later time, or start date and time, and then Clicks on OK or Finish.","POEMS has several features for providing the appropriate start date and time. For example, as shown in  a pull down calendar is provided for date selection. The pull down calendar includes advance and decrease buttons as follows:\n\n","Since the POEMS scheduling service schedules jobs at remote nodes, a selection box is provided to use the local time of the remote node as the starting time (instead of the submitting node).","Recurring job runs may be set for a wide array of intervals, including:\n\n","As discussed above, the GUI interface provides the user an opportunity to define, modify, or select a notification script. Notification scripts are shell scripts containing actions used to automatically provide notification about jobs and job status information. Other functions may also be performed by the notification scripts, for example. The point product application executes the jobs notification scripts. The product application documentation should include detailed information on actions taken upon job completion or job failure.","Notification scripts may be constructed for tables, tablespaces, and indexes. When constructing a notification script for notification of a completed or failed job, variables of previously assigned values may be utilized.","The values for these variables are the same ones defined for a particular job in the default notification script files. A user may define the values for the variables in these files, and then use the variables in the notification script as arguments.","Using these variables in a notification script allows the same script to be utilized for various jobs, since different values may be assigned to the variables for each job. You can use variables in a job completion script or job failure script as determined by the product application.","Table 11 provides a listing of established notification script variables, including a description of each variable.",{"@attributes":{"id":"p-0181","num":"0260"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 11"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["This Script Variable","Represents This Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["%C(JOB_ID)","Job identification number"]},{"entry":["%C(GROUP_ID)","Group identification number"]},{"entry":["%C(HOSTNAME)","Name of the host on which the completed"]},{"entry":[{},"or failed job ran"]},{"entry":["%C(INSTANCE)","Instance name on which the completed or"]},{"entry":[{},"failed job ran"]},{"entry":["%C(USERNAME)","Name of the user"]},{"entry":["%C(CONNECT_STR)","Connect string"]},{"entry":["%C(JOB_OWNER)","Owner of object whose job completed or"]},{"entry":[{},"failed"]},{"entry":["%C(OBJECT)","Name of object whose job completed or"]},{"entry":[{},"failed"]},{"entry":["%C(PRODUCT_CODE)","Product Code"]},{"entry":["%C(PRODUCT_VERSION)","Version number of the product"]},{"entry":["%C(DESCRIPTION)","Job description"]},{"entry":["%C(EMAIL_ADDR)","Notification routing string (the value"]},{"entry":[{},"entered in the Notification email"]},{"entry":[{},"address field)"]},{"entry":["%C(TYPE)","Job type code, representing the type of"]},{"entry":[{},"job that completed or failed"]},{"entry":["%C(PLATHOME)","Install directory"]},{"entry":["%C(USERROLE)","The role assigned to the user (e.g.,"]},{"entry":[{},"administrator"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"A Notification Scripts button on the GUI interface accesses a Notification Scripts window (see ). The Notification Scripts window allows a user to:\n\n","A full path location for a user or notification email box address is typed into the Notification email address box. This method may be utilized to assign notification routing addresses for a pager, email, or phone number to deliver the information about the scheduled jobs to any location.","Scheduling a Calendar","A Calendar Selection window, see , accessible from the GUI interface, provides a list of the predefined calendars that may be used with the current job. Using the options in this window, a user can:\n\n","To create a calendar, a user selects the Create button in the Calendar selection window, which invokes the display of a Create Calendar window (see ). The user fills out the ID (a name for the calendar) and Description fields.","The user may select the following buttons to select the month and year of a date on which the job is to run:\n\n","By clicking a day of the month, a red border marks the date on the calendar and the complete date displays in the Selected dates field. Multiple days may be selected.","Existing calendars may also be modified by selecting a calendar first by clicking on its ID or Description in the available Calendars list in the Calendar Selection window and then clicking on the Edit button (see , for example). Once the calendar is displayed, additional job run dates may be added by selecting a date on the calendar. A user utilizes:\n\n","Dates may be deleted from the Selected dates list by clicking on calendar numbers marked with red borders to deselect. The border on the date disappears when deselected and the date no longer displays in the Selected dates field.","The OK button saves the calendar and exits the window. The edited calendar is then available in the Calendar Selection window. Clicking the Cancel button exits the window without saving changes to the calendar.","A calendar may be selected by clicking on the Select button of the GUI interface (Job Scheduling window\/property page), which displays the Calendar Selection window (, for example). A calendar is highlighted by clicking on the calendar ID or description in the Available Calendars list, and then clicking on the Select button (or double clicking on the ID or description). The calendar selection window then closes and the selected calendar ID displays in the Calendar ID field on the Job Scheduling window or property page.","A calendar my be deleted using the above procedure by clicking the Delete button instead of the Select button from the Calendar Selection window.","Strategy Scheduling","A Strategy Scheduling window is provided to view, create, modify, or delete schedules for a strategy. The schedule strategy window is invoked from a point product, as shown in .","A Create button is provided for creating a new schedule for a current strategy, which invokes the Job Scheduling window\/property page (see ). The Job Scheduling window\/property page is then filled out for the new schedule.","An Edit button is provided to modify an existing schedule for the current strategy, which invokes the Job Scheduling window\/property page available for editing a selected schedule.","A delete button is provided to delete a schedule for the current strategy. A user first highlights a schedule to be deleted and then clicks on delete. A Delete Schedule window prompting for a clean up script is then displayed (see , for example).","The user may either delete the schedule without running a cleanup script by deleting the text (if any) in the Name of a shell script or other process to run to clean up associated files field, or delete the schedule and run a cleanup script by typing a path and full name of the script. The user invokes the action by clicking OK or returning to the Strategy Scheduling window without deleting by clicking Cancel.","Job Management Services","The present invention includes multiple job management services that are presented in an easy to use and intuitive format. The present invention utilizes a Jobs resource object to allow a Director program to identify and track various job processes.","After inserting a Jobs resource object into the Director, a user may perform the following job management tasks:\n\n","A Jobs resource object provides a bookmark for finding information to display, and locating a job to be acted on when utilizing job management processes (deleting or monitoring a job, for example). An Insert Object window (see ), invoked by the user, identifies objects to insert (POEMS provides a number of objects that may be inserted, a partial listing is provided in ). The user selects an object (POEMS Scheduling Service, in this example), and presses OK. In response, a properties page is displayed (see ), which includes General (), Representation (), Subscription, Indicators, Job Repository (), and Event Correlation tabs.","The Properties page includes a label and description field. The user enters a label and a description (description is optional).","The Representation tab allows the user to select, in an Intellicon View, an icon for representing the job, and optionally, a background and background color. Alternatively, the user may select an icon in Explorer view.","The Intellicon view is show in , and includes a list of Intellicon icons (provided by POEMS files, or alternatively provided by the user), and a display window to view a selected icon (graphic). An example of the Explorer view is illustrated in , which is an Explorer view displaying ProVision (point product, or application) Jobs (or LES jobs) as the label for a Jobs resource object.","Selecting the Job repository tab displays a window for defining a timezone for display of times related to jobs. A down arrow pull down menu bar provides the user with selections of any timezone. This selection does not affect the time or timezone selected for running a job as specified in the Job Scheduling property page. In one embodiment, daylight savings time may be compensated for by providing an automatic compensation selector that invokes a program to adjust for daylight savings time; alternatively, the user may select a timezone just east of the desired timezone.","Using Job Resource Objects","The Job Resource objects defined by the above processes enables a user to locate and view both jobs and runs. The user can locate each job in the Explorer view. Each time a job executes, it creates a new run, which then displays in a run folder for the job.","Each Jobs resource object contains a hierarchy of folders sorted into the following categories:\n\n","The All Jobs Folder (see ) numerically lists all of the jobs instead of categorizing them by group, product or type. The All Jobs Folder lists jobs in folders, including:\n\n","A user can display jobs according to the groups assigned to them when they were originally scheduled by using the Jobs Group Folder. The specific product application (used to run the job) assigns a group, but may not use this classification.","Jobs may be displayed according to the node on which they ran by using the Jobs By Node Folder.","Jobs may be displayed according to the specific product that ran each job by using the Jobs By Product Folder. This is helpful if using multiple ProVision products to schedule and run jobs with the POEMS Scheduling Service (helpful because it allows grouping of jobs by function or application, for example).","Jobs may be displayed by job type assigned to them when the jobs were originally scheduled by using the Jobs by Type Folder. The user's specific product application (used to run the job) assigns the job type. However, products do not necessarily use this classification.","Jobs may be displayed according to the user who scheduled the job by using the Jobs By User Folder. Each of the Jobs By User, Jobs By Type, Jobs By Product, Jobs By Node and Jobs By Group Folders contain the same folder hierarchy for each user as that for the All Jobs Folder described above.","Specific jobs may be located by expanding folders using the (+) signs in the Jobs resource object hierarchy. The resulting display includes Job ID, Job Icon, and a Job description.","In addition, a (+) sign of a specific job reveals its run history (See , for example).","The run history is stored in several folders. The All Runs folder contains every run regardless of its status. The remaining six folders contain only the runs that possess the status that applies to that folder (Completed, Failed, Not Started, Preempted, Running and Stopped Runs).","Specific runs may be located in the All Runs folder and according to its status as illustrated in . In , Run # of Job  is stopped; therefore, it displays in the Stopped Runs folder as well as in the All Runs folder.","Each run listing includes:\n\n","Data can be viewed in column format for all jobs, runs, groups, nodes, products, types and users stored in a job, runs, groups, nodes, products, or types folder. The data displays in columns on the right side of the Director window when using the Explorer view. As shown in , some of the data is shown that is available for the jobs in the All Jobs Any Status folder under a specific node in the Jobs By Node folder.","A user can select any of the following folders to view data for their contents in column format (note that some folders, such as All Jobs, do not provide data), including:\n\n","The following data columns display when a user clicks on the text of the Jobs By Group folder in a Jobs resource object:\n\n","The following data column displays when the user clicks on the text of the Jobs By Node folder in a Jobs resource object:\n\n","The following data columns display when the user clicks on the test of the Jobs By Product folder in a Jobs resource object:\n\n","The following data column displays when the user clicks on the text of the Jobs By Type folder in a Jobs resource object:\n\n","The following data column displays when the user clicks on the text of the Jobs By User folder in a Jobs resource object:\n\n","The following data columns display when the user clicks on the text of an All Jobs Any Status, Held Jobs, or Scheduled Jobs folder in a Jobs resource object:\n\n","The following data columns display when the user clicks on the All Runs By Status folder and any folder containing runs:\n\n","Data about specific objects (jobs, runs, groups, products, or types) may be viewed within a Jobs resource object. The data displays in a property page format with one or more tabs on the right side of the Director (Explorer view) window. Clicking on the text of the object displays the data in property page format on the right side of the Director, as illustrated in , accessing the property page data.","The General property page contains the following fields:\n\n","Other Property pages are displayed by clicking on a corresponding tab. The Command property page (see ) contains the following fields:\n\n","The Databases property page (see ) contains the following fields:\n\n","The Job Scheduling property page (see ) displays the following job scheduling selections made in the product that ran the job:\n\n","The parameters tab property page (see ) contains the following field:\n\n","The General tab property page (see ) contains the following fields:\n\n","To access the Run Stats tab property page, the user clicks on the Run Stats tab to view data on the Run Stats property page (see ).","The Statistics field displays product-specific information about this run of the job. This field only displays data if data is provided by the ProVision, Point or other product.","Viewing Job Group Data","To Access job group data:\n\n","The General tab property page (for a group)","contains the following fields:",{"@attributes":{"id":"p-0238","num":"0000"},"ul":{"@attributes":{"id":"ul0096","list-style":"none"},"li":{"@attributes":{"id":"ul0096-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0097","list-style":"none"},"li":["Group ID\u2014Strategy group ID number.","Description\u2014Optional description of the group.","Strategy ID\u2014Strategy ID number of the strategy defined in the Common Services Strategy where the group belongs.","Product Code\u2014code (three-letter Platinum code, in one embodiment) for the ProVision product used to create the jobs that can be viewed in this folder.","Product Version\u2014Version number of the ProVision product used to create the jobs, which can be viewed in this folder.","Jobs Per Run\u2014Number of POEMS Scheduling Service jobs submitted by the product for this strategy group.","When Created\u2014Date and time the strategy group was generated.\n\nViewing Log File Data\n"]}}}},"Log files are generated by various ProVision products, point products, application products, etc (a class of software products that include links to the APIs and related programming as discussed herein) when jobs are run. If created, the user can view the log files created by products using the POEMS Scheduling Service through a Jobs resource object. The user may launch a log file viewer.","To determine if a log file exists for a given job, the user first clicks on the text or the icon of an All Runs By Status folder to display the data in column format on the right side of the Director window. Then, scroll left to view the LOGFILE column using the horizontal scroll bar or the right arrow (see , for example). If a log file for a run is available, its location displays in the row for that run in the LOGFILE column.","To view a log file for a run, the user finds the run of the job in a Jobs resource object. Then, right clicks on the run to display a popup menu (see , for example). Finally, selecting View Log File from the popup menu brings up the display shown in .","Deleting Jobs","When the user no longer requires a job history, it may be deleted using the Jobs Administrator window. Either multiple jobs or single jobs may be deleted.","Deleting Multiple Jobs","To delete multiple jobs, the Jobs Administrator window is accessed at the level of the folder that contains the jobs to delete in a Jobs resource object. Then, a right-click on the icon or text of the folder to display the popup menu illustrated in . Selecting Delete from the popup menu displays the Delete Jobs window (see ). This window displays the Job ID and node name of all of the jobs selected in the Submit Jobs\/Runs field.","All of the jobs in a folder are initially selected and highlighted. If the user clicks on a job, it is deselected and will not be deleted. If all jobs are deselected, the Submit button becomes inactive.","Deselect any jobs by either:\n\n","Clicking on the Submit button deletes the selected jobs. The window expands to provide a dynamic display of the status and results of the action (see ). If the deletion of a job completes successfully, the job ID and node name for each job display in the Succeeded field. If the deletion of a job fails, the job ID, node name, and an error code for that job display in the Failed field.","A running total of submitted, succeeded, pending and failed deletions displays in the small Submitted, Succeeded, Pending, and Failed fields. Alternatively, a user may click on the Close button while the jobs are deleted without waiting for all of the results to display in the expanded window; or wait until all of the results (successful or failed) display in the Succeeded or Failed fields in the expanded window. The Close button then changes to the Done button, which you select to close the Jobs Administrator window.","Deleting Single Jobs","To delete single jobs, the Jobs Administrator window is accessed at the level of the job to delete in a Jobs resource object. The user then locates the job to delete and right-clicks on the icon or text of the job to display a popup menu (see ) and selects Delete.","The Delete Jobs window then displays (see ). This window shows the Job ID and node name of the selected job. If the user clicks on the job, it is deselected and the Submit button becomes inactive. Clicking the Submit button deletes the job, and the window expands to provide a dynamic display of the status and results of the action (see ).","If the deletion of the job completes successfully, the job ID and node name for the job display in the Succeeded filed. If the deletion of the job fails, the job ID, node name, and an error code for the job display in the Failed field.","A running total of submitted, succeeded, pending, and failed deletions displays in the small Submitted, Succeeded, Pending, and Failed fields.","Rerunning Jobs","The Jobs Administrator window may be utilized to rerun completed jobs using the same parameters. Either multiple jobs or single jobs may be rerun. When a job is rerun, a new run number is assigned. In one embodiment, locked jobs are prevented from being rerun via these procedures.","Rerunning Multiple Jobs","To rerun multiple jobs, the Jobs Administrator window is accessed at the level of the folder containing the jobs to rerun in a Jobs resource object. The folder containing the jobs to rerun is located, and a right-click on the icon or text of the folder displays a popup menu (see ). Selecting Rerun from the popup menu displays the Rerun Jobs window (see ). This window displays the Job ID and node name of all of the jobs selected in the Submit Jobs\/Runs field and provides options for rerunning them.","Similar to the Delete Jobs procedures discussed above, all of the jobs in a folder are initially selected. If the user clicks on a job, it is deselected and will not be rerun. If the user deselects all of the jobs, the Submit button becomes inactive.","A user may utilize one of the following options in the Start Date & Time specification area by:\n\n","The selected jobs are then rerun at the specified date and time. Clicking on the Submit button reruns the selected jobs, and the window expands to provide a dynamic display of the status and results of the action (see ).","The selected jobs are then rerun at the specified date and time. Clicking on the Submit button reruns the selected jobs, and the window expands to provide a dynamic display of the status and results of the action (see ). If a job is submitted successfully, the job ID and node name for each job display in the Succeeded field. If a job fails to submit, the job ID, node name, and an error code for that job display in the Failed field.","A running total of submitted, succeeded, pending, and failed reruns displays in the Submitted, Succeeded, Pending, and Failed fields.","Rerunning Single Jobs","To rerun single jobs, the Jobs Administrator window is accessed at the level of the job to rerun. After locating the job to rerun in the Jobs folder, the icon or text of the job is right-clicked to display a menu (see ), and Rerun is selected, displaying the Rerun Jobs window (see ). This window displays the Job ID and node name of the selected job and provides options for rerunning it. Clicking the job deselects it and the Submit button becomes inactive. Similar start date & time options, as discussed above, are also available. Clicking on the Submit button reruns the job.","As with the other rerun options, the window expands to provide a dynamic display of the status and results of the submission.","Canceling Runs","The user can use the Jobs Administrator to cancel a running job. The user can cancel multiple runs or single runs of a job. However, some products may temporarily disable this capability during a critical stage of a job, which does not allow recovery, makes recovery difficult, or requires that the product specific procedures be followed for recovery.","Canceling Multiple Runs","To cancel multiple runs, the Jobs Administrator is accessed at the level of the folder containing the runs to cancel in a Jobs resource object. After locating a Running Runs folder containing the runs to cancel, a right-click on the icon or text of the folder displays a popup menu (see ).","By selecting Cancel from the popup menu, a Cancel Runs window is displayed (see ). This window displays the Job ID, run number, and node name of all of the runs selected in the Submit Jobs\/Runs field (see , for example).","Similar to the Delete Job procedures, all of the runs in a folder are selected initially. By clicking on a run, it is deselected and will not be canceled. If all of the runs are deselected, the Submit button becomes inactive, etc. The Submit button cancels the selected runs, and the window expands to provide a dynamic display of the status and results of the action.","Monitoring the Progress of Jobs","A Progress Monitor is provided to view information about a current phase and overall progress of any job run by products using the POEMS Scheduling Service.","Individual products publish events regarding the different phases of their jobs. The Progress Monitor subscribes to these events and uses the resulting data to provide the user with information on the progress of the job.","The specific progress identifiers and the job phases that may be monitored are dependent on the individual design of the product using the POEMS Scheduling Service.","Accessing the Progress Monitor","The Progress Monitor may be accessed at the individual run level in the Jobs Repository Resource Object.","To monitor the progress of a job, a user first finds the run of the job and right-clicks on the run to display a popup menu (see ). Selecting Progress Monitor from the popup menu displays the Progress Monitor (see ). The Progress Monitor is configured to display the following information:\n\n","In one embodiment, the contents of the main text field vary according to the design of the product that scheduled the job.","The name of the current phase of the job can be viewed from the title bar of the Progress Monitor window. The progress of the job's current phase is determined by viewing the main text field in the Progress Monitor window, or viewing the Current Phase Progress field in the Progress Monitor window. Black bars are used to graphically display the phase progress. This field also provides the percentage completed of the job's current phase.","The progress for the entire job is viewed using the Overall Progress field in the Progress Monitor window. Again, black bars are used to graphically display the overall job's progress, and the percentage completed for the entire job.","Troubleshooting Tips","The present invention includes a number of troubleshooting techniques. A number of possibilities may cause a failure to delete and rerun jobs, or cancel specific runs of a job.","If a submission fails:\n\n","To verify that a Scheduling Services agent is running on a node, a user selects Tools  Monitor  Service Managers from the menu bar to display the Director Service Manager Monitor window (see ). The user may click on the plus sign (+) or double-click on the text of Service Managers to display the list of service managers on different nodes. Clicking on the text of the service manager for a node brings up the right side of the Service Manager Monitor with information for the programs residing on that node (see ).","The present invention has been described in reference to the POEMS Scheduling service utilized by the Platinum suite of database products. However, the teachings of the present invention may be applied to any individual or suite of computer or other products to provide similar services. Therefore, the present invention is not limited to a specific line of products or type of products (point products, ProVision products, or databases, for example) and apply to any computer processes or applications in general.","The present invention may be conveniently implemented using a conventional general purpose or a specialized digital computer or microprocessor programmed according to the teachings of the present disclosure, as will be apparent to those skilled in the computer art.","Appropriate software coding can readily be prepared by skilled programmers based on the teachings of the present disclosure, as will be apparent to those skilled in the software art. The invention may also be implemented by the preparation of application specific integrated circuits or by interconnecting an appropriate network of conventional component circuits, as will be readily apparent to those skilled in the art.","The present invention includes a computer program product which is a storage medium (media) having instructions stored thereon\/in which can be used to program a computer to perform any of the processes of the present invention. The storage medium can include, but is not limited to, any type of disk including floppy disks, optical discs, DVD, CD-ROMs, microdrive, and magneto-optical disks, ROMs, RAMs, EPROMs, EEPROMs, DRAMs, VRAMs, flash memory devices, magnetic or optical cards, nanosystems (including molecular memory ICs), or any type of media or device suitable for storing instructions and\/or data.","Stored on any one of the computer readable medium (media), the present invention includes software for controlling both the hardware of the general purpose\/specialized computer or microprocessor, and for enabling the computer or microprocessor to interact with a human user or other mechanism utilizing the results of the present invention. Such software may include, but is not limited to, device drivers, operating systems, and user applications. Ultimately, such computer readable media further includes software for performing the present invention, as described above.","Included in the programming (software) of the general\/specialized computer or microprocessor are software modules for implementing the teachings of the present invention, including, but not limited to, application programming interfaces for Graphical User Interfaces, Job Scheduling, Job Data Management, Job Administration, a command line interface, calendaring functions, and communications across a network. The software modules also include job scheduling agents operating on individual nodes on computer platforms in the network, and modules for the display, storage, or communication of results according to the processes of the present invention.","Each of the above-described APIs are compiled and linked into specific point products, ProVision products, or other applications utilizing those APIs to perform the present invention. In addition, configuration files are maintained for setup and operation of the invention and repositories are maintained by the invention.","Obviously, numerous modifications and variations of the present invention are possible in light of the above teachings. It is therefore to be understood that within the scope of the appended claims, the invention may be practiced otherwise than as specifically described herein."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A more complete appreciation of the invention and many of the attendant advantages thereof will be readily obtained as the same becomes better understood by reference to the following detailed description when considered in connection with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 7A"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7B"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 27"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 29"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 30"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 31"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 32"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 33"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 34"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 35"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 36"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 37"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 38"},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 39"},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 40"},{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 41"},{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 42"},{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 43"},{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 44"},{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 45"},{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 46"},{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 47"},{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 48"},{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 49"},{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 50"},{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 51"},{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 52"},{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 53"},{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 54"},{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 55"},{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 56"},{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 57"},{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 58"},{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 59"},{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 60"},{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIG. 61"},{"@attributes":{"id":"p-0078","num":"0077"},"figref":"FIG. 62"},{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 63"},{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 64"}]},"DETDESC":[{},{}]}
