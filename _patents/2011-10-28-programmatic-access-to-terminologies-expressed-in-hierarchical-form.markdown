---
title: Programmatic access to terminologies expressed in hierarchical form
abstract: The described implementations relate to expressing terminologies in a hierarchical form. One implementation can receive a terminology that can include concept-code pairs. For example, each of the concept-code pairs can include a concept and a code that is assigned to the concept by the terminology. The implementation can map the concepts to levels of a hierarchical ontology, and associate some of the concepts across different levels of the hierarchical ontology. The implementation can also provide programmatic access to the concept-code pairs of the terminology via the hierarchical ontology.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09122985&OS=09122985&RS=09122985
owner: Microsoft Technology Licensing, LLC
number: 09122985
owner_city: Redmond
owner_country: US
publication_date: 20111028
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION","Overview","CONCLUSION"],"p":["Because of advances in their computational power, modern computers can allow users to process vast amounts of data in very little time. However, computers tend to represent knowledge in relatively inflexible, counter-intuitive formats that are not readily digestible for programmers or other users. For example, the medical profession uses various standardized terminologies for organizing medical data, e.g., SNOMED\u2014CT (Systemized Nomenclature of Medicine\u2014Clinical Terms) and ICD-9 (International Classification of Diseases\u20149th Edition). While these standardized terminologies can provide convenient representations of various medical concepts, they do not express relationships between these concepts in an intuitive form.","Furthermore, standardized terminologies tend to evolve over time, e.g., new drugs or diagnoses can be added to medical terminologies as these drugs or diagnoses become integrated into the medical profession. Applications built on a specific version of a terminology can tend to have dependencies on that version that need to be resolved as new versions of the terminology are released. Further complications can arise when applications are required to provide interoperability between different standardized terminologies.","The described implementations relate to providing programmatic access to knowledge expressed in one or more terminologies. One implementation is manifested as a system that can include a terminology analyzer, an application programming interface including a function, and a processor. The terminology analyzer can be configured to receive a terminology that includes concept-code pairs, and each of the concept-code pairs can include a concept and a code assigned to the concept by the terminology. The terminology analyzer can also be configured to map the concept-code pairs to at least two different levels of a hierarchical ontology, and associate some of the concepts across different levels of the hierarchical ontology. The function can be configured to receive a request to access the hierarchical ontology, and the request can identify an individual concept. The function can also be configured to identify the individual concept within an individual level of the hierarchical ontology, and obtain a related concept that pertains to the individual concept. The related concept can be obtained from the individual level of the hierarchical ontology or another level of the hierarchical ontology. The processor can be configured to execute the terminology analyzer, the function, or both.","The above listed examples are intended to provide a quick reference to aid the reader and are not intended to define the scope of the concepts described herein.","This discussion relates to providing programmatic access to knowledge expressed in one or more terminologies, e.g., via one or more application programming interfaces (\u201cAPIs\u201d). For example, the terminologies can be represented in a hierarchical form that can, in some instances, be derived from the terminologies. The terminologies can include various concepts as well as relationships between the concepts. In some implementations, the terminologies are standardized terminologies published by one or more entities, e.g., government or international agencies, standards organizations, industry organizations, etc. For example, SNOMED-CT is published by the National Library of Medicine, and ICD-9 is published by the World Health Organization (\u201cWHO\u201d).","The disclosed implementations are described in the context of a health care scenario. Generally speaking, the disclosed API's offer functionality for performing operations on various terminologies. For example, the terminologies can be represented using hierarchical ontologies, and the API's can be used to traverse the hierarchical ontologies to identify synonyms, parents or ancestors, children or descendants, or sibling concepts provided therein. Note that the term \u201cparent\u201d is used broadly herein to mean \u201cancestor\u201d and the term \u201cchild\u201d is used broadly herein to mean \u201cdescendant.\u201d Where more specificity is needed, terms such as \u201cimmediate parent,\u201d \u201cimmediate child,\u201d \u201cgrandparent,\u201d \u201cgrandchild,\u201d etc. are used.","As one specific example of an API, a call to an API to retrieve synonyms for an input concept of \u201cIbuprofen\u201d could retrieve synonyms such as the brand names \u201cAdvil\u00ae\u201d or \u201cMotrin\u00ae.\u201d This can be implemented by acquiring the synonym relationship from published terminologies, e.g., a published terminology can identify that Advil\u00ae is a synonym for Ibuprofen. As another example from a clinical context, synonyms can be used to identify different ways that clinicians can express the same diagnoses, e.g., different doctors in a given hospital may represent a \u201cRight Radial Fracture\u201d as \u201cR radial fracture, RR fracture,\u201d etc. Existing techniques such as those used by search engines can be used to correct spelling, reorder words, etc. to accommodate different expressions of individual concepts.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1","b":["100","101","105","150","151","153","100","150","101","38341003","151","401","405"]},"Unless otherwise indicated, the term \u201ccode\u201d as used herein encompasses both individual codes as well as code ranges. Note that some of the concepts provided by terminology  are also provided by terminology , e.g., \u201cEssential Hypertension\u201d appears with SNOMED code  in terminology  and with ICD-9 code : in terminology . Furthermore, the term \u201cconcept-code pair\u201d is used broadly herein to identify any association between a code and a concept, and includes instances where multiple codes are assigned to a single concept or a single code is assigned to multiple concepts, etc.","In some circumstances, a given terminology may include some information that explains some relationships among the concepts provided therein. For example, considering terminology , the ICD-9 code range \u201c-\u201d for \u201cHypertensive Disease\u201d defines a range of codes for various hypertensive diseases. Likewise, the ICD-9 code  for \u201cEssential Hypertension\u201d defines a range of codes (., ., etc.) for various forms of essential hypertension. Thus, each numerical range of terminology  defines an \u201cis-a\u201d relationship between the corresponding concepts, e.g., \u201cBenign Essential Hypertension\u201d is a form of \u201cEssential Hypertension\u201d which is in turn a form of \u201cHypertensive Disease\u201d in the ICD-9 terminology.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2","b":["200","150","150","200","401","401","405","200","152","151","401","1","401","401","401","0","401","9"]},"Also, note that hierarchical ontology  is illustrated as including multiple levels, 1, 2, and 3, with each concept being included in an individual level. Three levels are illustrated for simplicity of exposition, but in different implementations different numbers of levels are provided. Also, note that the number of levels is not necessarily explicitly conveyed by the terminology itself. Rather, the levels can be derived from the relationships expressed within the terminology. For example, since benign essential hypertension is a form of essential hypertension and essential hypertension is a form of hypertensive disease, the relationships among these concepts can be expressed using a three-level scheme as shown in .","In some implementations, the terminologies may include certain relationships that are \u201cflattened\u201d in order to map all of the concepts in a given terminology to a hierarchical ontology such as ontology . For example, a given terminology could include many different polydirectional relationships among concepts that are not represented in any particular hierarchical form by the terminology itself. Thus, the terminology may not provide a natural way to move \u201cup\u201d or \u201cdown\u201d within the concepts identified by the terminology. The disclosed implementations can explicitly map concepts from a terminology into various levels of a hierarchy. This, in turn, allows relationships between the concepts to be expressed in a way that has a clear meaning, e.g., using terms such as great grandparents, grandparents, parents, children, cousins, etc. In general, an arbitrary number of levels can be used for such a hierarchy. In some cases, for performance reasons, the number of levels can be limited so that a hierarchy can include a fixed, predetermined number of levels.","In , concepts  and  are shown in dashed lines to illustrate two concepts\u2014\u201cHypertensive Disorder\u201d and \u201cBenign Hypertension\u201d\u2014that are not included in the ICD-9 terminology. As discussed in more detail below, however, these concepts can also be mapped to individual levels of a hierarchical ontology. For example, \u201cHypertensive Disorder\u201d is a relatively high-level concept that, while not synonymous with \u201cHypertensive Disease,\u201d is of similar breadth. For reasons set forth in more detail below, it can be useful to map concepts of similar scope and breadth to an individual level of a hierarchical ontology to facilitate programmatic expression of relationships between different concepts. As another example, \u201cBenign Hypertension\u201d does not appear in the ICD-9 terminology, but is of similar breadth as the concept \u201cEssential Hypertension,\u201d and accordingly these terms can be mapped to the same level, e.g., level 2.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 3","FIG. 3"],"b":["300","100","200","300","100","100","300","100","300","200","100","300","100","100","300"]},"In the previous example shown in , the concept \u201cHypertensive Disorder\u201d was mapped to level 3 and shown in dashed lines to indicate that this concept does not appear in terminology .  illustrates a similar approach, where the concept \u201cHypertensive Disease\u201d is mapped to level 3 and is shown in dashed lines to indicate that this concept does not appear in terminology . As mentioned above, however, \u201cHypertensive Disease\u201d is a relatively high-level concept of similar breadth as \u201cHypertensive Disorder,\u201d and accordingly these two concepts are mapped to the same level, e.g., level 3.","Now, consider a user who wishes to find out more information about \u201cBenign Essential Hypertension.\u201d In particular, the user is interested in more general classifications for \u201cBenign Essential Hypertension.\u201d In other words, the user is asking the question, what broader concepts relate to this concept and appear in either terminology  or terminology ? One approach for providing this information to the user would be to separately process the different terminologies on an ad-hoc basis to identify concepts that have \u201cBenign Essential Hypertension\u201d as a descendant. However, considering terminologies  and  as shown in , it is not apparent if or how the relationships that are expressed separately in these terminologies can be utilized together.","The following discussion builds on the examples set forth above to illustrate exemplary techniques for processing terminologies to extract meaningful information about relationships expressed therein. Relationships across multiple terminologies can be mapped to a combined hierarchical ontology to facilitate operations (e.g., queries) that reference the combined hierarchal ontology. For example, by processing the terminologies and classifying the various concepts expressed therein into different levels as set forth above, it is possible to provide a unified framework for answering queries that reference multiple terminologies.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 4","FIG. 4"],"b":["400","100","150","400","100","150","400","150","100","400","100","100","401","402","100","59621000"]},"Combined hierarchical ontology  also includes concepts that appear in both terminologies  and , e.g., \u201cEssential Hypertension\u201d and \u201cBenign Essential Hypertension\u201d are shown in combined concept-code pairs  and . Combined concept-code pair  includes the individual concept \u201cEssential Hypertension\u201d and two corresponding codes from the different terminologies, i.e., ICD-9  and SNM . Likewise, combined concept-code pair  includes the individual concept \u201cBenign Essential Hypertension\u201d and two corresponding codes from the different terminologies, i.e., ICD-9 . and SNM .","As introduced above with respect to hierarchical ontologies  and , each concept is mapped to a particular level of combined hierarchical ontology . However, because ontology  includes concept-code pairs from both terminologies, ontology  expresses hierarchical relationships between concepts across terminological boundaries. As one example, the concepts \u201cPrimary Hypertension\u201d and \u201cIdiopathic Hypertension\u201d do not appear in terminology . Nevertheless, in hierarchical ontology , they are represented as synonyms of a concept from terminology , e.g., \u201cEssential Hypertension.\u201d As another example, although the concept \u201cHypertensive Disease\u201d does not appear in terminology , ontology  can be used to express concepts and codes from terminology  as children or parents of \u201cHypertensive Disease.\u201d Specifically, the code  from terminology  refers to a grandchild of \u201cHypertensive Disease\u201d in ontology  even though terminology  does not itself include the concept \u201cHypertensive Disease.\u201d","Network System Example",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 5","FIG. 5"],"b":["500","500","510","520","530","540","550","560","570","580","530","540","100","150","520","510"]},"Generally speaking, analysis server  can perform processing on the terminologies to map the terminologies to one or more hierarchal ontologies using terminology analyzer . Analysis server  can also provide programmatic access to the hierarchal ontologies via one or more terminology API's . In some implementations, terminology analyzer  can be configured to analyze multiple terminologies provided by terminology servers  and  and map the multiple terminologies to a combined hierarchical ontology such as hierarchical ontology . Analysis server  is shown with hardware resources , including one or more processors  and storage . Note that each of the computing devices shown in  (terminology servers  and , client devices  and , and data servers  and ) can also include hardware resources such as those discussed herein with respect to analysis server . Hardware resources are omitted from  for these other computing devices due to space constraints.","Client devices  and  can invoke the terminology APIs via API calls  and , respectively. In some implementations, the client devices can invoke the terminology APIs to retrieve one or more related concepts from the hierarchical ontologies hosted by analysis server . The related concepts can be used in queries to retrieve data from databases  and\/or  hosted by data servers  and , respectively.","In other implementations, the terminology APIs can be implemented directly by data servers  and\/or  instead of by analysis server . In the following examples, databases  and  can include various medical databases and the databases may represent the data using different terminologies. For example, database  can include diagnoses in terminology  and database  can include diagnoses in terminology . As discussed in more detail below, client devices  and  can use the terminology APIs to query both databases  and . Thus, the terminology APIs provide a common interface for querying data represented in disparate terminologies.","As an example of how the terminologies can be applied to a real-world medical scenario, database  can include data for a first hospital, and database  can include data for a second hospital. The two hospitals can fall under a common management entity that wishes to provide practitioners with access to the data in both databases. Because the databases do not use the same terminologies, this could impose dependencies on applications executing on client devices  and\/or . Using the terminology APIs discussed herein, these dependencies can be abstracted and applications on client devices  and\/or  can use the terminology APIs to obtain data from databases  and  without special-purpose code tied to the different terminologies.","In addition, mapping multiple terminologies to a single hierarchy can facilitate providing information about the multiple terminologies using a common set of API calls, e.g., terminology APIs . Specifically, terminology APIs  can include various function calls to access the hierarchical ontology using a concept or code as an input to retrieve related concepts, codes, or concept-code pairs. For example, terminology APIs  can include individual functions to get synonyms for concepts or to get parents, children, or siblings of concepts. Depending on the inputs to the API calls, synonyms, parents, children, and\/or siblings can be retrieved from individual terminologies or across multiple terminologies.","An individual function available via terminology APIs  can retrieve children or descendant concepts via an interface such as GetChildren (Concept, NameOfHierarchy). The Concept argument can represent an individual concept from a particular terminology, e.g., Benign Hypertension, Hypertensive Disorder, etc. In some implementations, the Concept argument can also be specified as a concept code, e.g., SNM , , etc. The NameOfHierarchy argument can represent a particular hierarchical ontology that the user wishes to search, e.g., any of hierarchical ontologies , , or . By selecting combined hierarchical ontology , the user can retrieve concepts from both terminologies  and . Alternatively, the user can retrieve concepts from a single terminology only by specifying a hierarchical ontology that only includes concepts from that terminology, e.g., the user can select hierarchical ontology  to retrieve only concepts from terminology  or can select hierarchical ontology  to retrieve only concepts from terminology .","As an example, consider a call to GetChildren (\u201cHypertensive Disorder,\u201d ontology ), or alternatively, GetChildren (, hierarchical ontology ). The child concepts in hierarchical ontology  will be returned by the API call to the requester, e.g., client device  and\/or . Analysis server  can search hierarchical ontology  for concepts that are one level below the input concept, \u201cHypertensive Disorder,\u201d and then send a response to the requesting client device that includes the concepts from the next-lower level. Thus, because Hypertensive Disorder is in level 3 and has two child concepts in level two, these two concepts \u201cBenign Hypertension\u201d and \u201cEssentialHypertension\u201d are returned by the function. Alternatively or in addition, the corresponding codes can be returned by the call to GetChildren, e.g.,  and .","In further implementations, the GetChildren function can also have an input parameter that specifies a level of depth. If the level input is a \u201c1\u201d the function can return immediate children, e.g., as set forth above\u2014for Hypertensive Disorder, Benign Hypertension and Essential Hypertension will be retrieved from level 2. If, however, the user selects 2 levels of depth, the grandchildren concepts of the concept specified by the input can be retrieved. In this example, the grandchild concept of Hypertensive Disorder is Benign Essential Hypertension and this concept is retrieved and provided in response to the call.","As mentioned above, the GetChildren function can also retrieve child concepts across multiple terminologies. For example, the user could specify a concept from ICD-9 terminology, e.g., \u201cHypertensive Disease\u201d or the corresponding code range -, and specify combined hierarchical ontology  with one level of depth. In this instance, the call can retrieve \u201cEssential Hypertension\u201d with both the ICD-9 code  and the SNOMED code . Similarly, with a depth argument of 2, the call can retrieve \u201cBenign Essential Hypertension\u201d with both the ICD-9 code of . and the SNOMED code of .","Parent or ancestor concepts can be retrieved by a different API function with an interface such as GetParents (Concept, NameOfHierarchy). The Concept and NameOfHierarchy arguments can be as described above with respect to the GetChildren function. Here, considering a call to GetParents (\u201cBenign Essential Hypertension,\u201d hierarchical ontology ), the parent concepts in hierarchical ontology  will be returned by the API call. Analysis server  can then send a response to the requesting client device that includes these concepts, e.g., BenignHypertension and EssentialHypertension and\/or the corresponding codes  and . Note that if ontology  were specified instead of ontology , the ICD-9 code  can also be returned by the call.","Synonyms can be retrieved by a function with an interface such as GetSynonyms (Concept, NameOfHierarchy). This function can retrieve synonyms specified by a particular terminology based on the input arguments. As a specific example, assume client device  makes a call to GetSynonyms with arguments (\u201cEssential Hypertension\u201d, combined hierarchical ontology ). Analysis server  can access combined hierarchical ontology , identify the \u201cEssential Hypertension\u201d concept, and determine that there are two synonyms in this ontology\u2014\u201cPrimary Hypertension\u201d and \u201cIdiopathic Hypertension.\u201d Thus, these two concepts and\/or the corresponding codes can be returned in response to the function call. Because hierarchical ontology  includes concepts from multiple terminologies, the codes from both terminologies can be returned. In this instance, both the ICD-9 and SNOMED codes for \u201cEssential Hypertension,\u201d e.g.,  and , are returned by analysis server .","Sibling concepts can be retrieved by a function with an interface such as GetSiblings (Concept, NameOfHierarchy). Generally speaking, a \u201csibling\u201d or \u201ccousin\u201d concept is a concept from the same level of a given hierarchical ontology that is not necessarily a synonym. Sibling concepts are generally of similar breadth but two sibling concepts generally express at least some non-overlapping meaning. Like the other functions introduced above, the GetSiblings function can retrieve children concepts from a particular hierarchical ontology based on the input arguments. In some implementations, the GetSiblings interface can also identify a common ancestor concept and the function can return all descendants of the common ancestor at the same level as the input concept (e.g., identifying a parent would retrieve siblings, identifying a grandparent would retrieve first cousins, etc.). Alternatively, the GetSiblings interface can identify a number of levels instead of a specific ancestor such that requesting one level returns descendants of all parents, e.g., siblings, requesting two levels returns descendants of all grandparents, e.g., first cousins, etc.","As a specific example, assume client device  makes a call to GetSiblings with arguments (\u201cEssential Hypertension\u201d, combined hierarchical ontology ). Analysis server  can access ontology , identify the \u201cEssential Hypertension\u201d concept, and determine that \u201cEssential Hypertension\u201d has a sibling concept within this ontology\u2014\u201cBenign Hypertension.\u201d Thus, the concept \u201cBenign Hypertension\u201d and the corresponding SNOMED code  can be returned by this function call. Note that the GetChildren function can also retrieve concepts across terminological boundaries, e.g., the input concept \u201cEssential Hypertension\u201d can be expressed using the ICD-9 code  and the return values can include sibling concept codes from a different terminology, i.e., SNOMED. In this case, the sibling concept \u201cBenign Hypertension\u201d does not occur in the ICD-9 terminology used for the input code, but the user is still able to retrieve this concept because of the relationships expressed in combined hierarchical ontology .","First Method Example",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 6","b":["600","200","300","400","600","521","520"]},"At block , one or more terminologies are received. For example, terminology server  can send terminology  to analysis server , e.g., terminology  can be a new terminology and\/or an update to an existing terminology. Likewise, terminology server  can send terminology  to analysis server . As shown in , each terminology can include various concept-code pairs. Note that, in some implementations, terminology servers  and\/or  can be operated by a publishing entity, e.g., the National Library of Medicine or the World Health Organization. In other implementations, terminology servers  and\/or  can be operated by one or more intermediary organizations that process terminologies obtained from publishing entities in one form, e.g., a spreadsheet, and provide the terminologies to analysis server  in a different format, e.g., a query language based data format.","Next, at block , the concepts are mapped to levels of a hierarchical ontology. For example, each concept for a given terminology can be mapped to a particular level of one or more of hierarchical ontologies , , and\/or . The levels to which concepts are mapped can reflect the relative breadth or specificity of the concept. In some cases, the relative breadth or specificity of a given concept can also be reflected by the terminology itself. For example, the ICD-9 codes for \u201cHypertensive Disease,\u201d \u201cEssential Hypertension,\u201d and \u201cBenign Essential Hypertension\u201d\u2014-, , and ., respectively, numerically reflect the progressively narrower meanings of these concepts.","Note also that the individual concept-code pairs shown in  can be identified to select concepts that appear in multiple terminologies with different codes. For example, the concept \u201cBenign Essential Hypertension\u201d appears in both terminologies  and  with different codes,  and ., respectively. In such cases, terminology analyzer  can associate the individual concept with both codes in a single level of a hierarchical ontology.","Next, at block , the concepts can be associated within individual levels of the hierarchical ontology. One example is associating synonymous concepts such as \u201cPrimary Hypertension,\u201d \u201cIdiopathic Hypertension,\u201d and \u201cEssential Hypertension\u201d of ontology . A second example of associations within an individual level can include associating siblings within an individual level, e.g., concepts such as \u201cBenign Hypertension\u201d and \u201cEssential Hypertension\u201d can be associated as sibling concepts. A third example of associations within an individual level can include associating synonyms of siblings, e.g., \u201cBenign Hypertension\u201d can be associated with \u201cPrimary Hypertension\u201d and \u201cIdiopathic Hypertension\u201d because these are synonyms of the sibling \u201cEssential Hypertension.\u201d","Next, at block , concepts can be associated across different levels of a hierarchical ontology. As one example, child\/parent concepts can be related on different levels. For concepts that appear in multiple terminologies, this can include associating a concept-code pair from one terminology with a code from another terminology. For example, the concept-code pair \u201cHypertensive Disease\u201d and - from the ICD-9 terminology can be associated with the SNOMED code . This association can be identified because the \u201cEssential Hypertension\u201d concept appears in both terminologies and effectively \u201clinks\u201d the different terminologies within combined hierarchical ontology .","Next, at block , access to the hierarchical ontology can be provided. For example, programmatic access can be provided via APIs such as the GetChildren, GetParents, GetSynonyms, and GetSiblings functions set forth above.","The example mentioned above includes examples that reference combined hierarchical ontology . However, in some implementations, hierarchical ontologies can first be created separately for individual terminologies. Thus, for example, terminology analyzer  can separately process terminology  and terminology  to obtain terminologies  and , respectively. Next, terminology analyzer  can combine these terminology-specific ontologies into combined ontology . Each concept from the terminology-specific ontologies can be mapped to a particular level of the combined hierarchical ontology. Thus, as mentioned above, concepts appearing in both terminologies can be used to link the two terminologies in the combined hierarchical ontology.","Second Method Example",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 7","b":["700","200","300","400","700","522","520"]},"At block , a request to access a hierarchical ontology can be received. For example, client devices  and\/or  can execute a web service API call to an individual function, e.g., using a hypertext transfer protocol (\u201cHTTP\u201d) or other network protocol. In some implementations, the API call can be received locally, e.g., from a client application on an individual device that also performs the API processing. In some implementations, the APIs disclosed herein can be used to enable expansion of queries, e.g., for structured query language (\u201cSQL\u201d) statements. Exemplary web service and query language APIs are discussed more below.","Next, at block , an individual concept within the hierarchical ontology can be identified. For example, as mentioned above, the API call can be made with an input argument that specifies a concept or a concept code within a particular hierarchical ontology. In the examples shown herein, any of the concepts or concept codes shown in hierarchical ontologies , , and\/or  can be identified based on such an input argument.","Next, at block , the hierarchy can be traversed based on the function that is called and the input arguments. As mentioned above, the hierarchy can be traversed one or more levels to identify child and\/or parent concepts for an input concept or concept code. Likewise, the hierarchy can be traversed to identify synonymous concepts or sibling concepts for an input concept or concept code. Depending on the ontology which is selected, the traversal can be across terminological boundaries (e.g., combined ontology ) or confined to an individual terminology (e.g., ontologies  and\/or ).","Next, at block , related concepts can be obtained. For example, the traversal of a hierarchical ontology to move up or down levels can identify concepts that pertain to the input concept or concept code but are relatively more (children) or less (ancestors) specific than the input concept or concept code. The traversal of the hierarchical ontology can also move laterally within an individual level to identify other concepts that are approximately as broad as the input concept, e.g., sibling or synonym concepts. Assuming equivalent input arguments, different concepts are obtained by the GetChildren function than by the GetParents function, etc. Thus, the concepts that are obtained at block  depend on the individual function from the API that is identified by the request. Note also that, in some instances, the related concepts can be identified by the concept names, e.g., \u201cEssential Hypertension,\u201d and\/or one or more concept codes, e.g.,  and\/or .","Next, at block , the related concepts obtained at block  can be provided in reply to the request. As mentioned above, the related concepts can be provided by name and\/or code.","Query Expansion","As mentioned above, the API calls provided above can be used for query expansion, e.g., to facilitate access to one or more database tables. For example, databases  and  can be used by different hospitals, and may each include one or more tables identifying patients, diagnoses, and prescribed medications. Now consider a user that wishes to query both of the databases to identify all of the patients for either hospital that have been diagnosed with some type of hypertensive condition and have been prescribed any type of anticoagulant drug. Furthermore, the databases may include coded data from different terminologies used for the diagnoses (e.g., SNOMED vs. ICD-9) and other terminologies (e.g., RxNorm vs. First Databank, National Drug File\u2014Reference Terminology, etc.) for the prescribed medications.","One brute-force approach would be to manually write a query condition that identifies every possible code for hypertensive conditions and anticoagulants from the various terminologies and separately query the databases. For example, one or more SQL SELECT statements could have one or more WHERE conditions that separately list each existing diagnosis code for hypertensive conditions and\/or each possible medication code for all known anticoagulants. In instances where there are large numbers of codes, this approach could be relatively onerous for the developer.","However, using the API's provided above, it is possible to automate the process of identifying each code that is needed for such a query. Specifically, the first condition mentioned above could automatically be populated by calls to APIs set forth above to include the appropriate codes from ontology , e.g., by retrieving all the grandchildren of either \u201cHypertensive Disorder\u201d or \u201cHypertensive Disease\u201d from combined hierarchical ontology . Likewise, the second condition mentioned above could automatically be populated from a different ontology (not shown) that includes concept-code pairs from RxNorm and possibly one or more other medication terminologies.","In the example above, retrieving grandchildren can be performed by traversing from higher levels to lower levels in combined hierarchical ontology . However, as mentioned above it is also possible to retrieve higher-level concepts. For example, consider a clinician who wishes to obtain information on drugs that can be used to treat conditions such as \u201cEssential Hypertension\u201d as well as related conditions. One way to satisfy such a clinician is to first call the GetParents function with inputs of \u201cEssential Hypertension\u201d and \u201ccombined hierarchical ontology .\u201d This call can retrieve both the \u201cHypertensive Disorder\u201d and \u201cHypertensive Disease\u201d concepts, which can then be expanded by calls to the GetChildren function to retrieve related conditions to \u201cEssential Hypertension,\u201d e.g., \u201cBenign Hypertension.\u201d Viewed from one perspective, this technique of calling the GetParents function and then the GetChildren function can allow a user to generalize to obtain broader concepts and then drill down to more specific concepts that are children of the obtained broader concepts.","As another example, consider two different clinicians, a first clinician who wishes to have a list of all known painkillers, and a second clinician who wishes to know what medications are appropriate for treatment of a sore back. A hierarchical ontology listing only medications in a single terminology may be sufficient to honor the first clinician's request. However, for the second clinician, a combined hierarchical ontology may be more useful. For example, there may be no specific terminology that identifies particular treatments for a sore back. However, the \u201csore back\u201d concept could be generalized to a higher-level diagnosis concept such as \u201cmuscle pain,\u201d and a particular terminology could identify \u201cIbuprofen\u201d as a particular treatment for \u201cmuscle pain.\u201d A different terminology, e.g., RxNorm, can be used to expand the \u201cIbuprofen\u201d concept to specific drugs that include Ibuprofen, e.g., the aforementioned \u201cAdvil\u00ae\u201d or \u201cMotrin\u00ae\u201d brand name or specific versions thereof (dosages, combinations with other medications, etc.).","As mentioned above, the terminology APIs can be called using protocols such as HTTP, e.g., as web service APIs. For example, the functions introduced above for retrieving children, parents, siblings, and synonyms can be invoked by client devices  and\/or  to retrieve concepts from one or more ontologies. The client devices can then include the retrieved concepts in query language statements directly, e.g., in one or more conditions of a SQL statement. In other words, the client device may rewrite a given SQL statement using the retrieved concepts.","In other implementations, the terminology APIs can be invoked directly via a query language. For example, a call to an individual terminology API can be embedded in a condition of a SQL statement, and the individual databases can execute the API call to retrieve concepts from an ontology. Said differently, the SQL condition can include the API call instead of the list of retrieved concepts.","Hardware Resources","The terms \u201ccomputer,\u201d \u201cclient device,\u201d \u201cserver\u201d and \u201ccomputing device\u201d as used herein can mean any type of device that has some amount of processing capability and\/or storage capability. For example, the various functionality described above with respect to  can be implemented or provided using software, hardware, and\/or firmware. As mentioned above, each of the computing devices shown in  can have various hardware resources , such as processor  and storage . For example, software, hardware, and\/or firmware modules can be used to implement or provide terminology analyzer , terminology APIs , terminologies  and , API calls  and , and databases  and .","Note also that, in some implementations, individual modules discussed herein can also reside on different devices than the configuration shown in . For example, in some instances, the client devices or servers can comprise multiple computing devices or machines, such as in a distributed environment. In such a configuration, each of the methods discussed herein can be implemented using distributed processing across the multiple computing devices or machines.","Conversely, some implementations may combine certain functionality disclosed herein with respect to multiple computing devices by collocating certain functionality on a single computing device. As a specific example, terminology analyzer  and\/or terminology APIs  can be provided together on an individual data server along with one or more databases. As another example, terminology analyzer  and\/or terminology APIs  can be provided together on an individual terminology server along with one or more terminologies. In further implementations, a single computing device can host multiple terminologies, terminology analyzer , terminology APIs , and one or more applications that make API calls \/.","In some instances, processor  can execute data in the form of computer-readable instructions to provide such functionality as described above. Data, such as computer-readable instructions, can be stored on storage . Storage  can include various types of computer-readable storage devices and can be internal or external to a computing device. For example, storage  can include any one or more of volatile or non-volatile memory, hard drives, and\/or optical storage devices (e.g., CDs, DVDs etc.), among others. Furthermore, each of the computing devices shown in  can also be configured to receive and\/or generate data in the form of computer-readable instructions from external storage devices (not shown) or over network .","Examples of external storage can include optical storage devices (e.g., CDs, DVDs etc.), hard drives, and flash storage devices (e.g., memory sticks or memory cards), among others. In some cases, the modules discussed herein can be installed on a computing device during assembly or at least prior to delivery of the computing device. In other scenarios, the modules discussed herein can be installed after delivery, such as a download available over network  or by installing an external storage device in an individual computing device. The modules discussed herein can be manifest as freestanding applications, application parts and\/or part of an operating system. As used herein, the term \u201ccomputer-readable media\u201d can include transitory and non-transitory computer-readable instructions. In contrast, the term \u201ccomputer-readable storage media\u201d excludes transitory instances. Computer-readable storage media includes \u201ccomputer-readable storage devices\u201d as mentioned above.","In some variations of the illustrated network system , each computing device is configured with a general purpose processor and storage. In other variations, one or more of the computing devices can include a system on a chip (SOC) type design. For example, functionality provided by the terminology analyzer and\/or terminology APIs can be integrated on a single SOC or multiple coupled SOCs. In one such example, the analysis server can include shared resources and dedicated resources. An interface(s) can facilitate communication between the shared resources and the dedicated resources. As the name implies, dedicated resources can be thought of as including individual portions that are dedicated to achieving specific functionalities. For instance, in this example, the dedicated resources can include the terminology analyzer or terminology APIs.","Shared resources can be storage, processing units, etc. that can be used by multiple functionalities. In this example, the shared resources can include the processor. As mentioned above, the terminology analyzer or APIs can be implemented as dedicated resources. In other configurations, the terminology analyzer or APIs can be implemented on the shared resources and\/or the processor can be implemented on the dedicated resources.","The above examples are presented in the context of various health care scenarios. This is partly because clinical scenarios include many examples of mature, trusted terminologies that are available for use as discussed above. However, the concepts discussed above can also be applied outside the health care field. For example, consider a social networking terminology that includes concepts such as friend, friend of a friend, invite, professional contact, etc. Using the implementations discussed above, such concepts can be mapped to one or more hierarchical ontologies and accessed using the APIs mentioned above. In short, the concepts discussed above are applicable to any context where appropriate terminologies are available.","The order in which the example methods are described is not intended to be construed as a limitation, and any number of the described blocks or steps can be combined in any order to implement the methods, or alternate methods. Furthermore, the methods can be implemented in any suitable hardware, software, firmware, or combination thereof, such that a computing device can implement the methods. In one case, the methods are stored on one or more computer-readable storage media as a set of instructions such that execution by one or more computing devices causes the one or more computing devices to perform the method.","Although techniques, methods, devices, systems, etc., pertaining to secure patient information handling are described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described. Rather, the specific features and acts are disclosed as exemplary forms of implementing the claimed methods, devices, systems, etc."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings illustrate implementations of the concepts conveyed in the present patent. Features of the illustrated implementations can be more readily understood by reference to the following description taken in conjunction with the accompanying drawings. Like reference numbers in the various drawings are used wherever feasible to indicate like elements. Further, the left-most numeral of each reference number conveys the Figure and associated discussion where the reference number is first introduced.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIGS. 2-4"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIGS. 6 and 7"}]},"DETDESC":[{},{}]}
