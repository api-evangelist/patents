---
title: Optimizing publish/subscribe matching for non-wildcarded topics
abstract: A method, a system and a computer program product for matching a publication to at least one subscriber are disclosed. After receiving a publication request, a matching engine accesses a hash table to determine whether there is a non-wildcarded match corresponding to the publication request. If the matching engine finds the non-wildcarded match in the hash table, the matching engine omits validating a topic of the publication and provides the non-wildcarded match to the broker device without waiting for a result of searching a wildcarded match. Otherwise, the matching engine validates the topic of the publication. The matching engine also starts to search a wildcarded match in a wildcarded subscription data store. Upon finding the wildcarded match, the matching engine provides the wildcarded match to the broker device. The matching engine provides each result of the findings asynchronously to the broker device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08250032&OS=08250032&RS=08250032
owner: International Business Machines Corporation
number: 08250032
owner_city: Armonk
owner_country: US
publication_date: 20090602
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present invention relates generally to computer network-based publish\/subscribe messaging mechanisms. More particularly, the present invention relates to a system and method for matching a publication to at least one subscriber.","A publish\/subscribe (\u201cpub\/sub\u201d) is an asynchronous messaging mechanism where message senders (i.e., publisher or publishing client) do not send messages to specific receivers (i.e., subscriber or subscribing client). In a publish\/subscribe network, any number of consumers (i.e., subscribers) of information can receive messages that are provided by one or more producers (i.e., publishers) of that information. In this case, a producer of information is called a publisher and a consumer of that information is called a subscriber.","Publish\/subscribe messaging provides the concept of a topic on which any number of interested consumers of information can subscribe in order to register their interest. This is similar to the way that a person might subscribe only to magazines about topics in which they are interested. Each topic provides particular event or state information.","A publisher can send messages containing information about a particular topic to all subscribers to that topic, e.g., via a broker device, without any knowledge of how many subscribers there are, or the details of the nodes that host those subscribers. Because of this, publish\/subscribe messaging completely decouples the provider of the information from the consumer of that information.","In order to facilitate this publish\/subscribe capability, a broker device is required to hold information about which subscribers have subscribed to which topics and how to deliver messages to them. A publisher can then publish messages using the broker device to all subscribers on that topic without knowing the details of those subscribers. There can be multiple publishers for a particular topic, and a subscriber to information about one topic can also be a publisher of information about other topics.","The broker device is a component to which client devices (i.e., applications or systems) connect to perform publishing and subscribing of messages. The broker device handles matching of publications with subscriptions, distribution of publications to subscribing clients, and persistence (i.e., storing messages in a non-volatile storage) of messages to ensure message delivery at a quality of service required. The broker device acts as a hub for routing messages between clients, and with the aid of a bridge, other messaging servers. The broker device can store messages on behalf of a client that is not connected and make them available to the client when it reconnects. In addition, the broker device can store messages on behalf of the bridge and make them available when the messaging servers that the bridge connects to are available.","The bridge, a middleware in a publish\/subscribe messaging system, is an extension of the broker device that routes messages between the broker device and other messaging servers to form sophisticated messaging topologies. The bridge allows messages to be routed between the broker device and messaging servers.","The bridge can route messages between one or more messaging servers. If the bridge cannot connect to a messaging server, messages destined for the messaging server can be stored by the broker device. When the messaging server becomes available, the bridge will connect to it and transfer the stored messages. In addition, the bridge can transfer pending messages from the messaging server to the broker device.","Typically, each type of messaging server supports its own messaging protocol and its own message formats. The bridge plays the role of routing messages across different protocols and transforming messages to a format acceptable by each messaging server.","A matching engine is a sub-component of the broker device that matches a publication to a subscriber. A wildcarded topic is a way of a subscriber matching a number of potential topics in a subscription. A wildcard is typically a special identifier or indication, e.g., a character specified in the subscription. For example, a subscription to a wildcarded topic a\/* would match publications to a\/b, a\/c and so on, since the character means \u201canything on this hierarchy level\u201d i.e. in this case \u201ca\/<anything>\u201d. A non-wildcarded topic is a topic with specific identifiers at each level in a hierarchy, e.g., a subscription to a\/b will match only publications including the topic a\/b.","In a traditional publish\/subscribe system, when a subscriber registers its interest in a topic (i.e., a subscription) into a broker device, the broker device records the subscriber and the topic of interest. When a message is published into the broker device, the broker device invokes the matching engine to determine which subscribers subscribe a topic of the published message. For example, a message published to topic a\/b would be matched to any subscribers subscribing to topic a\/b.","However, the traditional publish\/subscribe system becomes delayed when there is a subscriber subscribing the wildcarded topic. For example, the traditional publish\/subscribe system delays yielding a non-wildcarded match until yielding a wildcarded match is completed. The wildcarded match refers to a subscriber who specified his\/her subscription using a wildcard character, e.g., *, #, and whose subscription encompass a plurality of topics. The non-wildcarded match refers to a subscriber whose subscription exactly matches with a topic on a publication.","Thus, it is desirable to provide a method and a system for efficiently and\/or fast matching of a publication to at least one subscriber.","The present invention describes a method and a system for matching a publication to at least one subscriber, e.g., using a hash table, asynchronously providing a wildcarded match and a non-wildcarded match to a broker device, and\/or omitting a validation of a topic of a publication.","In one embodiment, there is provided a computer-implemented method for matching a publication to at least one subscriber, the method comprising:","receiving, at a broker device including a processor, the publication from a publisher, the publication having a first topic;","searching for a non-wildcarded match with said first topic at a non-wildcard subscription data store and a wildcarded match with said first topic at a wildcard subscription data store at a same time, the non-wildcarded match indicating a first subscriber subscribing to a topic exactly matching with the first topic of the publication, the wildcarded match indicating a second subscriber whose subscription includes a wildcard character and whose subscription matches the first topic of the publication;","providing the non-wildcarded match and the wildcarded match asynchronously to the broker; and","sending the publication from the broker device to the first and second subscribers.","In one embodiment, there is provided a computer-implemented system for matching a publication to at least one subscriber, the system comprising:","means for receiving the publication from a publisher at a broker device including a processor, the publication having a first topic;","means for searching for a non-wildcarded match with said first topic at a non-wildcard subscription data store and a wildcarded match with said first topic at a wildcard subscription data store at a same time, the non-wildcarded match indicating a first subscriber subscribing to a topic exactly matching with the first topic of the publication, the wildcarded match indicating a second subscriber whose subscription includes a wildcard character and whose subscription matches the first topic of the publication;","means for providing the non-wildcarded match and the wildcarded match asynchronously to the broker; and","means for sending the publication from the broker device to the first and second subscribers.","In a further embodiment, if there is the non-wildcarded match at the non-wildcard subscription data store, the broker device omits validating the topic of the publication.","In a further embodiment, the matching engine further comprises:","means for querying a hash table to determine whether there is the non-wildcarded match in the hash table.","In one embodiment, a matching engine of the pub\/sub broker device matches publications and\/or publishers to subscribers. The matching engine receives a topic of a publication published by a publisher and yields a set of subscribers subscribing to receive publications\/communications associated with the topic. When a subscriber indicates a wildcarded topic as a subscription in the matching engine, the matching engine needs to match inbound publications to the subscriber whenever the wildcarded topic encompasses a topic on a publication, e.g., a wildcarded topic a\/* encompass a topic a\/b, a\/c. If a subscriber wants to subscribe to a non-wildcarded topic, the subscriber submits the non-wildcarded topic in a hash table, e.g., by using TPC\/IP socket connection. When searching a non-wildcarded match, the broker device first checks the hash table to find the non-wildcarded match before invoking a matching engine. If the broker finds the non-wildcarded match in the hash table, then the broker does not invoke the matching engine.","In a further embodiment, when the broker device receives a publication, the broker device searches for a non-wildcarded match of the publication in the hash table without validating a topic of the publication. The validation refers to evaluating a syntax correctness of the subscription or the topic. If the broker device finds the non-wildcarded match in the hash table, the broker device omits validating the topic of the publication. When a subscriber submits a subscription (i.e., a topic to subscribe) for a placement in a hash table, e.g., by using a TCP\/IP socket connection, the subscription should have passed a validation successfully before placing it. The broker device or the matching engine may perform the validation. Thus, if the broker device obtains the non-wildcarded match in a hash table, then clearly there is no need to revalidate an incoming topic (e.g., the topic of the publication), because the incoming topic is exactly same as a subscription that has already been validated.","In a further embodiment, after the broker device obtains the non-wildcarded match in the hash table without validating the topic of the publication, to achieve a full result set (wildcarded and non-wildcarded matches), the broker device invokes a matching engine to query to find the wildcarded match(es).","In a further embodiment, the broker device asynchronously accesses the hash table to obtain the non-wildcarded match without waiting for the matching engine to yield the wildcarded match. In another embodiment, the matching engine asynchronously accesses the hash table to obtain the non-wildcarded match while and\/or before yielding the wildcarded match. As soon as the matching engine obtains the non-wildcarded match from the hash table, the matching engine immediately delivers the non-wildcarded match to the broker device without waiting for the wildcarded match to be yielded.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 1","FIG. 3","FIG. 3","FIG. 1","FIG. 1","FIG. 3","FIG. 1","FIG. 1","FIG. 3","FIG. 3"],"b":["310","100","310","300","110","310","300","310","120","310","330","310","320","330","320","330","310","320","320"]},"In a further embodiment, before adding the subscription to the data store  and\/or , the matching engine validates the subscription. In other words, the matching engine validates topic(s) to be subscribed by the subscriber before adding the topic(s) to the data stores -. The validation involves checking whether syntax of the subscription and\/or the topic(s) is correct or valid.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 2","FIGS. 4-6","FIG. 2","FIG. 2","FIG. 8","FIG. 2","FIG. 4","FIG. 4","FIG. 4","FIG. 4"],"b":["8","200","1600","1611","1614","210","400","310","320","330"]},"Returning to , when the matching engine (e.g., a matching engine  in ) searches the non-wildcarded match at the non-wildcarded subscription data store (e.g., the non-wildcarded subscription data store  in ), at step  in , the matching engine  queries a hash table implementing a direct mapping (e.g., a hash table  implementing the direct mapping is shown in ) to determine whether there is the non-wildcarded match in the hash table . Direct mapping refers that a topic can be assigned to only one place in the hash table. Thus, the hash table  may be implemented by a direct mapped cache memory device. Any non-wildcarded match found in the hash table  (e.g., a cleo\/house\/temp  in ) is asynchronously sent to the broker device. In other words, the non-wildcarded match found in the hash table  is immediately sent to the broker device without waiting for a result of searching for a wildcarded match.","It should be noted that the broker or the matching engine does not validate a topic of the publication when the matching engine  executes method steps - in . At step  in , if the matching engine  finds the non-wildcarded match in the hash table , i.e., the hash table  has an entry having an same exact subscription matching with the topic of the publication, the matching engine  or the broker device omits validating the topic of the publication, e.g., because the topic of the publication was successfully validated when the subscription enters the hash table . Then, the matching engine  provides the non-wildcarded match to the broker device at step . Upon receiving the non-wildcarded match, the broker device may send the publication to a subscriber corresponding to the non-wildcarded match.","At step  in , if the matching engine  does not find the non-wildcarded match in the hash table , the matching engine  or the broker validates the topic of the publication received at the broker device at step . When validating the topic of the publication, the matching engine  or the broker device may validate syntax of the topic of the publication, e.g., whether the topic is grammatically correct. If the topic of the publication is incorrect or invalid, the matching engine  or the broker contacts the publisher which published the publication to inform that the topic of the publication is invalid or incorrect, e.g., by an email or instant message. The email or the instant message may describe why the topic is incorrect or how the topic can be changed or amended to avoid the incorrectness. Then, the publisher may cancel the publication or re-publish the publication with a new topic according to the email or the instant message. If the topic of the publication is correct or valid, the matching engine  or the broker device records that the topic of the publication is successfully evaluated as being correct or valid, e.g., in a tag such as HTML or XML tag on the publication.","At step  in , when the matching engine  accesses the hash table  to find the non-wildcarded match, at the same time, the matching engine  concurrently starts to find a wildcarded match in the wildcard subscription data store . As illustrated in , the matching engine  may compare the topic of the publication and each wildcarded subscription (e.g., my\/#, #, +\/house\/temp , my\/+\/temp , status\/+ ) stored in the data store . For example, regarding my\/#  subscription, the matching engine  may match a publication whose topic includes my\/followed by any string. Regarding # subscription, the matching engine  may match a publication whose topic includes any string. Regarding +\/house\/temp\/ subscription, the matching engine  may match a publication whose topic includes any string other than\/followed by\/house\/temp\/. Regarding my\/+\/temp  subscription, the matching engine  may match a publication whose topic includes my\/followed by any string other than\/followed by\/temp. Regarding status\/+ , the matching engine  may match a publication whose topic includes status\/followed by any string other than\/.","Referring back to , if the matching engine  finds that a wildeared topic encompasses the topic of the publication, e.g., a wildcarded topic a\/* encompassing a topic a\/b, the matching engine  provides a corresponding wildcarded match (i.e., a subscriber that registered the wildcarded topic in the data store ) to the broker device at step  in . When the matching engine  provides the corresponding wildcarded match to the broker device, the matching engine  asynchronously provides the wildcarded match to the broker device without preventing the matching engine's search for the non-wildcarded match. Upon receiving the wildcarded match, the broker device may send the publication to the subscriber corresponding to the wildcarded match.","In a further embodiment, the matching engine  validates the topic of the publication at step  regardless of whether the non-wildcarded match is found or not. In another embodiment, the matching engine  omits validating the topic of the publication while searching the wildcarded match, if the matching engine  finds the non-wildcarded match in the hash table  or validates the topic of the publication at step . The matching engine  may find in the publication, e.g., in a tag, that the topic of the publication has been validated before. Alternatively, a thread executing steps , ,  and  may communicate with another thread executing steps  and  to inform that the topic of the publication has been validated successfully, e.g., via a return value of a method executing step . Validating a topic of a publication delays matching a publication to one or more subscribers. Thus, omitting the validation based on an earlier validation result, e.g., finding a non-wildcarded match in a hash table and\/or performing a validation at step , expedites the matching between the publication and the one or more subscribers.","In a further embodiment, the matching engine  or the broker device searches the non-wildcarded match before searching the wildcarded match and finds the non-wildcarded match before the wildcarded match. In other words, the matching engine  or the broker device executes steps , ,  and  before executing steps  and . Thus, if the non-wildcarded match is found in the hash table , the matching engine  or the broker device does not validate the topic of the publication at step  before starting to search the wildcarded match.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 7","FIG. 8"],"b":["400","310","700","700","310","320","700","700","700","700","310","700","310","700","310","310","310","1600","1611","1614"]},"Referring back to , after searching the non-wildcarded match, the first method call searching the non-wildcarded match returns a result of the search  to the caller module . The result of the search  may be none or at least one non-wildcarded match. When the caller module  invoked by the matching engine  invokes the first method call to search a non-wildcarded match, the caller module  may also invoke a second method call to search a wildcarded match in a wildcarded subscription data store . Then, the second method call searching the wildcarded match returns a result of the search . The result of the search  may be none or at least one wildcarded match. The first method call and the second method call are executed independently and simultaneously without interfering or blocking each other. The result  does not depend on processing of the second method call. The result  does not depend on processing of the first method call.","An exemplary implementation illustrating one embodiment of the present invention is now provided. Using a matching engine in a middleware (e.g., WebSphere\u00ae Platform Messaging, etc.) for sending messages between two client devices, subscriptions are stored as a set against which queries are executed to determine matches (i.e., non-wildcarded matches and\/or wildcarded matches) to a topic of a publication. The matching engine includes entries for these subscriptions. A search of the entries stored in the matching engine is made by invoking a search( ) method which returns a result instance including all matches for a provided search key (i.e. the topic of the publication). An exemplary system and method of the present invention may be implemented as follows according to this exemplary implementation scenario:\n\n",{"@attributes":{"id":"p-0055","num":"0061"},"figref":["FIG. 8","FIGS. 1-2"],"b":["1600","310","1611","1611","1612","1614","1616","1618","1621","1640","1612","1622","1624","1626","1628","1632","1612","1634","1600","1636","1612","1638","1639"]},"Although the embodiments of the present invention have been described in detail, it should be understood that various changes and substitutions can be made therein without departing from spirit and scope of the inventions as defined by the appended claims. Variations described for the present invention can be realized in any combination desirable for each particular application. Thus particular limitations, and\/or embodiment enhancements described herein, which may have particular advantages to a particular application need not be used for all applications. Also, not all limitations need be implemented in methods, systems and\/or apparatus including one or more concepts of the present invention.","The present invention can be realized in hardware, software, or a combination of hardware and software. A typical combination of hardware and software could be a general purpose computer system with a computer program that, when being loaded and executed, controls the computer system such that it carries out the methods described herein. The present invention can also be embedded in a computer program product, which comprises all the features enabling the implementation of the methods described herein, and which\u2014when loaded in a computer system\u2014is able to carry out these methods.","Computer program means or computer program in the present context include any expression, in any language, code or notation, of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after conversion to another language, code or notation, and\/or reproduction in a different material form.","Thus the invention includes an article of manufacture which comprises a computer usable medium having computer readable program code means embodied therein for causing a function described above. The computer readable program code means in the article of manufacture comprises computer readable program code means for causing a computer to effect the steps of a method of this invention. Similarly, the present invention may be implemented as a computer program product comprising a computer usable medium having computer readable program code means embodied therein for causing a function described above. The computer readable program code means in the computer program product comprising computer readable program code means for causing a computer to effect one or more functions of this invention. Furthermore, the present invention may be implemented as a program storage device readable by machine, tangibly embodying a program of instructions executable by the machine to perform method steps for causing one or more functions of this invention.","The present invention may be implemented as a computer readable medium (e.g., a compact disc, a magnetic disk, a hard disk, an optical disk, solid state drive, digital versatile disc) embodying program computer instructions (e.g., C, C++, Java, Assembly languages, .Net, Binary code) executed by a processor (e.g., Intel\u00ae Core\u2122, IBM\u00ae PowerPC\u00ae) for causing a computer to perform method steps of this invention. The present invention may include a method of deploying a computer program product including a program of instructions in a computer readable medium for one or more functions of this invention, wherein, when the program of instructions is executed by a processor, the compute program product performs the one or more of functions of this invention.","It is noted that the foregoing has outlined some of the more pertinent objects and embodiments of the present invention. This invention may be used for many applications. Thus, although the description is made for particular arrangements and methods, the intent and concept of the invention is suitable and applicable to other arrangements and applications. It will be clear to those skilled in the art that modifications to the disclosed embodiments can be effected without departing from the spirit and scope of the invention. The described embodiments ought to be construed to be merely illustrative of some of the more prominent features and applications of the invention. Other beneficial results can be realized by applying the disclosed invention in a different manner or modifying the invention in ways known to those familiar with the art."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":["The accompanying drawings are included to provide a further understanding of the present invention, and are incorporated in and constitute a part of this specification. The drawings illustrate embodiments of the invention and, together with the description, serve to explain the principles of the invention. In the drawings,",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
