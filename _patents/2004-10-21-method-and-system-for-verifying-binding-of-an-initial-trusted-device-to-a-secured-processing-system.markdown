---
title: Method and system for verifying binding of an initial trusted device to a secured processing system
abstract: A method and system for verifying binding of an initial trusted device to a secured processing system binds an initial device or replacement when no binding information is available from another device in the system. A platform credential is issued only when a valid binding is verified, by sending a proof of binding to a credential provider, such as the manufacturer. The method secures against security breaches that can occur when a device is removed from the system during the binding process. The binding information is generated in the device upon installation and includes system identification information so that at each initialization, upon return of binding information from the system to the device, the device can ensure that it is installed in the proper system and abort operation if the system does not match.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07143287&OS=07143287&RS=07143287
owner: International Business Machines Corporation
number: 07143287
owner_city: Armonk
owner_country: US
publication_date: 20041021
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF ILLUSTRATIVE EMBODIMENT"],"p":["The present application is related to co-pending U.S. patent application Ser. No. 10\/970,459, entitled \u201cMETHOD AND SYSTEM FOR BACKUP AND RESTORE OF A CONTEXT ENCRYPTION KEY FOR A TRUSTED DEVICE WITHIN A SECURED PROCESSING SYSTEM\u201d, filed concurrently with the present application. The specification of the above-referenced Patent Application is herein incorporated by reference.","1. Technical Field","The present invention relates generally to security in processing systems, and more particularly, to a methodology for installing binding information into an initial or replacement trusted device in a secured processing system.","2. Description of the Related Art","Present-day computing systems, and in particular large-scale server systems, often include support for running multiple virtual machines. The system may be a large-scale on-demand server system that executes hundreds of server instances on a single hardware platform to support customers with varying computing requirements. In the most flexible of these systems, multiple partitions, which may differ in operating system and application mix, are concurrently present in system memory and processes executing in each partition are run in an environment that supports their execution on a guest operating system. The virtual machine provides an environment similar enough to a real hardware platform that the operating system can run with little or no modification. A hypervisor (sometimes referred to as a virtual machine monitor) manages all of the virtual machines or partitions and abstracts system resources so that each partition provides a machine-like environment to each operating system instance.","To implement the above architectural goals, multiple processing modules and other devices are installed in a system, and each device generally supports one or more of the above-described partitions, although it is possible to share tasking on a partition between multiple devices. Groups of devices or an individual device may be associated with a particular customer and it is desirable to secure access to a device or group by only that customer including securing the devices from the manufacturer of the devices and system.","In order to provide security in such a system, devices must be bound to the system, avoiding removal and data mining that can occur by either extracting data from a device, or using a device to \u201cimpersonate\u201d a system or portion thereof, from which it was extracted. Binding can be physical, i.e., the device is permanently attached to the system, or binding can be accomplished cryptographically, allowing for removable devices and networked systems. A platform credential is issued to a system (or particular trusted groups of devices within a system) only when the credential provider is certain that a trusted device has been validly bound to the system. The credential certifies that the platform embodies one or more trusted devices and therefore has the attributes associated therewith. Typically the certification is performed at the manufacturers site and the trusted devices are either permanently physically bound to the system, or are cryptographically bound to the system without possibility of field replacement.","The above-mentioned removable and networked devices provide protection from data tampering or impersonation by refusing to initiate in a system unless the device is crytographically bound to the system. The information associated with the binding is generally encrypted and is stored in non-volatile storage within the device by the manufacturer. With the above-described mechanism, only a trusted system can access data associated with or stored within a particular device, dramatically reducing the impact of misappropriation or misuse of removable devices. Further, data associated with a device (such as a stored context or \u201cstate\u201d of one of the above-mentioned virtual machines) is secured by an encryption mechanism that requires a key that is stored within the associated device or devices. The two-layer mechanism: hardware binding and data encryption keyed to a particular device or devices provides a high level of security against data mining by misappropriation or misuse of removable devices.","When one of the devices fails or at initial installation of a trusted device into a system, the new device must be bound to the system in order for the device to initialize according to the above-described security methodology. If other devices having the desired security binding are present and operational in the system, binding information can be transferred from one of the other devices. However, if no other device is available with the desired binding, i.e., the last device with that binding has failed or only one such device was present in the system originally, then it is necessary for the binding to be established by other means, typically by returning the system to the manufacturer.","Field replacement mechanisms for replacing a trusted device cause potential exposure of the system to unauthorized or modified hardware. Therefore, it is desirable that the replacement techniques be at least as secure as the operational security scheme, again typically requiring return of the device to the manufacturer.","One method of attacking a system with bound devices is to remove a device during the binding process or otherwise rendering a device \u201cunbound\u201d and attempting to install the device on another system. Also, failure could occur during the binding process that may compromise the integrity of the system by causing a device to appear to be secured to a particular platform when it is not.","Therefore, it would be desirable to provide a field-replacement mechanism for binding replacement devices to a system in a secure manner when no other device with the desired binding is present in the system. It would further be desirable to provide a valid credential to the platform when an initial trusted device is installed and only when the trusted device is known to be validly bound to the system. It would further be desirable to provide a secure binding method that is tolerant of failure or removal during the binding process.","The objective of providing a secure mechanism for binding an initial trusted device or replacement device when no other device with the desired binding is present in the system is accomplished in a method and system. Portions of the method may be embodied in computer program products for execution on various processing systems associated with each portion.","The binding method includes generating binding information in a device by transferring a system-specific identifier into the device and combining it cryptographically with a device-specific key. The binding information is sent to another portion of the system and then upon each initialization of the device, the binding information is returned and the device can thereby verify that it is initializing in the system to which it is bound. The method also generates and transmits a proof of binding to a credential provider server, which then verifies that the binding is valid. Upon verifying the binding proof, the credential provider issues a new platform credential for the system. The old credential is invalidated upon receipt of an indication of the start of a new binding process and the binding must be completed and validated before the new platform credential is issued.","The objective of tolerance of failure during binding or attempts to thwart the binding process by removal or powering down is provided by placing the device in a \u201cbinding\u201d state at commencement of binding and leaving the device in a \u201cbinding state\u201d until the binding is validated, locking the device in the binding state if it is removed during the binding process, so that the device cannot be bound to another system. The scheme provides a one-way ratchet from the unbound state to the binding state to the bound state that cannot be reversed.","The foregoing and other objectives, features, and advantages of the invention will be apparent from the following, more particular description of the preferred embodiment of the invention, as illustrated in the accompanying drawings.","With reference now to the figures, and in particular with reference to , there is depicted a block diagram of a system in which an embodiment of the present invention is practiced. It should be understood that the depicted embodiment is not intended to be limiting, but only exemplary of the type of processing system to which the methods and techniques of the present invention may be applied. The system includes a secured local system  having four processor modules (processor module A and three other identical processor modules B\u2013D). Local system  may be connected to other system units A forming a super-scalar processing system. The local systems are connected to a credential provider server  via an Internet connection  or an alternative network interface. Credential provider server includes a processor A for executing server program instructions in accordance with an embodiment of the present invention and a server memory  for storing the program instructions and data.","Each processing module A, B\u2013D includes a processor  for executing program instructions, a local memory  that is generally mapped as system memory accessible by other processor modules B\u2013D and a cache  for storing data and program instructions. Processing modules A, B\u2013D also each includes a non-volatile memory  that stores values used by the method of the present invention to verify that processor modules A, B\u2013D are installed in the system to which they are bound. Processor modules A, B\u2013D also each may include a service processor  which may carry out the security functions of the present invention, or alternatively processor  may perform the tasks described in further detail below. Processor modules A, B\u2013D also include a local fast interface  for intercommunication with other modules in local system , and a network interface  for communication with other system units A and Internet connection . Local system also includes a storage device  as well as other devices , to which the binding techniques of the present invention may be applied. A system non-volatile memory A is also included for storing binding verification data and other system values associated with the security techniques of the present invention, such as the system serial number or other identifier.","Within system local memory , a virtual machine monitor program, or \u201chypervisor\u201d provides support for execution of multiple virtual machines (VMs) or \u201cpartitions\u201d that each provide an execution environment for an operating system and a number of \u201cguest\u201d programs (applications and services executed by an operating system and running in the associated VM).","In order to ensure security of the overall local system , as well as security as between multiple customers using local system  in instances where the above-mentioned partitions may belong to different customers requiring data protection as between the partitions, the present invention provides for binding of devices in local system  so that the devices can only be used in local system . As a result of the binding process, credential provider server  provides a credential to local system  that certifies to others that the system includes one or more trusted devices and therefore embodies the attributes associated with the trusted device. The certificate can then be used by other systems to verify that they can inter-operate with system  using the characteristics associated with a trusted platform device. The above-described arrangement is an illustration applicable to systems in which processor modules A, B\u2013D are removable modules that may be inserted in or removed from local system  via a chassis or other interconnect arrangement. However, binding in the sense of the present invention may extend to other arrangements such as the networked interconnect illustrated between local system  and other system units A. The present invention uses encryption and public\/private key pairs to secure binding-related communications between devices, and therefore security can be maintained in environments where the devices bound to a system may actually be located in physically disparate locations. However, shared symmetric keys may alternatively be employed.","Further, it should be understood that the techniques of the present invention apply not only to processor modules, but to any device for which it is useful to bind uniquely to a system and where verification of a credential is useful. For example, storage devices within a computer system could be bound to the system so that they will only operate with the system and a credential could be supplied in response to a query before an application or operating system routine trusts data stored on the device or trusts the device as a sink for data. Therefore, it should be understood that the following description, while referring for illustrative purposes to a binding of processor module A to local system  applies to binding of other devices and other systems, as well.","Referring now to , a block diagram is shown depicting memory images and information flow within the computer system of . Within device non-volatile memory , a device specific identifier is stored, along with a unique device-specific key pair installed at the time of device manufacture.","During the binding process, processor module A generates a random bit sequence (the device-generated secret), which the device then hashes with a system-specific identifier provided by local system  to processor module A from system non-volatile memory A (or can be accessed from system non-volatile memory A directly by processor module A). The hashed result, the \u201cplatform binding record\u201d (PBR) is stored in processor module A non-volatile memory  for future use in verifying that local system  is the system bound uniquely to processor module A. A private key unique to processor module A is used to sign the PBR and the signed PBR is sent to local system  where it is stored in system non-volatile memory A. Since only processor module A knows its unique private key, processor module can verify that local system  is the system to which it was bound upon subsequent return of the signed PBR to processor module A, as the signature on the signed PBR validates the signed PBR as having been generated by processor module A. Upon receipt of the PBR from processor module A, Llcal system  verifies the signed PBR using a system-unique public key provided by the manufacturer of processor module A and stores the signed PBR to return to processor module A for verification at initialization and other intervals as deemed necessary by the hypervisor.","Also during the binding process, a binding verification record is sent to credential provider server , which verifies that the system\/device combination is valid and now properly bound. The binding verification record is verified using a device-specific public key retrieved from a database , which is indexed via the device identifier and system identifier. The binding verification record provides evidence that a particular device was bound to a system by including various information that can exist only in the device. In the illustrative embodiment, this is performed by using the device-specific private key to sign a hash of several pieces of information, including a device-specific public endorsement key, the system identifier provided during the binding process and a unique device identifier (generally the serial number). Before signing, the above information is hashed over a one-time use device secret (distinct from the one-time device generated secret) that was installed at the time of manufacture of the device. The one-time use device secret is then \u201cburned\u201d (erased) after the binding verification record is generated. This one-time secret is also stored in the manufacturer's (credential provider's) database, providing a verification that the device has been bound. The verification can only be performed once, as once the device has burned the one-time use secret, if the other one-way ratchets described below are overcome, binding of the device still cannot be verified without a binding verification record generated in conformity with the one-time use device secret.","The device-specific endorsement key is also unique to the initial trusted device and provides further verification that the device being bound is the correct device, as the endorsement key is also retained by the credential provider. The endorsement key is associated with the credential and is later used to show that the trusted platform virtual machines are running on a trusted platform device associated with a particular credential (which will contain the endorsement key as well).","Database  maintains public key information for all devices produced so that keys can be found to validate messages from devices, as well as the device one-time use secret. If the binding is validated, a credential  is generated and sent to processor module A, which stores it in device non-volatile memory  (which can include disk file storage) for use in identifying the platform provided by processor module A as a trusted platform having an identity certified by the credential provider (e.g., the manufacturer or other certification entity).","Since the unique private key is only stored within processor module A and is not retained by the manufacturer after injection of the private key into processor module A at the factory, nor stored anywhere else, it is extremely difficult for another device to impersonate processor module A during a binding process. It is therefore highly unlikely that a credential would be issued to any combination of devices and systems other than a known system and a known set of devices. Other techniques may be applied in addition to the above in order to further increase the difficulty.","Referring now to , a portion of a method in accordance with an illustrated embodiment of the invention is depicted. When an unbound device is installed in (or coupled to) a system (step ), if there is another trusted device in the system (decision ) then an integration process is performed by migrating binding information from another trusted device (step ). Essentially, the integration securely shares the hashed result (PBR) that was stored in the other device and stores it in the non-volatile memory  of the unbound device, which can then return a signed PBR to local system  for storage in system non-volatile memory A by signing the PBR from the other device with its own private key. When local system  sends the signed PBR to the newly-bound device at initialization time, the newly-bound device can verify the system in the same manner that the existing trusted device can. It should be noted that the unique private key of each device does not need to be exported, only the hashed result that was generated during binding of the existing trusted device.","However, if there is no other trusted device in the system (decision ), then the method of the present invention is employed to bind the new device without performing the integration process of step . First, a system-specific identifier such as the system serial number is sent to the device (step ). The device generates a random bit stream used as a secret value and hashes this value with the system-specific identifier to produce a hashed result (PBR) (step ). The device stores the PBR and then signs the hashed result with the device's unique private key to provide a signed PBR (step ) that is then sent to the system for use at each device initialization.","Proof of binding is also generated and is sent along with the system identifier to the credential provider (step ). The credential provider determines whether or not the binding is valid (decision ) by verifying the identity of the system and device as signatures within the signed proof of binding. The credential provider has a public key for each device that is used to validate the signed proof of binding record and verify that it came from that particular device. As the system identifier is also part of the basis for the signed proof of binding, the identity of the system is also thereby identified, even though the device and system identifiers may also be sent \u201cin the clear\u201d.","If the binding is valid (decision ), then a credential is issued for the device and sent back to the system (step ) so that the system can prove that it contains a trusted device. However, as explained above, it is not necessary for a credential to be sent to the system, and may be maintained on the credential provider server or stored at another location, as long as it is accessible to components needing to verify that the system contains a trusted device with certain attributes. But, if the binding is invalid (decision ), then the device is notified to abort the binding process (step ).","Referring now to , another portion of the method in accordance with the illustrated embodiment of the invention is depicted. When a device is installed in the system (step ), a state value is read from the device non-volatile memory (step ). Three states are possible: \u201cbound\u201d, \u201cunbound\u201d and \u201cbinding\u201d. The three states are employed in a one-way \u201cratchet\u201d scheme that ensures that once the binding process is started on a device, the device can never return to an unbound state, and once binding is completed, the device can never return from the bound condition. If the device is in the \u201cbinding\u201d state when the device is installed (decision ) it is an indication that a binding process was interrupted in some manner and is an indication that tampering may have occurred by removal of the device during another binding process. So, if the device is in the binding state (decision ) at installation, the device is locked out by the system (step ) and must be returned to the manufacturer in order to be re-used. If the device is in the \u201cbound\u201d state (decision ), then the binding is verified normally (step ) and the device is initialized. If the device is in the \u201cunbound\u201d state (decision ), the binding exchanges and verifications are performed (step ) as exemplified by . If the binding is successful (decision ) then the state of the device is set to the \u201cbound\u201d state (step ), otherwise the device is left in the \u201cbinding\u201d state (step ), preventing further use of the device. Thus if any point in the binding process is interrupted, the device will be rendered useless until reprogrammed at the factory, preventing attempts to subvert the binding process by removal during installation.","Referring now to , still another portion of the method in accordance with the illustrated embodiment of the invention is depicted. When failure of a trusted device occurs, a service call is received by the manufacturer (step ). If the system has one functioning trusted device left (decision ) the integration process mentioned above is performed on a replacement device using the trusted device (step ). However, if no trusted devices are left functioning in the system (decision ), then the system credential is invalidated (step ) and a replacement device is optionally pre-bound to the system that sent the service call (step ) and the replacement device is shipped to the customer site (step ). The binding process described above is then performed as illustrated in  once the replacement device is installed in the system. If the device is pre-bound to the system before shipment, then the verification of binding made by the credential provider server is made in conformity with a database entry that indicates that the replacement device is intended for installation in a particular system and will only issue a credential upon binding of the device to the correct system. The database contains information such as the device identifier, system identifier to which the device is assigned and the unique public keys associated with the system and the device.","While the invention has been particularly shown and described with reference to the preferred embodiment thereof, it will be understood by those skilled in the art that the foregoing and other changes in form, and details may be made therein without departing from the spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The novel features believed characteristic of the invention are set forth in the appended claims. The invention itself, however, as well as a preferred mode of use, further objectives, and advantages thereof, will best be understood by reference to the following detailed description of an illustrative embodiment when read in conjunction with the accompanying drawings, wherein like reference numerals indicate like components, and:",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
